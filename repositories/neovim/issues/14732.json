{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Macros stored in registers can already be pasted, modified, and loaded. However, _special keys_ like escape or enter are not represented as printable characters. This makes it hard to store macros in text files.\r\n\r\nIIRC there are escape sequences like `\\<CR>` one can use, but there doesn't seem to be a way to convert the original macro representation to one that uses only printable characters.\r\n\r\nCan we improve upon this somehow such that macros can be exported to plain text files without messing up the file?\r\n\r\nEdit: I also want to load a macro from this plain text representation.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "What about `\"=strtrans(@q)<cr>p` ?",
            "created_at": "2021-06-06T13:27:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-855399710",
            "id": 855399710,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTM5OTcxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/855399710/reactions"
            },
            "updated_at": "2021-06-06T13:27:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/855399710",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6655373?v=4",
                "events_url": "https://api.github.com/users/andymass/events{/privacy}",
                "followers_url": "https://api.github.com/users/andymass/followers",
                "following_url": "https://api.github.com/users/andymass/following{/other_user}",
                "gists_url": "https://api.github.com/users/andymass/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andymass",
                "id": 6655373,
                "login": "andymass",
                "node_id": "MDQ6VXNlcjY2NTUzNzM=",
                "organizations_url": "https://api.github.com/users/andymass/orgs",
                "received_events_url": "https://api.github.com/users/andymass/received_events",
                "repos_url": "https://api.github.com/users/andymass/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andymass/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andymass/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andymass",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> What about `\"=strtrans(@q)<cr>p` ?\r\n\r\nThis translates a literal `^[` to `^` `[`  making it printable, but how would I load the macro now. Even if there'd be a reverse `strtrans`, a sequence of `^` followed by `[` needs to be escaped by `strtrans` to make it work. Otherwise the reverse `strtrans` cannot distinguish between `^` followed by `[` and a literal `^[`.",
            "created_at": "2021-06-06T13:52:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-855402995",
            "id": 855402995,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1NTQwMjk5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/855402995/reactions"
            },
            "updated_at": "2021-06-06T13:53:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/855402995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/328798?v=4",
                "events_url": "https://api.github.com/users/W4RH4WK/events{/privacy}",
                "followers_url": "https://api.github.com/users/W4RH4WK/followers",
                "following_url": "https://api.github.com/users/W4RH4WK/following{/other_user}",
                "gists_url": "https://api.github.com/users/W4RH4WK/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/W4RH4WK",
                "id": 328798,
                "login": "W4RH4WK",
                "node_id": "MDQ6VXNlcjMyODc5OA==",
                "organizations_url": "https://api.github.com/users/W4RH4WK/orgs",
                "received_events_url": "https://api.github.com/users/W4RH4WK/received_events",
                "repos_url": "https://api.github.com/users/W4RH4WK/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/W4RH4WK/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/W4RH4WK/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/W4RH4WK",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Strongly agree! When I am recording a complex long macro, it's very disturbing when I misspell just single word and has to redo this complex macro.",
            "created_at": "2021-06-08T01:35:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-856372060",
            "id": 856372060,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjM3MjA2MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/856372060/reactions"
            },
            "updated_at": "2021-06-08T01:35:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/856372060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32212800?v=4",
                "events_url": "https://api.github.com/users/PascalZh/events{/privacy}",
                "followers_url": "https://api.github.com/users/PascalZh/followers",
                "following_url": "https://api.github.com/users/PascalZh/following{/other_user}",
                "gists_url": "https://api.github.com/users/PascalZh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PascalZh",
                "id": 32212800,
                "login": "PascalZh",
                "node_id": "MDQ6VXNlcjMyMjEyODAw",
                "organizations_url": "https://api.github.com/users/PascalZh/orgs",
                "received_events_url": "https://api.github.com/users/PascalZh/received_events",
                "repos_url": "https://api.github.com/users/PascalZh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PascalZh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PascalZh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PascalZh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Strongly agree! When I am recording a complex long macro, it's very disturbing when I misspell just single word and has to redo this complex macro.\r\n\r\nYou can just paste from the register, modify the macro and load it back. See https://thoughtbot.com/blog/how-to-edit-an-existing-vim-macro.\r\n\r\nThis works fine when quickly editing a macro, but as you may notice, special characters (like escape) are stored literally, which works fine inside Vim, but does not play nice with regular text files / text processing tools.",
            "created_at": "2021-06-08T02:36:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-856392266",
            "id": 856392266,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjM5MjI2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/856392266/reactions"
            },
            "updated_at": "2021-06-08T02:36:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/856392266",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/328798?v=4",
                "events_url": "https://api.github.com/users/W4RH4WK/events{/privacy}",
                "followers_url": "https://api.github.com/users/W4RH4WK/followers",
                "following_url": "https://api.github.com/users/W4RH4WK/following{/other_user}",
                "gists_url": "https://api.github.com/users/W4RH4WK/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/W4RH4WK",
                "id": 328798,
                "login": "W4RH4WK",
                "node_id": "MDQ6VXNlcjMyODc5OA==",
                "organizations_url": "https://api.github.com/users/W4RH4WK/orgs",
                "received_events_url": "https://api.github.com/users/W4RH4WK/received_events",
                "repos_url": "https://api.github.com/users/W4RH4WK/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/W4RH4WK/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/W4RH4WK/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/W4RH4WK",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Edit: @W4RH4WK basically said what I've written in this message.. Feel free to skip it. Also, sorry it isn't a solution for you, since you know this method but want a plain text version.. \r\n\r\n---\r\n@PascalZh To edit a macro you can paste it somewhere in a buffer, edit it, and copy it back into the register, to be applied:\r\n```\r\n-- record a macro in register a\r\nqa\r\nAfunny^[IDo somtnig^[\r\nq\r\n\r\n-- paste it in a buffer\r\n\"ap\r\n\r\n-- edit it, change somtnig to something\r\n\r\n-- copy it back\r\n^\"ay$\r\n-- or\r\n^v$\"ay\r\n-- can also use d instead of y, to remove it from the buffer\r\n\r\n-- apply it where you want!\r\n@a\r\n```\r\nYou can also share macros (really, registers) by saving them in a file, with the syntax:\r\n```vim\r\nlet @a = 'paste your macro here'\r\n```\r\n\r\nAll special characters like Escape (^[) and ^ then [ will be saved and restored correctly. \r\n\r\nNote that to paste a register literally from insert mode (if you ever want that), use `<C-r><C-o>a` instead of `<C-r>a` (to avoid interpretation of the register content, or bypass vim's auto formatting system)",
            "created_at": "2021-06-08T02:38:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-856392670",
            "id": 856392670,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjM5MjY3MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/856392670/reactions"
            },
            "updated_at": "2021-06-08T02:55:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/856392670",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Regarding plain text, I think a translation can be to encode all non-printable inside `<` & `>`:\r\n\r\nEscape is: `<^[>` or `<esc>`\r\nEnter is: `<cr>` or `<enter>`\r\netc... \r\n\r\nWith an exception for <, which would be encoded as `<<>`\r\n\r\nCan be done in a few lines of vimscript or C or Lua (not including the translation mappings), would be nice to have it builtin 👍",
            "created_at": "2021-06-08T03:06:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-856402420",
            "id": 856402420,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjQwMjQyMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/856402420/reactions"
            },
            "updated_at": "2021-06-08T03:07:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/856402420",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Regarding plain text, I think a translation can be to encode all non-printable inside `<` & `>`:\r\n> \r\n> Escape is: `<^[>` or `<esc>`\r\n> Enter is: `<cr>` or `<enter>`\r\n> etc...\r\n> \r\n> With an exception for <, which would be encoded as `<<>`\r\n> \r\n> Can be done in a few lines of vimscript or C or Lua (not including the translation mappings), would be nice to have it builtin 👍\r\n\r\nI think some plugin would be better than having it built in. Anybody could give a recommendation?",
            "created_at": "2021-06-09T09:53:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-857557073",
            "id": 857557073,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzU1NzA3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/857557073/reactions"
            },
            "updated_at": "2021-06-09T09:53:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/857557073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32212800?v=4",
                "events_url": "https://api.github.com/users/PascalZh/events{/privacy}",
                "followers_url": "https://api.github.com/users/PascalZh/followers",
                "following_url": "https://api.github.com/users/PascalZh/following{/other_user}",
                "gists_url": "https://api.github.com/users/PascalZh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PascalZh",
                "id": 32212800,
                "login": "PascalZh",
                "node_id": "MDQ6VXNlcjMyMjEyODAw",
                "organizations_url": "https://api.github.com/users/PascalZh/orgs",
                "received_events_url": "https://api.github.com/users/PascalZh/received_events",
                "repos_url": "https://api.github.com/users/PascalZh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PascalZh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PascalZh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PascalZh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Maybe it can be done (for example) with something like this:\r\n\r\n```vim\r\nfunction! EscReg(reg) abort\r\n  let lhs = '<sid>(_tmp)'\r\n  call nvim_set_keymap('n', lhs, getreg(a:reg), {})\r\n  let res = maparg(lhs)\r\n  call nvim_del_keymap('n', lhs)\r\n  return res\r\nendfunction\r\n\r\nnnoremap <silent> \\p \"=EscReg(nr2char(getchar()))<cr>p\r\n```",
            "created_at": "2021-06-09T12:30:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-857653217",
            "id": 857653217,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzY1MzIxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/857653217/reactions"
            },
            "updated_at": "2021-06-09T12:30:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/857653217",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6655373?v=4",
                "events_url": "https://api.github.com/users/andymass/events{/privacy}",
                "followers_url": "https://api.github.com/users/andymass/followers",
                "following_url": "https://api.github.com/users/andymass/following{/other_user}",
                "gists_url": "https://api.github.com/users/andymass/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andymass",
                "id": 6655373,
                "login": "andymass",
                "node_id": "MDQ6VXNlcjY2NTUzNzM=",
                "organizations_url": "https://api.github.com/users/andymass/orgs",
                "received_events_url": "https://api.github.com/users/andymass/received_events",
                "repos_url": "https://api.github.com/users/andymass/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andymass/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andymass/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andymass",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This seems to be also achievable using FFI:\r\n```lua\r\nlocal ffi = require('ffi')\r\n\r\nffi.cdef([[\r\nchar *str2special_save(const char *str, bool replace_spaces, bool replace_lt);\r\nvoid xfree(void *ptr);\r\n]])\r\n\r\nfunction _G.Str2special(src)\r\n  local ptr = ffi.C.str2special_save(src, true, true)\r\n  local str = ffi.string(ptr)\r\n  ffi.C.xfree(ptr)\r\n  return str\r\nend\r\n```\r\nThese can then be converted back using `nvim_replace_termcodes()` API.\r\n\r\nFor example, to turn register `a` into plain text:\r\n```vim\r\nlet @a = v:lua.Str2special(@a)\r\n```\r\n\r\nTo turn it back into a macro:\r\n```vim\r\nlet @a = nvim_replace_termcodes(@a, v:false, v:true, v:true)\r\n```",
            "created_at": "2022-02-05T03:27:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-1030512683",
            "id": 1030512683,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "IC_kwDOAPphoM49bGAr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1030512683/reactions"
            },
            "updated_at": "2022-02-05T04:17:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1030512683",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Btw, other people have pointed out [Marvim](https://github.com/chamindra/marvim) to me.",
            "created_at": "2022-02-06T01:27:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-1030729421",
            "id": 1030729421,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "IC_kwDOAPphoM49b67N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1030729421/reactions"
            },
            "updated_at": "2022-02-06T01:27:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1030729421",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/328798?v=4",
                "events_url": "https://api.github.com/users/W4RH4WK/events{/privacy}",
                "followers_url": "https://api.github.com/users/W4RH4WK/followers",
                "following_url": "https://api.github.com/users/W4RH4WK/following{/other_user}",
                "gists_url": "https://api.github.com/users/W4RH4WK/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/W4RH4WK",
                "id": 328798,
                "login": "W4RH4WK",
                "node_id": "MDQ6VXNlcjMyODc5OA==",
                "organizations_url": "https://api.github.com/users/W4RH4WK/orgs",
                "received_events_url": "https://api.github.com/users/W4RH4WK/received_events",
                "repos_url": "https://api.github.com/users/W4RH4WK/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/W4RH4WK/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/W4RH4WK/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/W4RH4WK",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Maybe it can be done (for example) with something like this:\r\n> \r\n> ```viml\r\n> function! EscReg(reg) abort\r\n>   let lhs = '<sid>(_tmp)'\r\n>   call nvim_set_keymap('n', lhs, getreg(a:reg), {})\r\n>   let res = maparg(lhs)\r\n>   call nvim_del_keymap('n', lhs)\r\n>   return res\r\n> endfunction\r\n> \r\n> nnoremap <silent> \\p \"=EscReg(nr2char(getchar()))<cr>p\r\n> ```\r\n\r\n`keytrans()` (#20168) will do what `EscReg()` does.",
            "created_at": "2022-09-12T13:41:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/14732#issuecomment-1243762358",
            "id": 1243762358,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14732",
            "node_id": "IC_kwDOAPphoM5KIk62",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243762358/reactions"
            },
            "updated_at": "2022-09-12T13:41:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243762358",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/14732/comments",
    "created_at": "2021-06-06T00:18:35Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/14732/events",
    "html_url": "https://github.com/neovim/neovim/issues/14732",
    "id": 912519307,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 6213616771,
            "name": "macros",
            "node_id": "LA_kwDOAPphoM8AAAABclxEgw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/macros"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/14732/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5MTI1MTkzMDc=",
    "number": 14732,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 5,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 5,
        "url": "https://api.github.com/repos/neovim/neovim/issues/14732/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/14732/timeline",
    "title": "Export Macros Plain Text",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:31Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/14732",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/328798?v=4",
        "events_url": "https://api.github.com/users/W4RH4WK/events{/privacy}",
        "followers_url": "https://api.github.com/users/W4RH4WK/followers",
        "following_url": "https://api.github.com/users/W4RH4WK/following{/other_user}",
        "gists_url": "https://api.github.com/users/W4RH4WK/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/W4RH4WK",
        "id": 328798,
        "login": "W4RH4WK",
        "node_id": "MDQ6VXNlcjMyODc5OA==",
        "organizations_url": "https://api.github.com/users/W4RH4WK/orgs",
        "received_events_url": "https://api.github.com/users/W4RH4WK/received_events",
        "repos_url": "https://api.github.com/users/W4RH4WK/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/W4RH4WK/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/W4RH4WK/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/W4RH4WK",
        "user_view_type": "public"
    }
}