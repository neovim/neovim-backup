{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\r\n\r\nNo, Vim has this same limitation and could use the same easy fix.\r\n\r\n### Feature description\r\n\r\nIt would be extremely useful to have a way to query the current size of \"gutters\" like the fold columns, number columns, sign columns etc. There is no way to reliably get these values currently, so any code that attempts to do so has to fall back to using unreliable heuristics. \r\n\r\nFor example, if foldcolumn is set to \"auto:5\", you know it can be at most 5 columns, but you don't know what it CURRENTLY is, but you can with very complex (and slow) code iterate through foldlevels on each line and figure it out. Similarly, if line numbers are on, you can do some log10 math and heuristically compute how big the column *probably* is, but this doesn't work if a specific minimum number column width has been set.\r\n\r\nOne place where this would be immensely useful is when using a custom foldtext function that wants to use right-aligned fields. Right now the best that can be done is using winwidth() plus  heuristics to account for the likely size of the foldcolumns, the number columns, and sign columns. If you've ever written a complicated foldtext function and tried to use right alignment, you probably know exactly what I'm talking about. =)\r\n\r\nFor this particular purpose, it would be just as useful to have somethings that gave the opposite information, like a hypothetical \"wineditwidth()', but I think it would be more general and helpful for other purposes if you could query the gutter column widths explicitly. The editor obviously already knows these values for each window already, because it's using them to render. It should be pretty simple to simply expose this information via some query functions available to vimscript.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Just as an example of where this would be useful, here is the foldtext function I use by default. This has to make some assumptions like that the number column width is set to a minimum size of 1 and that fold columns are never displayed, and even then has to use some heuristics to guess gutter column widths. It doesn't even attempt to take into account sign columns. Anything that goes wrong here results in the right aligned fields not ending at the right edge of the window correctly.\r\n\r\nI've looked at 3 or 4 other custom foldtext functions from published plugins and blogs and all of them have the same (or worse) limitations. Everybody could write better functions like this if it were easy to query the size of the current editing area (window size minus gutter columns), but being able to query the individual gutter column sizes individually is more flexible in the general case.\r\n\r\n```vim\r\nset foldtext=X_foldtext()\r\nfunction! X_foldtext() \" {{{\r\n\r\n\t\" Use the first non-blank line for our starting display text.\r\n\tlet start_text = getline(v:foldstart)\r\n\tif getline(v:foldstart) =~ '^\\s*$'\r\n\t\tlet line = nextnonblank(v:foldstart + 1)\r\n\t\tif line != 0\r\n\t\t\tlet start_text = getline(line)\r\n\t\tendif\r\n\tendif\r\n\r\n\t\" Strip trailing whitespace from the text.\r\n\tlet start_text = substitute(start_text, '\\s*$', \"\", \"\")\r\n\r\n\t\" We can't use tabs in the fold text, so visualize tabs explicitly.\r\n\tlet chars = split(start_text, '\\zs')\r\n\tlet start_text = \"\"\r\n\tfor char in chars\r\n\t\tif char != \"\\t\"\r\n\t\t\t\" Just append non-tab characters.\r\n\t\t\tlet start_text = start_text .. char\r\n\t\telse\r\n\t\t\t\" Expand tab characters into an appropriate visual form.\r\n\t\t\t\" \t* FIXME: This hard-codes the tab characters.\r\n\t\t\t\" \t  It would be better to extract this from listchars.\r\n\t\t\tlet column = strdisplaywidth(start_text)\r\n\t\t\tlet width = strdisplaywidth(\"\\t\", column)\r\n\t\t\tlet tabtext = \"┊\" . repeat(\" \", width - 1)\r\n\t\t\tlet start_text = start_text .. tabtext\r\n\t\tendif\r\n\tendfor\r\n\r\n\t\" Use the last non-blank line for our ending display text.\r\n\tlet end_text = getline(v:foldend)\r\n\tif getline(v:foldend) =~ '^\\s*$'\r\n\t\tlet line = prevnonblank(v:foldend - 1)\r\n\t\tif line != 0\r\n\t\t\tlet end_text = getline(line)\r\n\t\tendif\r\n\tendif\r\n\r\n\t\" Strip leading and trailing whitespace from the end text.\r\n\tlet end_text = substitute(end_text, '^\\s*', \"\", \"\")\r\n\tlet end_text = substitute(end_text, '\\s*$', \"\", \"\")\r\n\r\n\t\" Truncate end text somewhat arbitrarily.\r\n\t\" The goal is to just provide a little context.\r\n\tlet end_text = \" ⋯ \" .. end_text[-10:-1] .. \" \"\r\n\r\n\t\" Compute fold size information.\r\n\tlet fold_lines   = 1 + v:foldend - v:foldstart\r\n\tlet fold_percent = 100.0 * fold_lines / line(\"$\")\r\n\r\n\t\" Compute fold information field.\r\n\tlet fold_info = printf(\" +%d (%.1f%%)\", fold_lines, fold_percent)\r\n\r\n\t\" Compute the width of the editor area.\r\n\t\" FIXME: this assumes there is no fold column.\r\n\tlet fold_column_width = 0\r\n\tlet number_column_width = 1 + float2nr(ceil(log10(line(\"$\"))))\r\n\tlet editor_width = winwidth(0) - fold_column_width - number_column_width\r\n\r\n\t\" Truncate our text to make enough room for the fold info.\r\n\tlet max_width = editor_width - strwidth(fold_info) - strwidth(end_text) - 2\r\n\tlet start_text = start_text[0:max_width]\r\n\t\"while strwidth(start_text) > max_width\r\n\t\"\tlet start_text = start_text[:-2]\r\n\t\"endwhile\r\n\r\n\t\" Compute expander text.\r\n\tlet expander = repeat(\"·\", editor_width - strwidth(start_text) - strwidth(end_text) - strwidth(fold_info))\r\n\tlet expander = substitute(expander, \"··\", \"· \", \"g\")\r\n\r\n\t\" Build the final display text.\r\n\tlet fold_text = start_text .. end_text .. expander .. fold_info\r\n\treturn fold_text\r\nendf \" }}}\r\n\r\n```",
            "created_at": "2022-01-29T05:44:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/17229#issuecomment-1024841235",
            "id": 1024841235,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17229",
            "node_id": "IC_kwDOAPphoM49FdYT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024841235/reactions"
            },
            "updated_at": "2022-01-29T05:44:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024841235",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67229?v=4",
                "events_url": "https://api.github.com/users/wjl/events{/privacy}",
                "followers_url": "https://api.github.com/users/wjl/followers",
                "following_url": "https://api.github.com/users/wjl/following{/other_user}",
                "gists_url": "https://api.github.com/users/wjl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wjl",
                "id": 67229,
                "login": "wjl",
                "node_id": "MDQ6VXNlcjY3MjI5",
                "organizations_url": "https://api.github.com/users/wjl/orgs",
                "received_events_url": "https://api.github.com/users/wjl/received_events",
                "repos_url": "https://api.github.com/users/wjl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wjl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wjl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wjl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The `textoff` field of the dictionary returned by `getwininfo()` return the sum of the widths of those columns. There is currently no way to get the widths of individual columns though. Getting the width of sign column is perhaps not applicable to Vim, as Vim doesn't have the `auto` stuff.",
            "created_at": "2022-01-29T06:02:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/17229#issuecomment-1024843914",
            "id": 1024843914,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17229",
            "node_id": "IC_kwDOAPphoM49FeCK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024843914/reactions"
            },
            "updated_at": "2022-01-29T06:03:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024843914",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> The `textoff` field of the dictionary returned by `getwininfo()` return the sum of the widths of those columns. There is currently no way to get the widths of individual columns though. Getting the width of sign column is perhaps not applicable to Vim, as Vim doesn't have the `auto` stuff.\r\n\r\nThis is really useful to know, thank you for the pointer to getwininfo / textoff. I've been using Vim for decades and NeoVim for months and obviously still have things to learn. =)\r\n\r\nI still think a way to query the individual column widths would be a great general enhancement.",
            "created_at": "2022-01-29T06:12:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/17229#issuecomment-1024845718",
            "id": 1024845718,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17229",
            "node_id": "IC_kwDOAPphoM49FeeW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024845718/reactions"
            },
            "updated_at": "2022-01-29T06:12:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024845718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67229?v=4",
                "events_url": "https://api.github.com/users/wjl/events{/privacy}",
                "followers_url": "https://api.github.com/users/wjl/followers",
                "following_url": "https://api.github.com/users/wjl/following{/other_user}",
                "gists_url": "https://api.github.com/users/wjl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wjl",
                "id": 67229,
                "login": "wjl",
                "node_id": "MDQ6VXNlcjY3MjI5",
                "organizations_url": "https://api.github.com/users/wjl/orgs",
                "received_events_url": "https://api.github.com/users/wjl/received_events",
                "repos_url": "https://api.github.com/users/wjl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wjl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wjl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wjl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`textoff` was added quite recently, only several months ago.",
            "created_at": "2022-01-29T06:14:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/17229#issuecomment-1024845985",
            "id": 1024845985,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17229",
            "node_id": "IC_kwDOAPphoM49Feih",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024845985/reactions"
            },
            "updated_at": "2022-01-29T06:14:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024845985",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Now that I know about getwininfo()/textoff, I was able to easily make my foldtext function work reliably. See below for the code change I just made. This is slightly off topic, but I thought this would be work sharing for future reference since it was my original motivating example.\r\n\r\n```vim\r\n\t\" Compute the width of the editor area.\r\n\tlet editor_width = winwidth(0) - getwininfo(win_getid())[0].textoff\r\n```\r\n\r\nIt also seems like this is a perfect place to add individual current fold, number, and sign column widths, as fields of the dictionary returned by getwininfo(). I think could still be very useful information to be able to get individually, but I will admit that with textoff this solves my original problem that made me want to file this bug. =)",
            "created_at": "2022-01-29T06:30:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/17229#issuecomment-1024847971",
            "id": 1024847971,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17229",
            "node_id": "IC_kwDOAPphoM49FfBj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024847971/reactions"
            },
            "updated_at": "2022-01-29T06:30:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024847971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67229?v=4",
                "events_url": "https://api.github.com/users/wjl/events{/privacy}",
                "followers_url": "https://api.github.com/users/wjl/followers",
                "following_url": "https://api.github.com/users/wjl/following{/other_user}",
                "gists_url": "https://api.github.com/users/wjl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wjl",
                "id": 67229,
                "login": "wjl",
                "node_id": "MDQ6VXNlcjY3MjI5",
                "organizations_url": "https://api.github.com/users/wjl/orgs",
                "received_events_url": "https://api.github.com/users/wjl/received_events",
                "repos_url": "https://api.github.com/users/wjl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wjl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wjl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wjl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Another scenario where this would be useful is for rendering aligned virtual text. When using `cpoptions=n`, virtual lines don't have gutter-padding, so they're all shifted left by quite a bit. Or is that perhaps not by design and actually a separate bug?\r\n\r\nContext: https://todo.sr.ht/~whynothugo/lsp_lines.nvim/6#event-189445",
            "created_at": "2022-07-23T08:11:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/17229#issuecomment-1193084505",
            "id": 1193084505,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17229",
            "node_id": "IC_kwDOAPphoM5HHQZZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1193084505/reactions"
            },
            "updated_at": "2022-07-23T08:11:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1193084505",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/730811?v=4",
                "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}",
                "followers_url": "https://api.github.com/users/WhyNotHugo/followers",
                "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}",
                "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WhyNotHugo",
                "id": 730811,
                "login": "WhyNotHugo",
                "node_id": "MDQ6VXNlcjczMDgxMQ==",
                "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs",
                "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events",
                "repos_url": "https://api.github.com/users/WhyNotHugo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WhyNotHugo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I really need this feature to implement such a rich mouse hover experience, e.g., hovering sign columns shows git hunk preview.",
            "created_at": "2023-02-19T06:09:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/17229#issuecomment-1435903005",
            "id": 1435903005,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17229",
            "node_id": "IC_kwDOAPphoM5VliQd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1435903005/reactions"
            },
            "updated_at": "2023-02-19T06:09:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1435903005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8780513?v=4",
                "events_url": "https://api.github.com/users/ryo33/events{/privacy}",
                "followers_url": "https://api.github.com/users/ryo33/followers",
                "following_url": "https://api.github.com/users/ryo33/following{/other_user}",
                "gists_url": "https://api.github.com/users/ryo33/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ryo33",
                "id": 8780513,
                "login": "ryo33",
                "node_id": "MDQ6VXNlcjg3ODA1MTM=",
                "organizations_url": "https://api.github.com/users/ryo33/orgs",
                "received_events_url": "https://api.github.com/users/ryo33/received_events",
                "repos_url": "https://api.github.com/users/ryo33/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ryo33/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ryo33/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ryo33",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17229/comments",
    "created_at": "2022-01-29T05:36:08Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/17229/events",
    "html_url": "https://github.com/neovim/neovim/issues/17229",
    "id": 1118037953,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "sign/number column",
            "id": 2962322085,
            "name": "column",
            "node_id": "MDU6TGFiZWwyOTYyMzIyMDg1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/column"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/17229/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5Co-fB",
    "number": 17229,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 4,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/neovim/neovim/issues/17229/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/17229/timeline",
    "title": "Add way to query current size of \"gutters\" (e.g. fold, number, sign colums)",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:57:49Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/17229",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/67229?v=4",
        "events_url": "https://api.github.com/users/wjl/events{/privacy}",
        "followers_url": "https://api.github.com/users/wjl/followers",
        "following_url": "https://api.github.com/users/wjl/following{/other_user}",
        "gists_url": "https://api.github.com/users/wjl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wjl",
        "id": 67229,
        "login": "wjl",
        "node_id": "MDQ6VXNlcjY3MjI5",
        "organizations_url": "https://api.github.com/users/wjl/orgs",
        "received_events_url": "https://api.github.com/users/wjl/received_events",
        "repos_url": "https://api.github.com/users/wjl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wjl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wjl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wjl",
        "user_view_type": "public"
    }
}