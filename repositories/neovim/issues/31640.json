{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nWas playing with the new `vim.lsp.config` functionality (https://github.com/neovim/neovim/pull/31031) and I've either found a bug or I misunderstand the behavior of this functionality.\n\nThe issue is that it seems like any configuration defined in `lsp/*.lua` cannot be retrieved afterwards. Namely - contents of `vim.lsp.config` are empty despite the fact that servers seem to start and work properly, as configured.\n\nWhat's interesting is that if I call `vim.lsp.config('somelsp', {...})` outside `lsp/*.lua` (e.g. in `init.lua`) then I indeed can access it through `vim.lsp.config`.\n\nSo, TL;DR - configs defined in `lsp/*.lua` are not visible in `vim.lsp.config`, but the ones defined somewhere else are visible.\n\nIs this a bug or a feature?\n\n### Steps to reproduce\n\n```lua\n-- Given tree:\n-- nvim/\n-- ├── init.lua\n-- ├── lsp\n-- │   └── gopls2.lua\n-- └── main.go -> just empty file\n\n-- lsp/gopls2.lua\nprint(\"loading gopls2\")\nvim.lsp.config(\"gopls2\", {\n\tcmd = { \"gopls\" },\n\troot_markers = { \"go.work\", \"go.mod\", \".git\" },\n\tfiletypes = { \"go\" },\n})\n\n-- init.lua\nprint(\"loading gopls1\")\nvim.lsp.config(\"gopls1\", {\n\tcmd = { \"gopls\" },\n\troot_markers = { \"go.work\", \"go.mod\", \".git\" },\n\tfiletypes = { \"go\" },\n})\n\nvim.lsp.enable(\"gopls1\")\nvim.lsp.enable(\"gopls2\")\n```\n\nThen:\n```lua\n-- at start prints\nloading gopls1\n\n-- output of :lua= vim.lsp.config\n{\n  _configs = {\n    gopls1 = {\n      cmd = { \"gopls\" },\n      filetypes = { \"go\" },\n      root_markers = { \"go.work\", \"go.mod\", \".git\" }\n    }\n  },\n  <metatable> = {\n    __call = <function 1>,\n    __index = <function 2>,\n    __newindex = <function 3>\n  }\n}\n```\n\nOk, so `lsp/*.lua` files seem to be loaded lazily. Let's open a `main.go` then:\n```lua\n-- execute :e main.go\n-- it prints\nloading gopls2\n\n-- then output of :lua= vim.lsp.config\n{\n  _configs = {\n    gopls1 = {\n      cmd = { \"gopls\" },\n      filetypes = { \"go\" },\n      root_markers = { \"go.work\", \"go.mod\", \".git\" }\n    }\n  },\n  <metatable> = {\n    __call = <function 1>,\n    __index = <function 2>,\n    __newindex = <function 3>\n  }\n}\n```\n\nAlso note that `gopls1` is defined only for clarity and comparison. The behavior for `gopls2` is the same whether we include `gopls1` or not. \n\n### Expected behavior\n\nI expected the output of `vim.lua.config` at the very end to be:\n```lua\n{\n  _configs = {\n    gopls1 = {\n      cmd = { \"gopls\" },\n      filetypes = { \"go\" },\n      root_markers = { \"go.work\", \"go.mod\", \".git\" }\n    },\n    gopls2 = {\n      cmd = { \"gopls\" },\n      filetypes = { \"go\" },\n      root_markers = { \"go.work\", \"go.mod\", \".git\" }\n    }\n  },\n  <metatable> = {\n    __call = <function 1>,\n    __index = <function 2>,\n    __newindex = <function 3>\n  }\n}\n```\n\n### Nvim version (nvim -v)\n\nfrom https://github.com/neovim/neovim/commit/17383870dd3b7f04eddd48ed929cc25c7e102277\n\n### Vim (not Nvim) behaves the same?\n\nnot applicable\n\n### Operating system/version\n\nnixos\n\n### Terminal name/version\n\nalacritty\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nhttps://github.com/nix-community/neovim-nightly-overlay",
    "closed_at": "2024-12-31T12:18:06Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`_configs` is private so its contents are irrelevant. \n\nDoes `vim.lsp.config['gopls2']` return the correct thing, or not?",
            "created_at": "2024-12-19T17:08:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2555160933",
            "id": 2555160933,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YTKll",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555160933/reactions"
            },
            "updated_at": "2024-12-19T17:08:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555160933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Nope:\n```lua\n-- vim.lsp.config['gopls1']\n{\n  cmd = { \"gopls\" },\n  filetypes = { \"go\" },\n  root_markers = { \"go.work\", \"go.mod\", \".git\" }\n}\n\n-- while vim.lsp.config['gopls2']\n{}\n```\n\nThis is the same whether I open `main.go` or not.\nAlso note that in the issue I'm printing the public `config`, not the private `_configs`.",
            "created_at": "2024-12-19T17:11:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2555176355",
            "id": 2555176355,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YTOWj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555176355/reactions"
            },
            "updated_at": "2024-12-19T17:11:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555176355",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13033392?v=4",
                "events_url": "https://api.github.com/users/konradmalik/events{/privacy}",
                "followers_url": "https://api.github.com/users/konradmalik/followers",
                "following_url": "https://api.github.com/users/konradmalik/following{/other_user}",
                "gists_url": "https://api.github.com/users/konradmalik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/konradmalik",
                "id": 13033392,
                "login": "konradmalik",
                "node_id": "MDQ6VXNlcjEzMDMzMzky",
                "organizations_url": "https://api.github.com/users/konradmalik/orgs",
                "received_events_url": "https://api.github.com/users/konradmalik/received_events",
                "repos_url": "https://api.github.com/users/konradmalik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/konradmalik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/konradmalik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/konradmalik",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, it won't. The issue here is that all these data structures do not hold the resolved config; for that you need the (private!) `vim.lsp._resolve_config()`. Nobody has provided a compelling use case for exposing that so far, so at the moment LSP config is \"write only\"; you're not meant to access `lsp.config` this way.",
            "created_at": "2024-12-19T17:12:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2555185920",
            "id": 2555185920,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YTQsA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555185920/reactions"
            },
            "updated_at": "2024-12-19T17:13:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555185920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@clason \nThank you, now is starts to make sense.\n\nThe problem I see is that `vim.lsp.config` is public. As a user, it's weird to me that I'm 'not meant to access this'. I mean, I've just written some data to it, it's confusing that it's not there. Where is it then? (now I know where 😄)\n\nOne use-case I'd see for accessing this is - let's say some plugin defines `vim.lsp.config['gopls']` in their `lsp/gopls.lua`.\nThen I start this server and I don't know why it behaves this way (e.g. experimental feature or gopls is enabled but it's buggy), so I investigate my configuration but... I don't see it at all. Seems like I could use private `vim.lsp._resolve_config` for that but (even if it was public) it's not obvious that I **should not** use `vim.lsp.config` for this.",
            "created_at": "2024-12-19T17:22:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2555239671",
            "id": 2555239671,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YTdz3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555239671/reactions"
            },
            "updated_at": "2024-12-19T17:22:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555239671",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13033392?v=4",
                "events_url": "https://api.github.com/users/konradmalik/events{/privacy}",
                "followers_url": "https://api.github.com/users/konradmalik/followers",
                "following_url": "https://api.github.com/users/konradmalik/following{/other_user}",
                "gists_url": "https://api.github.com/users/konradmalik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/konradmalik",
                "id": 13033392,
                "login": "konradmalik",
                "node_id": "MDQ6VXNlcjEzMDMzMzky",
                "organizations_url": "https://api.github.com/users/konradmalik/orgs",
                "received_events_url": "https://api.github.com/users/konradmalik/received_events",
                "repos_url": "https://api.github.com/users/konradmalik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/konradmalik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/konradmalik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/konradmalik",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The problem I see is that vim.lsp.config is public.\n\nThis is just how tables work. The documented(!) interface is the  `vim.lsp.config()` _function_.",
            "created_at": "2024-12-19T17:24:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2555251537",
            "id": 2555251537,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YTgtR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555251537/reactions"
            },
            "updated_at": "2024-12-19T17:24:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555251537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > The problem I see is that vim.lsp.config is public.\n> \n> This is just how tables work. The documented(!) interface is the `vim.lsp.config()` _function_.\n\nbut what about `:h vim.lsp.config` ?\n\n```\n    • Get configuration for luals: >lua\n        local cfg = vim.lsp.config.luals\n```\nSeems like this is not true and should not be used.",
            "created_at": "2024-12-19T17:26:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2555264295",
            "id": 2555264295,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YTj0n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555264295/reactions"
            },
            "updated_at": "2024-12-19T17:26:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555264295",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13033392?v=4",
                "events_url": "https://api.github.com/users/konradmalik/events{/privacy}",
                "followers_url": "https://api.github.com/users/konradmalik/followers",
                "following_url": "https://api.github.com/users/konradmalik/following{/other_user}",
                "gists_url": "https://api.github.com/users/konradmalik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/konradmalik",
                "id": 13033392,
                "login": "konradmalik",
                "node_id": "MDQ6VXNlcjEzMDMzMzky",
                "organizations_url": "https://api.github.com/users/konradmalik/orgs",
                "received_events_url": "https://api.github.com/users/konradmalik/received_events",
                "repos_url": "https://api.github.com/users/konradmalik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/konradmalik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/konradmalik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/konradmalik",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is there a technical reason why we can't make `vim.lsp.config['foo']` return the resolved config (as a deep-copy, i.e. \"immutable\")?",
            "created_at": "2024-12-19T17:28:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2555276963",
            "id": 2555276963,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YTm6j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555276963/reactions"
            },
            "updated_at": "2024-12-19T17:28:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555276963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Seems like this is not true and should not be used.\n\nIt's at least misleading; it will only get the config you have defined explicitly using `vim.lsp.config('luals')`.",
            "created_at": "2024-12-19T17:31:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2555289050",
            "id": 2555289050,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YTp3a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555289050/reactions"
            },
            "updated_at": "2024-12-19T17:31:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555289050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If debug is all you need. Then use `:checkhealth vim.lsp` to view resolved configurations.",
            "created_at": "2024-12-19T20:03:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2555675944",
            "id": 2555675944,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YVIUo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555675944/reactions"
            },
            "updated_at": "2024-12-19T20:03:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555675944",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there a technical reason why we can't make `vim.lsp.config['foo']` return the resolved config (as a deep-copy, i.e. \"immutable\")?\n\nWe could, but this does a potentially expensive rtp lookup which won't be obvious to users. I added the resolved configurations in to checkhealth for this reason.\n\nAnd to note, because the configurations are resolved after running any Lua code, what you get from resolving configurations isn't guaranteed to always be the same that servers are started with. Especially if users run `lsp.config` in a `lsp/*.lua` file.",
            "created_at": "2024-12-19T20:09:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2555686006",
            "id": 2555686006,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YVKx2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555686006/reactions"
            },
            "updated_at": "2024-12-19T20:09:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2555686006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  Nobody has provided a compelling use case for exposing that so far\n\nOne use case is to allow users to use the config via `lsp.start` for more explicit control over when the client gets started. For example, if you don't want to have it auto-start. One could of course pass the full config to `lsp.start` instead of working via `lsp.config` but that means plugins which register `*` configurations or language specific extensions won't work out of the box. If either `lsp.config.luals` or `lsp.config(\"luals\")` returned the full configuration one could use it with `lsp.start(lsp.config...)` \n\nAnother use-case that I have is supporting `lsp.config` in `nvim-jdtls` and have `lsp.enable(\"jdtls\")` \"just work\", while still using `lsp.start` myself - mostly because I have language specific logic in `ftplugin/<lang>` files and I would prefer keeping it that way for java. Switching to `lsp.config` and `lsp.enable` means I'd have to move that into `init.lua` or start some `lua/conf/java.lua` split.\n(I could support lsp.config without using it myself, but that means I won't notice issues as easily)\n\n---\n\n> We could, but this does a potentially expensive rtp lookup which won't be obvious to users.\n\nGiven that most people won't have a table lookup in their configuration unless they want to see the full configuration, is the performance aspect really a problem?\n\nOr looking at it from the other side - in which scenarios does one want to do a lookup _without_ seeing the rtp parts too?",
            "created_at": "2024-12-20T08:21:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/31640#issuecomment-2556504186",
            "id": 2556504186,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31640",
            "node_id": "IC_kwDOAPphoM6YYSh6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 8,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2556504186/reactions"
            },
            "updated_at": "2024-12-20T08:22:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2556504186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31640/comments",
    "created_at": "2024-12-19T16:51:09Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31640/events",
    "html_url": "https://github.com/neovim/neovim/issues/31640",
    "id": 2750923558,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31640/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6j98Mm",
    "number": 31640,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31640/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31640/timeline",
    "title": "LSP: get resolved config from vim.lsp.config",
    "updated_at": "2025-01-17T15:33:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31640",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13033392?v=4",
        "events_url": "https://api.github.com/users/konradmalik/events{/privacy}",
        "followers_url": "https://api.github.com/users/konradmalik/followers",
        "following_url": "https://api.github.com/users/konradmalik/following{/other_user}",
        "gists_url": "https://api.github.com/users/konradmalik/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/konradmalik",
        "id": 13033392,
        "login": "konradmalik",
        "node_id": "MDQ6VXNlcjEzMDMzMzky",
        "organizations_url": "https://api.github.com/users/konradmalik/orgs",
        "received_events_url": "https://api.github.com/users/konradmalik/received_events",
        "repos_url": "https://api.github.com/users/konradmalik/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/konradmalik/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/konradmalik/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/konradmalik",
        "user_view_type": "public"
    }
}