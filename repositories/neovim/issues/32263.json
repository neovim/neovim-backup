{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nWith lots of plugins installed, the user command namespace can become filled with commands,\nwhich can become difficult to discover.\nSome ways to improve the discoverability of a plugin's commands with `<TAB>` completion are to:\n\n- Give all commands the same prefix, for example `:TSInstall`, `TSInstallSync`, `TSEnable`\n- Implement subcommands, for example `:Telescope find_files`, `:Telescope live_grep`\n\nBoth come with pros and cons.\nPrefixing is easier to implement with the current API and it may work better with plugins that use fuzzy matching to search for commands.\nHowever, `:Foo<Tab>` could match both the `:FooBar`  `:FootballBar` user commands.\nWith subcommands, `:Telescope <TAB>` will only list subcommands for the `:Telescope` command.\n\nThe problem is that Neovim doesn't have an ergonomic API for this. \nCurrently, plugin authors wanting to implement subcommands need to:\n \n1. Write extensive boilerplate for subcommand handling and completion \n  - [example 1](https://github.com/nvim-neorocks/nvim-best-practices?tab=readme-ov-file#white_check_mark-do-1)\n  - [example 2](https://github.com/ColinKennedy/nvim-best-practices-plugin-template/tree/main/lua/plugin_template/_commands)\n1. Implement their own argument parsing logic\n1. Create custom solutions for command discovery and documentation\n\nThis leads to:\n\n- Inconsistent command interfaces across plugins\n- Duplicated effort for common command patterns\n- Limited discoverability of subcommands (not visible in `:command <name>`)\n- Difficulty in implementing rich command-line features (flags, options, etc.)\n\n### Expected behavior\n\n#### Proposal:\n\nAdd first-class support for subcommands and argument parsing to Neovim's command API. This would:\n\n1. Make subcommands a core concept in Neovim's command system\n2. Provide a standard argument parsing interface\n3. Integrate with existing command discovery mechanisms\n\n#### Benefits\n\n- Standardization:\n  - Consistent command interface across plugins\n  - Built-in argument validation (and type checking?)\n  - Standard way to document commands and their usage\n\n- Improved UX:\n  - Better command discovery through `:command`\n  - Rich command-line completion\n  - Integrated help for subcommands and arguments\n\n- Developer experience:\n  - Reduced boilerplate\n  - Standard way to handle common command patterns\n\n#### Reference implementations:\n\n- @ColinKennedy's [nvim-best-practices-plugin-template](https://github.com/ColinKennedy/nvim-best-practices-plugin-template/tree/0e449223755ab4ea4fa170753d4b38731e4279b2/lua/plugin_template/_commands)\n  (includes a command-mode parser)\n- @folke's [trouble.nvim parser](https://github.com/folke/trouble.nvim/blob/6f380b8826fb819c752c8fd7daaee9ef96d4c689/lua/trouble/config/parser.lua#L21), which uses tree-sitter to parse Lua arguments.\n\n#### Some integration considerations:\n\n- How should this work with fuzzy matching?\n- What level of argument parsing should be built-in?\n- How to handle documentation/help?\n- Simplicity vs. flexibility?\n- Built-in features vs. plugin territory?\n- ... ?",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Small correction - `nvim-best-practices-plugin-template`'s command-line parser is standalone now and can be viewed here: https://github.com/ColinKennedy/mega.cmdparse. The readme is fairly thorough but if you have any questions / concerns please let me know",
            "created_at": "2025-01-30T20:21:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/32263#issuecomment-2625497784",
            "id": 2625497784,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32263",
            "node_id": "IC_kwDOAPphoM6cfeq4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2625497784/reactions"
            },
            "updated_at": "2025-01-30T20:21:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2625497784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There's also a Vim-only command-line parser called https://github.com/cwshugg/argonaut.vim that I'd taken inspiration from. I'd added every feature from argonaut except for \"In-line shell/Vim command output\". Though in the future it might be a fun thing to add.",
            "created_at": "2025-01-30T20:24:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/32263#issuecomment-2625502154",
            "id": 2625502154,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32263",
            "node_id": "IC_kwDOAPphoM6cffvK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2625502154/reactions"
            },
            "updated_at": "2025-01-30T20:24:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2625502154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">> 2\\. Provide a standard argument parsing interface\n>\n> a Vim-only command-line parser called https://github.com/cwshugg/argonaut.vim\n\nWhat is missing from `nvim_parse_cmd()` ?",
            "created_at": "2025-02-02T14:40:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/32263#issuecomment-2629423424",
            "id": 2629423424,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32263",
            "node_id": "IC_kwDOAPphoM6cudFA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629423424/reactions"
            },
            "updated_at": "2025-02-02T14:40:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629423424",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What is missing from `nvim_parse_cmd()` ?\n\nIt seems like a good solution for simple commands, but afaict, it doesn't support things like flags or named arguments.\nAnd I don't see it significantly reducing boilerplate when it comes to help and completions.\n\nThe [demo videos](https://github.com/ColinKennedy/mega.cmdparse?tab=readme-ov-file#-demos) in the `mega.cmdparse` readme provide a nice overview of what is possible.",
            "created_at": "2025-02-02T16:05:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/32263#issuecomment-2629453901",
            "id": 2629453901,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32263",
            "node_id": "IC_kwDOAPphoM6cukhN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629453901/reactions"
            },
            "updated_at": "2025-02-02T16:05:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629453901",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk While writing `mega.cmdparse` I tried out `nvim_parse_cmd` first, however I quickly found that I didn't need / want any of its output except for `args`, which itself was not enough information for what I did need.\n\nTo be specific:\n\n```lua\ncommand = 'Telescope command-like  --style=\"blah here\" ++alternative+argument=blah --using \\'single quotes\\'   -asdf'\nprint(vim.inspect(vim.api.nvim_parse_cmd(command, {})))\n```\nprints out\n`{ ... args = { \"command-like\", '--style=\"blah', 'here\"', \"++alternative+argument=blah\", \"--using\", \"'single\", \"quotes'\", \"-asdf\" } ...}`\n\n- despite putting arguments in `\"\"` and `''` pairs the splitting didn't work as intended\n- `-asdf` is actually 4 arguments aggregated together but the parser wasn't aware of that\n- Most critically, I needed to know the real cursor positions of each argument which `nvim_parse_cmd` doesn't say. It's not enough  take the lengths of each token and assume that each argument has exactly one space between them. `--style=` and `-asdf` both have multiple spaces preceding.\n\nIn retrospect every problem I just mentioned is solvable if I call `nvim_parse_cmd` and reparsed the output. Or I could have PRed what I needed back to Neovim. Though in truth I didn't know what I needed at the start and argument parsing is not a big part of what makes up `mega.cmdparse`. So I just wrote it by-hand. I ended up writing [argparse](https://github.com/ColinKennedy/mega.cmdparse/blob/main/lua/mega/cmdparse/_cli/argparse.lua) \n\n```lua\nlocal argparse = require(\"mega.cmdparse._cli.argparse\")\ncommand = 'Telescope command-like  --style=\"blah here\" ++alternative+argument=blah --using \\'single quotes\\'   -asdf'\nprint(vim.inspect(argparse.parse_arguments(command)))\n```\n\nand that prints\n\n```lua\n{\n  arguments = { {\n      argument_type = \"__position\",\n      range = {\n        end_column = 9,\n        start_column = 1\n      },\n      value = \"Telescope\"\n    }, {\n      argument_type = \"__position\",\n      range = {\n        end_column = 22,\n        start_column = 11\n      },\n      value = \"command-like\"\n    }, {\n      argument_type = \"__named\",\n      name = \"--style\",\n      range = {\n        end_column = 43,\n        start_column = 25\n      },\n      value = \"blah here\"\n    }, {\n\n    ... more data ...\n\n  remainder = {\n    value = \"\"\n  },\n  text = \"Telescope command-like --style=\\\"blah here\\\" ++alternative+argument=blah --using 'single quotes'   -asdf\"\n\n```\n\n<details>\n<summary>Click to show all</summary>\n\n```lua\n{\n  arguments = { {\n      argument_type = \"__position\",\n      range = {\n        end_column = 9,\n        start_column = 1\n      },\n      value = \"Telescope\"\n    }, {\n      argument_type = \"__position\",\n      range = {\n        end_column = 22,\n        start_column = 11\n      },\n      value = \"command-like\"\n    }, {\n      argument_type = \"__named\",\n      name = \"--style\",\n      range = {\n        end_column = 43,\n        start_column = 25\n      },\n      value = \"blah here\"\n    }, {\n      argument_type = \"__named\",\n      name = \"++alternative+argument\",\n      range = {\n        end_column = 71,\n        start_column = 45\n      },\n      value = \"blah\"\n    }, {\n      argument_type = \"__flag\",\n      name = \"--using\",\n      range = {\n        end_column = 79,\n        start_column = 73\n      }\n    }, {\n      argument_type = \"__position\",\n      range = {\n        end_column = 95,\n        start_column = 81\n      },\n      value = \"single quotes\"\n    }, {\n      argument_type = \"__flag\",\n      name = \"-a\",\n      range = {\n        end_column = 103,\n        start_column = 99\n      }\n    }, {\n      argument_type = \"__flag\",\n      name = \"-s\",\n      range = {\n        end_column = 103,\n        start_column = 100\n      }\n    }, {\n      argument_type = \"__flag\",\n      name = \"-d\",\n      range = {\n        end_column = 103,\n        start_column = 101\n      }\n    }, {\n      argument_type = \"__flag\",\n      name = \"-f\",\n      range = {\n        end_column = 103,\n        start_column = 102\n      }\n    } },\n  remainder = {\n    value = \"\"\n  },\n  text = \"Telescope command-like  --style=\\\"blah here\\\" ++alternative+argument=blah --using 'single quotes'   -asdf\"\n}\n```\n</details>\n\nWhich is what I needed.",
            "created_at": "2025-02-02T17:16:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/32263#issuecomment-2629477754",
            "id": 2629477754,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32263",
            "node_id": "IC_kwDOAPphoM6cuqV6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629477754/reactions"
            },
            "updated_at": "2025-02-02T17:17:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629477754",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> despite putting arguments in `\"\"` and `''` pairs the splitting didn't work as intended\n\nYeah, that's expected because vim's cmdline parsing is dependant on the `:command` *definition* flags. And it doesn't understand CLI quoting rules.\n\nWe have discussed a argparse-like module which could also be useful for `nvim -l` invocations.\n\nargparse and subcommands should probably be tracked as separate issues.",
            "created_at": "2025-02-02T22:36:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/32263#issuecomment-2629590740",
            "id": 2629590740,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32263",
            "node_id": "IC_kwDOAPphoM6cvF7U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629590740/reactions"
            },
            "updated_at": "2025-02-02T22:36:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629590740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32263/comments",
    "created_at": "2025-01-30T20:14:50Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32263/events",
    "html_url": "https://github.com/neovim/neovim/issues/32263",
    "id": 2821730107,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32263/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6oMC87",
    "number": 32263,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32263/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32263/timeline",
    "title": "command API: support subcommands, arg parsing (CLI-like quoting rules)",
    "updated_at": "2025-02-02T22:36:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32263",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
        "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
        "followers_url": "https://api.github.com/users/mrcjkb/followers",
        "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
        "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mrcjkb",
        "id": 12857160,
        "login": "mrcjkb",
        "node_id": "MDQ6VXNlcjEyODU3MTYw",
        "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
        "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
        "repos_url": "https://api.github.com/users/mrcjkb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mrcjkb",
        "user_view_type": "public"
    }
}