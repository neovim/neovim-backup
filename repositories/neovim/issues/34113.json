{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nThe treesitter parser raises the following error whenever some specific files are opened (via `:e ~/.config/nvim/lua/file.lua` or via Explorer) and breaks the highlighting for the whole buffer.\n\n![Image](https://github.com/user-attachments/assets/098117d9-46e9-4dce-affd-615edad736eb)\n\nfor this specific file, treesitter raises the above mentioned error and breaks the highlighting on parsing line no. 16. Here's the InspectTree for the file.\n\n```query\n(chunk ; [0, 0] - [25, 0]\n  local_declaration: (variable_declaration ; [0, 0] - [0, 12]\n    (assignment_statement ; [0, 6] - [0, 12]\n      (variable_list ; [0, 6] - [0, 7]\n        name: (identifier)) ; [0, 6] - [0, 7]\n      (expression_list ; [0, 10] - [0, 12]\n        value: (table_constructor)))) ; [0, 10] - [0, 12]\n  (assignment_statement ; [2, 0] - [22, 3]\n    (variable_list ; [2, 0] - [2, 7]\n      name: (dot_index_expression ; [2, 0] - [2, 7]\n        table: (identifier) ; [2, 0] - [2, 1]\n        field: (identifier))) ; [2, 2] - [2, 7]\n    (expression_list ; [2, 10] - [22, 3]\n      value: (function_definition ; [2, 10] - [22, 3]\n        parameters: (parameters) ; [2, 18] - [2, 20]\n        body: (block ; [3, 1] - [21, 100]\n          local_declaration: (variable_declaration ; [3, 1] - [3, 88]\n            (assignment_statement ; [3, 7] - [3, 88]\n              (variable_list ; [3, 7] - [3, 22]\n                name: (identifier)) ; [3, 7] - [3, 22]\n              (expression_list ; [3, 25] - [3, 88]\n                value: (function_call ; [3, 25] - [3, 88]\n                  name: (dot_index_expression ; [3, 25] - [3, 52]\n                    table: (dot_index_expression ; [3, 25] - [3, 32]\n                      table: (identifier) ; [3, 25] - [3, 28]\n                      field: (identifier)) ; [3, 29] - [3, 32]\n                    field: (identifier)) ; [3, 33] - [3, 52]\n                  arguments: (arguments ; [3, 52] - [3, 88]\n                    (string ; [3, 53] - [3, 69]\n                      content: (string_content)) ; [3, 54] - [3, 68]\n                    (table_constructor ; [3, 71] - [3, 87]\n                      (field ; [3, 73] - [3, 85]\n                        name: (identifier) ; [3, 73] - [3, 78]\n                        value: (true)))))))) ; [3, 81] - [3, 85]\n          (function_call ; [5, 1] - [20, 2]\n            name: (dot_index_expression ; [5, 1] - [5, 28]\n              table: (dot_index_expression ; [5, 1] - [5, 8]\n                table: (identifier) ; [5, 1] - [5, 4]\n                field: (identifier)) ; [5, 5] - [5, 8]\n              field: (identifier)) ; [5, 9] - [5, 28]\n            arguments: (arguments ; [5, 28] - [20, 2]\n              (table_constructor ; [6, 2] - [6, 100]\n                (field ; [6, 4] - [6, 14]\n                  value: (string ; [6, 4] - [6, 14]\n                    content: (string_content))) ; [6, 5] - [6, 13]\n                (field ; [6, 16] - [6, 27]\n                  value: (string ; [6, 16] - [6, 27]\n                    content: (string_content))) ; [6, 17] - [6, 26]\n                (field ; [6, 29] - [6, 42]\n                  value: (string ; [6, 29] - [6, 42]\n                    content: (string_content))) ; [6, 30] - [6, 41]\n                (field ; [6, 44] - [6, 57]\n                  value: (string ; [6, 44] - [6, 57]\n                    content: (string_content))) ; [6, 45] - [6, 56]\n                (field ; [6, 59] - [6, 72]\n                  value: (string ; [6, 59] - [6, 72]\n                    content: (string_content))) ; [6, 60] - [6, 71]\n                (field ; [6, 74] - [6, 84]\n                  value: (string ; [6, 74] - [6, 84]\n                    content: (string_content))) ; [6, 75] - [6, 83]\n                (field ; [6, 86] - [6, 98]\n                  value: (string ; [6, 86] - [6, 98]\n                    content: (string_content)))) ; [6, 87] - [6, 97]\n              (table_constructor ; [7, 2] - [19, 3]\n                (field ; [8, 3] - [8, 26]\n                  name: (identifier) ; [8, 3] - [8, 8]\n                  value: (identifier)) ; [8, 11] - [8, 26]\n                (field ; [9, 3] - [18, 6]\n                  name: (identifier) ; [9, 3] - [9, 11]\n                  value: (function_definition ; [9, 14] - [18, 6]\n                    parameters: (parameters) ; [9, 22] - [9, 24]\n                    body: (block ; [10, 4] - [17, 8]\n                      local_declaration: (variable_declaration ; [10, 4] - [10, 45]\n                        (assignment_statement ; [10, 10] - [10, 45]\n                          (variable_list ; [10, 10] - [10, 15]\n                            name: (identifier)) ; [10, 10] - [10, 15]\n                          (expression_list ; [10, 18] - [10, 45]\n                            value: (function_call ; [10, 18] - [10, 45]\n                              name: (identifier) ; [10, 18] - [10, 25]\n                              arguments: (arguments ; [10, 25] - [10, 45]\n                                (string ; [10, 26] - [10, 44]\n                                  content: (string_content))))))) ; [10, 27] - [10, 43]\n                      local_declaration: (variable_declaration ; [11, 4] - [11, 71]\n                        (assignment_statement ; [11, 10] - [11, 71]\n                          (variable_list ; [11, 10] - [11, 36]\n                            name: (identifier)) ; [11, 10] - [11, 36]\n                          (expression_list ; [11, 39] - [11, 71]\n                            value: (dot_index_expression ; [11, 39] - [11, 71]\n                              table: (identifier) ; [11, 39] - [11, 44]\n                              field: (identifier))))) ; [11, 45] - [11, 71]\n                      local_declaration: (variable_declaration ; [12, 4] - [12, 75]\n                        (assignment_statement ; [12, 10] - [12, 75]\n                          (variable_list ; [12, 10] - [12, 38]\n                            name: (identifier)) ; [12, 10] - [12, 38]\n                          (expression_list ; [12, 41] - [12, 75]\n                            value: (dot_index_expression ; [12, 41] - [12, 75]\n                              table: (identifier) ; [12, 41] - [12, 46]\n                              field: (identifier))))) ; [12, 47] - [12, 75]\n                      (function_call ; [13, 4] - [17, 8]\n                        name: (dot_index_expression ; [13, 4] - [13, 16]\n                          table: (identifier) ; [13, 4] - [13, 7]\n                          field: (identifier)) ; [13, 8] - [13, 16]\n                        arguments: (arguments ; [13, 16] - [17, 8]\n                          (function_definition ; [13, 17] - [17, 7]\n                            parameters: (parameters) ; [13, 25] - [13, 27]\n                            body: (block ; [14, 5] - [16, 31]\n                              (function_call ; [14, 5] - [14, 33]\n                                name: (identifier) ; [14, 5] - [14, 31]\n                                arguments: (arguments)) ; [14, 31] - [14, 33]\n                              (function_call ; [15, 5] - [15, 35]\n                                name: (identifier) ; [15, 5] - [15, 33]\n                                arguments: (arguments)) ; [15, 33] - [15, 35]\n                              (function_call ; [16, 5] - [16, 31]\n                                name: (dot_index_expression ; [16, 5] - [16, 12]\n                                  table: (identifier) ; [16, 5] - [16, 8]\n                                  field: (identifier)) ; [16, 9] - [16, 12]\n                                arguments: (arguments ; [16, 12] - [16, 31]\n                                  (string ; [16, 13] - [16, 30]\n                                    content: (string_content ; [16, 15] - [16, 28]\n                                      (script_file ; [16, 15] - [16, 28]\n                                        (unknown_builtin_statement ; [16, 15] - [16, 28]\n                                          (unknown_command_name))))))))))))))))) ; [16, 15] - [16, 28]\n          (function_call ; [21, 1] - [21, 100]\n            name: (dot_index_expression ; [21, 1] - [21, 30]\n              table: (dot_index_expression ; [21, 1] - [21, 8]\n                table: (identifier) ; [21, 1] - [21, 4]\n                field: (identifier)) ; [21, 5] - [21, 8]\n              field: (identifier)) ; [21, 9] - [21, 30]\n            arguments: (arguments ; [21, 30] - [21, 100]\n              (string ; [21, 31] - [21, 40]\n                content: (string_content)) ; [21, 32] - [21, 39]\n              (string ; [21, 42] - [21, 95]\n                content: (string_content)) ; [21, 44] - [21, 93]\n              (table_constructor))))))) ; [21, 97] - [21, 99]\n  (return_statement ; [24, 0] - [24, 8]\n    (expression_list ; [24, 7] - [24, 8]\n      (identifier)))) ; [24, 7] - [24, 8]\n\n```\n\n### Steps to reproduce\n\nThis is how I reproduced for the file displayed in the attached screenshot \n\nnvim --clean\n:edit ~/test.lua\n\nmake sure test.lua has the following content:\n```\nlocal M = {}\n\nM.setup = function()\n\tlocal tabline_augroup = vim.api.nvim_create_augroup(\"TablineBuffers\", { clear = true })\n\n\tvim.api.nvim_create_autocmd(\n\t\t{ \"BufEnter\", \"BufUnload\", \"TextChanged\", \"InsertEnter\", \"InsertLeave\", \"BufWrite\", \"VimResized\" },\n\t\t{\n\t\t\tgroup = tabline_augroup,\n\t\t\tcallback = function()\n\t\t\t\tlocal utils = require(\"ui.tabline.utils\")\n\t\t\t\tlocal update_tabline_buffer_info = utils.update_tabline_buffer_info\n\t\t\t\tlocal update_tabline_buffer_string = utils.update_tabline_buffer_string\n\t\t\t\tvim.schedule(function()\n\t\t\t\t\tupdate_tabline_buffer_info()\n\t\t\t\t\tupdate_tabline_buffer_string()\n\t\t\t\t\tvim.cmd([[redrawtabline]])\n\t\t\t\tend)\n\t\t\tend,\n\t\t}\n\t)\n\tvim.api.nvim_set_option_value(\"tabline\", [[%!v:lua.require('ui.tabline.utils').get_tabline()]], {})\nend\n\nreturn M\n```\n\n### Expected behavior\n\nThe file should be highlighted properly without any errors.\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-409+gdd43eb445a\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nalacritty 0.15.1 (0c405d53)\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nparu -S neovim-git",
    "closed_at": "2025-05-21T11:55:59Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
        "events_url": "https://api.github.com/users/clason/events{/privacy}",
        "followers_url": "https://api.github.com/users/clason/followers",
        "following_url": "https://api.github.com/users/clason/following{/other_user}",
        "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/clason",
        "id": 2361214,
        "login": "clason",
        "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
        "organizations_url": "https://api.github.com/users/clason/orgs",
        "received_events_url": "https://api.github.com/users/clason/received_events",
        "repos_url": "https://api.github.com/users/clason/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/clason",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "See https://github.com/nvim-treesitter/nvim-treesitter/issues/3092. And make sure your distro package contains the _correct_ tree-sitter parsers (exact versions!) This is not a Neovim issue.",
            "created_at": "2025-05-21T11:55:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/34113#issuecomment-2897672674",
            "id": 2897672674,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34113",
            "node_id": "IC_kwDOAPphoM6stvni",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2897672674/reactions"
            },
            "updated_at": "2025-05-21T11:55:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2897672674",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks !",
            "created_at": "2025-05-21T12:00:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/34113#issuecomment-2897694116",
            "id": 2897694116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34113",
            "node_id": "IC_kwDOAPphoM6st02k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2897694116/reactions"
            },
            "updated_at": "2025-05-21T12:00:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2897694116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/187927803?v=4",
                "events_url": "https://api.github.com/users/100x65b1111000/events{/privacy}",
                "followers_url": "https://api.github.com/users/100x65b1111000/followers",
                "following_url": "https://api.github.com/users/100x65b1111000/following{/other_user}",
                "gists_url": "https://api.github.com/users/100x65b1111000/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/100x65b1111000",
                "id": 187927803,
                "login": "100x65b1111000",
                "node_id": "U_kgDOCzOM-w",
                "organizations_url": "https://api.github.com/users/100x65b1111000/orgs",
                "received_events_url": "https://api.github.com/users/100x65b1111000/received_events",
                "repos_url": "https://api.github.com/users/100x65b1111000/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/100x65b1111000/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/100x65b1111000/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/100x65b1111000",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34113/comments",
    "created_at": "2025-05-21T11:53:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34113/events",
    "html_url": "https://github.com/neovim/neovim/issues/34113",
    "id": 3079965911,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34113/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM63lIzX",
    "number": 34113,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34113/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34113/timeline",
    "title": "Invalid node type 'substitute' error on opening lua files.",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-21T12:00:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34113",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/187927803?v=4",
        "events_url": "https://api.github.com/users/100x65b1111000/events{/privacy}",
        "followers_url": "https://api.github.com/users/100x65b1111000/followers",
        "following_url": "https://api.github.com/users/100x65b1111000/following{/other_user}",
        "gists_url": "https://api.github.com/users/100x65b1111000/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/100x65b1111000",
        "id": 187927803,
        "login": "100x65b1111000",
        "node_id": "U_kgDOCzOM-w",
        "organizations_url": "https://api.github.com/users/100x65b1111000/orgs",
        "received_events_url": "https://api.github.com/users/100x65b1111000/received_events",
        "repos_url": "https://api.github.com/users/100x65b1111000/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/100x65b1111000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/100x65b1111000/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/100x65b1111000",
        "user_view_type": "public"
    }
}