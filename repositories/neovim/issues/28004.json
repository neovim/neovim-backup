{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI needed to perform an LSP replace using the same pattern on different files on a project. Easy enough: `live_grep` with `Telescope`, send to quickfix, `cdo` with some positioning and then running `vim.lsp.buf.rename(\"newName\")`, right? Unfortunately it does not work, it only changes the last file in a broken way.\r\n\r\nIt took me a bit to realize that `vim.lsp.buf.rename` works asynchronously. I don't exactly understand _why_ the problem manifests itself in this particular way, but anyway using a _sync_ approach for the operation is probably the right thing to when performing this sort of automation.\n\n### Expected behavior\n\nThe documentation should suggest to avoid using `rename` for scripting purposes, and it should suggest its _sync_ alternative (which obviously should exist). I am not totally sure if the behavior should depend on a parameter (similarly to `vim.lsp.buf.format`, but using `async = true` by default instead) or if it should be a separated function (i.e. `vim.lsp.buf.rename_sync`). In theory, it could be also helpful to have a _callback_ parameter to the current `rename` function to be called after the operation ends, however this is not so useful when using `cdo` and similar functions, therefore out of scope for this issue.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Can you use `vim.wait()`?  https://neovim.io/doc/user/lua.html#vim.wait()\r\n\r\nIf not, this is blocked until we have a Task/Promise abstraction. https://github.com/neovim/neovim/issues/19624 We are not going to add `_sync` or `_async` variants of everything.",
            "created_at": "2024-03-27T15:57:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/28004#issuecomment-2023130281",
            "id": 2023130281,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28004",
            "node_id": "IC_kwDOAPphoM54loSp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023130281/reactions"
            },
            "updated_at": "2024-03-27T15:57:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023130281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you for your reply @justinmk. Unfortunately I don't think that `vim.wait` would help (at least without long timeouts), because the issue is that if more than one _rename_ operation overlaps, things start to go crazy.\r\n\r\nYou are totally right that a Task/Promise abstraction is exactly what would be ideal in this case, but I also think that it is not necessary to add _async variants_ for everything. I mean, I don't think there are many others (if any) `lsp.buf` that explode so badly if run multiple times in a short time, and we could also use an `async` option instead of having a function variant for this specific case (which have been already done for `vim.lsp.buf.format`).\r\n\r\nStill, I could understand if you would rather to wait for a better Task/Promise abstraction and to avoid a temporary _sol-hack-ution_. I already made my _hackish_ auxiliary sync `rename` function that call private methods in order to solve my specific problem... but it is not a good idea to publish it as a plugin for obvious reasons :sweat_smile:. Probably, it is difficult to estimate if any other person encountered the same issue and just opted to \"whatever, let's do it by hand\", therefore I do not know if introducing this change could be _actually_ useful to other people.\r\n\r\nLet me know if you would like me to send a PR to introduce an `async` option (I think we are already excluding the `_sync` function variant) or if you would rather to close the issue. In any case no worries :relaxed: ",
            "created_at": "2024-03-27T17:26:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/28004#issuecomment-2023367527",
            "id": 2023367527,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28004",
            "node_id": "IC_kwDOAPphoM54miNn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023367527/reactions"
            },
            "updated_at": "2024-03-27T17:26:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023367527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/350168?v=4",
                "events_url": "https://api.github.com/users/dodomorandi/events{/privacy}",
                "followers_url": "https://api.github.com/users/dodomorandi/followers",
                "following_url": "https://api.github.com/users/dodomorandi/following{/other_user}",
                "gists_url": "https://api.github.com/users/dodomorandi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dodomorandi",
                "id": 350168,
                "login": "dodomorandi",
                "node_id": "MDQ6VXNlcjM1MDE2OA==",
                "organizations_url": "https://api.github.com/users/dodomorandi/orgs",
                "received_events_url": "https://api.github.com/users/dodomorandi/received_events",
                "repos_url": "https://api.github.com/users/dodomorandi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dodomorandi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dodomorandi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dodomorandi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I understand that sending async rename requests to a language server could be problematic. However, in this specific case, I don't see why it would be necessary.\r\n\r\nRename works across files in the workspace, so there should be no need to find all occurrences manually and so on. That's the whole point. \r\n\r\nSo given your files are in the same workspace, doing a single rename is sufficient as long as its the same token in the workspace. If they are different tokens, then it would cause other types of problems, like the server refusing to rename be because the token is already taken. ",
            "created_at": "2024-04-29T15:47:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/28004#issuecomment-2083082059",
            "id": 2083082059,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28004",
            "node_id": "IC_kwDOAPphoM58KU9L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2083082059/reactions"
            },
            "updated_at": "2024-04-29T21:01:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2083082059",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39703898?v=4",
                "events_url": "https://api.github.com/users/bluebrown/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluebrown/followers",
                "following_url": "https://api.github.com/users/bluebrown/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluebrown/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluebrown",
                "id": 39703898,
                "login": "bluebrown",
                "node_id": "MDQ6VXNlcjM5NzAzODk4",
                "organizations_url": "https://api.github.com/users/bluebrown/orgs",
                "received_events_url": "https://api.github.com/users/bluebrown/received_events",
                "repos_url": "https://api.github.com/users/bluebrown/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluebrown/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluebrown/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluebrown",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bluebrown unfortunately that is not true, otherwise I would not have encountered the issue in the first place. You are saying that it is not possible to be in my situation so... ok I think? As I said, I created myself a sync version of the feature, and I used it to solve my problem. I opened this issue because I think that other people could be limited in the same way I have been, if the issue _does not exist_ feel free to close it :man_shrugging: ",
            "created_at": "2024-04-29T16:10:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/28004#issuecomment-2083135769",
            "id": 2083135769,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28004",
            "node_id": "IC_kwDOAPphoM58KiEZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2083135769/reactions"
            },
            "updated_at": "2024-04-29T16:10:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2083135769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/350168?v=4",
                "events_url": "https://api.github.com/users/dodomorandi/events{/privacy}",
                "followers_url": "https://api.github.com/users/dodomorandi/followers",
                "following_url": "https://api.github.com/users/dodomorandi/following{/other_user}",
                "gists_url": "https://api.github.com/users/dodomorandi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dodomorandi",
                "id": 350168,
                "login": "dodomorandi",
                "node_id": "MDQ6VXNlcjM1MDE2OA==",
                "organizations_url": "https://api.github.com/users/dodomorandi/orgs",
                "received_events_url": "https://api.github.com/users/dodomorandi/received_events",
                "repos_url": "https://api.github.com/users/dodomorandi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dodomorandi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dodomorandi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dodomorandi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @bluebrown unfortunately that is not true, otherwise I would not have encountered the issue in the first place. You are saying that it is not possible to be in my situation so... ok I think? As I said, I created myself a sync version of the feature, and I used it to solve my problem. I opened this issue because I think that other people could be limited in the same way I have been, if the issue _does not exist_ feel free to close it 🤷‍♂️\r\n\r\nWhat do you mean by that's not true?\r\n\r\nEdit: I don't doubt it is possible to run into this, but I wonder how exactly. Due to the reasons mentioned, I don't think most users would ever run into this, since normally the rename working across the entire workspace is sufficient. Just find 1 occurrence and perform the rename. ",
            "created_at": "2024-04-29T21:21:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/28004#issuecomment-2083697493",
            "id": 2083697493,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28004",
            "node_id": "IC_kwDOAPphoM58MrNV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2083697493/reactions"
            },
            "updated_at": "2024-04-29T21:27:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2083697493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39703898?v=4",
                "events_url": "https://api.github.com/users/bluebrown/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluebrown/followers",
                "following_url": "https://api.github.com/users/bluebrown/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluebrown/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluebrown",
                "id": 39703898,
                "login": "bluebrown",
                "node_id": "MDQ6VXNlcjM5NzAzODk4",
                "organizations_url": "https://api.github.com/users/bluebrown/orgs",
                "received_events_url": "https://api.github.com/users/bluebrown/received_events",
                "repos_url": "https://api.github.com/users/bluebrown/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluebrown/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluebrown/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluebrown",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> What do you mean by that's not true?\r\n\r\nI mean that the fact that\r\n\r\n> Rename works across files in the workspace, so there should be no need to find all occurrences manually and so on. That's the whole point.\r\n>\r\n> So given your files are in the same workspace, doing a single rename is sufficient as long as its the same token in the workspace. If they are different tokens, then it would cause other types of problems, like the server refusing to rename be because the token is already taken.\r\n\r\nis not true in absolute terms. *Generally* using LSP rename is sufficient, but in some specific cases it is not enough. Take the following line:\r\n\r\n```javascript\r\nimport myA from '../A';\r\n```\r\n\r\nAnd imagine you have this all around your code, and you need a refactor because previously you were directly using `myA`, but now you need to wrap it inside some kind of helper and you would like to keep using the wrapped version as `myA`. What you probably want to do is create a wrapped instance of `myA` and then rename the _original_ import to `myAOriginal` (or something similar). But this is an arbitrary name that _exists_ only inside this specific module, not on other ones. Therefore my initial point: you need to find the occurrences of this pattern and then perform automatic refactor including rename, and you need the sync version otherwise things start to break.",
            "created_at": "2024-04-30T07:02:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/28004#issuecomment-2084525249",
            "id": 2084525249,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28004",
            "node_id": "IC_kwDOAPphoM58P1TB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084525249/reactions"
            },
            "updated_at": "2024-04-30T07:02:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084525249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/350168?v=4",
                "events_url": "https://api.github.com/users/dodomorandi/events{/privacy}",
                "followers_url": "https://api.github.com/users/dodomorandi/followers",
                "following_url": "https://api.github.com/users/dodomorandi/following{/other_user}",
                "gists_url": "https://api.github.com/users/dodomorandi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dodomorandi",
                "id": 350168,
                "login": "dodomorandi",
                "node_id": "MDQ6VXNlcjM1MDE2OA==",
                "organizations_url": "https://api.github.com/users/dodomorandi/orgs",
                "received_events_url": "https://api.github.com/users/dodomorandi/received_events",
                "repos_url": "https://api.github.com/users/dodomorandi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dodomorandi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dodomorandi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dodomorandi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@dodomorandi , thanks for explaining. There are langauges that have file local or private tokens, so you are right.",
            "created_at": "2024-05-03T19:08:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/28004#issuecomment-2093610752",
            "id": 2093610752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28004",
            "node_id": "IC_kwDOAPphoM58yfcA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093610752/reactions"
            },
            "updated_at": "2024-05-03T20:44:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093610752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39703898?v=4",
                "events_url": "https://api.github.com/users/bluebrown/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluebrown/followers",
                "following_url": "https://api.github.com/users/bluebrown/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluebrown/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluebrown",
                "id": 39703898,
                "login": "bluebrown",
                "node_id": "MDQ6VXNlcjM5NzAzODk4",
                "organizations_url": "https://api.github.com/users/bluebrown/orgs",
                "received_events_url": "https://api.github.com/users/bluebrown/received_events",
                "repos_url": "https://api.github.com/users/bluebrown/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluebrown/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluebrown/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluebrown",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28004/comments",
    "created_at": "2024-03-23T22:20:12Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28004/events",
    "html_url": "https://github.com/neovim/neovim/issues/28004",
    "id": 2204071136,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "futures/promises, async/await, concurrency, task pipelines",
            "id": 5683343649,
            "name": "async",
            "node_id": "LA_kwDOAPphoM8AAAABUsDxIQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/async"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28004/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 285,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 339,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-04T21:53:41Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6DX3Tg",
    "number": 28004,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28004/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28004/timeline",
    "title": "provide continuation for `vim.lsp.buf.rename`",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:58:45Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28004",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/350168?v=4",
        "events_url": "https://api.github.com/users/dodomorandi/events{/privacy}",
        "followers_url": "https://api.github.com/users/dodomorandi/followers",
        "following_url": "https://api.github.com/users/dodomorandi/following{/other_user}",
        "gists_url": "https://api.github.com/users/dodomorandi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dodomorandi",
        "id": 350168,
        "login": "dodomorandi",
        "node_id": "MDQ6VXNlcjM1MDE2OA==",
        "organizations_url": "https://api.github.com/users/dodomorandi/orgs",
        "received_events_url": "https://api.github.com/users/dodomorandi/received_events",
        "repos_url": "https://api.github.com/users/dodomorandi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dodomorandi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dodomorandi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dodomorandi",
        "user_view_type": "public"
    }
}