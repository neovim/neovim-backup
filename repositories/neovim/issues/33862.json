{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI noticed 'gf' was no longer working while working on some wezterm modules. So there are two (maybe more) problems with the `vim._ftplugin.lua` code, specifically:\n\nhttps://github.com/neovim/neovim/blame/1e7406fa38eef8cb9812272196a97cf530218c4e/runtime/lua/vim/_ftplugin/lua.lua#L10C11-L10C11\n\n1. Hardcoding 'lua/' directory as search location for modules doesn't work for Wezterm (which looks in `plugins/` relative to config file, not `lua/plugins/` like this code assumes), and\n2. Hardcoding like this is not honouring any local `set path+=` I have done to add specific places to look when doing `gf` and friends.\n\n@brianhuster \n\n\n\n### Steps to reproduce\n\n```\ncd /tmp\nmkdir plugins\ntouch plugins/gohere.lua\nnvim --clean\n```\n\nin neovim:\n\n```\n:set path+=plugins/\n:e test.lua\n```\n\ninput text:\n```\nrequire('plugins.gohere')\n```\n\ntry `gf` on it, you should get `E447: Can't find file \"plugins.gohere\" in path`. Check `:set path?` and\nyou should have `path=.,,,plugins/`\n\nThis works in Vim, but not in Neovim because of `:e $VIMRUNTIME/lua/vim/_ftplugin/lua.lua`\n\n\n### Expected behavior\n\n`gf` to honour any `path` set by the user, and to not assume user is using lua in neovim codebase.\n\n### Nvim version (nvim -v)\n\nnightly\n\n### Vim (not Nvim) behaves the same?\n\nNo, latest Vim does not have this special lua file\n\n### Operating system/version\n\nDebian buster\n\n### Terminal name/version\n\nalacritty\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nsource build",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "@brianhuster ",
            "created_at": "2025-05-05T18:42:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/33862#issuecomment-2851988600",
            "id": 2851988600,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33862",
            "node_id": "IC_kwDOAPphoM6p_eR4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2851988600/reactions"
            },
            "updated_at": "2025-05-05T18:42:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2851988600",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes, intentionally that function supports Nvim favor of Lua only (you can see it uses `vim.loader`, which is specific in Nvim Lua environment). If you read `news-0.11.txt`, you'll also see it says that `gf` in Lua buffers can go to Lua modules in `'runtimepath'` and `'packpath'`, which should implies that the feature is made for Nvim-specific Lua.\n\nI also wrote an `'includeexpr'` for general Lua in `$VIMRUNTIME/ftplugin/lua.vim`, you can copy it to your config in `after/` directory if you want Vim behavior. Anyway, that Vimscript function has never been made default `'includeexpr'` for Lua in any Nvim's stable release.\n\nNvim is the only environment I write Lua for, so I'm not sure how I could satisfy both Lua developers and people who only use Lua to configure Nvim. Please share your ideas to improve the `'includeexpr'` in `lua.lua`.",
            "created_at": "2025-05-05T19:06:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/33862#issuecomment-2852061332",
            "id": 2852061332,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33862",
            "node_id": "IC_kwDOAPphoM6p_wCU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2852061332/reactions"
            },
            "updated_at": "2025-05-05T19:21:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2852061332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "so this is a regression?\n\n\n\n> not sure how I could satisfy both Lua developers and people who only use Lua to configure Nvim.\n\nCan it try multiple path permutations? If a path exists with/without `lua/` or whatever, it should always be found. The only tricky part is deciding a *tie breaker* situation. it should never fail to find something that exists. \n\n(And when trying 'path' permutations, it's \"first wins\".)",
            "created_at": "2025-05-05T19:50:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/33862#issuecomment-2852167023",
            "id": 2852167023,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33862",
            "node_id": "IC_kwDOAPphoM6qAJ1v",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2852167023/reactions"
            },
            "updated_at": "2025-05-05T23:58:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2852167023",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> so this is a regression?\n\nIt's a regression, yes. If the solution as is stands now is what we want, it should've been marked breaking change in news-0.11.txt, right now it's under \"New Features\".\n\n> you can copy it to your config in after/ directory if you want Vim behavior. \n\nI'm aware, and I have for the moment done that to workaround the poor new default behaviour of `gf` in lua files. The new includeexpr has broken the ability to use 'path' option, as it doesn't even consult that user option when trying to find a module.",
            "created_at": "2025-05-05T20:44:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/33862#issuecomment-2852290844",
            "id": 2852290844,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33862",
            "node_id": "IC_kwDOAPphoM6qAoEc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2852290844/reactions"
            },
            "updated_at": "2025-05-05T20:44:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2852290844",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7416158?v=4",
                "events_url": "https://api.github.com/users/craigmac/events{/privacy}",
                "followers_url": "https://api.github.com/users/craigmac/followers",
                "following_url": "https://api.github.com/users/craigmac/following{/other_user}",
                "gists_url": "https://api.github.com/users/craigmac/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/craigmac",
                "id": 7416158,
                "login": "craigmac",
                "node_id": "MDQ6VXNlcjc0MTYxNTg=",
                "organizations_url": "https://api.github.com/users/craigmac/orgs",
                "received_events_url": "https://api.github.com/users/craigmac/received_events",
                "repos_url": "https://api.github.com/users/craigmac/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/craigmac/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/craigmac/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/craigmac",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's a regression, yes.\n\n@craigmac It is not. The includeexpr for Lua that Neovim inherited from Vim had never even worked until I sent this patch https://github.com/neovim/neovim/pull/32680. However, that patch has never had a chance to be default in any stable release of Nvim because just 2 weeks later, this PR https://github.com/neovim/neovim/pull/32719 was merged",
            "created_at": "2025-05-06T01:16:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/33862#issuecomment-2852897438",
            "id": 2852897438,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33862",
            "node_id": "IC_kwDOAPphoM6qC8Ke",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2852897438/reactions"
            },
            "updated_at": "2025-05-06T02:33:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2852897438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The new includeexpr has broken the ability to use 'path' option, as it doesn't even consult that user option when trying to find a module.\n\nIt doesn't break it, `gf` always tries `'path'`, `'suffixesadd'` before it even looks at `'includeexpr'`. If it doesn't, then it's a bug in `gf`, not in `'includeexpr'`\n\nIn your repro step, you `set path+=plugins/`, but you require the module as `require('plugins.gohere')`. Of that that would not and has never worked in Nvim (it works in Vim, but that's not related to the `'path'` option that includes `'plugins/'`). If you want Nvim to be able to locate file `plugins/gohere.lua` with `set path+=plugins/`, you should just `require('gohere')`",
            "created_at": "2025-05-06T01:27:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/33862#issuecomment-2852950121",
            "id": 2852950121,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33862",
            "node_id": "IC_kwDOAPphoM6qDJBp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2852950121/reactions"
            },
            "updated_at": "2025-05-06T02:11:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2852950121",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33862/comments",
    "created_at": "2025-05-05T18:34:11Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33862/events",
    "html_url": "https://github.com/neovim/neovim/issues/33862",
    "id": 3040482421,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33862/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM61OhR1",
    "number": 33862,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33862/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33862/timeline",
    "title": "includeexpr for lua filetypes does not honour `path` and assumes lua directory for modules",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-06T02:33:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33862",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7416158?v=4",
        "events_url": "https://api.github.com/users/craigmac/events{/privacy}",
        "followers_url": "https://api.github.com/users/craigmac/followers",
        "following_url": "https://api.github.com/users/craigmac/following{/other_user}",
        "gists_url": "https://api.github.com/users/craigmac/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/craigmac",
        "id": 7416158,
        "login": "craigmac",
        "node_id": "MDQ6VXNlcjc0MTYxNTg=",
        "organizations_url": "https://api.github.com/users/craigmac/orgs",
        "received_events_url": "https://api.github.com/users/craigmac/received_events",
        "repos_url": "https://api.github.com/users/craigmac/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/craigmac/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/craigmac/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/craigmac",
        "user_view_type": "public"
    }
}