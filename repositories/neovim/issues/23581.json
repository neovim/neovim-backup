{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nAutocmd callbacks don't receive a window or win id. For example, this makes it very difficult, if not impossible, to correctly detect which window an option was set in when using an `OptionSet` autocmd.\r\n\r\nI have a couple different use-cases atm. One is to refrain from setting (window) options if the opt in question was last set from a modeline. AFAIK, the only way to detect this is to use an `OptionSet` autocmd, which will tell you how the option was set (e.g. `modeline`), but not which window it was set on (am I to assume that it will simply always be the current window within/during the callback?). Yes, it already gives a buffer id as `buf`, but a buffer may have multiple windows, each with different window options, so a window id would be helpful here.\r\n\r\n### Expected behavior\r\n\r\nSimilar to how we already have a `buf` field, give autocmd callback argument tables a `win` field denoting the relevant window. Optionally, do this for all autocmd events (or all where it would make sense), but at the very least, do it for `OptionSet`.\r\n\r\n---\r\n\r\nIt would also be helpful if `vim.api.nvim_get_option_info2()` included a field on the returned table/dict denoting whether the opt was last set from a modeline or not. It seems that the only way to do this currently is to either:\r\n\r\n- parse the string output of the vim cmd `verbose setlocal opt?`, or \r\n- manually keep a record by utilizing an `OptionSet` autocmd",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> am I to assume that it will simply always be the current window within/during the callback?\r\n\r\nYes.",
            "created_at": "2023-05-11T02:57:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/23581#issuecomment-1543258751",
            "id": 1543258751,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23581",
            "node_id": "IC_kwDOAPphoM5b_EJ_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543258751/reactions"
            },
            "updated_at": "2023-05-11T02:57:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543258751",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > am I to assume that it will simply always be the current window within/during the callback?\r\n> \r\n> Yes.\r\n\r\nOh interesting. Thank you, that's a good/helpful thing to know",
            "created_at": "2023-05-11T05:25:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/23581#issuecomment-1543358450",
            "id": 1543358450,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23581",
            "node_id": "IC_kwDOAPphoM5b_cfy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543358450/reactions"
            },
            "updated_at": "2023-05-11T05:26:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543358450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/45028928?v=4",
                "events_url": "https://api.github.com/users/tmillr/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmillr/followers",
                "following_url": "https://api.github.com/users/tmillr/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmillr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmillr",
                "id": 45028928,
                "login": "tmillr",
                "node_id": "MDQ6VXNlcjQ1MDI4OTI4",
                "organizations_url": "https://api.github.com/users/tmillr/orgs",
                "received_events_url": "https://api.github.com/users/tmillr/received_events",
                "repos_url": "https://api.github.com/users/tmillr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmillr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmillr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmillr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi, I just want to point out that I did encounter a probably identical issue just months ago.\r\n\r\n> am I to assume that it will simply always be the current window within/during the callback?\r\n> > Yes\".\r\n\r\nThis doesn't work for me. If this conclusion is true why I got this result:\r\n\r\n```\r\nDEBUG: cur_buf ~= args.buf detected\r\ncur_buf: 8, cur_win: 1005\r\nargs:\r\n{\r\n  buf = 667,\r\n  event = \"WinClosed\",\r\n  file = \"1663\",\r\n  group = 5,\r\n  id = 4,\r\n  match = \"1663\"\r\n}\r\n```\r\n\r\nwhich is an output of the following `autocmd`:\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd({ 'WinClosed' }, {\r\n  callback = function (args)\r\n    local cur_buf = vim.api.nvim_get_current_buf()\r\n    local cur_win = vim.api.nvim_get_current_win()\r\n\r\n    if cur_buf ~= args.buf then\r\n      print('DEBUG: cur_buf ~= args.buf detected')\r\n      print(string.format('cur_buf: %s, cur_win: %s', cur_buf, cur_win))\r\n      print('args:')\r\n      vim.print(args)\r\n      return true\r\n    end\r\n  end\r\n})\r\n```\r\n\r\nLet me explain what had happened:\r\n\r\n1. When some floating window is closing, `args.buf` can be different from the current buffer.\r\n2. By 1., it implies that inside an event like `WinClosed`, we cannot simply conclude that \r\n\r\n    > [...] assume that it will simply always be the current window within/during the callback.\r\n\r\n3. To reproduce it you will need to setup both an LSP, e.g. lua_ls, and the plugin [noice.nvim](https://github.com/folke/noice.nvim/tree/main/lua) with its [mini view](https://github.com/folke/noice.nvim#-views) enabled to the minimal script. The mini view will be shown when `LspStart`/`LspRestart` is triggered. Then, the autocmd provided above will be triggered when the mini view got updated.\r\n\r\nI'm sorry that I cannot help with the minimal script in this case, since my setup of LSPs depends on a set of community plugins around [mason.nvim](https://github.com/williamboman/mason.nvim) and I have a complex modular setup for nvim-lspconfig. But I believe every user of noice.nvim can reproduce it with the autocmd provided above.",
            "created_at": "2023-05-11T08:53:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/23581#issuecomment-1543601599",
            "id": 1543601599,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23581",
            "node_id": "IC_kwDOAPphoM5cAX2_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543601599/reactions"
            },
            "updated_at": "2023-05-11T09:01:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543601599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@nyngwang It's true only for some events. In case of `WinClosed` the window ID is in the `\"match\"` field, you just have to use `tonumber` to turn it into a number.",
            "created_at": "2023-05-28T12:37:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/23581#issuecomment-1566123870",
            "id": 1566123870,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23581",
            "node_id": "IC_kwDOAPphoM5dWSde",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566123870/reactions"
            },
            "updated_at": "2023-05-28T12:37:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566123870",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@ii14 But in the real case I provided above the current window upon the `WinClosed` event is `1005` while the `match` is `1663`, which is apparently different. So I still disagree with the conclusion:\r\n\r\n> \"[...] assume that it will simply always be the current window within/during the callback.\"\r\n\r\nIf this is true then why do they differ? Let me quote my example here for better referencing:\r\n\r\n```\r\nDEBUG: cur_buf ~= args.buf detected\r\ncur_buf: 8, cur_win: 1005\r\nargs:\r\n{\r\n  buf = 667,\r\n  event = \"WinClosed\",\r\n  file = \"1663\",\r\n  group = 5,\r\n  id = 4,\r\n  match = \"1663\"\r\n}\r\n```",
            "created_at": "2023-05-28T13:02:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/23581#issuecomment-1566134611",
            "id": 1566134611,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23581",
            "node_id": "IC_kwDOAPphoM5dWVFT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566134611/reactions"
            },
            "updated_at": "2023-05-28T13:05:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566134611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This was specifically in the context of OptionSet event, and you're talking about WinClosed event, so that's different. Events are inconsistent in this and it isn't great, but that's just how it works right now and it's hard to change anything without breaking compatibility. For OptionSet you just get the current window and for WinClosed you get the window ID from the \"match\" field.",
            "created_at": "2023-05-28T13:08:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/23581#issuecomment-1566136325",
            "id": 1566136325,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23581",
            "node_id": "IC_kwDOAPphoM5dWVgF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566136325/reactions"
            },
            "updated_at": "2023-05-28T13:08:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566136325",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This was specifically in the context of OptionSet event, and you're talking about WinClosed event, so that's different. Events are inconsistent in this and it isn't great, but that's just how it works right now and it's hard to change anything without breaking compatibility. For OptionSet you just get the current window and for WinClosed you get the window ID from the \"match\" field.\r\n\r\nYeah, that's why I was kinda surprised that `OptionSet` is actually called within the target window. If you read the docs, it seems to stress over and over how you cannot/shouldn't rely on the current buffer or window ever being the target buf/win. But w/e, at least it works for what I needed, even if it is awkward and confusing/inconsistent. It'd be less confusing and easier to work with if it were documented though.",
            "created_at": "2023-05-28T13:45:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/23581#issuecomment-1566146569",
            "id": 1566146569,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23581",
            "node_id": "IC_kwDOAPphoM5dWYAJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566146569/reactions"
            },
            "updated_at": "2023-05-28T13:46:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566146569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/45028928?v=4",
                "events_url": "https://api.github.com/users/tmillr/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmillr/followers",
                "following_url": "https://api.github.com/users/tmillr/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmillr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmillr",
                "id": 45028928,
                "login": "tmillr",
                "node_id": "MDQ6VXNlcjQ1MDI4OTI4",
                "organizations_url": "https://api.github.com/users/tmillr/orgs",
                "received_events_url": "https://api.github.com/users/tmillr/received_events",
                "repos_url": "https://api.github.com/users/tmillr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmillr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmillr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmillr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oh, autocommands can change the current window, so this may make sense.",
            "created_at": "2023-07-09T08:01:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/23581#issuecomment-1627640860",
            "id": 1627640860,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23581",
            "node_id": "IC_kwDOAPphoM5hA9Qc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1627640860/reactions"
            },
            "updated_at": "2023-07-09T08:01:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1627640860",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23581/comments",
    "created_at": "2023-05-11T02:47:34Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23581/events",
    "html_url": "https://github.com/neovim/neovim/issues/23581",
    "id": 1704957168,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23581/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5ln5Tw",
    "number": 23581,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 6,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 6,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23581/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23581/timeline",
    "title": "Give autocmd callback arg a `win` field",
    "updated_at": "2025-01-17T15:30:39Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23581",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/45028928?v=4",
        "events_url": "https://api.github.com/users/tmillr/events{/privacy}",
        "followers_url": "https://api.github.com/users/tmillr/followers",
        "following_url": "https://api.github.com/users/tmillr/following{/other_user}",
        "gists_url": "https://api.github.com/users/tmillr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tmillr",
        "id": 45028928,
        "login": "tmillr",
        "node_id": "MDQ6VXNlcjQ1MDI4OTI4",
        "organizations_url": "https://api.github.com/users/tmillr/orgs",
        "received_events_url": "https://api.github.com/users/tmillr/received_events",
        "repos_url": "https://api.github.com/users/tmillr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tmillr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tmillr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tmillr",
        "user_view_type": "public"
    }
}