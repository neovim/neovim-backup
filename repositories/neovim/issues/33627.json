{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nRunning\n\n      :=vim.system({ 'bash', '-c', 'sleep 10 &'}):wait()\n\nwaits for the `sleep` to finish, even though it's been sent to background by shell process.\n\n### Steps to reproduce\n\n    nvim +'=vim.system({ \"bash\", \"-c\", \"sleep 5 &\" }):wait()' +quit\n\nObserve that above command causes Neovim to wait before quitting on v0.11+.\n\n### Expected behavior\n\n`vim.system` does not wait for background shell processes, similar to Neovim v0.10.x.\n\n### Nvim version (nvim -v)\n\n0.11.0 _and_ 0.12.0-dev-207+gac8ae1596c\n\n### Vim (not Nvim) behaves the same?\n\nN/A (Lua `vim.system` not part of Vim)\n\n### Operating system/version\n\nmacOS 15.3.2 (ARM)\n\n### Terminal name/version\n\niTerm2 3.5.13, GNU bash version 5.2.37(1)-release\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nHomebrew _and_ AppImage\n\n### Appendix\n\n* Could not find past issues with phrase \"is:issue vim.system\".\n* If it helps, my use case is to run a `break_timer.sh` script that pauses itself by sleeping in the background before restarting.\n\nThanks in advance for considering. Also not a blocker for me because I'm aware we can run `vim.system` asynchronously 🙂 (but wanted to raise in case of unexpected change).",
    "closed_at": "2025-06-07T14:49:07Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This seems caused by #31442",
            "created_at": "2025-04-25T06:26:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/33627#issuecomment-2829486660",
            "id": 2829486660,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33627",
            "node_id": "IC_kwDOAPphoM6opopE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2829486660/reactions"
            },
            "updated_at": "2025-04-25T06:27:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2829486660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Why would this not be expected? You explicitly called `:wait()`. If the parent `bash` process didn't exit, how is Nvim supposed to know that it started a backgrounded child job?",
            "created_at": "2025-04-25T12:35:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/33627#issuecomment-2830308595",
            "id": 2830308595,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33627",
            "node_id": "IC_kwDOAPphoM6osxTz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2830308595/reactions"
            },
            "updated_at": "2025-04-25T12:35:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2830308595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Not that familiar with shell job control, so feel free to correct me...\n\nI thought the Bash process did exit in this case. It seems to leave the backgrounded child job to be inherited by `init`, as per [StackOverflow: Why Bash Parent Process exits before its child when command is used in background in a Bash script?](https://unix.stackexchange.com/a/629916) [^1].\n\nWhen I tried testing this:\n\n![Two `bash` panes in iTerm2 showing job control testing of parent process when shell immediately exits.](https://github.com/user-attachments/assets/c909a726-456d-4b0b-8627-bc5ec85ff3cb)\n\n_Ref 1. Two `bash` panes in iTerm2 showing job control testing of parent process when shell immediately exits._\n\n~~~\n10:52:03 $ ps -ef | { head -1 ; grep sleep; }\n  UID   PID  PPID   C STIME   TTY           TIME CMD\n  501 16275 15853   0 10:52AM ttys001    0:00.01 sleep 10\n~~~\n\n_Ref 2. Process list during `sleep 10` [^2]. Note the parent process ID (PPID) is not 1._\n\n~~~\n10:52:07 $ ps -ef | { head -1 ; grep sleep; }\n  UID   PID  PPID   C STIME   TTY           TIME CMD\n  501 16305     1   0 10:52AM ??         0:00.00 sleep 10\n~~~\n\n_Ref 3. Process list when exiting immediately after `sleep 10 &`._\n\n![Two `bash` panes showing `bash -c` runs of `sleep 10` and `sleep 10 &`, along with their associated parent processes.](https://github.com/user-attachments/assets/2bd32911-82c3-4861-8020-fff99fb91838)\n\n_Ref 4. Two `bash` panes showing `bash -c` runs of `sleep 10` and `sleep 10 &`, along with their associated parent processes._\n\n[^1]: `man bash` doesn't seem to explicitly mention what happens to background child jobs when shell exits.\n[^2]: Unrelated but [StackOverflow: Include header in the 'grep' result](https://stackoverflow.com/a/19356846) describes the `ps -ef | { head -1; grep sleep }` trick.",
            "created_at": "2025-04-25T23:09:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/33627#issuecomment-2831581979",
            "id": 2831581979,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33627",
            "node_id": "IC_kwDOAPphoM6oxoMb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2831581979/reactions"
            },
            "updated_at": "2025-04-26T09:15:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2831581979",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49044752?v=4",
                "events_url": "https://api.github.com/users/ss-raicangu/events{/privacy}",
                "followers_url": "https://api.github.com/users/ss-raicangu/followers",
                "following_url": "https://api.github.com/users/ss-raicangu/following{/other_user}",
                "gists_url": "https://api.github.com/users/ss-raicangu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ss-raicangu",
                "id": 49044752,
                "login": "ss-raicangu",
                "node_id": "MDQ6VXNlcjQ5MDQ0NzUy",
                "organizations_url": "https://api.github.com/users/ss-raicangu/orgs",
                "received_events_url": "https://api.github.com/users/ss-raicangu/received_events",
                "repos_url": "https://api.github.com/users/ss-raicangu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ss-raicangu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ss-raicangu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ss-raicangu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Why would this not be expected? You explicitly called :wait().\n\nThat said, this is a good point 🙏 . Just realised I don't actually need to wait for my script to finish.\n\n~~~lua\nif vim.fn.executable('break_timer.sh') == 1 then\n\tvim.notify('Pausing `break_timer.sh` for ' .. duration_sec .. ' seconds.',\n\t\tvim.log.levels.DEBUG)\n\tvim.system({\n\t\t'break_timer.sh',\n\t\t'pause',\n\t\tstring.format('%d', duration_sec / 60),\n\t}, { text = true }):wait()\nelse\n\tvim.notify('break_timer.sh not executable', vim.log.levels.DEBUG)\nend\n\n-- Some other mapping-related code follows but none that relies on `break_timer.sh` finishing...\n~~~\n\n_Ref 1. Relevant block in my Neovim config, within a mapping to pause `break_timer.sh`._\n\n~~~bash\n# Stop timer\nlaunchctl bootout gui/501 .../break_timer.plist\n# Restart timer after sleeping for 20m in background\n{ sleep $(( 20 * 60 )) && launchctl bootstrap gui/501 .../break_timer.plist; } &\n~~~\n\n_Ref 2. This is essentially what the `break_timer.sh pause` script does. The reason for sending to background inside `break_timer.sh` was to use it interactively at prompt._",
            "created_at": "2025-04-25T23:31:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/33627#issuecomment-2831605221",
            "id": 2831605221,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33627",
            "node_id": "IC_kwDOAPphoM6oxt3l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2831605221/reactions"
            },
            "updated_at": "2025-04-26T22:25:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2831605221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49044752?v=4",
                "events_url": "https://api.github.com/users/ss-raicangu/events{/privacy}",
                "followers_url": "https://api.github.com/users/ss-raicangu/followers",
                "following_url": "https://api.github.com/users/ss-raicangu/following{/other_user}",
                "gists_url": "https://api.github.com/users/ss-raicangu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ss-raicangu",
                "id": 49044752,
                "login": "ss-raicangu",
                "node_id": "MDQ6VXNlcjQ5MDQ0NzUy",
                "organizations_url": "https://api.github.com/users/ss-raicangu/orgs",
                "received_events_url": "https://api.github.com/users/ss-raicangu/received_events",
                "repos_url": "https://api.github.com/users/ss-raicangu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ss-raicangu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ss-raicangu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ss-raicangu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> the Bash process did exit in this case.\n\nOk. Given #31442, does that mean `bash` didn't close some handles, which Nvim is waiting on? That might be a bash quirk, i.e. background subprocesses created by other programs which exit, may not have this issue.\n\nThen we have these options:\n\n- document that `:wait()` (also) waits for handles to close\n- see if there is some detail in #31442 that we missed",
            "created_at": "2025-04-26T12:26:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/33627#issuecomment-2832111238",
            "id": 2832111238,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33627",
            "node_id": "IC_kwDOAPphoM6ozpaG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832111238/reactions"
            },
            "updated_at": "2025-04-26T12:26:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832111238",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> That might be a bash quirk\n\nFYI: Also happens with ZSH, dash, and Python.\n\n~~~\n:=vim.system({ 'zsh', '-c', 'sleep 10 &' }):wait()\n~~~\n\n_Ref 1. `zsh 5.9` attempt waits._\n\n~~~\n:=vim.system({ 'dash', '-c', 'sleep 10 &' }):wait()\n~~~\n\n_Ref 2. `dash` attempt waits._\n\n~~~python\n#!/usr/bin/env python3\n\nimport subprocess\n\nsubprocess.Popen(['sleep', '10'])\n~~~\n\n_Ref 3. Given above Python 3.13.3 executable script (`chmod u+x`), ..._\n\n~~~\n:=vim.system({ './test.py' }):wait()\n~~~\n\n_Ref 4. ... this command also waits._",
            "created_at": "2025-04-26T21:15:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/33627#issuecomment-2832623709",
            "id": 2832623709,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33627",
            "node_id": "IC_kwDOAPphoM6o1mhd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832623709/reactions"
            },
            "updated_at": "2025-04-26T22:14:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832623709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49044752?v=4",
                "events_url": "https://api.github.com/users/ss-raicangu/events{/privacy}",
                "followers_url": "https://api.github.com/users/ss-raicangu/followers",
                "following_url": "https://api.github.com/users/ss-raicangu/following{/other_user}",
                "gists_url": "https://api.github.com/users/ss-raicangu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ss-raicangu",
                "id": 49044752,
                "login": "ss-raicangu",
                "node_id": "MDQ6VXNlcjQ5MDQ0NzUy",
                "organizations_url": "https://api.github.com/users/ss-raicangu/orgs",
                "received_events_url": "https://api.github.com/users/ss-raicangu/received_events",
                "repos_url": "https://api.github.com/users/ss-raicangu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ss-raicangu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ss-raicangu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ss-raicangu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> FYI: Also happens with ZSH, dash, and Python.\n\nYeah, that's expected. Shells, especially posix-like shells (even fish), all tend to have the same quirks, for compatibility with cli tools, which expect things to work in a very specific way.",
            "created_at": "2025-04-26T22:14:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/33627#issuecomment-2832655771",
            "id": 2832655771,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33627",
            "node_id": "IC_kwDOAPphoM6o1uWb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832655771/reactions"
            },
            "updated_at": "2025-04-26T22:14:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832655771",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Wanted to do my own investigation for a bit 🙂 . Basically stating what both of you already suspected 😅 .\n\n---\n\n> This seems caused by <https://github.com/neovim/neovim/pull/31442>\n\n> Given <https://github.com/neovim/neovim/pull/31442>, does that mean bash didn't close some handles, which Nvim is waiting on?\n\nConfirming these statements as true.\n\n---\n\n* Problem does not exist after building NVIM v0.11.0-dev-56d11b494b (parent commit of PR merge) from source...\n* ... but appears on NVIM v0.11.0-dev-734dba04d1.\n\n---\n\n~~~diff\ndiff --git a/runtime/lua/vim/_system.lua b/runtime/lua/vim/_system.lua\nindex 947aa5c86f..81a9ac5422 100644\n--- a/runtime/lua/vim/_system.lua\n+++ b/runtime/lua/vim/_system.lua\n@@ -270,6 +270,8 @@ end\n local function _on_exit(state, code, signal, on_exit)\n   close_handle(state.handle)\n   close_handle(state.stdin)\n+  close_handle(state.stdout)\n+  close_handle(state.stderr)\n   close_handle(state.timer)\n \n   -- #30846: Do not close stdout/stderr here, as they may still have data to\n~~~\n\n_Ref 1. Closing handles resolves this but that can't be done without reintroducing earlier bug, which I think is better to prevent._\n\n---\n\n    :=vim.system({ 'bash', '-c', 'sleep 10 &>/dev/null &' }):wait()\n\n_Ref 2. Deliberately redirecting both stdout and stderr to `/dev/null` [edit: or any other file, away from `stdout`] makes Neovim immediately finish command. That is, it does not wait._",
            "created_at": "2025-04-27T04:01:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/33627#issuecomment-2832991437",
            "id": 2832991437,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33627",
            "node_id": "IC_kwDOAPphoM6o3ATN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832991437/reactions"
            },
            "updated_at": "2025-04-27T04:23:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832991437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49044752?v=4",
                "events_url": "https://api.github.com/users/ss-raicangu/events{/privacy}",
                "followers_url": "https://api.github.com/users/ss-raicangu/followers",
                "following_url": "https://api.github.com/users/ss-raicangu/following{/other_user}",
                "gists_url": "https://api.github.com/users/ss-raicangu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ss-raicangu",
                "id": 49044752,
                "login": "ss-raicangu",
                "node_id": "MDQ6VXNlcjQ5MDQ0NzUy",
                "organizations_url": "https://api.github.com/users/ss-raicangu/orgs",
                "received_events_url": "https://api.github.com/users/ss-raicangu/received_events",
                "repos_url": "https://api.github.com/users/ss-raicangu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ss-raicangu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ss-raicangu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ss-raicangu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You can also just set `stdout` and `stderr` to `false`.\n\nI'm not sure there's a bug here. Seems like a usage issue.",
            "created_at": "2025-04-28T10:47:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/33627#issuecomment-2834840178",
            "id": 2834840178,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33627",
            "node_id": "IC_kwDOAPphoM6o-Dpy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2834840178/reactions"
            },
            "updated_at": "2025-04-28T10:47:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2834840178",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You can also just set `stdout` and `stderr` to `false`.\n\n😮 Didn't realise. Yep, that also works.\n\nI'm happy for this issue to be closed. Thanks for spending time to help me 🙏 .\n\n---\n\nAlso noticed the `documentation` label. Possibly the following change could work? But I also think the existing documentation is sufficient now.\n\n~~~diff\ndiff --git a/runtime/doc/lua.txt b/runtime/doc/lua.txt\nindex 725b1a0f6f..8fc4bf0dd1 100644\n--- a/runtime/doc/lua.txt\n+++ b/runtime/doc/lua.txt\n@@ -1813,10 +1813,11 @@ vim.system({cmd}, {opts}, {on_exit})                            *vim.system()*\n         (`vim.SystemObj`) Object with the fields:\n         • cmd (string[]) Command name and args\n         • pid (integer) Process ID\n-        • wait (fun(timeout: integer|nil): SystemCompleted) Wait for the\n-          process to complete. Upon timeout the process is sent the KILL\n-          signal (9) and the exit code is set to 124. Cannot be called in\n-          |api-fast|.\n+\t• wait (fun(timeout: integer|nil): SystemCompleted) Wait for the\n+\t  process to complete, including any open handles for background\n+\t  processes (e.g., `bash -c 'sleep 10 &'`). Upon timeout the process\n+\t  is sent the KILL signal (9) and the exit code is set to 124. Cannot\n+\t  be called in |api-fast|.\n           • SystemCompleted is an object with the fields:\n             • code: (integer)\n             • signal: (integer)\n~~~",
            "created_at": "2025-04-28T22:32:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/33627#issuecomment-2836896248",
            "id": 2836896248,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33627",
            "node_id": "IC_kwDOAPphoM6pF5n4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2836896248/reactions"
            },
            "updated_at": "2025-04-28T22:32:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2836896248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49044752?v=4",
                "events_url": "https://api.github.com/users/ss-raicangu/events{/privacy}",
                "followers_url": "https://api.github.com/users/ss-raicangu/followers",
                "following_url": "https://api.github.com/users/ss-raicangu/following{/other_user}",
                "gists_url": "https://api.github.com/users/ss-raicangu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ss-raicangu",
                "id": 49044752,
                "login": "ss-raicangu",
                "node_id": "MDQ6VXNlcjQ5MDQ0NzUy",
                "organizations_url": "https://api.github.com/users/ss-raicangu/orgs",
                "received_events_url": "https://api.github.com/users/ss-raicangu/received_events",
                "repos_url": "https://api.github.com/users/ss-raicangu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ss-raicangu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ss-raicangu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ss-raicangu",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33627/comments",
    "created_at": "2025-04-25T06:21:32Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33627/events",
    "html_url": "https://github.com/neovim/neovim/issues/33627",
    "id": 3019105295,
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33627/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 722,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 633,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-06-09T14:14:52Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6z8-QP",
    "number": 33627,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33627/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33627/timeline",
    "title": "`vim.system():wait()` waits for commands, despite running in background via shell `-c`",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-07T14:49:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33627",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/49044752?v=4",
        "events_url": "https://api.github.com/users/ss-raicangu/events{/privacy}",
        "followers_url": "https://api.github.com/users/ss-raicangu/followers",
        "following_url": "https://api.github.com/users/ss-raicangu/following{/other_user}",
        "gists_url": "https://api.github.com/users/ss-raicangu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ss-raicangu",
        "id": 49044752,
        "login": "ss-raicangu",
        "node_id": "MDQ6VXNlcjQ5MDQ0NzUy",
        "organizations_url": "https://api.github.com/users/ss-raicangu/orgs",
        "received_events_url": "https://api.github.com/users/ss-raicangu/received_events",
        "repos_url": "https://api.github.com/users/ss-raicangu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ss-raicangu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ss-raicangu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ss-raicangu",
        "user_view_type": "public"
    }
}