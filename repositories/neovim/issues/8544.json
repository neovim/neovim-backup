{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hello,\r\n\r\nI know this somewhat planned https://www.reddit.com/r/neovim/comments/2zm7s1/what_neovim_feature_will_do_you_get_the_most/cpl2t36\r\n\r\nBut I wanted to start discussions and possible design for this.\r\n\r\nI am pretty sure this will be hugely inspired by https://github.com/kana/vim-textobj-user and projects based on it.\r\n\r\nDesign proposed by deleted user https://github.com/wellle/targets.vim/issues/14#issuecomment-68344944\r\n\r\n**Here are some useful links**\r\nhttp://vim.wikia.com/wiki/Creating_new_text_objects\r\nhttp://vim.wikia.com/wiki/Indent_text_object\r\nhttps://github.com/inkarkat/vim-CountJump\r\nhttps://github.com/kana/vim-textobj-user/wiki\r\n\r\n**Example of projects that will definitely benefit from unified text objects interface**\r\nhttps://github.com/tpope/vim-surround\r\nhttps://github.com/wellle/targets.vim\r\nhttps://github.com/bkad/CamelCaseMotion\r\nhttps://github.com/tweekmonster/braceless.vim\r\n\r\nWhat I personally would like to see, is ability to have text-objects based on filetype and very easy interface of defining new ones. ",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Also very useful would be to have a generic way of moving to beginning/end of next/previous text object.",
            "created_at": "2018-06-13T15:04:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/8544#issuecomment-396971027",
            "id": 396971027,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8544",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk3MTAyNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/396971027/reactions"
            },
            "updated_at": "2018-06-13T15:04:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/396971027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4336260?v=4",
                "events_url": "https://api.github.com/users/stellarhoof/events{/privacy}",
                "followers_url": "https://api.github.com/users/stellarhoof/followers",
                "following_url": "https://api.github.com/users/stellarhoof/following{/other_user}",
                "gists_url": "https://api.github.com/users/stellarhoof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stellarhoof",
                "id": 4336260,
                "login": "stellarhoof",
                "node_id": "MDQ6VXNlcjQzMzYyNjA=",
                "organizations_url": "https://api.github.com/users/stellarhoof/orgs",
                "received_events_url": "https://api.github.com/users/stellarhoof/received_events",
                "repos_url": "https://api.github.com/users/stellarhoof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stellarhoof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stellarhoof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stellarhoof",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/kana/vim-textobj-user is completely useless. See @tpope plugins for a nice pattern for defining text objects, here's a complete [example](https://github.com/tpope/vim-jdaddy/blob/fccddca8092ca3dfa843e9e33fc7be8c8ef1c727/autoload/jdaddy.vim#L76-L87):\r\n\r\n```vim\r\nnnoremap <silent> gqaj :exe jdaddy#reformat('jdaddy#outer_pos', v:count1)<CR>\r\nfunction! jdaddy#outer_pos(...) abort\r\n  if getline('.')[col('.')-1] =~# '[]}]'\r\n    let [lclose, cclose] = [line('.'), col('.')]\r\n  else\r\n    let [lclose, cclose] = searchpairpos('[[{]', '', '[]}]', 'r')\r\n  endif\r\n  let [lopen, copen] = searchpairpos('[[{]', '', '[]}]', 'rb')\r\n  if lopen && lclose\r\n    return [lopen, copen, lclose, cclose]\r\n  endif\r\n  return [0, 0, 0, 0]\r\nendfunction\r\n```\r\n\r\nI also don't find https://github.com/kana/vim-textobj-user \"very easy\" and unless someone proposes a complete design for what this actually means, we're just hand waving.\r\n\r\n\r\n",
            "created_at": "2018-06-13T16:51:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/8544#issuecomment-397008923",
            "id": 397008923,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8544",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAwODkyMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397008923/reactions"
            },
            "updated_at": "2018-06-17T10:03:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397008923",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/wellle/targets.vim/issues/14#issuecomment-68344944 doesn't define a concrete API, and seems to be asking for a more generic text annotation / syntax / AST API. \r\n\r\nWe do discuss this elsewhere.\r\n\r\nBut text objects are a more specific concept.\r\n\r\n>  generic way of moving to beginning/end of next/previous text object.\r\n\r\nThere are potentially text objects at almost every byte of a buffer. \r\n\r\nI guess what you want is an API to iterate them, or manipulate them. Could be interesting, but effort is probably better spent on a syntax API, which is a general way to achieve a similar goal.\r\n\r\nImagine if you could operate on syntax groups *as text objects*.\r\n\r\nThis is definitely a long term goal.",
            "created_at": "2018-06-13T17:04:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/8544#issuecomment-397012781",
            "id": 397012781,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8544",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAxMjc4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397012781/reactions"
            },
            "updated_at": "2018-06-13T17:04:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397012781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk Yes, it doesn't but it does correct separation of abstractions.\r\n\r\nI don't think syntax API will help fully achieve this because for example as far as I know there is no syntax groups for sentences or paragraphs for example. But yes this could be helpful.\r\n\r\nI think this could be implemented in few stages, for example we could start with custom actions here is plugin for reference https://vim8.org/scripts/script.php?script_id=4005\r\n\r\nMaybe there should new keyword for mapping new actions like `amap` it will accept keys and function. Function will get `text, start, end, input` as arguments\r\n\r\n`text` - is text we are operating on\r\n`start` - start position\r\n`end` - end position\r\n`input` - bool, true if should accept additional input after motion\r\n\r\n```\r\nfunction! Surround( text, strart, end, input ) \r\n    # return result of surround\r\nendfunction \r\n\r\namap <Leader>s Surround \r\n```\r\nAnd this will allow calling `<Leader>sw'` to surround word with `'`. Or for example creating mapping  for commenting.\r\n\r\nAnd after that we could allow of creating custom text object selections as well as custom text objects in  similar manner as next step.\r\n\r\n```\r\nfunction! GetPythonClass( cursor ) \r\n    # return start and end position of new text object\r\nendfunction \r\ntomap <Leader>C GetPythonClass\r\n```\r\n\r\nand this could be used like this `da<Leader>C`",
            "created_at": "2018-06-15T03:49:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/8544#issuecomment-397505696",
            "id": 397505696,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8544",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzUwNTY5Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397505696/reactions"
            },
            "updated_at": "2018-06-15T03:49:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397505696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3041675?v=4",
                "events_url": "https://api.github.com/users/imomaliev/events{/privacy}",
                "followers_url": "https://api.github.com/users/imomaliev/followers",
                "following_url": "https://api.github.com/users/imomaliev/following{/other_user}",
                "gists_url": "https://api.github.com/users/imomaliev/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/imomaliev",
                "id": 3041675,
                "login": "imomaliev",
                "node_id": "MDQ6VXNlcjMwNDE2NzU=",
                "organizations_url": "https://api.github.com/users/imomaliev/orgs",
                "received_events_url": "https://api.github.com/users/imomaliev/received_events",
                "repos_url": "https://api.github.com/users/imomaliev/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/imomaliev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/imomaliev/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/imomaliev",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> there is no syntax groups for sentences or paragraphs for example.\r\n\r\nSyntax groups can define anything. \r\n\r\n\r\nFWIW Oni is exploring its own API outside of Nvim core. \r\n\r\nhttps://github.com/onivim/oni/pull/2319",
            "created_at": "2018-06-15T08:09:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/8544#issuecomment-397547019",
            "id": 397547019,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8544",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzU0NzAxOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397547019/reactions"
            },
            "updated_at": "2018-06-15T08:12:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397547019",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Syntax groups can define anything.\r\n\r\nHow about performance? Text objects are searched for precisely when they're needed, they're not parsed when a file is read. Unless there's a way of doing (scoped) syntax parsing on-demand (perhaps even reusing existing AST) I think this would be really expensive. Perhaps that's why this is a long term goal, since it can be considered adding semantic editing capabilities to nvim. Sort of like http://unisonweb.org/2016-03-16/semantic-vs-text.html#post-start",
            "created_at": "2018-06-17T04:03:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/8544#issuecomment-397853166",
            "id": 397853166,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8544",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzg1MzE2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397853166/reactions"
            },
            "updated_at": "2018-06-17T04:03:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397853166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4336260?v=4",
                "events_url": "https://api.github.com/users/stellarhoof/events{/privacy}",
                "followers_url": "https://api.github.com/users/stellarhoof/followers",
                "following_url": "https://api.github.com/users/stellarhoof/following{/other_user}",
                "gists_url": "https://api.github.com/users/stellarhoof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stellarhoof",
                "id": 4336260,
                "login": "stellarhoof",
                "node_id": "MDQ6VXNlcjQzMzYyNjA=",
                "organizations_url": "https://api.github.com/users/stellarhoof/orgs",
                "received_events_url": "https://api.github.com/users/stellarhoof/received_events",
                "repos_url": "https://api.github.com/users/stellarhoof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stellarhoof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stellarhoof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stellarhoof",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk Could you write little explanation or point me to existing docs about how current text objects work, by stages when they are parsed and what happens under the hood when you do some actions on them? ",
            "created_at": "2018-06-17T10:14:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/8544#issuecomment-397868759",
            "id": 397868759,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8544",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzg2ODc1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397868759/reactions"
            },
            "updated_at": "2018-06-17T10:14:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397868759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3041675?v=4",
                "events_url": "https://api.github.com/users/imomaliev/events{/privacy}",
                "followers_url": "https://api.github.com/users/imomaliev/followers",
                "following_url": "https://api.github.com/users/imomaliev/following{/other_user}",
                "gists_url": "https://api.github.com/users/imomaliev/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/imomaliev",
                "id": 3041675,
                "login": "imomaliev",
                "node_id": "MDQ6VXNlcjMwNDE2NzU=",
                "organizations_url": "https://api.github.com/users/imomaliev/orgs",
                "received_events_url": "https://api.github.com/users/imomaliev/received_events",
                "repos_url": "https://api.github.com/users/imomaliev/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/imomaliev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/imomaliev/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/imomaliev",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, I don't have time to do that. I updated [this comment](https://github.com/neovim/neovim/issues/8544#issuecomment-397008923) with an example. Best advice I can give is to learn by example.\r\n\r\nAny improvements to docs are welcome. It's a quirky API, but putting it into longer words or a more verbose API (like kana/vim-textobj-user) isn't going to make it 10x easier. It might make it 1.5x easier, or 2x easier, but it will still require some work to understand.",
            "created_at": "2018-06-17T10:16:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/8544#issuecomment-397868851",
            "id": 397868851,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8544",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzg2ODg1MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397868851/reactions"
            },
            "updated_at": "2018-06-17T10:18:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397868851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We can now create syntax text objects using tree sitter: https://github.com/nvim-treesitter/nvim-treesitter-textobjects",
            "created_at": "2022-08-06T22:26:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/8544#issuecomment-1207291827",
            "id": 1207291827,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8544",
            "node_id": "IC_kwDOAPphoM5H9c-z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1207291827/reactions"
            },
            "updated_at": "2022-08-06T22:26:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1207291827",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/8544/comments",
    "created_at": "2018-06-13T14:57:02Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/8544/events",
    "html_url": "https://github.com/neovim/neovim/issues/8544",
    "id": 332033651,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "needs a clear design proposal",
            "id": 124510010,
            "name": "needs:design",
            "node_id": "MDU6TGFiZWwxMjQ1MTAwMTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:design"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "regex syntax or non-regex parsing, lpeg, grammars",
            "id": 531600085,
            "name": "syntax",
            "node_id": "MDU6TGFiZWw1MzE2MDAwODU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/syntax"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/8544/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUzMzIwMzM2NTE=",
    "number": 8544,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 6,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 8,
        "url": "https://api.github.com/repos/neovim/neovim/issues/8544/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/8544/timeline",
    "title": "Custom text objects (or: syntax group as text object)",
    "updated_at": "2025-01-17T16:02:29Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/8544",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3041675?v=4",
        "events_url": "https://api.github.com/users/imomaliev/events{/privacy}",
        "followers_url": "https://api.github.com/users/imomaliev/followers",
        "following_url": "https://api.github.com/users/imomaliev/following{/other_user}",
        "gists_url": "https://api.github.com/users/imomaliev/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/imomaliev",
        "id": 3041675,
        "login": "imomaliev",
        "node_id": "MDQ6VXNlcjMwNDE2NzU=",
        "organizations_url": "https://api.github.com/users/imomaliev/orgs",
        "received_events_url": "https://api.github.com/users/imomaliev/received_events",
        "repos_url": "https://api.github.com/users/imomaliev/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/imomaliev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imomaliev/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/imomaliev",
        "user_view_type": "public"
    }
}