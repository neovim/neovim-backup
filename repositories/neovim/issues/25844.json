{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nI'm writing a plugin which uses autocommands for the `WinNew` and `WinClosed` events, and I need the window ID of opened and closed windows. It would be nice if the window IDs were passed in the callback argument table.\r\n\r\nExamples:\r\n- It's sort of done in `WinClosed`, with the ID of the window to be closed being passed in as a string in `ev.file` and `ev.match`. I'm not sure why it does this, perhaps an oversight when they were originally implemented in vim?\r\n\r\n- `WinClosed` doesn't pass the ID at all.\r\n\r\nIs there a reason this isn't already a thing? Am I misunderstanding the use of the callback argument?\r\n\r\n### Expected behavior\r\n\r\nWindow ID of window to be opened/closed should be passed as an integer in the callback event argument table.\r\nI found the documentation quite unclear on this, but I believe it should be passed as an integer in `ev.data`. This shouldn't break backwards compatibility, as this would simply be an addition to the current argument table.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Related: #23581",
            "created_at": "2023-10-30T22:21:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/25844#issuecomment-1786136504",
            "id": 1786136504,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25844",
            "node_id": "IC_kwDOAPphoM5qdke4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1786136504/reactions"
            },
            "updated_at": "2023-10-30T22:21:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1786136504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For reference from https://github.com/neovim/neovim/pull/26430#discussion_r1418087057 : \r\n\r\n> autocmds can change windows, so all _event context_ such as \"current window\" is relevant to pretty much any event, just like buffer (`<abuf>`).  Consider the following:\r\n> \r\n> ```vim\r\n> nvim --clean\r\n> :edit a\r\n> :rightbelow vsplit b\r\n> :wincmd w\r\n> :autocmd ColorScheme * wincmd w\r\n> :autocmd ColorScheme * echomsg 'win='..winnr() 'buf='..expand('<afile>')\r\n> :colorscheme blue\r\n> ```\r\n> \r\n> Even though the event triggered in window 1, the 2nd autocmd prints `win=2 buf=a`, it has no way of knowing the original window (but `<afile>` gives it the original buffer).\r\n\r\nSimilar to `<abuf>`, it seems to me that passing the \"window at trigger-time\" is useful for any event, not only `Win*` events, because autocmds can change windows.",
            "created_at": "2023-12-06T23:20:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/25844#issuecomment-1843845378",
            "id": 1843845378,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25844",
            "node_id": "IC_kwDOAPphoM5t5tkC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1843845378/reactions"
            },
            "updated_at": "2023-12-06T23:20:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1843845378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Had the same issue when trying to implement my plugin at https://github.com/fabiomcosta/sanfona.nvim/blob/main/lua/sanfona/init.lua#L202-L205\n\nFor WinClosed I use event.match, but for WinNew there is no good way to do that.\nOne alternative solution that Gemini gave me was:\n```lua\nmath.max(unpack(vim.api.nvim_list_wins()))\n```\n\nBut that's not particularly efficient and also relies on incremental winids, which will likely never change, but... it just feels like the event object should have this id, or at least there could be an API that would provide the id (less ideal, but still valid).",
            "created_at": "2025-08-05T02:13:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/25844#issuecomment-3153036359",
            "id": 3153036359,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25844",
            "node_id": "IC_kwDOAPphoM6774RH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3153036359/reactions"
            },
            "updated_at": "2025-08-05T02:14:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3153036359",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28530?v=4",
                "events_url": "https://api.github.com/users/fabiomcosta/events{/privacy}",
                "followers_url": "https://api.github.com/users/fabiomcosta/followers",
                "following_url": "https://api.github.com/users/fabiomcosta/following{/other_user}",
                "gists_url": "https://api.github.com/users/fabiomcosta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fabiomcosta",
                "id": 28530,
                "login": "fabiomcosta",
                "node_id": "MDQ6VXNlcjI4NTMw",
                "organizations_url": "https://api.github.com/users/fabiomcosta/orgs",
                "received_events_url": "https://api.github.com/users/fabiomcosta/received_events",
                "repos_url": "https://api.github.com/users/fabiomcosta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fabiomcosta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fabiomcosta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fabiomcosta",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25844/comments",
    "created_at": "2023-10-30T20:31:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25844/events",
    "html_url": "https://github.com/neovim/neovim/issues/25844",
    "id": 1969162338,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25844/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM51Xwhi",
    "number": 25844,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25844/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25844/timeline",
    "title": "Pass Window ID as event argument for autocommands",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-05T02:14:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25844",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/73707948?v=4",
        "events_url": "https://api.github.com/users/noahgitsham/events{/privacy}",
        "followers_url": "https://api.github.com/users/noahgitsham/followers",
        "following_url": "https://api.github.com/users/noahgitsham/following{/other_user}",
        "gists_url": "https://api.github.com/users/noahgitsham/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/noahgitsham",
        "id": 73707948,
        "login": "noahgitsham",
        "node_id": "MDQ6VXNlcjczNzA3OTQ4",
        "organizations_url": "https://api.github.com/users/noahgitsham/orgs",
        "received_events_url": "https://api.github.com/users/noahgitsham/received_events",
        "repos_url": "https://api.github.com/users/noahgitsham/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/noahgitsham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/noahgitsham/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/noahgitsham",
        "user_view_type": "public"
    }
}