{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nNvim already has support for `textDocument/diagnostic`, but with it, developer would only see issues in the files they had open. Changes in one file could introduce errors in other, unopened files, but the developer could remain unaware until those other files were opened.\n\nI think `quickfix` feature was created partly to target this problem, but it would be great to enhance it with LSP workspace diagnostics\n\nWorkspace diagnostics are also useful for [LLM](https://github.com/neovim/neovim/issues/32084), since many AI agents now support editing multiple files. I think it can also be used in a [well-formatted \"digest\" including the project tree](https://github.com/neovim/neovim/issues/32949)\n\n### Expected behavior\n- [Specification](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_diagnostic)\n- Users should be able to see workspace diagnostics either via the [file explorer](https://github.com/neovim/neovim/issues/32280) or in quickfix list\n- There should also be a function that returns workspace diagnostics as a Lua table so I can easily add it to LLM context\n\nWhat do you think @MariaSolOs ",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Sounds like a reasonable request to me. Tagging @lewis6991 @gpanders @mfussenegger and @justinmk for the bikeshedding discussion.",
            "created_at": "2025-05-30T05:13:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2921253117",
            "id": 2921253117,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6uHsj9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2921253117/reactions"
            },
            "updated_at": "2025-05-30T05:13:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2921253117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Support for this would be great for C# developers who are using the Roslyn LSP.  Some relevant discussion here: https://github.com/seblyng/roslyn.nvim/issues/32",
            "created_at": "2025-05-30T07:40:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2921495416",
            "id": 2921495416,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6uInt4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2921495416/reactions"
            },
            "updated_at": "2025-05-30T07:40:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2921495416",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11057096?v=4",
                "events_url": "https://api.github.com/users/cphorton/events{/privacy}",
                "followers_url": "https://api.github.com/users/cphorton/followers",
                "following_url": "https://api.github.com/users/cphorton/following{/other_user}",
                "gists_url": "https://api.github.com/users/cphorton/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cphorton",
                "id": 11057096,
                "login": "cphorton",
                "node_id": "MDQ6VXNlcjExMDU3MDk2",
                "organizations_url": "https://api.github.com/users/cphorton/orgs",
                "received_events_url": "https://api.github.com/users/cphorton/received_events",
                "repos_url": "https://api.github.com/users/cphorton/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cphorton/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cphorton/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cphorton",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * Users should be able to see workspace diagnostics either via the [file explorer](https://github.com/neovim/neovim/issues/32280) or in quickfix list\n> * There should also be a function that returns workspace diagnostics as a Lua table so I can easily add it to LLM context\n\nThose SGTM, though the file-explorer part should be ignored until we have a non-netrw answer for that.",
            "created_at": "2025-05-30T15:38:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2922729486",
            "id": 2922729486,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6uNVAO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2922729486/reactions"
            },
            "updated_at": "2025-05-30T15:38:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2922729486",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Summarizing some of the discussion I had on Matrix with @lewis6991 and @clason about the implementation details of this:\n\n- We would need a new `vim.lsp.workspace_diagnostics()` function that returns all workspace diagnostics as the current architecture of `vim.diagnostic` is mostly \"push\" and we would like to keep `vim.diagnostic.get()` sync.\n- `vim.lsp.workspace_diagnostics()` would call `vim.diagnostic.get()` and `vim.diagnostic.set()` to handle the results following the spec (\"diagnostics for a higher document version should win over those from a lower document version\" and \"diagnostics from a document pull should win over diagnostics from a workspace pull\").\n\nI'm happy to work on this, but before I start coding I would appreciate the input of @gpanders and @mfussenegger here too :)",
            "created_at": "2025-05-31T22:03:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2925802924",
            "id": 2925802924,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6uZDWs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 3,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2925802924/reactions"
            },
            "updated_at": "2025-05-31T22:03:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2925802924",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> need a new `vim.lsp.workspace_diagnostics()`\n\nnit: all of our current workspace-related functions are in `vim.lsp.buf`. The new one should go there too (or in `vim.lsp.diagnostic` ?), though it probably makes sense to introduce `vim.lsp.workspace` and relocate stuff there.",
            "created_at": "2025-06-01T15:40:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927434791",
            "id": 2927434791,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufRwn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927434791/reactions"
            },
            "updated_at": "2025-06-01T18:42:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927434791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If anything I'd prefer to move all the `vim.lsp.buf` functions into `vim.lsp`.\n\nWorkspace diagnostics also isn't related to any buffer so can't go there anyway.\n\nIt shouldn't go in `vim.diagnostic` as it just doesn't belong there. Vim.diagnostic does not make LSP requests",
            "created_at": "2025-06-01T15:44:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927441149",
            "id": 2927441149,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufTT9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927441149/reactions"
            },
            "updated_at": "2025-06-01T18:42:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927441149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To quote from the docs:\n\n> The `vim.lsp.buf_…` functions perform operations for LSP clients attached to the current buffer.\n\nSo it's not about \"buffer functions\" but about all client functions for the current buffer, which makes it an appropriate place for requesting workspace diagnostics. (Of course, this becomes iffy with multiple clients per buffer...)\n\nIt's for sure not the most fortunate name for that module. Maybe we can find a better one to shove all client functions (buffer or workspace) under (keeping `buf` around as a compat shim)? (`lsp.client` or `lsp.request` come to mind)",
            "created_at": "2025-06-01T15:49:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927445199",
            "id": 2927445199,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufUTP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927445199/reactions"
            },
            "updated_at": "2025-06-01T18:42:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927445199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It shouldn't go in `vim.diagnostic` as it just doesn't belong there. Vim.diagnostic does not make LSP requests\n\nThis feels like an implementation detail though. From a public API standpoint, it does feel strange to have a diagnostic function outside `vim.diagnostic`.",
            "created_at": "2025-06-01T16:07:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927468264",
            "id": 2927468264,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufZ7o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927468264/reactions"
            },
            "updated_at": "2025-06-01T18:41:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927468264",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It’s not an implementation detail. In the old days, diagnostics and LSP were intertwined. It was messy and there was no clean way to add diagnostics from non-LSP sources. Dedicated plugins existed solely to shim non-LSP diagnostics into LSP.\n\nvim.diagnostic was created with the clear intent of separating generic diagnostics (which can come from anywhere, including but not limited to LSP) from LSP diagnostics. If we start adding LSP-isms back into vim.diagnostic then we are just moving backward to the point where we didn’t have a clear abstraction boundary between separate ideas.\n\nIt’s fine to have diagnostics functions under vim.lsp that are specific to LSP diagnostics. We already have a whole file dedicated to that. ",
            "created_at": "2025-06-01T16:21:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927484134",
            "id": 2927484134,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufdzm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927484134/reactions"
            },
            "updated_at": "2025-06-01T16:21:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927484134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This feels like an implementation detail though. From a public API standpoint, it does feel strange to have a diagnostic function outside vim.diagnostic.\n\nIt is not. It is a specific design detail of the interface. We discussed this at length and how to address it. At the moment `vim.diagnostic` just stores diagnostics that are pushed to it via `vim.diagnostic.set()` which can then be retrieved via `vim.diagnostic.get()`. There is no public or even private API for `vim.diagnostic` to pull diagnostics.",
            "created_at": "2025-06-01T16:23:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927485660",
            "id": 2927485660,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufeLc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927485660/reactions"
            },
            "updated_at": "2025-06-01T18:41:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927485660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Fair enough. Thank you @gpanders and @lewis6991 for explaining. I apologize if I'm being slow in understanding the design decisions here, but as someone who lacks some of the historical context I was confused by the desire to keep `vim.diagnostic` LSP-independent, but thanks to @gpanders I finally get it. ",
            "created_at": "2025-06-01T16:36:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927503916",
            "id": 2927503916,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufios",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927503916/reactions"
            },
            "updated_at": "2025-06-01T18:41:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927503916",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> To quote from the docs:\n> \n> > The `vim.lsp.buf_…` functions perform operations for LSP clients attached to the current buffer.\n> \n> So it's not about \"buffer functions\" but about all client functions for the current buffer, which makes it an appropriate place for requesting workspace diagnostics. (Of course, this becomes iffy with multiple clients per buffer...)\n> \n> It's for sure not the most fortunate name for that module. Maybe we can find a better one to shove all client functions (buffer or workspace) under (keeping `buf` around as a compat shim)? (`lsp.client` or `lsp.request` come to mind)\n\nAfter looking at what's already in `vim.lsp.buf`, I agree, we can just add a new function there for now. We can bikeshed a new home/namespace later.",
            "created_at": "2025-06-01T16:37:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927504857",
            "id": 2927504857,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufi3Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927504857/reactions"
            },
            "updated_at": "2025-06-01T16:37:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927504857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> After looking at what's already in `vim.lsp.buf`, I agree, we can just add a new function there for now. We can bikeshed a new home/namespace later.\n\nWhy not just add the new function in `vim.lsp.diagnostic`?",
            "created_at": "2025-06-01T16:53:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927528046",
            "id": 2927528046,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufohu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927528046/reactions"
            },
            "updated_at": "2025-06-01T16:53:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927528046",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Because that module is deprecated. (It's part of the old, bad, design we have replaced.)",
            "created_at": "2025-06-01T16:54:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927528645",
            "id": 2927528645,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6uforF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927528645/reactions"
            },
            "updated_at": "2025-06-01T16:55:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927528645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > After looking at what's already in `vim.lsp.buf`, I agree, we can just add a new function there for now. We can bikeshed a new home/namespace later.\n> \n> Why not just add the new function in `vim.lsp.diagnostic`?\n\nJust like the quick fix entries structure, the vim.diagnostic structure can be used anywhere across the whole project. We don't need to add (or replace) a dedicated module for anything that uses `vim.Diagnostic`.",
            "created_at": "2025-06-01T16:59:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927536280",
            "id": 2927536280,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufqiY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927536280/reactions"
            },
            "updated_at": "2025-06-01T17:00:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927536280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Okay then. I’ll add the new function to (the poorly named) `vim.lsp.buf`.",
            "created_at": "2025-06-01T17:10:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927563340",
            "id": 2927563340,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ufxJM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927563340/reactions"
            },
            "updated_at": "2025-06-01T17:10:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927563340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've been playing around with workspace diagnostics (using the Roslyn LSP mentioned earlier in this thread) and have a question about this: when would we pull workspace diagnostics? Would this implementation include that? When testing with VS Code, it seems like it always has the most recent workspace diagnostics. I'm not sure how this implementation works or how to implement it. Would it get called on project open and when edits are made? Pulling workspace diagnostics can sometimes take a while. I know some LSPs implement PartialResultParams. What would happen if I make a change to a file that means there would be updated diagnostics for a document I already got results for, but the workspace pull isn't finished yet? Would we have to wait for it to finish before calling it again? ",
            "created_at": "2025-06-01T20:35:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927857724",
            "id": 2927857724,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ug5A8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927857724/reactions"
            },
            "updated_at": "2025-06-01T20:35:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927857724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59741700?v=4",
                "events_url": "https://api.github.com/users/ZieMcd/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZieMcd/followers",
                "following_url": "https://api.github.com/users/ZieMcd/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZieMcd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZieMcd",
                "id": 59741700,
                "login": "ZieMcd",
                "node_id": "MDQ6VXNlcjU5NzQxNzAw",
                "organizations_url": "https://api.github.com/users/ZieMcd/orgs",
                "received_events_url": "https://api.github.com/users/ZieMcd/received_events",
                "repos_url": "https://api.github.com/users/ZieMcd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZieMcd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZieMcd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZieMcd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Because that module is deprecated. (It's part of the old, bad, design we have replaced.)\n\nAfaik not all of it. See `:help lsp-diagnostic`. These functions aren't deprecated, and afaik there is no plan to change that?\n\n",
            "created_at": "2025-06-01T20:40:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927864395",
            "id": 2927864395,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ug6pL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927864395/reactions"
            },
            "updated_at": "2025-06-01T20:40:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927864395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Silly me, thinking `:h vim.lsp.diagnostic` would give me the right help tag.\n\n(Still, the remaining functions are really low-level and not on the same level as a major LSP request.)",
            "created_at": "2025-06-01T20:42:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/34231#issuecomment-2927866692",
            "id": 2927866692,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34231",
            "node_id": "IC_kwDOAPphoM6ug7NE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927866692/reactions"
            },
            "updated_at": "2025-06-01T20:44:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927866692",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 19,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34231/comments",
    "created_at": "2025-05-29T18:00:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34231/events",
    "html_url": "https://github.com/neovim/neovim/issues/34231",
    "id": 3101073351,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34231/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 280,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 325,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-06-02T23:00:27Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM641p_H",
    "number": 34231,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 9,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 9,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34231/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34231/timeline",
    "title": "Supports LSP method `workspace/diagnostic`",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-01T20:44:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34231",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
        "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
        "followers_url": "https://api.github.com/users/brianhuster/followers",
        "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
        "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/brianhuster",
        "id": 111893501,
        "login": "brianhuster",
        "node_id": "U_kgDOBqtb_Q",
        "organizations_url": "https://api.github.com/users/brianhuster/orgs",
        "received_events_url": "https://api.github.com/users/brianhuster/received_events",
        "repos_url": "https://api.github.com/users/brianhuster/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/brianhuster",
        "user_view_type": "public"
    }
}