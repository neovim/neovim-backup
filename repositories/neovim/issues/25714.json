{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nThe language server protocol specifies that completion items can contain:\r\n\r\n- snippets\r\n- `additionalTextEdits` (e.g used to add import statements when selecting a completion candidate)\r\n- A `command` (used to execute client side or server side commands - for all sorts of things). For example, vscode defines a `editor.action.triggerParameterHints` client command to trigger a  signature help immediately after a completion candidate got selected.\r\n\r\nCurrently neovim core handles none of that, and instead delegates to completion plugins like nvim-cmp, nvim-lsp-compl or others.\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nHave this functionality built-in.\r\n\r\nWith https://github.com/neovim/neovim/pull/25301 the groundwork for snippet expansion is done.\r\nThe next step is to integrate it with the completion, omnifunc. For that we'll need to setup a `CompleteDone` autocmd similar to:\r\n\r\nhttps://github.com/mfussenegger/nvim-lsp-compl/blob/1642f1c57a83a0b630fdf7f339f4a5550a766407/lua/lsp_compl.lua#L565-L668\r\n\r\n\r\nOpen Questions:\r\n\r\n- [ ] Opt-in or opt-out. Enabling it by default could conflict with above established completion plugins. On the other hand, opt-in is another hurdle in getting started from scratch\r\n- [ ] Snippet expansion trigger - implicit/explicit? (For me, always implicit expanding would make this unusable)\r\n\r\n\r\nProposal:\r\n\r\n- Make it opt-in via a `vim.lsp.completion.attach(client, bufnr, [opts])` method that can be called in a `LspAttach` autocmd. It would sets up a `CompleteDone` autocmd for the given buffer and client.\r\n- Add a `vim.lsp.completion.accept()` function that if called causes the next accempted completion candidate to expand a snippet, if the completion item contains one. To be used in a mapping like:\r\n\r\n```\r\nvim.keymap.set('i', '<CR>', function()\r\n  return vim.lsp.completion.accept() and '<c-y>' or '<CR>'\r\nend, { expr = true })\r\n```\r\n\r\n`opts` relate a bit to the auto-completion aspect and https://github.com/neovim/neovim/issues/25670, and might not be necessary in a first step.\r\n\r\n## Related issues\r\n\r\n- https://github.com/neovim/neovim/issues/13199\r\n- https://github.com/neovim/neovim/issues/12310\r\n",
    "closed_at": "2024-05-28T17:39:31Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Currently neovim core handles none of that, and instead delegates to completion plugins like nvim-cmp, nvim-lsp-compl or others.\r\n\r\nCan we extend the builtin completion concepts rather than add a LSP-specific interface?\r\n\r\n> `vim.lsp.completion.attach(client, bufnr, [opts])`\r\n\r\n\"Attach to completion\" feels like we are overextending the concept of attach. (And \"attach\" in general is probably a signal that we're missing something in the [events interface](https://github.com/neovim/neovim/issues/19156).)\r\n\r\nWould it make sense to \"attach to client\"? Since LSP clients are the main primitive in LSP, like how buffer/win/tab are the primitives in Nvim.",
            "created_at": "2023-10-28T18:50:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/25714#issuecomment-1783896243",
            "id": 1783896243,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25714",
            "node_id": "IC_kwDOAPphoM5qVBiz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1783896243/reactions"
            },
            "updated_at": "2023-10-28T18:50:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1783896243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Can we extend the builtin completion concepts rather than add a LSP-specific interface?\r\n\r\nYou mean something like adding a `snippet` property to the `complete-items` structure? Or/and an `on_complete` property that's an arbitrary function?\r\nAre we okay with diverging from vim on that?\r\n\r\n> \"Attach to completion\" feels like we are overextending the concept of attach.\r\n\r\nIn my proposal it was meant as the opt-in trigger, to be used in a `LspAttach` autocmd.\r\n\r\nOther ideas:\r\n- Different name: `enable`, `setup` or `config`?\r\n- Make opt-in part of the `lsp.start()` opts. Something like `vim.lsp.start({ completion = { enabled = true }})` ? Or more granular `completion = true|{ snippets = true, text_edits = true, commands = true }`\r\n- A function on the client. E.g. `client.setup_completion(...)` ?\r\n\r\nWe have client granularity/namespacing here, so using global-/local opts is imho not a good match.\r\nOne question is if it's only client granularity, or client and buffer. The attach proposal is for the latter\r\n",
            "created_at": "2023-10-29T08:51:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/25714#issuecomment-1784037911",
            "id": 1784037911,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25714",
            "node_id": "IC_kwDOAPphoM5qVkIX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1784037911/reactions"
            },
            "updated_at": "2023-10-29T13:42:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1784037911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Can we extend the builtin completion concepts rather than add a LSP-specific interface?\r\n> \r\n> You mean something like ... an `on_complete` property that's an arbitrary function? Are we okay with diverging from vim on that?\r\n\r\nWe could propose it upstream, but otherwise a callback is a generic mechanism that justifies a small divergence.",
            "created_at": "2023-11-15T18:02:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/25714#issuecomment-1813009357",
            "id": 1813009357,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25714",
            "node_id": "IC_kwDOAPphoM5sEFPN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1813009357/reactions"
            },
            "updated_at": "2024-02-18T18:22:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1813009357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Make it opt-in via a `vim.lsp.completion.attach(client, bufnr, [opts])` method\r\n\r\nIf we enabled it by default, then it could be _opt-out_, by documenting how to delete the `CompleteDone` handler. Any problem with that?",
            "created_at": "2024-02-18T18:22:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/25714#issuecomment-1951406183",
            "id": 1951406183,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25714",
            "node_id": "IC_kwDOAPphoM50UBhn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1951406183/reactions"
            },
            "updated_at": "2024-02-18T18:22:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1951406183",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If we enabled it by default, then it could be _opt-out_, by documenting how to delete the `CompleteDone` handler. Any problem with that?\r\n\r\nIf we handle the `triggerCharacters` as well it also needs `InsertCharPre`, likely `InsertLeave` and if we want to have re-trigger on backspace capability also `TextChangedP` and `TextChangedI`. Deleting all of them would be a bit much to opt-out, no?\r\n\r\n",
            "created_at": "2024-02-22T10:07:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/25714#issuecomment-1959108102",
            "id": 1959108102,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25714",
            "node_id": "IC_kwDOAPphoM50xZ4G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1959108102/reactions"
            },
            "updated_at": "2024-02-22T10:07:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1959108102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Was there any documentation added for how to opt out of `editor.action.triggerParameterHints `? I am [seeing a warning](https://github.com/elixir-lsp/elixir-ls/issues/1233) I'd like to avoid, which from the above linked tickets appears others are, too.",
            "created_at": "2025-08-13T04:25:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/25714#issuecomment-3182130475",
            "id": 3182130475,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25714",
            "node_id": "IC_kwDOAPphoM69q3Ur",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3182130475/reactions"
            },
            "updated_at": "2025-08-13T04:25:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3182130475",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/498229?v=4",
                "events_url": "https://api.github.com/users/adamu/events{/privacy}",
                "followers_url": "https://api.github.com/users/adamu/followers",
                "following_url": "https://api.github.com/users/adamu/following{/other_user}",
                "gists_url": "https://api.github.com/users/adamu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/adamu",
                "id": 498229,
                "login": "adamu",
                "node_id": "MDQ6VXNlcjQ5ODIyOQ==",
                "organizations_url": "https://api.github.com/users/adamu/orgs",
                "received_events_url": "https://api.github.com/users/adamu/received_events",
                "repos_url": "https://api.github.com/users/adamu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/adamu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/adamu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/adamu",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25714/comments",
    "created_at": "2023-10-19T08:56:33Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25714/events",
    "html_url": "https://github.com/neovim/neovim/issues/25714",
    "id": 1951651949,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "needs a clear design proposal",
            "id": 124510010,
            "name": "needs:design",
            "node_id": "MDU6TGFiZWwxMjQ1MTAwMTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:design"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25714/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM50U9ht",
    "number": 25714,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 27,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 1,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 28,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25714/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25714/timeline",
    "title": "Add support for LSP completion side effects (snippet expansion, command execution, additionalTextEdits)",
    "type": null,
    "updated_at": "2025-08-13T04:25:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25714",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger",
        "user_view_type": "public"
    }
}