{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "<!-- Before reporting: search existing issues and check the FAQ. -->\r\n\r\n- `nvim --version`: 0.5.0-dev\r\n- `vim -u DEFAULTS` (version: ) behaves differently? No\r\n- Operating system/version: N/A\r\n- Terminal name/version: N/A \r\n- `$TERM`: N/A\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\n```\r\nnvim -u NORC\r\n:! yes\r\n^C\r\n```\r\n\r\n`yes` is executed and the pager is shown. It takes up the entire screen, there is absolutely nothing from the previously active buffer (or any buffer, for that matter) visible. \r\n\r\n### Actual behaviour\r\n\r\nIf you press enter, the output pane closes and you are returned to the previously active buffer. If you press `q`, the buffer also closes and returns to the previously active buffer *but* it also leaves the editor with a `q` pushed onto the command stack, and will interpret the next keypress as the name of the macro to begin recording.\r\n\r\n**However**, if you scroll through the command output (for example, hit `PgUp`) then your keystrokes will be interpreted as pager commands and a `q` here will exit the pager without pushing a `q` onto the command stack (more sensible behavior).\r\n\r\nThe problem is that this destroys muscle memory. Visibly, you have the same state (pager shown with output of command) and depending on whether or not you interacted with the pager, a `q` will either cleanly exit the pager and return to the active buffer, or it will *appear* to cleanly close the pager and return to the active buffer but will actually soon begin recording a macro.\r\n\r\n### Expected behaviour\r\n\r\nGiven that the buffer is completely hidden when the full-screen pager is active, it is extremely unlikely that there are any command keystrokes (except in ex mode, obviously) that a user could sanely be expected to enter at this point. IMHO, it should be something with the meaning of \"enter navigation keystrokes to scroll through the command output in the pager, press enter or any other key to exit the pager and return to the active buffer\".\r\n\r\nIn particular and at the very least, assigning two different meanings to `q` depending on whether or not the pager has been interacted with is extremely non-intuitive. Given that a pager *is* active and that `q` is always used to leave pagers in general and is even used to leave a pager within (n)vim itself *some of the time*, I feel that entering either `q` or enter should suffice to close the pager without pushing a `q` onto the command stack.\r\n\r\nI'm not sure this can be fixed with a plugin, unless there is some function along the lines of `HitEnterPending()` that be used in a keybinding to conditionally map `q` to `<CR>`.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/14323/comments",
    "created_at": "2021-04-08T16:26:48Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/14323/events",
    "html_url": "https://github.com/neovim/neovim/issues/14323",
    "id": 853644835,
    "labels": [
        {
            "color": "F9D0C4",
            "default": false,
            "description": "wrong behavior inherited from vim",
            "id": 154310492,
            "name": "bug-vim",
            "node_id": "MDU6TGFiZWwxNTQzMTA0OTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-vim"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 2699293736,
            "name": "pager",
            "node_id": "MDU6TGFiZWwyNjk5MjkzNzM2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/pager"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/14323/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4NTM2NDQ4MzU=",
    "number": 14323,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/14323/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/14323/timeline",
    "title": "Neovim should ignore commands entered in the post-execution command mode pager",
    "updated_at": "2025-01-19T11:50:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/14323",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4",
        "events_url": "https://api.github.com/users/mqudsi/events{/privacy}",
        "followers_url": "https://api.github.com/users/mqudsi/followers",
        "following_url": "https://api.github.com/users/mqudsi/following{/other_user}",
        "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mqudsi",
        "id": 606923,
        "login": "mqudsi",
        "node_id": "MDQ6VXNlcjYwNjkyMw==",
        "organizations_url": "https://api.github.com/users/mqudsi/orgs",
        "received_events_url": "https://api.github.com/users/mqudsi/received_events",
        "repos_url": "https://api.github.com/users/mqudsi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mqudsi",
        "user_view_type": "public"
    }
}