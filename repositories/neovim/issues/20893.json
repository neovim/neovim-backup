{
    "active_lock_reason": "off-topic",
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "\r\n\r\nIt would be so nice if neovim came with a build in package manager. Currently I'm using vim-plug but this has to be installed before my vimrc works. \r\n\r\nhttps://github.com/junegunn/vim-plug",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "[Packages](https://neovim.io/doc/user/repeat.html#packages) are built-in and you can use git submodules to manage them if you don't want to install a plugin for it. ",
            "created_at": "2022-10-31T22:18:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/20893#issuecomment-1297758658",
            "id": 1297758658,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20893",
            "node_id": "IC_kwDOAPphoM5NWjnC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1297758658/reactions"
            },
            "updated_at": "2022-10-31T22:18:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1297758658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24971970?v=4",
                "events_url": "https://api.github.com/users/ObserverOfTime/events{/privacy}",
                "followers_url": "https://api.github.com/users/ObserverOfTime/followers",
                "following_url": "https://api.github.com/users/ObserverOfTime/following{/other_user}",
                "gists_url": "https://api.github.com/users/ObserverOfTime/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ObserverOfTime",
                "id": 24971970,
                "login": "ObserverOfTime",
                "node_id": "MDQ6VXNlcjI0OTcxOTcw",
                "organizations_url": "https://api.github.com/users/ObserverOfTime/orgs",
                "received_events_url": "https://api.github.com/users/ObserverOfTime/received_events",
                "repos_url": "https://api.github.com/users/ObserverOfTime/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ObserverOfTime/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ObserverOfTime/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ObserverOfTime",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Duplicate of https://github.com/neovim/neovim/issues/247 . \r\n\r\nI think https://github.com/savq/paq-nvim is viable as a default plugin manager. It is _very_ small, and could be used to bootstrap other package managers. OTOH, that will discourage the use of https://luarocks.org/ which is an actual, real package manager.\r\n\r\n# Proposal\r\n\r\n- Inline https://github.com/savq/paq-nvim , clean it up, fix some parts of it.\r\n- Introduce something like `:packpull`.\r\n    - By default it is handled by the builtin plugin manager.\r\n    - Other plugin managers can become the \"provider\" for `:packpull` etc.",
            "created_at": "2022-11-01T00:59:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/20893#issuecomment-1297870788",
            "id": 1297870788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20893",
            "node_id": "IC_kwDOAPphoM5NW-_E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1297870788/reactions"
            },
            "updated_at": "2024-02-18T11:05:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1297870788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Can we identify which parts present actual problems?\r\n\r\n1. Is it the having to paste a snippet in code into `init.lua`?\r\n\r\n2. Is it the having to open a text file and add `\"user/repo\"` or `.setup()`? I think it might be hard for current package managers to have a standard `yarn add`-ish command, since unlike e.g. `package.json` they're very unopinionated about how your package list can be written - you can put them anywhere. Maybe one could end up with something like the bash/zsh world where install commands just append lines, but that's not great.\r\n\r\n3. Is it the lack of a graphical config editor like VSCode? That works only with JSON config I think. But maybe a convenience function like \":configure <plugin_name>\" to open the relevant config section would be a nice touch. For the same reasons as point 2, this seems challenging for current package managers.\r\n\r\n4. Is it the discoverability of it all? Maybe just put a section about plugins in the `:Tutor` and call out `:Tutor` in the default startup screen?\r\n\r\nThe only one that seems plausible to me is 4. That said, I understand \"UX obsession\", though that starts with understanding the problem / user story deeply first.\r\n\r\nIs \"funnel users into a good package manager as efficiently as possible\" an acceptable substitute for \"actually have a package manager built in\"?",
            "created_at": "2023-09-18T02:43:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/20893#issuecomment-1722682775",
            "id": 1722682775,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20893",
            "node_id": "IC_kwDOAPphoM5mrg2X",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722682775/reactions"
            },
            "updated_at": "2024-02-18T13:53:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722682775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Problem\r\n\r\n1. Currently users must look for a plugin manager and figure out how to install it.\r\n    - Nvim documentation should be able to give a one-liner to install (non-builtin) plugin managers and plugins.\r\n2. Lack of a _declarative_ way to specify plugins.\r\n    - Lets Nvim reason about dependency ordering / transitivity.\r\n    - Lets crawlers build a [package index](https://github.com/neovim/neovim/issues/24221).\r\n    - [packspec](https://github.com/neovim/packspec/) adds potential to leverage NPM tooling (and possibly infrastructure).\r\n\r\n# Goals\r\n\r\nThese problems are in-scope (everything else is out of scope):\r\n\r\n1. Include a _minimal_ builtin plugin manager.\r\n    - Users shouldn't need to look for a plugin manager online and install it.\r\n    - Users can easily install _another plugin manager_ with a one-liner.\r\n1. Must be _minimal_. One file, 500-1000 lines of code.\r\n    - If users want advanced features they must install an advanced plugin manager.\r\n1. Supports packspec (**declarative way** to fetch plugins) + hooks.\r\n    - Need to finish the packspec story... https://github.com/neovim/packspec/\r\n    - Define a convention for _hooks_:\r\n        - post-install: one-time, just after a plugin is installed.\r\n        - pre-activate: per-session, just before a plugin is loaded/required.\r\n        - post-activate\r\n2. \"Provider\" model: other plugin managers can [provide](https://neovim.io/doc/user/develop.html#dev-provider) plugin management (`:packinstall`, `vim.plugins()`, etc/whatever).\r\n2. Future goals (not required for initial implementation):\r\n    1. Nvim should be able to list plugins from a [plugin index](https://github.com/neovim/neovim/issues/24221#issuecomment-1616009906) like https://dotfyle.com/neovim/plugins/trending or whatever.\r\n        - See also https://github.com/neovim/neovim/issues/24221\r\n\r\n## Counterpoints\r\n\r\n- This could discourage the use of https://luarocks.org/ which is an actual, real package manager.\r\n\r\n# Proposal\r\n\r\n- Probably _shouldn't_ use pack/start, just use plain old 'rtp' (based on feedback from folke/lewis; needs discussion).\r\n    - Reference: https://github.com/lewis6991/pckr.nvim/blob/main/lua%2Fpckr%2Floader.lua contains all of the logic that improves upon `pack` and specifically `start`.\r\n- Use `curl` or `vim.fetch()` (which uses `curl`). This doesn't need to be perfect initially, we just need a way of downloading a file.\r\n- Requires `git`.\r\n- Inline https://github.com/savq/paq-nvim or [mini.deps](https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-deps.md), clean it up, fix some parts of it.\r\n    - mini.deps vs paq: https://github.com/echasnovski/mini.nvim/blob/6a1a44220b3b9ee9856059686fd47b15c8ed83db/doc/mini-deps.txt#L75-L79\r\n- Introduce something like `:packinstall`.\r\n    - It is handled by the default plugin manager. Can be overidden by another \"provider\".\r\n",
            "created_at": "2023-09-18T13:48:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/20893#issuecomment-1723453602",
            "id": 1723453602,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20893",
            "node_id": "IC_kwDOAPphoM5mudCi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1723453602/reactions"
            },
            "updated_at": "2024-02-18T13:59:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1723453602",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think you missed step zero, which is install a plugin manager. :)\r\n\r\nAh, that's what I meant by \r\n\r\n> 1. Is it the having to paste a snippet in code into init.lua?\r\n\r\nbut I forgot to specify \"bootstrap code\". For that part I think that before a full solution is fossilized, there are poor mans solutions like vimtutoring people to install a plugin manager and check out dotfyle and neovimcraft.\r\n\r\nMy original question in that context is, \"what specifically is so bad about having to install a plugin manager\"? Is it discoverability? Portability/reproducibility? Size/dependencies? Then it would be clear how much various solutions reduce the badness.\r\n\r\n> If users want advanced features they must install an advanced plugin manager.\r\n\r\nI wonder how much it matters to the design how common this case is expected to be (i.e. where nvim builtin plugin manager would just be a tool to bootstrap a bigger plugin manager). An interesting thing to look at would be the development of Node.js corepack in response to yarn and pnpm becoming more popular. `vim.plugin()` could be a solution here indeed.",
            "created_at": "2023-09-18T16:42:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/20893#issuecomment-1723924885",
            "id": 1723924885,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20893",
            "node_id": "IC_kwDOAPphoM5mwQGV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1723924885/reactions"
            },
            "updated_at": "2024-02-18T11:03:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1723924885",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20893/comments",
    "created_at": "2022-10-31T20:53:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/20893/events",
    "html_url": "https://github.com/neovim/neovim/issues/20893",
    "id": 1430482373,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/20893/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5VQ23F",
    "number": 20893,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 1,
        "eyes": 0,
        "heart": 1,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 5,
        "url": "https://api.github.com/repos/neovim/neovim/issues/20893/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/20893/timeline",
    "title": "Builtin package manager for plugins",
    "updated_at": "2025-01-17T15:32:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/20893",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3178666?v=4",
        "events_url": "https://api.github.com/users/tamis-laan/events{/privacy}",
        "followers_url": "https://api.github.com/users/tamis-laan/followers",
        "following_url": "https://api.github.com/users/tamis-laan/following{/other_user}",
        "gists_url": "https://api.github.com/users/tamis-laan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tamis-laan",
        "id": 3178666,
        "login": "tamis-laan",
        "node_id": "MDQ6VXNlcjMxNzg2NjY=",
        "organizations_url": "https://api.github.com/users/tamis-laan/orgs",
        "received_events_url": "https://api.github.com/users/tamis-laan/received_events",
        "repos_url": "https://api.github.com/users/tamis-laan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tamis-laan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tamis-laan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tamis-laan",
        "user_view_type": "public"
    }
}