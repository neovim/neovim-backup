{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nCurrently, `vim.treesitter.get_parser(bufnr, lang, opts)` caches a single parser per buffer and language. This means that if you request a parser for the same buffer and language but with different opts, the function will reuse the cached parser, ignoring the new options entirely.\nIn my plugin [nvim-dap-repl-highlights](https://github.com/LiadOz/nvim-dap-repl-highlights), I dynamically inject a language into the dap repl buffer based on the currently running debug session language. For example, when a Python session starts, I inject the Python language into the buffer. Later, if a new session starts for JavaScript, I attempt to inject JavaScript into the same buffer.\nBecause of the parser caching, I am not able to change the injected language.\n\n### Expected behavior\n\nExample approaches that can be taken:\n* When checking for existing parser in the buffer, ensure that the opts are the same as before.\n* Add a flag to opts like {force = true}\n* Add a new function to treesitter.lua that clears the current buffer parser\n\nI can create a PR with whatever solution is believed to be best.",
    "closed_at": "2025-05-10T16:53:43Z",
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You are talking about the _queries_, not the parser. It's true that we're still missing some tooling for dynamically managing (per-buffer) queries in a convenient fashion, but the basic building blocks are there (which you need to use in your special use case).\n\nIf I'm misunderstanding, please add a minimal self-contained example to the description so we can evaluate exactly what is needed and how to solve it. (Don't open a PR until we're sure this is not an XY problem -- you should not be setting any options on `get_parser`!)",
            "created_at": "2025-05-10T16:00:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/33944#issuecomment-2868990205",
            "id": 2868990205,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33944",
            "node_id": "IC_kwDOAPphoM6rAVD9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868990205/reactions"
            },
            "updated_at": "2025-05-10T16:05:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868990205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> You are talking about the _queries_, not the parser. It's true that we're still missing some tooling for dynamically managing (per-buffer) queries in a convenient fashion, but the basic building blocks are there (which you need to use in your special use case).\n> \n> If I'm misunderstanding, please add a minimal self-contained example to the description so we can evaluate exactly what is needed and how to solve it. (Don't open a PR until we're sure this is not an XY problem -- you should not be setting any options on `get_parser`!)\n\n\nHere is example code of what I would like to do:\nOn the first debug session\n```lua\nparser = vim.treesitter.get_parser(1337, 'dap_repl', '((user_input_statement) @injection.content (#set! injection.language \"python\") (#set! injection.combined) (#set! injection.include-children))')\nvim.treesitter.highlighter.new(parser)\n```\nOn second debug session:\n```lua\nparser = vim.treesitter.get_parser(1337, 'dap_repl', '((user_input_statement) @injection.content (#set! injection.language \"javascript\") (#set! injection.combined) (#set! injection.include-children))')\nvim.treesitter.highlighter.new(parser)\n```\n\nI agree that I have the building blocks to do that on my own without using the `get_parser` function, but then I would need to write code that is almost entirely the same to what already exists in `lua/vim/treesitter.lua`. That's actually what I'm going to do in my plugin until there is a better way to do that.",
            "created_at": "2025-05-10T16:11:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/33944#issuecomment-2868997809",
            "id": 2868997809,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33944",
            "node_id": "IC_kwDOAPphoM6rAW6x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868997809/reactions"
            },
            "updated_at": "2025-05-10T16:11:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868997809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20954878?v=4",
                "events_url": "https://api.github.com/users/LiadOz/events{/privacy}",
                "followers_url": "https://api.github.com/users/LiadOz/followers",
                "following_url": "https://api.github.com/users/LiadOz/following{/other_user}",
                "gists_url": "https://api.github.com/users/LiadOz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LiadOz",
                "id": 20954878,
                "login": "LiadOz",
                "node_id": "MDQ6VXNlcjIwOTU0ODc4",
                "organizations_url": "https://api.github.com/users/LiadOz/orgs",
                "received_events_url": "https://api.github.com/users/LiadOz/received_events",
                "repos_url": "https://api.github.com/users/LiadOz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LiadOz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LiadOz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LiadOz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah, you're \"holding it wrong\". You should be using `:h vim.treesitter.query.set()`.\n\n(Also be aware that you shouldn't be depending on `nvim-treesitter` like that. This won't work any longer with the `main` branch, which is what will become 1.0 in the (hopefully) near future.)",
            "created_at": "2025-05-10T16:12:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/33944#issuecomment-2868998039",
            "id": 2868998039,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33944",
            "node_id": "IC_kwDOAPphoM6rAW-X",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868998039/reactions"
            },
            "updated_at": "2025-05-10T16:14:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868998039",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Yeah, you're \"holding it wrong\". You should be using `:h vim.treesitter.query.set()`.\n> \n> (Also be aware that you shouldn't be depending on `nvim-treesitter` like that. This won't work any longer with the `main` branch, which is what will become 1.0 in the (hopefully) near future.)\n\nI tried to look into that as well, but it didn't seem to actually change the injections query for the existing buffer. I took a quick look and it seems that the injections are being parsed only on creation of the language tree...\nAlso why wouldn't what I suggested work in 1.0, I see that the code exists in the master branch.",
            "created_at": "2025-05-10T16:43:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/33944#issuecomment-2869009841",
            "id": 2869009841,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33944",
            "node_id": "IC_kwDOAPphoM6rAZ2x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869009841/reactions"
            },
            "updated_at": "2025-05-10T16:45:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869009841",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20954878?v=4",
                "events_url": "https://api.github.com/users/LiadOz/events{/privacy}",
                "followers_url": "https://api.github.com/users/LiadOz/followers",
                "following_url": "https://api.github.com/users/LiadOz/following{/other_user}",
                "gists_url": "https://api.github.com/users/LiadOz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LiadOz",
                "id": 20954878,
                "login": "LiadOz",
                "node_id": "MDQ6VXNlcjIwOTU0ODc4",
                "organizations_url": "https://api.github.com/users/LiadOz/orgs",
                "received_events_url": "https://api.github.com/users/LiadOz/received_events",
                "repos_url": "https://api.github.com/users/LiadOz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LiadOz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LiadOz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LiadOz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I tried to look into that as well, but it didn't seem to actually change the injections query for the existing buffer. I took a quick look and it seems that the injections are being parsed only on creation of the language tree...\n\nYou of course can -- and should! -- also parse them manually (make sure you specify the range or `true`, otherwise the injections are not parsed).\n\n> Also why wouldn't what I suggested work in 1.0, I see that the code exists in the master branch.\n\n...which is why I explicitly mentioned the `main` branch (`master` is no longer maintained).",
            "created_at": "2025-05-10T16:53:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/33944#issuecomment-2869021861",
            "id": 2869021861,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33944",
            "node_id": "IC_kwDOAPphoM6rAcyl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869021861/reactions"
            },
            "updated_at": "2025-05-10T16:53:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869021861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33944/comments",
    "created_at": "2025-05-10T15:54:53Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33944/events",
    "html_url": "https://github.com/neovim/neovim/issues/33944",
    "id": 3054297156,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33944/labels{/name}",
    "locked": true,
    "milestone": null,
    "node_id": "I_kwDOAPphoM62DOBE",
    "number": 33944,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33944/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33944/timeline",
    "title": "Allow vim.treesitter.get_parser to create new parser instances when opts differ for same language",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-10T16:53:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33944",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20954878?v=4",
        "events_url": "https://api.github.com/users/LiadOz/events{/privacy}",
        "followers_url": "https://api.github.com/users/LiadOz/followers",
        "following_url": "https://api.github.com/users/LiadOz/following{/other_user}",
        "gists_url": "https://api.github.com/users/LiadOz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/LiadOz",
        "id": 20954878,
        "login": "LiadOz",
        "node_id": "MDQ6VXNlcjIwOTU0ODc4",
        "organizations_url": "https://api.github.com/users/LiadOz/orgs",
        "received_events_url": "https://api.github.com/users/LiadOz/received_events",
        "repos_url": "https://api.github.com/users/LiadOz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/LiadOz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LiadOz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/LiadOz",
        "user_view_type": "public"
    }
}