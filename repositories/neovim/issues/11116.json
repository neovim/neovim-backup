{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Steps to reproduce using `nvim -u NORC`\r\n\r\nAny `formatprg` or `equalprg` with an argument that gives an error in shellcode. Ex. use prettier in a one-line javascript object parameter.\r\n\r\n\r\n### Actual behaviour\r\n\r\n`formatprg` and `equalprg` replace stdin with stderr on shell error\r\n\r\n### Expected behaviour\r\n\r\nSome sort of error handling like doing nothins, dumping stderr in a quickfix, or even better stderr in a floating window.\r\n\r\n### Reference\r\n\r\nhttps://github.com/prettier/prettier/issues/743\r\nhttps://stackoverflow.com/questions/13658696/vim-how-to-redirect-formatprg-errors-to-echoerr\r\nhttps://stackoverflow.com/questions/9466795/vim-using-an-external-command-and-handling-errors\r\nhttps://groups.google.com/forum/#!topic/vim_dev/SGcwy7GViNs",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> `formatprg` and `equalprg` replace stdin with stderr on shell error\r\n\r\nDoesn't that make it pretty clear there was an error? Then just `u` to undo.\r\n\r\nMore generally, what you're asking for is something like `formatfunc` and `equalfunc` where a callback can be used instead of just a plain old program. \r\n\r\nOr a generic way to hook into normal-mode actions. I think we don't have an issue tracking that, so let's use this one.",
            "created_at": "2019-09-29T22:22:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/11116#issuecomment-536347656",
            "id": 536347656,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11116",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjM0NzY1Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/536347656/reactions"
            },
            "updated_at": "2019-09-29T22:23:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/536347656",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Replacing the entire buffer with an error message is too brutal.\r\n\r\nI would rather have `formatprg` avoid replacement when the shell returns an error code and let me know something went wrong via `echoerr`. Forcing replacement with `formatprg!` or adding a letter to `formatoptions` could perhaps be it.\r\n",
            "created_at": "2020-01-16T21:50:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/11116#issuecomment-575363506",
            "id": 575363506,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11116",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTM2MzUwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/575363506/reactions"
            },
            "updated_at": "2020-01-16T21:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/575363506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/250664?v=4",
                "events_url": "https://api.github.com/users/domo84/events{/privacy}",
                "followers_url": "https://api.github.com/users/domo84/followers",
                "following_url": "https://api.github.com/users/domo84/following{/other_user}",
                "gists_url": "https://api.github.com/users/domo84/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/domo84",
                "id": 250664,
                "login": "domo84",
                "node_id": "MDQ6VXNlcjI1MDY2NA==",
                "organizations_url": "https://api.github.com/users/domo84/orgs",
                "received_events_url": "https://api.github.com/users/domo84/received_events",
                "repos_url": "https://api.github.com/users/domo84/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/domo84/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/domo84/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/domo84",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/11116/comments",
    "created_at": "2019-09-28T23:40:10Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/11116/events",
    "html_url": "https://github.com/neovim/neovim/issues/11116",
    "id": 499832749,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim core functionality or code",
            "id": 858327504,
            "name": "core",
            "node_id": "MDU6TGFiZWw4NTgzMjc1MDQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/core"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/11116/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0OTk4MzI3NDk=",
    "number": 11116,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/11116/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/11116/timeline",
    "title": "hook/event for normal, Ex commands",
    "updated_at": "2025-01-17T16:02:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/11116",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3187948?v=4",
        "events_url": "https://api.github.com/users/aymanbagabas/events{/privacy}",
        "followers_url": "https://api.github.com/users/aymanbagabas/followers",
        "following_url": "https://api.github.com/users/aymanbagabas/following{/other_user}",
        "gists_url": "https://api.github.com/users/aymanbagabas/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/aymanbagabas",
        "id": 3187948,
        "login": "aymanbagabas",
        "node_id": "MDQ6VXNlcjMxODc5NDg=",
        "organizations_url": "https://api.github.com/users/aymanbagabas/orgs",
        "received_events_url": "https://api.github.com/users/aymanbagabas/received_events",
        "repos_url": "https://api.github.com/users/aymanbagabas/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/aymanbagabas/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aymanbagabas/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/aymanbagabas",
        "user_view_type": "public"
    }
}