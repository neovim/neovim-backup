{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "This issue actually just repeats what is already described by @tarruda as the \"[smart UI protocol](http://tarruda.github.io/articles/neovim-smart-ui-protocol/)\" but I want to have it as a ticket to get feedback when it is available.\n\nOver the last weeks, I spent a lot of time by implementing a smart UI on the client side by myself, i.e. I implemented a window manager for neovim windows, whose state can be synced with the state of neovims internal window manager. I don't have to say that it took me forever to get to this point but I want to say that I learned that such a sync is actually impossible for all possible use cases. The problem is easily described:\n\n```\n-----\n| | |\n-----\n| | |\n-----\n```\n\nThese are four windows but it is ambiguous if there are two columns that each contain a row of two windows or if there are two rows that each contain two columns. It can't be detected but needs to, otherwise the client can't be correctly updated when the user moves between the windows. Instead of a list of windows, the neovim API needs to expose a tree. In Haskell, it could be described in this way:\n\n``` haskell\ndata WindowTree = Rows [WindowTree] | Columns [WindowTree] | Window Int\n```\n\nA window tree is either a row, a column  or a window, where the window is represented by a number and the other twos can be arbitrarily nested and contain each a list of further window trees.\n\nI hope the smart UI protocol gets real one day because I really need it to implement my UI correctly.\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This would allow plugins to implement\n- [zoom](https://github.com/neovim/neovim/issues/2004) \n  - fringe benefit: ability to use mouse-selection to copy text from terminal without border/split artifacts.\n- [\"hidden\" windows](https://github.com/neovim/neovim/issues/1731)\n- [whatever this is](https://github.com/neovim/neovim/issues/1500)\n\nAlso important, it gives plugins a chance to create a temporary window without [breaking the layout as `:term` currently does](https://github.com/neovim/neovim/issues/2006#issuecomment-151705292).\n",
            "created_at": "2016-01-04T08:44:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-168612918",
            "id": 168612918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODYxMjkxOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/168612918/reactions"
            },
            "updated_at": "2016-03-09T19:35:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/168612918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@sschaef To determine which window is located where you need to use `window_get_position`. This and  window numbers (they are assigned from top-left to bottom-right, but this leaves a question open whether top-right window is 3 or 2) can let you determine and then reproduce the layout, though this is not very convenient.\n",
            "created_at": "2016-01-04T11:57:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-168658496",
            "id": 168658496,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODY1ODQ5Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/168658496/reactions"
            },
            "updated_at": "2016-01-04T11:57:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/168658496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Over the last weeks, I spent a lot of time by implementing a smart UI on the client side by myself, i.e. I implemented a window manager for neovim windows, whose state can be synced with the state of neovims internal window manager. I don't have to say that it took me forever to get to this point but I want to say that I learned that such a sync is actually impossible for all possible use cases\n\nThe goal of the smart UI window management model is not to sync with neovim internal window manager, but to replace it completely. This is hinted in the following quotes from the post:\n\n> This new protocol is activated via a command-line switch and replaces the old protocol when active(not possible to have both protocols active in the same Neovim instance)\n\nand \n\n> Clearly embedders will have more work to implement the smart UI protocol, that’s why it will be added as a new feature instead of replacing the current version. For simple embedding scenarios and for the builtin terminal UI the current protocol makes things much simpler.\n\nIn other words, when smart UI is active, neovim will have no knowledge about window/tab layout, though it will offer facilities for UIs to store their own layout information in the core(so multiple UIs can sync more easily and it is possible to detach-reattach without losing it). Layout-changing commands such as `:split` will be simply forwarded to UIs via msgpack-rpc\n",
            "created_at": "2016-01-04T12:02:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-168659297",
            "id": 168659297,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODY1OTI5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/168659297/reactions"
            },
            "updated_at": "2016-01-04T12:02:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/168659297",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@tarruda I am wondering how smart UI is supposed to handle display options like `list`, `wrap`, `showbreak`; also non-window-contents options like `showcmd`. Currently the easiest thing to do is I think still tell client what exactly to draw in the window, leaving _just_ layout, fonts and sizes to the client. This guess does not contradict with what is wrote in http://tarruda.github.io/articles/neovim-smart-ui-protocol/.\n\n---\n\nAs a side note: never use links like https://github.com/neovim/neovim/blob/master/src/nvim/globals.h#L94-L97. You need to either replace `master` with specific commit hash or never supply exact line numbers here. Better the first because with ongoing refactoring you cannot be sure that file contains what it used to contain at all times. This specific link text is “screen data structures”, but the location link points to has nothing to do with screen data structures.\n",
            "created_at": "2016-01-04T12:12:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-168662147",
            "id": 168662147,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODY2MjE0Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/168662147/reactions"
            },
            "updated_at": "2016-01-04T12:12:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/168662147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @tarruda I am wondering how smart UI is supposed to handle display options like list, wrap, showbreak; also non-window-contents options like showcmd. Currently the easiest thing to do is I think still tell client what exactly to draw in the window, leaving just layout, fonts and sizes to the client. This guess does not contradict with what is wrote in http://tarruda.github.io/articles/neovim-smart-ui-protocol/\n\nAt least for a first iteration, there will be no change to how window-local drawing will work. The basic idea is to first replace the global screen state in global.h with a `UGrid`(ugrid.c) instance, which will be the target of screen.c drawing functions. When the smart UI is active, each `win_T` structure will have its own `UGrid` instance which will be used instead of the global one(Using `UGrid` instead of the global stuff will also simplify debugging of headless nvim instances:https://github.com/neovim/neovim/blob/master/contrib/gdb/nvim-gdb-pretty-printers.py).\n\nFor drawing outside windows such as a command-line window, it is partially explained in the post(though I may not have considered all corner cases yet):\n\n> Command-line mode won’t trigger screen redraw instructions. Instead, msgpack-rpc objects with high-level information about what is happening on the command line will be sent\n\nMy first guess is that options like `showcmd` would simply change the output of the msgpack-rpc objects sent when the command-line row is updated.\n\n> As a side note: never use links like https://github.com/neovim/neovim/blob/master/src/nvim/globals.h#L94-L97. You need to either replace master with specific commit hash or never supply exact line numbers here. Better the first because with ongoing refactoring you cannot be sure that file contains what it used to contain at all times. This specific link text is “screen data structures”, but the location link points to has nothing to do with screen data structures.\n\nI will fix it, thanks. I wish github had an option to automatically display HEAD commit hashes in URLs instead of the branch name, I find it a bit annoying having to navigate to the commit->tree->file every time I need to permalink a slice of code.\n",
            "created_at": "2016-01-04T12:34:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-168667965",
            "id": 168667965,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODY2Nzk2NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/168667965/reactions"
            },
            "updated_at": "2016-01-04T12:34:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/168667965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "On 02/11/2016 12:01 PM, Stefan Gojan wrote:\n\n> @sschaef https://github.com/sschaef Is your window manager open \n> source? I played with the same idea, since some problems with dwm.vim \n> but never made a prototype. Would love to see how you did it and if it \n> matches what I would need from a window manager.\n> \n> It is open source but I'm not sure if it can be helpful to you. As I \n> mentioned in the beginning of the post the information that comes from \n> nvim is ambiguous in some cases. I didn't try the idea from @ZyX-I yet, \n> maybe I could indeed solve the ambiguity this way.\n\nThe WindowTree format is here: \nhttps://github.com/sschaef/tooling-research/blob/master/protocol/src/main/scala/protocol/ui/WindowTree.scala\nThe algo that converts the nvim information to my format is here: \nhttps://github.com/sschaef/tooling-research/blob/master/backend/src/main/scala/backend/internal/WindowTreeCreator.scala\nAnd some tests for the algo: \nhttps://github.com/sschaef/tooling-research/blob/master/backend/src/test/scala/backend/internal/WindowTreeCreatorTest.scala\n\nIt took me forever to come up with the algo - it gets probably a little \nbit more complicated when I want to solve the ambiguity problem. But so \nfar it works fine for simpler window layouts.\n",
            "created_at": "2016-02-16T11:41:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-184648308",
            "id": 184648308,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDY0ODMwOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184648308/reactions"
            },
            "updated_at": "2016-02-16T11:41:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184648308",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/488530?v=4",
                "events_url": "https://api.github.com/users/kiritsuku/events{/privacy}",
                "followers_url": "https://api.github.com/users/kiritsuku/followers",
                "following_url": "https://api.github.com/users/kiritsuku/following{/other_user}",
                "gists_url": "https://api.github.com/users/kiritsuku/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kiritsuku",
                "id": 488530,
                "login": "kiritsuku",
                "node_id": "MDQ6VXNlcjQ4ODUzMA==",
                "organizations_url": "https://api.github.com/users/kiritsuku/orgs",
                "received_events_url": "https://api.github.com/users/kiritsuku/received_events",
                "repos_url": "https://api.github.com/users/kiritsuku/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kiritsuku/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kiritsuku/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kiritsuku",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@ZyX-I I reread your comment and it looks like that I'm doing exactly what you are suggesting, which leads to the ambiguity that I don't know if the top right window is number 2 or 3. And I don't see how this ambiguity can be resolved.\n",
            "created_at": "2016-02-16T12:13:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-184659882",
            "id": 184659882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDY1OTg4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184659882/reactions"
            },
            "updated_at": "2016-02-16T12:13:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184659882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/488530?v=4",
                "events_url": "https://api.github.com/users/kiritsuku/events{/privacy}",
                "followers_url": "https://api.github.com/users/kiritsuku/followers",
                "following_url": "https://api.github.com/users/kiritsuku/following{/other_user}",
                "gists_url": "https://api.github.com/users/kiritsuku/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kiritsuku",
                "id": 488530,
                "login": "kiritsuku",
                "node_id": "MDQ6VXNlcjQ4ODUzMA==",
                "organizations_url": "https://api.github.com/users/kiritsuku/orgs",
                "received_events_url": "https://api.github.com/users/kiritsuku/received_events",
                "repos_url": "https://api.github.com/users/kiritsuku/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kiritsuku/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kiritsuku/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kiritsuku",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@sschaef With `window_get_position` this is trivial: top right window has Y position (first value) 0.\n",
            "created_at": "2016-02-16T16:33:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-184756693",
            "id": 184756693,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDc1NjY5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184756693/reactions"
            },
            "updated_at": "2016-02-16T16:33:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184756693",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ok, after rethinking this the problem I had was not with the positions of the windows but with the nesting of the windows, which can't be determined just by looking at the positions. Nesting gets important the moment when further windows shall be split because the split happens only inside of the nested area. At first I tried to do an incremental update of the UI, i.e. I wanted to redraw only the area that changed. Right now I redraw everything on a change of the UI and it looks like this solved the layout problem. At least I can't find a single use case which is not supported anymore.\n",
            "created_at": "2016-02-16T17:11:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-184777135",
            "id": 184777135,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDc3NzEzNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184777135/reactions"
            },
            "updated_at": "2016-02-16T17:11:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184777135",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/488530?v=4",
                "events_url": "https://api.github.com/users/kiritsuku/events{/privacy}",
                "followers_url": "https://api.github.com/users/kiritsuku/followers",
                "following_url": "https://api.github.com/users/kiritsuku/following{/other_user}",
                "gists_url": "https://api.github.com/users/kiritsuku/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kiritsuku",
                "id": 488530,
                "login": "kiritsuku",
                "node_id": "MDQ6VXNlcjQ4ODUzMA==",
                "organizations_url": "https://api.github.com/users/kiritsuku/orgs",
                "received_events_url": "https://api.github.com/users/kiritsuku/received_events",
                "repos_url": "https://api.github.com/users/kiritsuku/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kiritsuku/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kiritsuku/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kiritsuku",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`winlayout()` exists now, but is there a way to restore it?",
            "created_at": "2023-07-28T23:46:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-1656469891",
            "id": 1656469891,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "IC_kwDOAPphoM5iu7mD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1656469891/reactions"
            },
            "updated_at": "2023-07-28T23:46:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1656469891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> winlayout() exists now, but is there a way to restore it?\r\n\r\nNot sure if this is what you are looking for, but in my plugin, I basically wanted to display \"my\" windows on `open()` and restore the previous layout on `close`\r\n\r\nI basically came up with [this](https://github.com/kndndrj/nvim-dbee/blob/master/lua/dbee/utils/layout.lua) file.\r\nFirst you call `M.save()` to get an object with the layout and then you can call `M.restore()` with that object.\r\n\r\nIt sortof works, but has some edge cases, like layout saved if floating windows exist.\r\n\r\nI based this solution based on someone's stack-overflow answer in vimscript and adapted it to lua (and added a few changes). Not sure where I found that btw.\r\n\r\nAnyways, hope you find that useful.",
            "created_at": "2023-09-04T05:42:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/3933#issuecomment-1704644804",
            "id": 1704644804,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3933",
            "node_id": "IC_kwDOAPphoM5lmtDE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704644804/reactions"
            },
            "updated_at": "2023-09-04T05:42:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704644804",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61655264?v=4",
                "events_url": "https://api.github.com/users/kndndrj/events{/privacy}",
                "followers_url": "https://api.github.com/users/kndndrj/followers",
                "following_url": "https://api.github.com/users/kndndrj/following{/other_user}",
                "gists_url": "https://api.github.com/users/kndndrj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kndndrj",
                "id": 61655264,
                "login": "kndndrj",
                "node_id": "MDQ6VXNlcjYxNjU1MjY0",
                "organizations_url": "https://api.github.com/users/kndndrj/orgs",
                "received_events_url": "https://api.github.com/users/kndndrj/received_events",
                "repos_url": "https://api.github.com/users/kndndrj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kndndrj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kndndrj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kndndrj",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/3933/comments",
    "created_at": "2016-01-02T23:55:14Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/3933/events",
    "html_url": "https://github.com/neovim/neovim/issues/3933",
    "id": 124618458,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/3933/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUxMjQ2MTg0NTg=",
    "number": 3933,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 6,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 6,
        "url": "https://api.github.com/repos/neovim/neovim/issues/3933/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/3933/timeline",
    "title": "Expose window layout",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/3933",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/488530?v=4",
        "events_url": "https://api.github.com/users/kiritsuku/events{/privacy}",
        "followers_url": "https://api.github.com/users/kiritsuku/followers",
        "following_url": "https://api.github.com/users/kiritsuku/following{/other_user}",
        "gists_url": "https://api.github.com/users/kiritsuku/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kiritsuku",
        "id": 488530,
        "login": "kiritsuku",
        "node_id": "MDQ6VXNlcjQ4ODUzMA==",
        "organizations_url": "https://api.github.com/users/kiritsuku/orgs",
        "received_events_url": "https://api.github.com/users/kiritsuku/received_events",
        "repos_url": "https://api.github.com/users/kiritsuku/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kiritsuku/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kiritsuku/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kiritsuku",
        "user_view_type": "public"
    }
}