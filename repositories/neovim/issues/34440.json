{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nWhen running Nvim with ASAN and `UBSAN_OPTIONS=print_stacktrace=1 ASAN_OPTIONS=abort_on_error=1:log_path=/tmp/nvim_asan`, ASAN detects a heap-use-after-free on exit:\n```\n=================================================================\n==808198==ERROR: AddressSanitizer: heap-use-after-free on address 0x7b9b606b0b90 at pc 0x55ff71a5400d bp 0x7fff9e5ebf80 sp 0x7fff9e5eb740\nREAD of size 1 at 0x7b9b606b0b90 thread T0\n    #0 0x55ff71a5400c in strcmp.part.0 asan_interceptors.cpp.o\n    #1 0x55ff726d2963 in strequal **/src/nvim/memory.c:550:49\n    #2 0x55ff72558278 in mh_find_bucket_cstr_t **/src/nvim/map_key_impl.c.h:35:16\n    #3 0x55ff725596f0 in mh_put_cstr_t **/src/nvim/map_key_impl.c.h:101:18\n    #4 0x55ff7255bcbc in map_put_ref_cstr_tptr_t **/src/nvim/map_value_impl.c.h:32:16\n    #5 0x55ff72beb180 in shada_read_when_writing **/src/nvim/shada.c:1909:20\n    #6 0x55ff72bc6da6 in shada_write **/src/nvim/shada.c:2589:39\n    #7 0x55ff72bbf567 in shada_write_file **/src/nvim/shada.c:2848:35\n    #8 0x55ff72547d0f in getout **/src/nvim/main.c:781:5\n    #9 0x55ff7224cb83 in ex_quit **/src/nvim/ex_docmd.c:4788:7\n    #10 0x55ff72217cdb in execute_cmd0 **/src/nvim/ex_docmd.c:1724:7\n    #11 0x55ff721f7b0f in do_one_cmd **/src/nvim/ex_docmd.c:2368:7\n    #12 0x55ff721ecb25 in do_cmdline **/src/nvim/ex_docmd.c:675:20\n    #13 0x55ff721f0c68 in do_cmdline_cmd **/src/nvim/ex_docmd.c:378:10\n    #14 0x55ff730d0ade in do_window **/src/nvim/window.c:295:5\n    #15 0x55ff727d3559 in nv_window **/src/nvim/normal.c:5142:5\n    #16 0x55ff727cb49a in normal_execute **/src/nvim/normal.c:1246:3\n    #17 0x55ff72cf54b5 in state_enter **/src/nvim/state.c:102:26\n    #18 0x55ff727ae081 in normal_enter **/src/nvim/normal.c:523:3\n    #19 0x55ff725352d9 in main **/src/nvim/main.c:655:3\n    #20 0x7f5b614356b4 in __libc_start_call_main /usr/src/debug/glibc/glibc/csu/../sysdeps/nptl/libc_start_call_main.h:58:16\n    #21 0x7f5b61435768 in __libc_start_main /usr/src/debug/glibc/glibc/csu/../csu/libc-start.c:360:3\n    #22 0x55ff7198c004 in _start (**/build/bin/nvim+0xc67004) (BuildId: 5ace9cfa12a6e27c64b78423dedd3ac098aa9137)\n\n0x7b9b606b0b90 is located 0 bytes inside of 36-byte region [0x7b9b606b0b90,0x7b9b606b0bb4)\nfreed by thread T0 here:\n    #0 0x55ff71a8c28d in free.part.0 asan_malloc_linux.cpp.o\n    #1 0x55ff726d0e10 in xfree **/src/nvim/memory.c:161:3\n    #2 0x55ff72bee560 in shada_free_shada_entry **/src/nvim/shada.c:2961:5\n    #3 0x55ff72bec495 in shada_read_when_writing **/src/nvim/shada.c:1947:19\n    #4 0x55ff72bc6da6 in shada_write **/src/nvim/shada.c:2589:39\n    #5 0x55ff72bbf567 in shada_write_file **/src/nvim/shada.c:2848:35\n    #6 0x55ff72547d0f in getout **/src/nvim/main.c:781:5\n    #7 0x55ff7224cb83 in ex_quit **/src/nvim/ex_docmd.c:4788:7\n    #8 0x55ff72217cdb in execute_cmd0 **/src/nvim/ex_docmd.c:1724:7\n    #9 0x55ff721f7b0f in do_one_cmd **/src/nvim/ex_docmd.c:2368:7\n    #10 0x55ff721ecb25 in do_cmdline **/src/nvim/ex_docmd.c:675:20\n    #11 0x55ff721f0c68 in do_cmdline_cmd **/src/nvim/ex_docmd.c:378:10\n    #12 0x55ff730d0ade in do_window **/src/nvim/window.c:295:5\n    #13 0x55ff727d3559 in nv_window **/src/nvim/normal.c:5142:5\n    #14 0x55ff727cb49a in normal_execute **/src/nvim/normal.c:1246:3\n    #15 0x55ff72cf54b5 in state_enter **/src/nvim/state.c:102:26\n    #16 0x55ff727ae081 in normal_enter **/src/nvim/normal.c:523:3\n    #17 0x55ff725352d9 in main **/src/nvim/main.c:655:3\n    #18 0x7f5b614356b4 in __libc_start_call_main /usr/src/debug/glibc/glibc/csu/../sysdeps/nptl/libc_start_call_main.h:58:16\n    #19 0x7f5b61435768 in __libc_start_main /usr/src/debug/glibc/glibc/csu/../csu/libc-start.c:360:3\n    #20 0x55ff7198c004 in _start (**/build/bin/nvim+0xc67004) (BuildId: 5ace9cfa12a6e27c64b78423dedd3ac098aa9137)\n\npreviously allocated by thread T0 here:\n    #0 0x55ff71a8d1f5 in malloc (**/build/bin/nvim+0xd681f5) (BuildId: 5ace9cfa12a6e27c64b78423dedd3ac098aa9137)\n    #1 0x55ff726d0ae4 in try_malloc **/src/nvim/memory.c:115:15\n    #2 0x55ff726d0d44 in xmalloc **/src/nvim/memory.c:149:15\n    #3 0x55ff726d115a in xmallocz **/src/nvim/memory.c:221:15\n    #4 0x55ff726d1283 in xmemdupz **/src/nvim/memory.c:239:17\n    #5 0x55ff72bf2b52 in shada_read_next_item **/src/nvim/shada.c:3319:36\n    #6 0x55ff72be6e9c in shada_read_when_writing **/src/nvim/shada.c:1777:22\n    #7 0x55ff72bc6da6 in shada_write **/src/nvim/shada.c:2589:39\n    #8 0x55ff72bbf567 in shada_write_file **/src/nvim/shada.c:2848:35\n    #9 0x55ff72547d0f in getout **/src/nvim/main.c:781:5\n    #10 0x55ff7224cb83 in ex_quit **/src/nvim/ex_docmd.c:4788:7\n    #11 0x55ff72217cdb in execute_cmd0 **/src/nvim/ex_docmd.c:1724:7\n    #12 0x55ff721f7b0f in do_one_cmd **/src/nvim/ex_docmd.c:2368:7\n    #13 0x55ff721ecb25 in do_cmdline **/src/nvim/ex_docmd.c:675:20\n    #14 0x55ff721f0c68 in do_cmdline_cmd **/src/nvim/ex_docmd.c:378:10\n    #15 0x55ff730d0ade in do_window **/src/nvim/window.c:295:5\n    #16 0x55ff727d3559 in nv_window **/src/nvim/normal.c:5142:5\n    #17 0x55ff727cb49a in normal_execute **/src/nvim/normal.c:1246:3\n    #18 0x55ff72cf54b5 in state_enter **/src/nvim/state.c:102:26\n    #19 0x55ff727ae081 in normal_enter **/src/nvim/normal.c:523:3\n    #20 0x55ff725352d9 in main **/src/nvim/main.c:655:3\n    #21 0x7f5b614356b4 in __libc_start_call_main /usr/src/debug/glibc/glibc/csu/../sysdeps/nptl/libc_start_call_main.h:58:16\n    #22 0x7f5b61435768 in __libc_start_main /usr/src/debug/glibc/glibc/csu/../csu/libc-start.c:360:3\n    #23 0x55ff7198c004 in _start (**/build/bin/nvim+0xc67004) (BuildId: 5ace9cfa12a6e27c64b78423dedd3ac098aa9137)\n\nSUMMARY: AddressSanitizer: heap-use-after-free asan_interceptors.cpp.o in strcmp.part.0\nShadow bytes around the buggy address:\n  0x7b9b606b0900: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd\n  0x7b9b606b0980: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa\n  0x7b9b606b0a00: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd\n  0x7b9b606b0a80: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fd\n  0x7b9b606b0b00: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd\n=>0x7b9b606b0b80: fa fa[fd]fd fd fd fd fa fa fa fd fd fd fd fd fa\n  0x7b9b606b0c00: fa fa 00 00 00 00 00 07 fa fa 00 00 00 00 00 07\n  0x7b9b606b0c80: fa fa 00 00 00 00 00 07 fa fa 00 00 00 00 00 07\n  0x7b9b606b0d00: fa fa 00 00 00 00 00 07 fa fa 00 00 00 00 00 07\n  0x7b9b606b0d80: fa fa 00 00 00 00 00 07 fa fa 00 00 00 00 00 07\n  0x7b9b606b0e00: fa fa 00 00 00 00 00 07 fa fa 00 00 00 00 00 07\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==808198==ABORTING\n```\n\nThis is bisected to <https://github.com/neovim/neovim/commit/b98eefd8030c398735f4069ddc05b3e5b7a511a5> (#34373).\n\nNote that the `abort_on_error=1` is required for bisecting, otherwise the ASAN log somehow isn't written before <https://github.com/neovim/neovim/commit/2dba5abcb2ee8d568b8f0181223930b598ea3c90>, and the heap-use-after-free is not observable.\n\n### Steps to reproduce\n\nNot available\n\n### Expected behavior\n\nNo heap-use-after-free\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-565+gfb7a234f01\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nkitty 0.42.1\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nbuild from repo",
    "closed_at": "2025-06-11T22:31:49Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "If just add `buf->b_p_bl` at 2492 instead using `ignore_buf`, will it also happen? I haven't reproduced this crash yet. need tried some times ...",
            "created_at": "2025-06-11T06:58:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/34440#issuecomment-2961472054",
            "id": 2961472054,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34440",
            "node_id": "IC_kwDOAPphoM6whHo2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2961472054/reactions"
            },
            "updated_at": "2025-06-11T06:58:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2961472054",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The crash still happens if I revert the first `ignore_buf()`:\n```diff\ndiff --git a/src/nvim/shada.c b/src/nvim/shada.c\nindex 2e887fab10..961152b71d 100644\n--- a/src/nvim/shada.c\n+++ b/src/nvim/shada.c\n@@ -2489,7 +2489,8 @@ static ShaDaWriteResult shada_write(FileDescriptor *const sd_writer,\n         fname = fm.fname;\n       } else {\n         const buf_T *const buf = buflist_findnr(fm.fmark.fnum);\n-        if (ignore_buf(buf, &removable_bufs)) {\n+        if (buf == NULL || buf->b_ffname == NULL\n+            || set_has(ptr_t, &removable_bufs, (ptr_t)buf)) {\n           continue;\n         }\n         fname = buf->b_ffname;\n```\n\nIf I revert the second `ignore_buf()`, the crash doesn't happen:\n```diff\ndiff --git a/src/nvim/shada.c b/src/nvim/shada.c\nindex 2e887fab10..051324cd6c 100644\n--- a/src/nvim/shada.c\n+++ b/src/nvim/shada.c\n@@ -2525,7 +2525,7 @@ static ShaDaWriteResult shada_write(FileDescriptor *const sd_writer,\n   // Initialize buffers\n   if (num_marked_files > 0) {\n     FOR_ALL_BUFFERS(buf) {\n-      if (ignore_buf(buf, &removable_bufs)) {\n+      if (buf->b_ffname == NULL || set_has(ptr_t, &removable_bufs, buf)) {\n         continue;\n       }\n       const void *local_marks_iter = NULL;\n```\n\nIf I revert the second `ignore_buf()` and then add `!buf->p_b_bl`, the crash also happens:\n```diff\ndiff --git a/src/nvim/shada.c b/src/nvim/shada.c\nindex 2e887fab10..4209a416e2 100644\n--- a/src/nvim/shada.c\n+++ b/src/nvim/shada.c\n@@ -2525,7 +2525,7 @@ static ShaDaWriteResult shada_write(FileDescriptor *const sd_writer,\n   // Initialize buffers\n   if (num_marked_files > 0) {\n     FOR_ALL_BUFFERS(buf) {\n-      if (ignore_buf(buf, &removable_bufs)) {\n+      if (buf->b_ffname == NULL || !buf->b_p_bl || set_has(ptr_t, &removable_bufs, buf)) {\n         continue;\n       }\n       const void *local_marks_iter = NULL;\n```",
            "created_at": "2025-06-11T07:28:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/34440#issuecomment-2961546707",
            "id": 2961546707,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34440",
            "node_id": "IC_kwDOAPphoM6whZ3T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2961546707/reactions"
            },
            "updated_at": "2025-06-11T07:33:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2961546707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "does this still crash 🤔\n\n```diff\ndiff --git a/src/nvim/shada.c b/src/nvim/shada.c\nindex 2e887fab10..7414c9f5f5 100644\n--- a/src/nvim/shada.c\n+++ b/src/nvim/shada.c\n@@ -1906,7 +1906,11 @@ static inline ShaDaWriteResult shada_read_when_writing(FileDescriptor *const sd_\n       }\n       const char *const fname = entry.data.filemark.fname;\n       cstr_t *key = NULL;\n-      ptr_t *val = pmap_put_ref(cstr_t)(&wms->file_marks, fname, &key, NULL);\n+      bool new_item = false;\n+      ptr_t *val = pmap_put_ref(cstr_t)(&wms->file_marks, fname, &key, &new_item);\n+      if (new_item) {\n+        *key = xstrdup(fname);\n+      }\n       if (*val == NULL) {\n         *val = xcalloc(1, sizeof(FileMarks));\n       }\n@@ -2530,7 +2534,12 @@ static ShaDaWriteResult shada_write(FileDescriptor *const sd_writer,\n       }\n       const void *local_marks_iter = NULL;\n       const char *const fname = buf->b_ffname;\n-      ptr_t *val = pmap_put_ref(cstr_t)(&wms->file_marks, fname, NULL, NULL);\n+      cstr_t *map_key = NULL;\n+      bool new_item = false;\n+      ptr_t *val = pmap_put_ref(cstr_t)(&wms->file_marks, fname, &map_key, &new_item);\n+      if (new_item) {\n+        *map_key = xstrdup(fname);\n+      }\n       if (*val == NULL) {\n         *val = xcalloc(1, sizeof(FileMarks));\n       }\n@@ -2714,6 +2723,10 @@ shada_write_exit:\n   map_foreach_value(&wms->file_marks, val, {\n     xfree(val);\n   })\n+  const char *stored_key = NULL;\n+  map_foreach_key(&wms->file_marks, stored_key, {\n+      xfree((char *)stored_key);\n+  })\n   map_destroy(cstr_t, &wms->file_marks);\n   set_destroy(ptr_t, &removable_bufs);\n   packer.packer_flush(&packer);\n```",
            "created_at": "2025-06-11T08:36:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/34440#issuecomment-2961735801",
            "id": 2961735801,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34440",
            "node_id": "IC_kwDOAPphoM6wiIB5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2961735801/reactions"
            },
            "updated_at": "2025-06-11T08:36:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2961735801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "this seems like work. i don't get crash report.",
            "created_at": "2025-06-11T10:29:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/34440#issuecomment-2962132446",
            "id": 2962132446,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34440",
            "node_id": "IC_kwDOAPphoM6wjo3e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2962132446/reactions"
            },
            "updated_at": "2025-06-11T10:30:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2962132446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry I forgot to reply. It did fix the problem.",
            "created_at": "2025-06-11T12:14:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/34440#issuecomment-2962454926",
            "id": 2962454926,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34440",
            "node_id": "IC_kwDOAPphoM6wk3mO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2962454926/reactions"
            },
            "updated_at": "2025-06-11T12:14:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2962454926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34440/comments",
    "created_at": "2025-06-11T02:47:56Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34440/events",
    "html_url": "https://github.com/neovim/neovim/issues/34440",
    "id": 3135312646,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "We need minimal steps to reproduce the issue",
            "id": 298863445,
            "name": "needs:repro",
            "node_id": "MDU6TGFiZWwyOTg4NjM0NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:repro"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "f9d0c4",
            "default": false,
            "description": "wrong behavior that was introduced in a previous commit (please bisect)",
            "id": 619474658,
            "name": "bug-regression",
            "node_id": "MDU6TGFiZWw2MTk0NzQ2NTg=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-regression"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue has been tracked to a specific commit",
            "id": 1481421490,
            "name": "has:bisected",
            "node_id": "MDU6TGFiZWwxNDgxNDIxNDkw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:bisected"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "save/restore editor state: shada, context, ctx, sessions, mksession",
            "id": 4449264023,
            "name": "editor-state",
            "node_id": "LA_kwDOAPphoM8AAAABCTJhlw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/editor-state"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34440/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 71,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 68,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-06-15T10:55:03Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM664RMG",
    "number": 34440,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34440/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34440/timeline",
    "title": "shada: heap-use-after-free",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-11T22:31:49Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34440",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    }
}