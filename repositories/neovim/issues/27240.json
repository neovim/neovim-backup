{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nhttps://github.com/microsoft/vscode/issues/199610 explains the problem, but the TLDR is that some language servers (like the TypeScript one) don't perform any truncation on inlay hints, which might result on several lines of virtual text.\n\n### Expected behavior\n\nMy proposal is to add a configuration setting (and hence easily customizable with `vim.lsp.with`) that limits the length of inlay hints.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "And as always, if people find this reasonable I'm more than happy to implement it :)",
            "created_at": "2024-01-28T03:10:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/27240#issuecomment-1913429051",
            "id": 1913429051,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27240",
            "node_id": "IC_kwDOAPphoM5yDJw7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 8,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1913429051/reactions"
            },
            "updated_at": "2024-01-28T03:10:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1913429051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Did anything come of this? looks like the PR was cancelled. Curious if you have any workarounds currently? I use TS mainly and have to disable `includeInlayVariableTypeHints` because many types/interfaces are too large inline especially for objects. I would love to be able to just add like a max length of 30 or 40 characters which for most types would give me what I need but for larger ones I atleast get an idea of the type/shape from the first 30 or 40 characters.",
            "created_at": "2024-04-14T01:40:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/27240#issuecomment-2053842392",
            "id": 2053842392,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27240",
            "node_id": "IC_kwDOAPphoM56ayXY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053842392/reactions"
            },
            "updated_at": "2024-04-14T01:40:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053842392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@GitMurf as a user (and maintainer) of TypeScript I understand your pain. \r\n\r\nThere's still a design discussion of whether this truncation should happen on the server or the client: The client would be able to provide \"more universal\" truncation mechanisms for several language servers, but the server is able to provide a \"smarter\" truncation based on what's semantically relevant.\r\n\r\nI'm <s>partly responsible</s> (okay yeah it's my fault) for the issue with TypeScript, since I removed the truncation when working on [interactive inlay hints](https://github.com/microsoft/TypeScript/pull/55141). However, the TypeScript server did nothing smart about truncation; [it had a hard-coded limit of 30 characters and just cut the inlay hint label after that](https://github.com/MariaSolOs/TypeScript/blob/5e8c261b6ab746213f19ee3501eb8c48a6215dd7/src/services/inlayHints.ts#L182).\r\n\r\nAll that being said, the following is **my personal hack**, which I don't recommend as a long term solution and I absolve myself from all negative consequences if you decide to copy-paste this into your dotfiles: https://github.com/MariaSolOs/dotfiles/blob/88646ab9bd20d6f36dacea0cdee8b6af3ffc4c50/.config/nvim/lua/lsp.lua#L275-L292\r\n\r\nThe above code should kind of reproduce the previous TypeScript behaviour.",
            "created_at": "2024-04-14T02:11:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/27240#issuecomment-2053854899",
            "id": 2053854899,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27240",
            "node_id": "IC_kwDOAPphoM56a1az",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053854899/reactions"
            },
            "updated_at": "2024-04-14T02:11:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053854899",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@MariaSolOs you are awesome! Love your work btw on both TS and neovim! saw your talk in the neovim annual conference. Appreciate all you do! That \"hack\" is exactly what I was looking for now!\r\n\r\nI also think an alternative \"solution\" (or helpful) would be this gh issue (https://github.com/neovim/neovim/issues/28261) for choosing to push inlay hints to end of line. Definitely not perfect, and lose some value, but it would be less disruptive to the code flow IMO.\r\n\r\nLastly, I am also using your toggle on insert mode autocmds from here: https://github.com/neovim/neovim/issues/24305 Thanks!",
            "created_at": "2024-04-14T02:24:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/27240#issuecomment-2053860177",
            "id": 2053860177,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27240",
            "node_id": "IC_kwDOAPphoM56a2tR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053860177/reactions"
            },
            "updated_at": "2024-04-14T02:24:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053860177",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@GitMurf thanks for the kind words, it truly means a lot <3\r\n\r\nI've replied to the issue you linked. I'm trying to make everyone happy, remaining on what the LSP currently allows (we can always propose for a change though ;) ).",
            "created_at": "2024-04-14T02:52:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/27240#issuecomment-2053870048",
            "id": 2053870048,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27240",
            "node_id": "IC_kwDOAPphoM56a5Hg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053870048/reactions"
            },
            "updated_at": "2024-04-14T02:52:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053870048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just giving my 2c after recently discovering inlay hints\n\nI think the server should not truncate the label, truncation should happen in the editor.\nThis gives consistency between different language servers, and also allows it to be controlled per project such as for projects that prefer long lines or short lines for example.\nIt also means that once interactive inlay hints become a thing (I don't think it's a thing for neovim yet), then you can go to definition inside the inlay hint, maybe in a popup or similar. This solves one of the big problems with hover where you can't go to definition due to it just being markdown, so having inlay hint providing a go to definition point, including for long types would be useful and feels like an editor concern.\n\nThanks for all the work on this!",
            "created_at": "2024-12-15T04:15:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/27240#issuecomment-2543441035",
            "id": 2543441035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27240",
            "node_id": "IC_kwDOAPphoM6XmdSL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2543441035/reactions"
            },
            "updated_at": "2024-12-15T04:15:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2543441035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4915682?v=4",
                "events_url": "https://api.github.com/users/ayroblu/events{/privacy}",
                "followers_url": "https://api.github.com/users/ayroblu/followers",
                "following_url": "https://api.github.com/users/ayroblu/following{/other_user}",
                "gists_url": "https://api.github.com/users/ayroblu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ayroblu",
                "id": 4915682,
                "login": "ayroblu",
                "node_id": "MDQ6VXNlcjQ5MTU2ODI=",
                "organizations_url": "https://api.github.com/users/ayroblu/orgs",
                "received_events_url": "https://api.github.com/users/ayroblu/received_events",
                "repos_url": "https://api.github.com/users/ayroblu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ayroblu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ayroblu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ayroblu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "As far as I know, inlay hints are implemented using virtual text in nvim since 0.10.\nThe LSP output shouldn't be the one that's truncated, but the virtual text.\nLong inlay hints can happen with complex generic types.\nMost other IDEs truncate these (although not in a configurable manner) by adding text ellipsis to the right.\nHere is a screenshot of some code where some hints can push code (just a `{` in this case, but could be worse, with `const` declarations, obscuring important code):\n\n![Image](https://github.com/user-attachments/assets/d2f45b78-81da-4093-88f3-bb0d8563d305)\n\nHere is my AstroLSP config for some reference on what these hints might be:\n\n```lua\n---@type LazySpec\nreturn {\n  \"AstroNvim/astrolsp\",\n  ---@type AstroLSPOpts\n  opts = {\n    config = {\n      vtsls = {\n        settings = {\n          typescript = {\n            updateImportsOnFileMove = { enabled = \"always\" },\n            inlayHints = {\n              parameterNames = { enabled = \"all\" },\n              parameterTypes = { enabled = false },\n              variableTypes = { enabled = true },\n              propertyDeclarationTypes = { enabled = true },\n              functionLikeReturnTypes = { enabled = true },\n              enumMemberValues = { enabled = true },\n            },\n          },\n          javascript = {\n            updateImportsOnFileMove = { enabled = \"always\" },\n            inlayHints = {\n              parameterNames = { enabled = \"literals\" },\n              parameterTypes = { enabled = false },\n              variableTypes = { enabled = true },\n              propertyDeclarationTypes = { enabled = true },\n              functionLikeReturnTypes = { enabled = true },\n              enumMemberValues = { enabled = true },\n            },\n          },\n          vtsls = {\n            enableMoveToFileCodeAction = true,\n          },\n        },\n      },\n    },\n  }\n}\n```\n\nIt would more awesome if we could control the truncation for each type. So for example with `const`s we could have it very short, so we run less risk of pushing important code to the right, while with function return types we could have it a bit longer as it would usually push nothing but an opening brace.\n\nI know I might be asking for too much but I'm not up for doing this myself any time soon, and I only hope my feedback can be useful while I pray someone else implements it. 😅 ",
            "created_at": "2025-02-03T09:51:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/27240#issuecomment-2630456888",
            "id": 2630456888,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27240",
            "node_id": "IC_kwDOAPphoM6cyZY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2630456888/reactions"
            },
            "updated_at": "2025-02-03T09:51:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2630456888",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/174723639?v=4",
                "events_url": "https://api.github.com/users/pmanole-volvocars/events{/privacy}",
                "followers_url": "https://api.github.com/users/pmanole-volvocars/followers",
                "following_url": "https://api.github.com/users/pmanole-volvocars/following{/other_user}",
                "gists_url": "https://api.github.com/users/pmanole-volvocars/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pmanole-volvocars",
                "id": 174723639,
                "login": "pmanole-volvocars",
                "node_id": "U_kgDOCmoSNw",
                "organizations_url": "https://api.github.com/users/pmanole-volvocars/orgs",
                "received_events_url": "https://api.github.com/users/pmanole-volvocars/received_events",
                "repos_url": "https://api.github.com/users/pmanole-volvocars/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pmanole-volvocars/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pmanole-volvocars/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pmanole-volvocars",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27240/comments",
    "created_at": "2024-01-28T02:07:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27240/events",
    "html_url": "https://github.com/neovim/neovim/issues/27240",
    "id": 2103918716,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27240/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM59Z0B8",
    "number": 27240,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 34,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 35,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27240/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27240/timeline",
    "title": "Truncate long inlay hints",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27240",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
        "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
        "followers_url": "https://api.github.com/users/MariaSolOs/followers",
        "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
        "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MariaSolOs",
        "id": 62502207,
        "login": "MariaSolOs",
        "node_id": "MDQ6VXNlcjYyNTAyMjA3",
        "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
        "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
        "repos_url": "https://api.github.com/users/MariaSolOs/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MariaSolOs",
        "user_view_type": "public"
    }
}