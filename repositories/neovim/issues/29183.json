{
    "active_lock_reason": "resolved",
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\n`vim.lsp.completion` is essentially a completion engine upstreamed into core. Right now it can’t really replace external completion engines like nvim-cmp since it doesn’t allow other plugins to register new completion sources. That’s really unfortunate, since unified API for providing completions could solve the N*M problem here (N completion providers communicating with M completion engines).\n\n### Expected behavior\n\n- `vim.lsp.completion` gains an API that allows plugins to register their own completion sources. Probably a couple of them (like “buffer words” or “FS paths”) could be provided with default runtime.\r\n- Ideally it also provides an API to allow an external completion engine to query all registered completion sources or register itself as a “completion UI”, similar to `vim.ui` APIs. That would allow completion UIs that are too complex to be accepted into core to benefit from the unified API.\r\n- It probably makes sense to move `vim.lsp.completion` to `vim.completion`, as it happened with `vim.lsp.diagnostics`.",
    "closed_at": "2024-06-04T09:50:38Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
        "events_url": "https://api.github.com/users/clason/events{/privacy}",
        "followers_url": "https://api.github.com/users/clason/followers",
        "following_url": "https://api.github.com/users/clason/following{/other_user}",
        "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/clason",
        "id": 2361214,
        "login": "clason",
        "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
        "organizations_url": "https://api.github.com/users/clason/orgs",
        "received_events_url": "https://api.github.com/users/clason/received_events",
        "repos_url": "https://api.github.com/users/clason/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/clason",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": ">  Right now it can’t really replace external completion engines like nvim-cmp since it doesn’t allow other plugins to register new completion sources.\r\n\r\nAnd it's not intended to; the module relies on trigger characters according to the LSP spec. It is planned to expose parts of this (where it makes sense) for other plugins to build on, but (at this moment) _not_ to turn this into an autocomplete plugin like nvim-cmp.\r\n\r\nThe general issue around completion APIs is already tracked in https://github.com/neovim/neovim/issues/25670.",
            "created_at": "2024-06-04T09:50:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/29183#issuecomment-2147105394",
            "id": 2147105394,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29183",
            "node_id": "IC_kwDOAPphoM5_-jpy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2147105394/reactions"
            },
            "updated_at": "2024-06-04T09:52:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2147105394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Additional sources can also be implemented as additional language server. It's still questionable if a additional separate abstraction would add anything over that. \r\n\r\nRelates a bit to https://github.com/neovim/neovim/pull/24338",
            "created_at": "2024-06-04T15:15:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/29183#issuecomment-2147794390",
            "id": 2147794390,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29183",
            "node_id": "IC_kwDOAPphoM6ABL3W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2147794390/reactions"
            },
            "updated_at": "2024-06-04T15:15:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2147794390",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "there has a new server do the same thing https://github.com/antonk52/basics-language-server/",
            "created_at": "2024-10-13T07:14:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/29183#issuecomment-2408856865",
            "id": 2408856865,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29183",
            "node_id": "IC_kwDOAPphoM6PlD0h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2408856865/reactions"
            },
            "updated_at": "2024-10-13T07:14:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2408856865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "you can also leverage https://github.com/nvimtools/none-ls.nvim\n\n```lua\nlocal null_ls = require \"null-ls\"\nnull_ls.setup {\n  log_level = \"off\",\n  sources = {\n    null_ls.builtins.diagnostics.tidy,\n    {\n      name = \"basic_snippets\",\n      filetypes = { \"lua\" },\n      method = null_ls.methods.COMPLETION,\n      generator = {\n        async = true,\n        --- @param params NullLsParams\n        --- @param done fun(lsp.CompletionList)\n        fn = function(params, done)\n          ---@type lsp.CompletionItem[]\n          local item_candidates = {\n            {\n              label = \"todo\",\n              kind = vim.lsp.protocol.CompletionItemKind.Snippet,\n              insertTextFormat = vim.lsp.protocol.InsertTextFormat.Snippet,\n              detail = \"-- TODO …\",\n              insertText = \"-- TODO $0\",\n            },\n            {\n              label = \"fun\",\n              kind = vim.lsp.protocol.CompletionItemKind.Snippet,\n              insertTextFormat = vim.lsp.protocol.InsertTextFormat.Snippet,\n              detail = \"function() … end\",\n              insertText = \"function($1)\\n\\t$0\\nend\\n\",\n            },\n          }\n          ---@type lsp.CompletionItem[]\n          local items = vim\n            .iter(item_candidates)\n            :filter(\n              ---@param i lsp.CompletionItem\n              ---@return boolean\n              function(i)\n                return #vim.fn.matchfuzzy({ i.label }, params.word_to_complete or \"\") > 0\n              end\n            )\n            :totable()\n          done {\n            { items = items, isIncomplete = #items == 0 },\n          }\n        end,\n      },\n    },\n  },\n}\n```\n\ndo mind that you'll probably need to use `autotrigger = true` and add chars to trigger chars:\n\n```lua\nvim.api.nvim_create_autocmd(\"LspAttach\", {\n  group = vim.api.nvim_create_augroup(\"My LSP completion\", { clear = true }),\n  callback = function(args)\n    local cliente = assert(vim.lsp.get_client_by_id(args.data.client_id))\n    local bufnr = args.buf\n    if cliente:supports_method \"textDocument/completion\" then\n      -- :he lsp-completion\n      -- :he lsp-format\n      local chars = {}\n      for i = 32, 126 do\n        table.insert(chars, string.char(i))\n      end\n      cliente.server_capabilities.completionProvider.triggerCharacters = chars\n      vim.lsp.completion.enable(true, cliente.id, bufnr, { autotrigger = true })\n    end\n  end,\n})\n```\n",
            "created_at": "2025-05-10T03:35:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/29183#issuecomment-2868299688",
            "id": 2868299688,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29183",
            "node_id": "IC_kwDOAPphoM6q9seo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868299688/reactions"
            },
            "updated_at": "2025-05-10T03:35:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868299688",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1232306?v=4",
                "events_url": "https://api.github.com/users/FelipeLema/events{/privacy}",
                "followers_url": "https://api.github.com/users/FelipeLema/followers",
                "following_url": "https://api.github.com/users/FelipeLema/following{/other_user}",
                "gists_url": "https://api.github.com/users/FelipeLema/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/FelipeLema",
                "id": 1232306,
                "login": "FelipeLema",
                "node_id": "MDQ6VXNlcjEyMzIzMDY=",
                "organizations_url": "https://api.github.com/users/FelipeLema/orgs",
                "received_events_url": "https://api.github.com/users/FelipeLema/received_events",
                "repos_url": "https://api.github.com/users/FelipeLema/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/FelipeLema/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FelipeLema/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/FelipeLema",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29183/comments",
    "created_at": "2024-06-04T09:30:21Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29183/events",
    "html_url": "https://github.com/neovim/neovim/issues/29183",
    "id": 2333031321,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29183/labels{/name}",
    "locked": true,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6LDzuZ",
    "number": 29183,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 5,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 5,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29183/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29183/timeline",
    "title": "Allow registering additional sources for `vim.lsp.completion`",
    "type": null,
    "updated_at": "2025-05-10T14:45:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29183",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12019211?v=4",
        "events_url": "https://api.github.com/users/GoldsteinE/events{/privacy}",
        "followers_url": "https://api.github.com/users/GoldsteinE/followers",
        "following_url": "https://api.github.com/users/GoldsteinE/following{/other_user}",
        "gists_url": "https://api.github.com/users/GoldsteinE/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/GoldsteinE",
        "id": 12019211,
        "login": "GoldsteinE",
        "node_id": "MDQ6VXNlcjEyMDE5MjEx",
        "organizations_url": "https://api.github.com/users/GoldsteinE/orgs",
        "received_events_url": "https://api.github.com/users/GoldsteinE/received_events",
        "repos_url": "https://api.github.com/users/GoldsteinE/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/GoldsteinE/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GoldsteinE/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/GoldsteinE",
        "user_view_type": "public"
    }
}