{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nAccording to `vim.diagnostic.Opts` documentation, float should accept a function as well. However passing a function would use the default config instead.\n\n```\n      â€¢ {float}?             (`boolean|vim.diagnostic.Opts.Float|fun(namespace: integer, bufnr:integer): vim.diagnostic.Opts.Float`)\n                             Options for floating windows. See\n                             |vim.diagnostic.Opts.Float|.\n```\n\n### Steps to reproduce\n\n1. Add following config to `init.lua`\n\n```\nvim.diagnostic.config({\n\tvirtual_text = false,\n\tfloat = function()\n\t\treturn {\n\t\t\tformat = function()\n\t\t\t\treturn 'hello world'\n\t\t\tend,\n\t\t}\n\tend,\n})\n```\n\n\n1. open a lua file, and create a syntax error in the file\n1. jump to the diagnostic\n\n\n### Expected behavior\n\nfloating window should show 'hello world' instead of the actual error message\n\n### Nvim version (nvim -v)\n\nv0.11.0-nightly+a8ace2c\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nNixOS unstable\n\n### Terminal name/version\n\nalacritty\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nNix",
    "closed_at": "2025-01-15T11:09:06Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
        "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
        "followers_url": "https://api.github.com/users/glepnir/followers",
        "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
        "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glepnir",
        "id": 41671631,
        "login": "glepnir",
        "node_id": "MDQ6VXNlcjQxNjcxNjMx",
        "organizations_url": "https://api.github.com/users/glepnir/orgs",
        "received_events_url": "https://api.github.com/users/glepnir/received_events",
        "repos_url": "https://api.github.com/users/glepnir/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glepnir",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Please just re-open (or ask to re-open if github doesn't allow) your issues/PRs, rather than creating new ones.",
            "created_at": "2025-01-15T09:52:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/32027#issuecomment-2592165463",
            "id": 2592165463,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32027",
            "node_id": "IC_kwDOAPphoM6agU5X",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592165463/reactions"
            },
            "updated_at": "2025-01-15T09:52:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592165463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk Sure. I'm going to keep this now. I could fix this issue. However, I'm going to need some help with testing.\n\nMy attempt is to show the popup by jumping to the diagnostic and validating the buffer content. However buffer content is `{ \"\" }`. Any idea how I can test this?\n\n```lua\nit('can add a function for float config', function()\n      local result = exec_lua(function()\n        vim.diagnostic.config({\n          float = function()\n            return {\n              format = function(diagnostic)\n                if diagnostic.severity == vim.diagnostic.severity.ERROR then\n                  return string.format('ðŸ”¥ %s', diagnostic.message)\n                end\n                return string.format('ðŸ‘€ %s', diagnostic.message)\n              end,\n            }\n          end,\n        })\n\n        vim.diagnostic.set(_G.diagnostic_ns, _G.diagnostic_bufnr, {\n          _G.make_warning('Warning', 0, 0, 0, 0),\n          _G.make_error('Error', 1, 0, 1, 0),\n        })\n\n        local bufnr = vim.api.nvim_create_buf(true, false)\n\n        vim.diagnostic.jump({\n          count = 1,\n          float = {\n            bufnr = bufnr,\n          },\n        })\n\n        local content = vim.api.nvim_buf_get_lines(bufnr, 0, -1, false)\n        print('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>')\n        vim.print(content)\n      end)\n      -- eq(' ðŸ‘€ Warning', result[1][3][1])\n      -- eq(' ðŸ”¥ Error', result[2][3][1])\n    end)\n```",
            "created_at": "2025-01-15T10:08:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/32027#issuecomment-2592209036",
            "id": 2592209036,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32027",
            "node_id": "IC_kwDOAPphoM6agfiM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592209036/reactions"
            },
            "updated_at": "2025-01-15T10:08:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592209036",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18459807?v=4",
                "events_url": "https://api.github.com/users/s1n7ax/events{/privacy}",
                "followers_url": "https://api.github.com/users/s1n7ax/followers",
                "following_url": "https://api.github.com/users/s1n7ax/following{/other_user}",
                "gists_url": "https://api.github.com/users/s1n7ax/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/s1n7ax",
                "id": 18459807,
                "login": "s1n7ax",
                "node_id": "MDQ6VXNlcjE4NDU5ODA3",
                "organizations_url": "https://api.github.com/users/s1n7ax/orgs",
                "received_events_url": "https://api.github.com/users/s1n7ax/received_events",
                "repos_url": "https://api.github.com/users/s1n7ax/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/s1n7ax/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/s1n7ax/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/s1n7ax",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> My attempt is to show the popup by jumping to the diagnostic and validating the buffer content. However buffer content is `{ \"\" }`. Any idea how I can test this?\n\ndoesn't need to be that complicated. just pass some function that sets a global to the window-id, then assert the window-id. the main point is to exercise the codepath.\n\nthe test should be 5 lines, not 20.",
            "created_at": "2025-01-15T10:14:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/32027#issuecomment-2592225590",
            "id": 2592225590,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32027",
            "node_id": "IC_kwDOAPphoM6agjk2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592225590/reactions"
            },
            "updated_at": "2025-01-15T10:14:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592225590",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "duplicate https://github.com/neovim/neovim/issues/31573",
            "created_at": "2025-01-15T11:09:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/32027#issuecomment-2592381256",
            "id": 2592381256,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32027",
            "node_id": "IC_kwDOAPphoM6ahJlI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592381256/reactions"
            },
            "updated_at": "2025-01-15T11:09:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592381256",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32027/comments",
    "created_at": "2025-01-15T09:51:00Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32027/events",
    "html_url": "https://github.com/neovim/neovim/issues/32027",
    "id": 2789328010,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as duplicates of other issues",
            "id": 3221613764,
            "name": "closed:duplicate",
            "node_id": "MDU6TGFiZWwzMjIxNjEzNzY0",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:duplicate"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32027/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6mQcSK",
    "number": 32027,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32027/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32027/timeline",
    "title": "Diagnostic float opts does not accept function",
    "updated_at": "2025-01-15T11:09:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32027",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/18459807?v=4",
        "events_url": "https://api.github.com/users/s1n7ax/events{/privacy}",
        "followers_url": "https://api.github.com/users/s1n7ax/followers",
        "following_url": "https://api.github.com/users/s1n7ax/following{/other_user}",
        "gists_url": "https://api.github.com/users/s1n7ax/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/s1n7ax",
        "id": 18459807,
        "login": "s1n7ax",
        "node_id": "MDQ6VXNlcjE4NDU5ODA3",
        "organizations_url": "https://api.github.com/users/s1n7ax/orgs",
        "received_events_url": "https://api.github.com/users/s1n7ax/received_events",
        "repos_url": "https://api.github.com/users/s1n7ax/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/s1n7ax/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/s1n7ax/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/s1n7ax",
        "user_view_type": "public"
    }
}