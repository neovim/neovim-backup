{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nCurrently, in the new vim.pack there is no easy way to get rid of unused plugins (ones you installed previously but have since removed the `vim.pack.add()` call from). You have to manually call `vim.pack.del()` for each plugin. There should be an option, like pressing `X` in the lazy.nvim window, to clean plugins, removing installed plugins that are unused.\n(Using latest nightly release)\n\n### Expected behavior\n\nWith this function mapped to `<leader>pc`, pressing those keys will show:\n\n`Remove unused plugins? (Y)es, [N]o:`\n\nand then if yes, \n`vim.pack: Removed plugin [plugin name]`\n\nHere is the function I made:\n``` \n-- ~/.config/nvim/init.lua\n\nlocal function pack_clean()\n    local active_plugins = {}\n    local unused_plugins = {}\n\n    for _, plugin in ipairs(vim.pack.get()) do\n        active_plugins[plugin.spec.name] = plugin.active\n    end\n\n    for _, plugin in ipairs(vim.pack.get()) do\n        if not active_plugins[plugin.spec.name] then\n            table.insert(unused_plugins, plugin.spec.name)\n        end\n    end\n\n    if #unused_plugins == 0 then\n        print(\"No unused plugins.\")\n        return\n    end\n\n    local choice = vim.fn.confirm(\"Remove unused plugins?\", \"&Yes\\n&No\", 2)\n    if choice == 1 then\n        vim.pack.del(unused_plugins)\n    end\nend\n\nvim.keymap.set(\"n\", \"<leader>pc\", pack_clean)\n```",
    "closed_at": "2025-08-12T17:04:23Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/issues/34773 discusses deleting an individual plugin, though that really seems like a bloat feature to me. Cleaning unused plugins seems more common.",
            "created_at": "2025-08-11T20:59:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/35303#issuecomment-3176879313",
            "id": 3176879313,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35303",
            "node_id": "IC_kwDOAPphoM69W1TR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3176879313/reactions"
            },
            "updated_at": "2025-08-11T20:59:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3176879313",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Cleaning unused plugins seems more common.\n\nYup, that's what I tried to accomplish with my implementation above. ",
            "created_at": "2025-08-11T22:10:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/35303#issuecomment-3177045366",
            "id": 3177045366,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35303",
            "node_id": "IC_kwDOAPphoM69Xd12",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3177045366/reactions"
            },
            "updated_at": "2025-08-11T22:34:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3177045366",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/212077774?v=4",
                "events_url": "https://api.github.com/users/MichaelYoDev/events{/privacy}",
                "followers_url": "https://api.github.com/users/MichaelYoDev/followers",
                "following_url": "https://api.github.com/users/MichaelYoDev/following{/other_user}",
                "gists_url": "https://api.github.com/users/MichaelYoDev/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MichaelYoDev",
                "id": 212077774,
                "login": "MichaelYoDev",
                "node_id": "U_kgDODKQMzg",
                "organizations_url": "https://api.github.com/users/MichaelYoDev/orgs",
                "received_events_url": "https://api.github.com/users/MichaelYoDev/received_events",
                "repos_url": "https://api.github.com/users/MichaelYoDev/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MichaelYoDev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MichaelYoDev/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MichaelYoDev",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The initial PR (#34009) has relevant discussions: see [here](https://github.com/neovim/neovim/pull/34009#discussion_r2094172936) and [here](https://github.com/neovim/neovim/pull/34009#issuecomment-2880367306).\n\nThe main problem for this kind of automated cleaning is that together with truly unused plugins (i.e. user don't ever want to use) it will also remove plugins that are *not yet* loaded (hence are not active). Those kind of lazy loaded plugins can be common with a regular usage of `vim.pack.add()` in a separate files.\n\nThe only way that it might be useful with lazy loaded plugins is if there is a single `vim.pack.add( { ... }, { load = function() end })` to \"register\" all used plugins in advance and have manual `vim.cmd.packadd` to load them later. But I don't think that implementing another `vim.pack` function that relies on particular pattern of `vim.pack.add()` usage is a good idea.\n\nAs keeping surface are of `vim.pack` small is valuable and this functionality is more or less straightforward to have in the config/plugin, I'd say it is safe to close this. There is a low-level `vim.pack.del()` that can be utilized for any kind of automated cleaning.\n\n---\n\nBesides, #34919 indeed has more interactive way of deleting a plugin (which fits nicely in the in-process LSP design and completely not bloat ðŸ¥²). After there is an on-disk tracking of user's plugin specifications (#34776), default `vim.pack.update()` will also show not active plugins. They can be put in a separate section for users to quickly identify and delete with `gra` if they truly don't need them.",
            "created_at": "2025-08-12T17:04:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/35303#issuecomment-3180237897",
            "id": 3180237897,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35303",
            "node_id": "IC_kwDOAPphoM69jpRJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3180237897/reactions"
            },
            "updated_at": "2025-08-12T17:04:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3180237897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@echasnovski thanks! how exactly do you lazy load plugins? i haven't been able to figure it out from reading the docs. ",
            "created_at": "2025-08-13T01:50:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/35303#issuecomment-3181925688",
            "id": 3181925688,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35303",
            "node_id": "IC_kwDOAPphoM69qFU4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3181925688/reactions"
            },
            "updated_at": "2025-08-13T01:50:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3181925688",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/212077774?v=4",
                "events_url": "https://api.github.com/users/MichaelYoDev/events{/privacy}",
                "followers_url": "https://api.github.com/users/MichaelYoDev/followers",
                "following_url": "https://api.github.com/users/MichaelYoDev/following{/other_user}",
                "gists_url": "https://api.github.com/users/MichaelYoDev/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MichaelYoDev",
                "id": 212077774,
                "login": "MichaelYoDev",
                "node_id": "U_kgDODKQMzg",
                "organizations_url": "https://api.github.com/users/MichaelYoDev/orgs",
                "received_events_url": "https://api.github.com/users/MichaelYoDev/received_events",
                "repos_url": "https://api.github.com/users/MichaelYoDev/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MichaelYoDev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MichaelYoDev/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MichaelYoDev",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> [@echasnovski](https://github.com/echasnovski) thanks! how exactly do you lazy load plugins? i haven't been able to figure it out from reading the docs.\n\nBy calling `vim.pack.add()` not during startup but some time later, ideally just before you'd need the plugin.\n\nFor example, loading completion plugin can be done when entering Insert mode. Hence the `InsertEnter` event might be reasonable here. Something like this:\n\n```lua\nlocal gr = vim.api.nvim_create_augroup('pack-add', {})\n\nlocal pack_add_on_event = function(event, specs, setup)\n  local cb = function()\n    vim.pack.add(specs)\n    setup()\n  end\n  vim.api.nvim_create_autocmd(event, { group = gr, callback = cb })\nend\n\nlocal setup = function() require('mini.completion').setup() end\npack_add_on_event('InsertEnter', { 'https://github.com/echasnovski/mini.completion' }, setup)\n```",
            "created_at": "2025-08-13T10:56:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/35303#issuecomment-3183308043",
            "id": 3183308043,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35303",
            "node_id": "IC_kwDOAPphoM69vW0L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3183308043/reactions"
            },
            "updated_at": "2025-08-13T10:56:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3183308043",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": ">> [@echasnovski](https://github.com/echasnovski) thanks! how exactly do you lazy load plugins? i haven't been able to figure it out from reading the docs.\n\n> By calling `vim.pack.add()` not during startup but some time later, ideally just before you'd need the plugin.\n\n@MichaelYoDev or using `load = function() end` as echasnovski mentioned earlier:\n\n```lua\nvim.pack.add({\n  \"https://github.com/echasnovski/mini.completion\",\n}, { load = function() end })\n\nvim.api.nvim_create_autocmd(\"InsertEnter\", {\n  callback = function()\n    vim.cmd.packadd(\"mini.completion\")\n    require(\"mini.completion\").setup()\n  end,\n  once = true,\n})\n```",
            "created_at": "2025-08-13T12:32:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/35303#issuecomment-3183726821",
            "id": 3183726821,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35303",
            "node_id": "IC_kwDOAPphoM69w9Dl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3183726821/reactions"
            },
            "updated_at": "2025-08-13T12:34:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3183726821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/142172977?v=4",
                "events_url": "https://api.github.com/users/fredrikfoss/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredrikfoss/followers",
                "following_url": "https://api.github.com/users/fredrikfoss/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredrikfoss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredrikfoss",
                "id": 142172977,
                "login": "fredrikfoss",
                "node_id": "U_kgDOCHljMQ",
                "organizations_url": "https://api.github.com/users/fredrikfoss/orgs",
                "received_events_url": "https://api.github.com/users/fredrikfoss/received_events",
                "repos_url": "https://api.github.com/users/fredrikfoss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredrikfoss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredrikfoss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredrikfoss",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@fredrikfoss thank you! Do you know how I could load a plugin on filetype?",
            "created_at": "2025-08-16T00:29:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/35303#issuecomment-3193063508",
            "id": 3193063508,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35303",
            "node_id": "IC_kwDOAPphoM6-UkhU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193063508/reactions"
            },
            "updated_at": "2025-08-16T00:29:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193063508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/212077774?v=4",
                "events_url": "https://api.github.com/users/MichaelYoDev/events{/privacy}",
                "followers_url": "https://api.github.com/users/MichaelYoDev/followers",
                "following_url": "https://api.github.com/users/MichaelYoDev/following{/other_user}",
                "gists_url": "https://api.github.com/users/MichaelYoDev/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MichaelYoDev",
                "id": 212077774,
                "login": "MichaelYoDev",
                "node_id": "U_kgDODKQMzg",
                "organizations_url": "https://api.github.com/users/MichaelYoDev/orgs",
                "received_events_url": "https://api.github.com/users/MichaelYoDev/received_events",
                "repos_url": "https://api.github.com/users/MichaelYoDev/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MichaelYoDev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MichaelYoDev/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MichaelYoDev",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@MichaelYoDev following the previous exemple with `nvim_create_autocmd` , and using the `FileType` auto command event ([see](https://neovim.io/doc/user/autocmd.html#FileType)),  I imagine you could do something like this:\n\n```lua\nvim.api.nvim_create_autocmd('FileType', {\n  pattern = 'c',\n  callback = function()\n    vim.cmd.packadd(\"mini.completion\")\n    require(\"mini.completion\").setup()\n  end,\n})\n```",
            "created_at": "2025-08-16T10:16:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/35303#issuecomment-3193562923",
            "id": 3193562923,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35303",
            "node_id": "IC_kwDOAPphoM6-Wecr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193562923/reactions"
            },
            "updated_at": "2025-08-16T10:22:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193562923",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/63072568?v=4",
                "events_url": "https://api.github.com/users/RomainEconomics/events{/privacy}",
                "followers_url": "https://api.github.com/users/RomainEconomics/followers",
                "following_url": "https://api.github.com/users/RomainEconomics/following{/other_user}",
                "gists_url": "https://api.github.com/users/RomainEconomics/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/RomainEconomics",
                "id": 63072568,
                "login": "RomainEconomics",
                "node_id": "MDQ6VXNlcjYzMDcyNTY4",
                "organizations_url": "https://api.github.com/users/RomainEconomics/orgs",
                "received_events_url": "https://api.github.com/users/RomainEconomics/received_events",
                "repos_url": "https://api.github.com/users/RomainEconomics/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/RomainEconomics/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RomainEconomics/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/RomainEconomics",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35303/comments",
    "created_at": "2025-08-11T17:09:59Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35303/events",
    "html_url": "https://github.com/neovim/neovim/issues/35303",
    "id": 3310916308,
    "labels": [
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35303/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7FWJLU",
    "number": 35303,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35303/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35303/timeline",
    "title": "vim.pack.clean feature",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-16T10:22:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35303",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/212077774?v=4",
        "events_url": "https://api.github.com/users/MichaelYoDev/events{/privacy}",
        "followers_url": "https://api.github.com/users/MichaelYoDev/followers",
        "following_url": "https://api.github.com/users/MichaelYoDev/following{/other_user}",
        "gists_url": "https://api.github.com/users/MichaelYoDev/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MichaelYoDev",
        "id": 212077774,
        "login": "MichaelYoDev",
        "node_id": "U_kgDODKQMzg",
        "organizations_url": "https://api.github.com/users/MichaelYoDev/orgs",
        "received_events_url": "https://api.github.com/users/MichaelYoDev/received_events",
        "repos_url": "https://api.github.com/users/MichaelYoDev/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MichaelYoDev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MichaelYoDev/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MichaelYoDev",
        "user_view_type": "public"
    }
}