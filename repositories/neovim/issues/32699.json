{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhile trying to debug https://github.com/Saghen/blink.cmp/issues/636, I created a minimized reproducer that does not use blink at all and exhibits the same issue. The issue is that, if you configure the + register to use OSC 52 with the snippet suggested in :h clipboard-osc52, and you have an autocmd set up which fetches that register (`vim.fn.getreg('+')`), then nvim will get stuck waiting for an OSC 52 response and require you to press Ctrl-C to continue or wait for the timeout.\n\nWhen running this with ghostty set to `clipboard-read=ask`, it does ask me at the time I enter insert mode, but nvim's behavior does not depend on what I select.\n\n### Steps to reproduce\n\nI have a minimal repro config at https://github.com/dyfrgi/blink-636. Clone (or wget https://raw.githubusercontent.com/dyfrgi/blink-636/4cf2e7cdfa6dbe43898bf928e07199ba0dee111a/minimized.lua), then:\nnvim --clean -u minimized.lua file.txt\ni\n\n### Expected behavior\n\nGets the value and doesn't get stuck.\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0-nightly+1351383 Build type: Release LuaJIT 2.1.1713773202; also tested on 0.10.4\n\n### Vim (not Nvim) behaves the same?\n\nno, lua config\n\n### Operating system/version\n\nNixos 24.11\n\n### Terminal name/version\n\nalacritty 0.14.0, ghostty 1.1.2\n\n### $TERM environment variable\n\nalacritty, ghostty-xterm\n\n### Installation\n\nnix (both nixpkgs-24.11 and the neovim-nightly-overlay flake)",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "It works if you add `nested = true`:\n```lua\n-- Clipboard configuration\nvim.g.clipboard = {\n  name = 'OSC 52',\n  copy = {\n    ['+'] = require('vim.ui.clipboard.osc52').copy('+'),\n    ['*'] = require('vim.ui.clipboard.osc52').copy('*'),\n  },\n  paste = {\n    ['+'] = require('vim.ui.clipboard.osc52').paste('+'),\n    ['*'] = require('vim.ui.clipboard.osc52').paste('*'),\n  },\n}\n\nvim.api.nvim_create_autocmd('InsertEnter', {\n  callback = function()\n    vim.fn.getreg('+')\n  end,\n  nested = true,\n})\n```",
            "created_at": "2025-03-03T08:23:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/32699#issuecomment-2693600090",
            "id": 2693600090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32699",
            "node_id": "IC_kwDOAPphoM6gjRNa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2693600090/reactions"
            },
            "updated_at": "2025-03-03T08:25:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2693600090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I wonder if `autocmd_busy` should be ignored for the `TermResponse` event:\n```diff\ndiff --git a/src/nvim/api/ui.c b/src/nvim/api/ui.c\nindex 41a09999d0..ba897010c4 100644\n--- a/src/nvim/api/ui.c\n+++ b/src/nvim/api/ui.c\n@@ -507,7 +507,7 @@ void nvim_ui_term_event(uint64_t channel_id, String event, Object value, Error *\n \n     const String termresponse = value.data.string;\n     set_vim_var_string(VV_TERMRESPONSE, termresponse.data, (ptrdiff_t)termresponse.size);\n-    apply_autocmds_group(EVENT_TERMRESPONSE, NULL, NULL, false, AUGROUP_ALL, NULL, NULL, &value);\n+    apply_autocmds_group(EVENT_TERMRESPONSE, NULL, NULL, true, AUGROUP_ALL, NULL, NULL, &value);\n   }\n }\n \n```\nsince the event comes from RPC and may be processed by a blocking wait inside an autocommand. This is already done for the `Signal` event:\n```c\n#ifdef SIGUSR1\n  case SIGUSR1:\n    apply_autocmds(EVENT_SIGNAL, \"SIGUSR1\", curbuf->b_fname, true, curbuf);\n    break;\n#endif\n#ifdef SIGWINCH\n  case SIGWINCH:\n    apply_autocmds(EVENT_SIGNAL, \"SIGWINCH\", curbuf->b_fname, true, curbuf);\n    break;\n#endif\n```\nThis may also apply to some other events like:\n- `TermRequest`\n- `VimResume`\n- `FocusGained`\n- `FocusLost`\n- `ChanInfo`\n- `ChanOpen`\n- `UIEnter`\n- `UILeave`",
            "created_at": "2025-03-03T08:41:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/32699#issuecomment-2693638535",
            "id": 2693638535,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32699",
            "node_id": "IC_kwDOAPphoM6gjamH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2693638535/reactions"
            },
            "updated_at": "2025-03-03T08:47:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2693638535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Aha, I did not realize that OSC52 clipboard support used autocmd. Now that you say it I can understand why, but it's unintuitive. With that fix, I suppose it's not useful to update the docs on this point since most users won't need to know or care that's how it's implemented. If you decide not to make that change, then a doc update to clipboard-osc52 might be helpful. Or perhaps it is in general - I don't know how the Neovim project approaches documentation.\n\nThank you both for the workaround (well, the client code fix; arguably this is working as intended) and the longer term improvement. I'll send a PR to blink.cmp to add nested.",
            "created_at": "2025-03-03T14:04:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/32699#issuecomment-2694511117",
            "id": 2694511117,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32699",
            "node_id": "IC_kwDOAPphoM6gmvoN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2694511117/reactions"
            },
            "updated_at": "2025-03-03T14:04:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2694511117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1012426?v=4",
                "events_url": "https://api.github.com/users/dyfrgi/events{/privacy}",
                "followers_url": "https://api.github.com/users/dyfrgi/followers",
                "following_url": "https://api.github.com/users/dyfrgi/following{/other_user}",
                "gists_url": "https://api.github.com/users/dyfrgi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dyfrgi",
                "id": 1012426,
                "login": "dyfrgi",
                "node_id": "MDQ6VXNlcjEwMTI0MjY=",
                "organizations_url": "https://api.github.com/users/dyfrgi/orgs",
                "received_events_url": "https://api.github.com/users/dyfrgi/received_events",
                "repos_url": "https://api.github.com/users/dyfrgi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dyfrgi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dyfrgi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dyfrgi",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32699/comments",
    "created_at": "2025-03-02T16:24:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32699/events",
    "html_url": "https://github.com/neovim/neovim/issues/32699",
    "id": 2889645667,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 144672485,
            "name": "provider",
            "node_id": "MDU6TGFiZWwxNDQ2NzI0ODU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/provider"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "clipboard, paste",
            "id": 186192409,
            "name": "clipboard",
            "node_id": "MDU6TGFiZWwxODYxOTI0MDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/clipboard"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is not fixed but can be circumvented until then",
            "id": 435850181,
            "name": "has:workaround",
            "node_id": "MDU6TGFiZWw0MzU4NTAxODE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:workaround"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32699/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6sPH5j",
    "number": 32699,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32699/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32699/timeline",
    "title": "OSC 52 clipboard read failure when done in an InsertEnter autocmd",
    "updated_at": "2025-03-03T14:04:40Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32699",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1012426?v=4",
        "events_url": "https://api.github.com/users/dyfrgi/events{/privacy}",
        "followers_url": "https://api.github.com/users/dyfrgi/followers",
        "following_url": "https://api.github.com/users/dyfrgi/following{/other_user}",
        "gists_url": "https://api.github.com/users/dyfrgi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dyfrgi",
        "id": 1012426,
        "login": "dyfrgi",
        "node_id": "MDQ6VXNlcjEwMTI0MjY=",
        "organizations_url": "https://api.github.com/users/dyfrgi/orgs",
        "received_events_url": "https://api.github.com/users/dyfrgi/received_events",
        "repos_url": "https://api.github.com/users/dyfrgi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dyfrgi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dyfrgi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dyfrgi",
        "user_view_type": "public"
    }
}