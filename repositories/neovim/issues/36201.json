{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nneovim's `inccommand` feature is useful to see the result of :substitute but it messes with _stateful_ results of `sub-replace-expression`.\n\nI have a function:\n\n```vim\nlet g:incrementor_value = 0\nfunction! idbrii#incrementor#get_incrementing_number()\n    let g:incrementor_value += 1\n    return g:incrementor_value\nendf\n```\n\nAnd a file:\n```\n1\n1\n1\n1\n1\n```\n\nWhen I use it to do replacements:\n\n```vim\n:let g:incrementor_value = 0\n:%s/\\v\\d+/\\=idbrii#incrementor#get_incrementing_number()\n```\n\nThe result is never incrementing numbers starting at 1:\n```\n6\n7\n8\n9\n10\n```\n\nI assume because neovim does my replacement once for the initial preview, once for each change to the command, and again to apply the final result to the file. This repeated application works for stateless sub-replace-expression, but breaks my stateful function.\n\nTurning inccommand off produces the expected file:\n```\nset inccommand=\nlet g:incrementor_value = 0\n%s/\\d/\\=idbrii#incrementor#get_incrementing_number()\n```\n\n```\n1\n2\n3\n4\n5\n```  \n\n\n\n### Expected behavior\n\nI think the best solution is a `v:is_inccomand_preview` variable set when previews are executed.\n\nThen I could use that in my function:\n\n```vim\nlet g:incrementor_value = 0\nfunction! idbrii#incrementor#get_incrementing_number()\n    if ! v:is_inccomand_preview\n        let g:incrementor_value += 1\n    endif    \n    return g:incrementor_value\nendf\n```\n\nI wouldn't see the incremented results previewed, but the final result woud would work as expected.\n\nAlternatively, `inccommand` could have an option to not skip preview when using sub-replace-expression:\n\n```vim\nset inccommand=\"nosplit,noexpr\"\n```\n\nSince expressions require the substitute string to start with \"\\=\", it would be unambiguous to detect when using an expression to apply this option.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> I think the best solution is a `v:is_inccomand_preview` variable set when previews are executed.\n\nThat requires scripting, thus is already possible with `:help :command-preview`?\n\n\n\n> Alternatively, `inccommand` could have an option to not skip preview when using sub-replace-expression:\n\nWhy make it optional? I don't get what you mean by \"not skip preview\" though. ",
            "created_at": "2025-10-17T21:31:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/36201#issuecomment-3417300722",
            "id": 3417300722,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36201",
            "node_id": "IC_kwDOAPphoM7Lr97y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3417300722/reactions"
            },
            "updated_at": "2025-10-17T21:31:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3417300722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/36201/comments",
    "created_at": "2025-10-15T16:41:55Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/36201/events",
    "html_url": "https://github.com/neovim/neovim/issues/36201",
    "id": 3518817481,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 7015104868,
            "name": "inccommand",
            "node_id": "LA_kwDOAPphoM8AAAABoiIBZA",
            "url": "https://api.github.com/repos/neovim/neovim/labels/inccommand"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/36201/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7RvOTJ",
    "number": 36201,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/36201/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/36201/timeline",
    "title": "inccommand: allow sub-replace-expressions to detect preview",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-17T21:31:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/36201",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/43559?v=4",
        "events_url": "https://api.github.com/users/idbrii/events{/privacy}",
        "followers_url": "https://api.github.com/users/idbrii/followers",
        "following_url": "https://api.github.com/users/idbrii/following{/other_user}",
        "gists_url": "https://api.github.com/users/idbrii/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/idbrii",
        "id": 43559,
        "login": "idbrii",
        "node_id": "MDQ6VXNlcjQzNTU5",
        "organizations_url": "https://api.github.com/users/idbrii/orgs",
        "received_events_url": "https://api.github.com/users/idbrii/received_events",
        "repos_url": "https://api.github.com/users/idbrii/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/idbrii/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/idbrii/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/idbrii",
        "user_view_type": "public"
    }
}