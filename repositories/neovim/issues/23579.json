{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\n- Not easy to share C/rust/go plugins without cross-compiling to numerous platforms.\r\n- No builtin way to load a wasm plugin.\r\n- No way to restrict or control plugin [capabilities](https://github.com/bytecodealliance/wasmtime/blob/main/docs/WASI-capabilities.md).\r\n\r\nRelated vim issue: https://github.com/vim/vim/issues/4604\r\n\r\nThis is just a tracking issue. Not planned.\r\n\r\n### Expected behavior\r\n\r\nNvim can load `.wasm` files conforming to some spec as editor plugins.\r\n\r\n### Related\r\n\r\n- https://github.com/ziglang/zig/pull/13560\r\n- https://github.com/Borwe/wasm_nvim\r\n- https://github.com/microsoft/vscode-wasm : \"WASI implementation that uses the vscode extension host as the implementing API\"\r\n    - [from the vscode team](https://github.com/microsoft/language-server-protocol/issues/1264#issuecomment-1324838008): \"maps the whole WASI API to the VS Code API. So you can write normal Rust/C/C++ code with normal file system operations and it will transparently be mapped to the VS Code file system API.\"\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "### Potential Alternatives\r\n\r\n- [lua's ffi](http://luajit.org/ext_ffi.html)\r\n- run the wasm in an external process ([Wasmtime](https://github.com/bytecodealliance/wasmtime/blob/main/docs/WASI-tutorial.md), [Wasmer](https://wasmer.io), node, deno, bun) communicating with it over rpc or socket or stdio",
            "created_at": "2023-05-11T02:20:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1543227777",
            "id": 1543227777,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5b-8mB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543227777/reactions"
            },
            "updated_at": "2023-05-11T02:20:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543227777",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/45028928?v=4",
                "events_url": "https://api.github.com/users/tmillr/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmillr/followers",
                "following_url": "https://api.github.com/users/tmillr/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmillr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmillr",
                "id": 45028928,
                "login": "tmillr",
                "node_id": "MDQ6VXNlcjQ1MDI4OTI4",
                "organizations_url": "https://api.github.com/users/tmillr/orgs",
                "received_events_url": "https://api.github.com/users/tmillr/received_events",
                "repos_url": "https://api.github.com/users/tmillr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmillr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmillr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmillr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Are Neovim folks interested in this idea? I created an experiment fork (https://github.com/bobogei81123/neovim) for adding a WASM plugin interface to neovim.",
            "created_at": "2023-06-11T22:50:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1586365110",
            "id": 1586365110,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5ejgK2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 15,
                "total_count": 17,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586365110/reactions"
            },
            "updated_at": "2023-06-11T22:50:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586365110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/74331647?v=4",
                "events_url": "https://api.github.com/users/bobogei81123/events{/privacy}",
                "followers_url": "https://api.github.com/users/bobogei81123/followers",
                "following_url": "https://api.github.com/users/bobogei81123/following{/other_user}",
                "gists_url": "https://api.github.com/users/bobogei81123/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bobogei81123",
                "id": 74331647,
                "login": "bobogei81123",
                "node_id": "MDQ6VXNlcjc0MzMxNjQ3",
                "organizations_url": "https://api.github.com/users/bobogei81123/orgs",
                "received_events_url": "https://api.github.com/users/bobogei81123/received_events",
                "repos_url": "https://api.github.com/users/bobogei81123/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bobogei81123/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bobogei81123/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bobogei81123",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@bobogei81123 Nice! Definitely interested but the unknown part is defining the \"plugin model\", right? E.g.:\r\n\r\n- type marshalling (does bindgen magically do this?)\r\n- how do \"event handlers\" / hooks get registered\r\n- \"streaming\"\r\n- WASI / system stuff (or should we just use [wasix](https://wasmer.io/posts/announcing-wasix) :D)\r\n\r\nAre runtimes like https://github.com/extism/extism or https://wasmer.io/ useful as a \"bridge\", or would they \"trap\" us into a design that might later get deprecated?",
            "created_at": "2023-06-11T23:11:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1586370363",
            "id": 1586370363,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5ejhc7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586370363/reactions"
            },
            "updated_at": "2023-06-16T12:29:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586370363",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think one of the key points will be the [component model](https://github.com/WebAssembly/component-model) proposal, which is  in early stage and I'm still learning about it. From what I know\r\n\r\n* type marshalling: Yes, the component model takes away the burden of agreeing on a representation and writing the glue code from host (neovim) and plugin developers. At least for [the component types](https://github.com/WebAssembly/component-model/blob/main/design/mvp/Explainer.md#type-definitions), WASM compiler and runtime will handle the type conversion.\r\n* Event handlers, hooks, and callback: I believe this can be \"handle types\" in the same proposal. I'll need to looking to more for it.\r\n* Streaming: The next milestone for the component model will be supporting async futures and streams. They've released a [explainer](https://docs.google.com/presentation/d/1MNVOZ8hdofO3tI0szg_i-Yoy0N2QPU2C--LzVuoGSlE/edit#slide=id.p) and seems promising.\r\n* WASI / system stuff: There are a lot of possibility here. We can expose Neovim's libuv bindings, or use Wasi/wasix directly, or do both. This will give a huge benefit for WASM plugin interface: users will be able to controll what functions the plugin can use (whether it can read/write files, etc.)",
            "created_at": "2023-06-12T00:01:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1586384773",
            "id": 1586384773,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5ejk-F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586384773/reactions"
            },
            "updated_at": "2023-06-12T00:01:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586384773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/74331647?v=4",
                "events_url": "https://api.github.com/users/bobogei81123/events{/privacy}",
                "followers_url": "https://api.github.com/users/bobogei81123/followers",
                "following_url": "https://api.github.com/users/bobogei81123/following{/other_user}",
                "gists_url": "https://api.github.com/users/bobogei81123/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bobogei81123",
                "id": 74331647,
                "login": "bobogei81123",
                "node_id": "MDQ6VXNlcjc0MzMxNjQ3",
                "organizations_url": "https://api.github.com/users/bobogei81123/orgs",
                "received_events_url": "https://api.github.com/users/bobogei81123/received_events",
                "repos_url": "https://api.github.com/users/bobogei81123/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bobogei81123/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bobogei81123/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bobogei81123",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We can expose Neovim's libuv bindings, or use Wasi/wasix directly, or do both. This will give a huge benefit for WASM plugin interface: users will be able to controll what functions the plugin can us\r\n\r\nYes, capabilities-based security is a strong argument for introducing wasm plugin support. ",
            "created_at": "2023-06-12T00:18:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1586393496",
            "id": 1586393496,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5ejnGY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586393496/reactions"
            },
            "updated_at": "2023-06-12T00:18:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586393496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi, I complete the generator for generating all Neovim's API functions, including their [WIT](https://github.com/WebAssembly/component-model/blob/main/design/mvp/WIT.md) definition and wrapper function implementations. Most of the functions can be called from WASM module now (expect those requiring LuaRef and callbacks). Here is a [small module](https://github.com/bobogei81123/neovim/blob/wasm/wasm/example/simple_plugin/src/lib.rs) that calls `nvim_create_buf`, `nvim_open_win`, and `nvim_buf_set_lines` APIs:\r\n\r\n![Screenshot from 2023-07-14 20-12-01](https://github.com/neovim/neovim/assets/74331647/5b66ea7b-f0b3-419e-a450-4b1b006fd74f)\r\n\r\nSomething that can be done next:\r\n- Make callback works (probably need resource in the component module proposal?)\r\n- Port some simple plugin to WASM and see how well it works.\r\n- Implement Lua runtimes (LSP, etc.) natively.\r\n- Make API functions more friendly for WASM. And because WASM binds directly to the C API functions we should be able to do much more cool stuff.",
            "created_at": "2023-07-15T03:17:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1636639948",
            "id": 1636639948,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5hjSTM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 6,
                "laugh": 0,
                "rocket": 8,
                "total_count": 14,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636639948/reactions"
            },
            "updated_at": "2023-07-15T03:20:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636639948",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/74331647?v=4",
                "events_url": "https://api.github.com/users/bobogei81123/events{/privacy}",
                "followers_url": "https://api.github.com/users/bobogei81123/followers",
                "following_url": "https://api.github.com/users/bobogei81123/following{/other_user}",
                "gists_url": "https://api.github.com/users/bobogei81123/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bobogei81123",
                "id": 74331647,
                "login": "bobogei81123",
                "node_id": "MDQ6VXNlcjc0MzMxNjQ3",
                "organizations_url": "https://api.github.com/users/bobogei81123/orgs",
                "received_events_url": "https://api.github.com/users/bobogei81123/received_events",
                "repos_url": "https://api.github.com/users/bobogei81123/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bobogei81123/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bobogei81123/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bobogei81123",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Make API functions more friendly for WASM. And because WASM binds directly to the C API functions we should be able to do much more cool stuff.\r\n\r\nThis is in scope (I assume it mostly involves enhancing our [generators](https://github.com/neovim/neovim/tree/29a71380cd4a5ce22f2d2c3644a5bc1aeb14b9a6/src/nvim/generators) and [annotations](https://github.com/neovim/neovim/blob/29a71380cd4a5ce22f2d2c3644a5bc1aeb14b9a6/src/nvim/func_attr.h#L220-L232)). Especially if it leads us to formalizing our [C API](https://github.com/neovim/neovim/issues/21693), which has long been a \"todo\".",
            "created_at": "2023-07-15T11:40:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1636743546",
            "id": 1636743546,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5hjrl6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636743546/reactions"
            },
            "updated_at": "2023-07-15T11:40:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636743546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I was wondering if a wasm runtime could allow us to develop/port lsp servers and embed them as plugins, making the communication in process. was anyone working on something similar?",
            "created_at": "2023-08-16T23:21:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1681389526",
            "id": 1681389526,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5kN_fW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681389526/reactions"
            },
            "updated_at": "2023-08-16T23:21:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681389526",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/43855513?v=4",
                "events_url": "https://api.github.com/users/protiumx/events{/privacy}",
                "followers_url": "https://api.github.com/users/protiumx/followers",
                "following_url": "https://api.github.com/users/protiumx/following{/other_user}",
                "gists_url": "https://api.github.com/users/protiumx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/protiumx",
                "id": 43855513,
                "login": "protiumx",
                "node_id": "MDQ6VXNlcjQzODU1NTEz",
                "organizations_url": "https://api.github.com/users/protiumx/orgs",
                "received_events_url": "https://api.github.com/users/protiumx/received_events",
                "repos_url": "https://api.github.com/users/protiumx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/protiumx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/protiumx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/protiumx",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I was wondering if a wasm runtime could allow us to develop/port lsp servers and embed them as plugins, making the communication in process. was anyone working on something similar?\r\n\r\nI don't think that'd work for lsp servers written in dynamic languages though (e.g. lua lsp, typescript lsp, etc.)? Also what would be the benefit beyond maybe saving some ram? Would it be worth the hassle? Every language has its own, unique server impl that would need to be ported separately/individually.\r\n\r\nOn a capable system, the only real gripe I have with lsp servers is the slow startup times of some servers like lua lsp (or, lack of features or typechecking, but that has nothing to do with neovim).",
            "created_at": "2023-08-17T00:10:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1681421253",
            "id": 1681421253,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5kOHPF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681421253/reactions"
            },
            "updated_at": "2023-08-17T00:11:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681421253",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/45028928?v=4",
                "events_url": "https://api.github.com/users/tmillr/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmillr/followers",
                "following_url": "https://api.github.com/users/tmillr/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmillr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmillr",
                "id": 45028928,
                "login": "tmillr",
                "node_id": "MDQ6VXNlcjQ1MDI4OTI4",
                "organizations_url": "https://api.github.com/users/tmillr/orgs",
                "received_events_url": "https://api.github.com/users/tmillr/received_events",
                "repos_url": "https://api.github.com/users/tmillr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmillr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmillr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmillr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I was wondering if a wasm runtime could allow us to develop/port lsp servers and embed them as plugins, making the communication in process. was anyone working on something similar?\r\n\r\nAs far as I know, language servers/clients are designed to communicate with JSON RPC, so even if this could be done, it probably won't help much (you'll still need to serialize/deserialize the request/response).\r\n\r\nI think what might attract more interest is a native neovim LSP client implemented in C. It *might* have better performance then the current one implement in Lua and will be easier to integrate with a WASM runtime.",
            "created_at": "2023-08-18T01:30:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1683201287",
            "id": 1683201287,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5kU50H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1683201287/reactions"
            },
            "updated_at": "2023-08-18T01:30:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1683201287",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/74331647?v=4",
                "events_url": "https://api.github.com/users/bobogei81123/events{/privacy}",
                "followers_url": "https://api.github.com/users/bobogei81123/followers",
                "following_url": "https://api.github.com/users/bobogei81123/following{/other_user}",
                "gists_url": "https://api.github.com/users/bobogei81123/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bobogei81123",
                "id": 74331647,
                "login": "bobogei81123",
                "node_id": "MDQ6VXNlcjc0MzMxNjQ3",
                "organizations_url": "https://api.github.com/users/bobogei81123/orgs",
                "received_events_url": "https://api.github.com/users/bobogei81123/received_events",
                "repos_url": "https://api.github.com/users/bobogei81123/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bobogei81123/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bobogei81123/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bobogei81123",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "To give an update on my experiment on WASM runtime: The main obstacle I'm facing now is representing callbacks. Asked WebAssembly/component-model/issues/223 and it seems like they are not into supporting callback types and encourage people to go for async/stream model (which is still in preview now).",
            "created_at": "2023-08-18T01:35:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1683206849",
            "id": 1683206849,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5kU7LB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1683206849/reactions"
            },
            "updated_at": "2023-08-18T01:35:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1683206849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/74331647?v=4",
                "events_url": "https://api.github.com/users/bobogei81123/events{/privacy}",
                "followers_url": "https://api.github.com/users/bobogei81123/followers",
                "following_url": "https://api.github.com/users/bobogei81123/following{/other_user}",
                "gists_url": "https://api.github.com/users/bobogei81123/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bobogei81123",
                "id": 74331647,
                "login": "bobogei81123",
                "node_id": "MDQ6VXNlcjc0MzMxNjQ3",
                "organizations_url": "https://api.github.com/users/bobogei81123/orgs",
                "received_events_url": "https://api.github.com/users/bobogei81123/received_events",
                "repos_url": "https://api.github.com/users/bobogei81123/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bobogei81123/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bobogei81123/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bobogei81123",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hello, just found this link lol.\r\nThanks for linking my project up there 😄 . BTW it's pretty much complete, open for suggestions, and bug reports.",
            "created_at": "2023-08-18T16:26:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1684154316",
            "id": 1684154316,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5kYifM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1684154316/reactions"
            },
            "updated_at": "2024-08-28T13:12:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1684154316",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3319843?v=4",
                "events_url": "https://api.github.com/users/Borwe/events{/privacy}",
                "followers_url": "https://api.github.com/users/Borwe/followers",
                "following_url": "https://api.github.com/users/Borwe/following{/other_user}",
                "gists_url": "https://api.github.com/users/Borwe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Borwe",
                "id": 3319843,
                "login": "Borwe",
                "node_id": "MDQ6VXNlcjMzMTk4NDM=",
                "organizations_url": "https://api.github.com/users/Borwe/orgs",
                "received_events_url": "https://api.github.com/users/Borwe/received_events",
                "repos_url": "https://api.github.com/users/Borwe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Borwe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Borwe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Borwe",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just leaving a note here: we are probably forced to use [https://github.com/bytecodealliance/wasmtime](wasmtime), since this is what [tree-sitter targets specifically for WASM parsers](https://github.com/tree-sitter/tree-sitter/pull/1864) -- which we very much want to leverage for [parser distribution](https://github.com/neovim/neovim/issues/22313) when it's ready (which looks to be quite soon). I don't think it would make sense to add a second runtime for plugins then.",
            "created_at": "2023-11-25T10:26:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1826275036",
            "id": 1826275036,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5s2r7c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826275036/reactions"
            },
            "updated_at": "2023-11-25T10:26:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826275036",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I might be wrong but I don't think tree-sitter and neovim can share a single WASM runtime. If we want Neovim to be able to run WASM binary, we will still need to embed a runtime and can choose other one beside wasmtime.",
            "created_at": "2023-11-28T06:49:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1829213867",
            "id": 1829213867,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5tB5ar",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829213867/reactions"
            },
            "updated_at": "2023-11-28T06:49:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829213867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/74331647?v=4",
                "events_url": "https://api.github.com/users/bobogei81123/events{/privacy}",
                "followers_url": "https://api.github.com/users/bobogei81123/followers",
                "following_url": "https://api.github.com/users/bobogei81123/following{/other_user}",
                "gists_url": "https://api.github.com/users/bobogei81123/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bobogei81123",
                "id": 74331647,
                "login": "bobogei81123",
                "node_id": "MDQ6VXNlcjc0MzMxNjQ3",
                "organizations_url": "https://api.github.com/users/bobogei81123/orgs",
                "received_events_url": "https://api.github.com/users/bobogei81123/received_events",
                "repos_url": "https://api.github.com/users/bobogei81123/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bobogei81123/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bobogei81123/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bobogei81123",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I might be wrong but I don't think tree-sitter and neovim can share a single WASM runtime.\r\n\r\nOf course we could? what is the sort of reasoning what would indicate it is not possible?",
            "created_at": "2023-11-28T08:20:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1829315976",
            "id": 1829315976,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5tCSWI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829315976/reactions"
            },
            "updated_at": "2023-11-28T08:20:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829315976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "What would the debugging process look like for a wasm plugin in neovim?\r\n\r\nPlease consider end user and (plugin) developer experience. Debugging and troubleshooting lua plugins can be difficult as it is and I only see wasm making this aspect of neovim use more difficult.",
            "created_at": "2024-01-19T20:25:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1901063666",
            "id": 1901063666,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5xT-3y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1901063666/reactions"
            },
            "updated_at": "2024-01-19T23:48:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1901063666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/399581?v=4",
                "events_url": "https://api.github.com/users/jmpolom/events{/privacy}",
                "followers_url": "https://api.github.com/users/jmpolom/followers",
                "following_url": "https://api.github.com/users/jmpolom/following{/other_user}",
                "gists_url": "https://api.github.com/users/jmpolom/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jmpolom",
                "id": 399581,
                "login": "jmpolom",
                "node_id": "MDQ6VXNlcjM5OTU4MQ==",
                "organizations_url": "https://api.github.com/users/jmpolom/orgs",
                "received_events_url": "https://api.github.com/users/jmpolom/received_events",
                "repos_url": "https://api.github.com/users/jmpolom/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jmpolom/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jmpolom/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jmpolom",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As there are no webassembly plugins in Neovim, nobody knows. ",
            "created_at": "2024-01-19T20:26:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1901065392",
            "id": 1901065392,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5xT_Sw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1901065392/reactions"
            },
            "updated_at": "2024-01-19T20:26:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1901065392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Please consider end user and (plugin) developer experience. Debugging and troubleshooting lua plugins can be difficult as it is and I only see wasm making this aspect of neovim use more difficult.\n\nIf you're having problems debugging Lua plugins and you know of a way to improve the situation then I'm sure such work would be appreciated.\n\nNote people mostly contribute here because it helps them personally, so making these kinds of indirect points aren't likely to yield anything.",
            "created_at": "2024-01-20T00:03:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-1901360672",
            "id": 1901360672,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM5xVHYg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1901360672/reactions"
            },
            "updated_at": "2024-01-20T00:03:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1901360672",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Would it make sense to start just by exposing a wasm runtime without any knowledge about nvim? So at the beginning, it could be used from lua like we use luajit ffi? I guess it could be useful for many plugins, for instance:\r\nLuaSnip could embed libregex.\r\nTelescope could embed fzf.\r\n ",
            "created_at": "2024-08-28T13:06:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/23579#issuecomment-2315269228",
            "id": 2315269228,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23579",
            "node_id": "IC_kwDOAPphoM6KADRs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2315269228/reactions"
            },
            "updated_at": "2024-12-10T00:20:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2315269228",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2947276?v=4",
                "events_url": "https://api.github.com/users/leiserfg/events{/privacy}",
                "followers_url": "https://api.github.com/users/leiserfg/followers",
                "following_url": "https://api.github.com/users/leiserfg/following{/other_user}",
                "gists_url": "https://api.github.com/users/leiserfg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leiserfg",
                "id": 2947276,
                "login": "leiserfg",
                "node_id": "MDQ6VXNlcjI5NDcyNzY=",
                "organizations_url": "https://api.github.com/users/leiserfg/orgs",
                "received_events_url": "https://api.github.com/users/leiserfg/received_events",
                "repos_url": "https://api.github.com/users/leiserfg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leiserfg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leiserfg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leiserfg",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 19,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23579/comments",
    "created_at": "2023-05-11T02:05:57Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23579/events",
    "html_url": "https://github.com/neovim/neovim/issues/23579",
    "id": 1704899305,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23579/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM5lnrLp",
    "number": 23579,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 25,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 25,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23579/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23579/timeline",
    "title": "wasm (webassembly) plugins",
    "updated_at": "2025-01-17T15:30:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23579",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}