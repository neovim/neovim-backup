{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "requested in https://github.com/neovim/nvim-lsp/issues/45 :\r\n\r\n> implement a catch-all callback for any server notifications\r\n\r\nSomething like `lsp.on_response(handled)` which is `nil` by default, otherwise all server => client responses pass through it, and `handled=true` if there is a handler for it already.\r\n\r\n",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "At one point I did have the initialization copy the metatable of the `callbacks` table that is passed in to support exactly this, since you could use `__index` to support such a thing. In this case you would use `__index` to check your own table if you had the callback available and return that, but you could do everything you describe as well.\r\n\r\nBut for that I would have a question of \"Is that too much to expect of users who are already seemingly hostile to learning Lua?\" We could probably improve that situation by providing an example that users could copy/paste to somewhat mitigate that.",
            "created_at": "2019-12-18T00:27:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/11533#issuecomment-566810829",
            "id": 566810829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11533",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjgxMDgyOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/566810829/reactions"
            },
            "updated_at": "2024-10-31T10:32:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/566810829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This looks stale now. Closing.\n\nIn #30982 something like this was proposed but was decided against until more concrete applications are known.",
            "created_at": "2024-10-31T10:16:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/11533#issuecomment-2449504754",
            "id": 2449504754,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11533",
            "node_id": "IC_kwDOAPphoM6SAHny",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449504754/reactions"
            },
            "updated_at": "2024-10-31T10:32:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449504754",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If this were implemented, presumably it would look like the dual of the existing `LspRequest`, i.e. a `LspResponse` event.",
            "created_at": "2024-10-31T10:20:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/11533#issuecomment-2449510943",
            "id": 2449510943,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11533",
            "node_id": "IC_kwDOAPphoM6SAJIf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449510943/reactions"
            },
            "updated_at": "2024-10-31T10:20:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449510943",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That allows hooking in to traffic, but not modifying the `params`/`results`, or preventing the requests. In #30982 I proposed adding `client:on_response()` and `client:on_result()`.",
            "created_at": "2024-10-31T10:25:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/11533#issuecomment-2449520662",
            "id": 2449520662,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11533",
            "node_id": "IC_kwDOAPphoM6SALgW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449520662/reactions"
            },
            "updated_at": "2024-10-31T10:26:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449520662",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> In [#30982](https://github.com/neovim/neovim/pull/30982) I proposed adding `client:on_response()` and `client:on_result()`.\n\nThat would indeed close this issue. Shall we use this issue to track that?",
            "created_at": "2024-10-31T10:29:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/11533#issuecomment-2449527219",
            "id": 2449527219,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11533",
            "node_id": "IC_kwDOAPphoM6SANGz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449527219/reactions"
            },
            "updated_at": "2024-10-31T10:29:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449527219",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, since there's fresh activity around this area.",
            "created_at": "2024-10-31T10:32:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/11533#issuecomment-2449532188",
            "id": 2449532188,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11533",
            "node_id": "IC_kwDOAPphoM6SAOUc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449532188/reactions"
            },
            "updated_at": "2024-10-31T10:32:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449532188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\nJust to take stock on what's already there:\n\n- `LspNotify` to listen to notifications\n- `LspRequest` to listen to requests. It already has different phases (pending, cancel, complete) so we could extend the `pending -> complete` transition to receive the result to avoid having to add a `LspResponse` (on that note, we have some weird message_callback and notify_reply_callback distinction in the rpc layer - imho we should remove that. One callback is always invoked sync after the request fired, there's imho no value by that but it adds complexity)\n\n- Intercepting client requests/responses: monkey patch `client.request`. Might become simpler with `vim.on`. Currently known use-cases:\n    - Working around server bugs: Recommendation -> fix the server ffs\n    - Make `vim.lsp.buf.definition` behave like `c-]` and jump to the first result even if there are many. For reasons? Recommendation: use `c-]`\n",
            "created_at": "2024-10-31T11:46:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/11533#issuecomment-2449657677",
            "id": 2449657677,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11533",
            "node_id": "IC_kwDOAPphoM6SAs9N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449657677/reactions"
            },
            "updated_at": "2024-10-31T11:48:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449657677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "#30985 looks like a valid use case to me. The server is correct, but our implementation needs updating. We will obviously fix our implementation (PR already being reviewed), but that doesn't help users waiting for 0.11 to be released.",
            "created_at": "2024-10-31T11:50:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/11533#issuecomment-2449664058",
            "id": 2449664058,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11533",
            "node_id": "IC_kwDOAPphoM6SAug6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449664058/reactions"
            },
            "updated_at": "2024-10-31T11:50:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449664058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> [#30985](https://github.com/neovim/neovim/issues/30985) looks like a valid use case to me. The server is correct, but our implementation needs updating. We will obviously fix our implementation (PR already being reviewed), but that doesn't help users waiting for 0.11 to be released.\n\nclient bugs to me fall into the same category: Having some option to work around the issue is great but it's fine if that's not extremely convenient. If workarounds are too easy people might skip reporting bugs. And we can release that with a 0.10.x hotfix. No need to wait for a full feature release. \n\nAnd patching client.request would help mitigate that after handler changes too, and for server -> client requests the lsp.handler patching also continues to work.",
            "created_at": "2024-10-31T13:00:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/11533#issuecomment-2449788497",
            "id": 2449788497,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11533",
            "node_id": "IC_kwDOAPphoM6SBM5R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449788497/reactions"
            },
            "updated_at": "2024-10-31T17:11:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449788497",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/11533/comments",
    "created_at": "2019-12-08T11:30:41Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/11533/events",
    "html_url": "https://github.com/neovim/neovim/issues/11533",
    "id": 534528086,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/11533/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU1MzQ1MjgwODY=",
    "number": 11533,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/11533/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/11533/timeline",
    "title": "LSP: hook into all traffic",
    "updated_at": "2025-01-17T16:02:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/11533",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}