{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nRelated: #19996 \r\n\r\n.s and .S files are not forced and instead recognized as the default \"asm\" filetype. I've tried:\r\n\r\n1. Put the code in .config/nvim/after/ftdetect/ and .config/nvim/ftdetect directories. \r\n2. Delete .local/share/nvim and .local/state/nvim.\r\n3. Repeat the same steps for an arch VM without GUI where i never downloaded any nvim plugin or made any configuration changes.\r\n4. Download the nvim.appimage (NVIM v0.11.0-dev-302+gbe999e6a0) from [releases](https://github.com/neovim/neovim/releases/nightly) and repeat steps 1 and 2.\n\n### Steps to reproduce\n\nIn init.lua:\r\n\r\n```lua\r\nvim.filetype.add({\r\n\textension = {\r\n\t\tc = \"lua\",\r\n\t\tTEST = \"lua\",\r\n\t\ts = \"lua\",\r\n\t\tS = \"lua\",\r\n\t\tasm = \"lua\",\r\n\t},\r\n})\r\n```\r\n\r\nonly .c, .TEST, and .asm files are overriden correctly\n\n### Expected behavior\n\n.s and .S files are correctly forced to the specified types.\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0 Build type: Release LuaJIT 2.1.1716656478\n\n### Vim (not Nvim) behaves the same?\n\n-\n\n### Operating system/version\n\nArch linux, 6.9.6-arch1-1\n\n### Terminal name/version\n\nkitty, linux console\n\n### $TERM environment variable\n\nxterm-kitty, linux\n\n### Installation\n\nPacman",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "It works if you add it in the `pattern` table:\r\n```lua\r\nvim.filetype.add({\r\n\textension = {\r\n\t\tc = \"lua\",\r\n\t\tTEST = \"lua\",\r\n\t\tasm = \"lua\",\r\n\t},\r\n\tpattern = {\r\n\t\t['.*%.[sS]'] = \"lua\",\r\n\t},\r\n})\r\n```\r\nThis is because patterns always have priority over extensions. However, maybe there should be a way for user extensions to override builtin patterns?",
            "created_at": "2024-06-24T12:00:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/29468#issuecomment-2186409208",
            "id": 2186409208,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29468",
            "node_id": "IC_kwDOAPphoM6CUfT4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186409208/reactions"
            },
            "updated_at": "2024-06-24T12:03:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186409208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  However, I think there should be a way for user extensions to override builtin patterns.\r\n\r\nThat is difficult due to the architecture of the filetype detection (if not impossible without a full,  burn-it-to-the-ground-first, redesign). \r\n\r\nI think this should just be documented better, including with a concrete example. (The `vim.filetype.add` documentation implies this, but only after you have grokked the logic.)",
            "created_at": "2024-06-24T12:07:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/29468#issuecomment-2186424153",
            "id": 2186424153,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29468",
            "node_id": "IC_kwDOAPphoM6CUi9Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186424153/reactions"
            },
            "updated_at": "2024-06-24T12:07:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186424153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Moving `asm` patterns to the `extension` table in Nvim will also make this work:\r\n```diff\r\ndiff --git a/runtime/lua/vim/filetype.lua b/runtime/lua/vim/filetype.lua\r\nindex 6dd920e506..48685368f8 100644\r\n--- a/runtime/lua/vim/filetype.lua\r\n+++ b/runtime/lua/vim/filetype.lua\r\n@@ -205,6 +205,10 @@ local extension = {\r\n   asm = detect.asm,\r\n   lst = detect.asm,\r\n   mac = detect.asm,\r\n+  s = detect.asm,\r\n+  S = detect.asm,\r\n+  a = detect.asm,\r\n+  A = detect.asm,\r\n   asn1 = 'asn',\r\n   asn = 'asn',\r\n   asp = detect.asp,\r\n@@ -1741,8 +1745,6 @@ local pattern = {\r\n   ['.*asterisk/.*%.conf.*'] = starsetf('asterisk'),\r\n   ['.*asterisk.*/.*voicemail%.conf.*'] = starsetf('asteriskvm'),\r\n   ['.*/%.aptitude/config'] = 'aptconf',\r\n-  ['.*%.[aA]'] = detect.asm,\r\n-  ['.*%.[sS]'] = detect.asm,\r\n   ['[mM]akefile%.am'] = 'automake',\r\n   ['.*/bind/db%..*'] = starsetf('bindzone'),\r\n   ['.*/named/db%..*'] = starsetf('bindzone'),\r\n```\r\n\r\nI'm not sure if this should be done, as it's indeed done for some filetypes, but for some other filetypes (e.g. case-insensitive one) this may not be a good idea.",
            "created_at": "2024-06-24T12:11:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/29468#issuecomment-2186432058",
            "id": 2186432058,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29468",
            "node_id": "IC_kwDOAPphoM6CUk46",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186432058/reactions"
            },
            "updated_at": "2024-06-24T12:11:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186432058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's also a matter of performance. I don't think we should mess with the logic; it was hard-won. Instead, we just need to explicitly mention that you can only override within a category, so pick the highest one (filename > pattern > extension) that fits.",
            "created_at": "2024-06-24T12:14:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/29468#issuecomment-2186437629",
            "id": 2186437629,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29468",
            "node_id": "IC_kwDOAPphoM6CUmP9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186437629/reactions"
            },
            "updated_at": "2024-06-24T12:14:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186437629",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I feel that the current behavior isn't ideal. The pattern vs. extension for builtin filetypes is an implementation detail, but the behavior of `vim.filetype.add()` is kind of affected by that.",
            "created_at": "2024-06-24T12:15:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/29468#issuecomment-2186439286",
            "id": 2186439286,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29468",
            "node_id": "IC_kwDOAPphoM6CUmp2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186439286/reactions"
            },
            "updated_at": "2024-06-24T12:15:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186439286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's not ideal, but the efficiency and robustness of the implementation (which is build around the category cascade) is more important IMO -- especially since you _can_ override, you just have to know how.\r\n\r\n@gpanders @smjonas ",
            "created_at": "2024-06-24T12:17:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/29468#issuecomment-2186444073",
            "id": 2186444073,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29468",
            "node_id": "IC_kwDOAPphoM6CUn0p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186444073/reactions"
            },
            "updated_at": "2024-06-24T12:19:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186444073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the solution @zeertzjq, FWIW I find it unintuitive that some extensions can be overridden, while others can't due to some internal nvim code, even now knowing this priority logic.",
            "created_at": "2024-06-24T12:35:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/29468#issuecomment-2186477514",
            "id": 2186477514,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29468",
            "node_id": "IC_kwDOAPphoM6CUv_K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186477514/reactions"
            },
            "updated_at": "2024-06-24T12:35:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186477514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You can override extensions by extensions, but not patterns by extensions. I agree it's unintuitive since it requires knowing implementation details, but there are really good reasons for the way things are now. If in doubt, specify a pattern.",
            "created_at": "2024-06-24T12:52:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/29468#issuecomment-2186511433",
            "id": 2186511433,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29468",
            "node_id": "IC_kwDOAPphoM6CU4RJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186511433/reactions"
            },
            "updated_at": "2024-06-24T12:52:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186511433",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Moving `asm` patterns to the `extension` table in Nvim will also make this work:\r\n> \r\n> ```diff\r\n> diff --git a/runtime/lua/vim/filetype.lua b/runtime/lua/vim/filetype.lua\r\n> index 6dd920e506..48685368f8 100644\r\n> --- a/runtime/lua/vim/filetype.lua\r\n> +++ b/runtime/lua/vim/filetype.lua\r\n> @@ -205,6 +205,10 @@ local extension = {\r\n>    asm = detect.asm,\r\n>    lst = detect.asm,\r\n>    mac = detect.asm,\r\n> +  s = detect.asm,\r\n> +  S = detect.asm,\r\n> +  a = detect.asm,\r\n> +  A = detect.asm,\r\n>    asn1 = 'asn',\r\n>    asn = 'asn',\r\n>    asp = detect.asp,\r\n> @@ -1741,8 +1745,6 @@ local pattern = {\r\n>    ['.*asterisk/.*%.conf.*'] = starsetf('asterisk'),\r\n>    ['.*asterisk.*/.*voicemail%.conf.*'] = starsetf('asteriskvm'),\r\n>    ['.*/%.aptitude/config'] = 'aptconf',\r\n> -  ['.*%.[aA]'] = detect.asm,\r\n> -  ['.*%.[sS]'] = detect.asm,\r\n>    ['[mM]akefile%.am'] = 'automake',\r\n>    ['.*/bind/db%..*'] = starsetf('bindzone'),\r\n>    ['.*/named/db%..*'] = starsetf('bindzone'),\r\n> ```\r\n> \r\n> I'm not sure if this should be done, as it's indeed done for some filetypes, but for some other filetypes (e.g. case-insensitive one) this may not be a good idea.\r\n\r\nI think regardless of whatever other decisions we make, we should do this. There's no reason for the pattern table to have patterns like this, this is exactly what the extension table is for. If there are other examples like this, we should move those too.",
            "created_at": "2024-06-24T13:03:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/29468#issuecomment-2186535669",
            "id": 2186535669,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29468",
            "node_id": "IC_kwDOAPphoM6CU-L1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186535669/reactions"
            },
            "updated_at": "2024-06-24T13:03:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186535669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29468/comments",
    "created_at": "2024-06-24T11:02:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29468/events",
    "html_url": "https://github.com/neovim/neovim/issues/29468",
    "id": 2369938241,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "filetype detection, filetype.lua",
            "id": 3708202139,
            "name": "filetype",
            "node_id": "LA_kwDOAPphoM7dBqyb",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filetype"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29468/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6NQmNB",
    "number": 29468,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29468/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29468/timeline",
    "title": "vim.filetype.add: user extensions can't override builtin patterns",
    "updated_at": "2025-01-17T15:26:29Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29468",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "events_url": "https://api.github.com/users/ghost/events{/privacy}",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following{/other_user}",
        "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ghost",
        "id": 10137,
        "login": "ghost",
        "node_id": "MDQ6VXNlcjEwMTM3",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ghost",
        "user_view_type": "public"
    }
}