{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nLua register manipulation is complex compares to VimL.\nI suggest add a vim.reg for register like vim.o for options.\n\n### Expected behavior\n\nThis can be used as a reference for the vim.reg implementation\n```lua\n--- ---\n--- Reg imp.\n--- ---\n---@enum (key) RegAlias\nlocal reg_alias={\n xselection=\"*\",\n xclipboard=\"+\",\n yanked=\"\\\"\",\n deleted=\"\\\"\",\n changed=\"\\\"\",\n deleted1=\"-\",\n changed1=\"-\",\n command=\":\",\n inserted=\".\",\n file=\"%\",\n search=\"/\",\n current=nil,\n}\n---@class position\n---@field [1] integer\n---@field [2] integer\n---@class reginfo\n---@field regcontents string[]\n---@field regtype visualmode\n---@field isunnamed? boolean\n---@field points_to? string\n---@class Registers\n---@field [RegAlias] reginfo\nRegister=setmetatable({},{\n __index=function(_,k)\n  if k==\"current\" then\n   k=vim.v.register\n  end\n  return vim.fn.getreginfo(reg_alias[k] or k)\n end,\n __newindex=function(_,k,v)\n  if k==\"current\" then\n   k=vim.v.register\n  end\n  vim.fn.setreg(reg_alias[k] or k,v)\n end,\n})\nreturn Register\n```",
    "closed_at": "2025-02-18T09:08:08Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
        "events_url": "https://api.github.com/users/clason/events{/privacy}",
        "followers_url": "https://api.github.com/users/clason/followers",
        "following_url": "https://api.github.com/users/clason/following{/other_user}",
        "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/clason",
        "id": 2361214,
        "login": "clason",
        "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
        "organizations_url": "https://api.github.com/users/clason/orgs",
        "received_events_url": "https://api.github.com/users/clason/received_events",
        "repos_url": "https://api.github.com/users/clason/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/clason",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Lua register manipulation is complex compares to VimL.\n\nwtf does this mean? Show a Vimscript example vs Lua. And if Vimscript works well, why not use it?",
            "created_at": "2025-02-16T19:58:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2661591808",
            "id": 2661591808,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6epKsA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661591808/reactions"
            },
            "updated_at": "2025-02-16T19:58:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661591808",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "```txt\n:let @{reg-name} = {expr1}\t\t\t*:let-register* *:let-@*\n\t\t\tWrite the result of the expression {expr1} in register\n\t\t\t{reg-name}.  {reg-name} must be a single letter, and\n\t\t\tmust be the name of a writable register (see\n\t\t\t|registers|).  \"@@\" can be used for the unnamed\n\t\t\tregister, \"@/\" for the search pattern.\n\t\t\tIf the result of {expr1} ends in a <CR> or <NL>, the\n\t\t\tregister will be linewise, otherwise it will be set to\n\t\t\tcharwise.\n\t\t\tThis can be used to clear the last search pattern: >\n\t\t\t\t:let @/ = \"\"\n<\t\t\tThis is different from searching for an empty string,\n\t\t\tthat would match everywhere.\n\n:let @{reg-name} .= {expr1}\n\t\t\tAppend {expr1} to register {reg-name}.  If the\n\t\t\tregister was empty it's like setting it to {expr1}.\n```\nVimL has specialized syntax for manipulating registers, eliminating the need to frequently call setreg, getreg, getreginfo, and getregtype. In contrast, even for the simplest operations in Lua, one still needs to use vim.fn.setreg(regname, content) and vim.fn.getreg(regname). Therefore, I believe that register operations in Lua are relatively more complex.",
            "created_at": "2025-02-17T05:33:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2662100785",
            "id": 2662100785,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6erG8x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662100785/reactions"
            },
            "updated_at": "2025-02-17T05:33:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662100785",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": ">if Vimscript works well, why not use it?\n\nVimL is too difficult, and I don't want to learn a domain-specific language just to configure an editorâ€”it's not worth the effort. In fact, most Neovim plugins are written in Lua rather than VimL. I believe this indicates that unless people are forced to use VimL, they generally prefer Lua. Moreover, using Lua allows for better interaction with existing Lua environments, offering greater flexibility.",
            "created_at": "2025-02-17T05:40:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2662109041",
            "id": 2662109041,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6erI9x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662109041/reactions"
            },
            "updated_at": "2025-02-17T14:04:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662109041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So what is the _concrete_ problem with `vim.fn.setreg` and friends? That _you_ \"believe\" that this is \"relatively more complex\" is a very poor motivation for _us_ to put in the significant effort to implement, document, and in particular maintain a new set of APIs.",
            "created_at": "2025-02-17T08:55:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2662449224",
            "id": 2662449224,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6escBI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662449224/reactions"
            },
            "updated_at": "2025-02-17T14:04:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662449224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "We already have these vim.*:\no         \ngo        \nwo        \nbo        \nopt       \nopt_global\nopt_local \nenv       \ng         \nv         \nb         \nw         \nt         \nThese correspond to the `set` and `let` commands, among other variable and configuration syntax in VimL. In VimL, `let` can manipulate registers. Implementing `vim.reg` in Lua would maintain consistency in both feel and design between Lua and VimL, ensuring that such simple and commonly used operations have their counterparts.",
            "created_at": "2025-02-17T11:21:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2662821389",
            "id": 2662821389,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6et24N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662821389/reactions"
            },
            "updated_at": "2025-02-17T14:04:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662821389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, and those are too many. We learn from our past mistakes.",
            "created_at": "2025-02-17T11:52:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2662892491",
            "id": 2662892491,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6euIPL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662892491/reactions"
            },
            "updated_at": "2025-02-17T14:04:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662892491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "VimL is not the Neovim favorite, and nvim_get_*, nvim_set_*, setreg, getreg seem obscure for newcomers. In my experience, it takes a lot more code to write a simple script in Lua due to the lack of these things (e.g. clear a register, then find all matches and append them into a register). Is there a better way to do these things? ",
            "created_at": "2025-02-17T13:56:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2663210980",
            "id": 2663210980,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6evV_k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2663210980/reactions"
            },
            "updated_at": "2025-02-17T14:04:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2663210980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> VimL is not the Neovim favorite\n\nPlease avoid such sweeping statements, especially on behalf of the project. While we indeed prefer Lua over VimL _the programming language_, that does not include the Vim \"API\" (normal mode and ex commands), which can be accessed reasonably ergonomic and performant via Lua. Any benefit of a native nvim or Lua API needs to be significant enough (and involve more than convenience) to justify the -- significant -- effort we'd have to spend on it. So far, you have not provided anything concrete in this direction. If you can do so, a comment will be welcome, but please refrain from simply restating your wish for more convenience.",
            "created_at": "2025-02-17T14:03:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2663229257",
            "id": 2663229257,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6evadJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2663229257/reactions"
            },
            "updated_at": "2025-02-17T14:04:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2663229257",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Show a code sample that compares the current Lua code, to how it would look with the ideal Lua api. That is always required when proposing this kind of thing.",
            "created_at": "2025-02-17T14:13:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2663253966",
            "id": 2663253966,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6evgfO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2663253966/reactions"
            },
            "updated_at": "2025-02-17T14:13:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2663253966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "1. move reg from a to b\n```lua\nvim.fn.setreg(\"a\",vim.fn.getreginfo(\"b\"))\n```\n```lua\nvim.reg.a=vim.reg.b\n```\n2. keep reg in var then recover it\n```lua\nlocal reg = vim.fn.getreginfo(\"a\")\nvim.fn.feedkeys(\"\\\"ayy\")\nlocal yank = vim.fn.getreginfo(\"a\")\nvim.fn.setreg(\"a\",reg)\n```\n```lua\nlocal reg = vim.reg.a\nvim.fn.feedkeys(\"\\\"ayy\")\nlocal yank = vim.reg.a\nvim.reg.a=reg\n```\n3. replace something to current register\n```lua\nlocal paths={}\nfor _,node in ipairs(selected_nodes) do\n table.insert(paths,node.path)\nend\nvim.fn.setreg(vim.v.register,table.concat(paths,\"\\n\"))\n```\n```lua\nlocal paths={}\nfor _,node in ipairs(selected_nodes) do\n table.insert(paths,node.path)\nend\nvim.reg.current=table.concat(paths,\"\\n\")\n```\n4. meaningful register name\n```lua\nlocal clip = vim.fn.getreg(\"*\")\nlocal filename = vim.fn.getreg(\"%\")\n```\n```lua\nlocal clip = vim.reg.xclipboard -- \"*\"\nlocal filename = vim.reg.file -- \"%\"\n```",
            "created_at": "2025-02-18T06:22:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2664721539",
            "id": 2664721539,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6e1GyD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2664721539/reactions"
            },
            "updated_at": "2025-02-18T06:22:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2664721539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There's no meaningful difference between these alternatives, so this demonstrates that a new API is definitely not warranted.",
            "created_at": "2025-02-18T09:08:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/32455#issuecomment-2665013469",
            "id": 2665013469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32455",
            "node_id": "IC_kwDOAPphoM6e2ODd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2665013469/reactions"
            },
            "updated_at": "2025-02-18T09:08:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2665013469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32455/comments",
    "created_at": "2025-02-15T12:28:10Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32455/events",
    "html_url": "https://github.com/neovim/neovim/issues/32455",
    "id": 2855445719,
    "labels": [
        {
            "color": "c7def8",
            "default": false,
            "description": "",
            "id": 109899557,
            "name": "vimscript",
            "node_id": "MDU6TGFiZWwxMDk4OTk1NTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vimscript"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "needs a clear design proposal",
            "id": 124510010,
            "name": "needs:design",
            "node_id": "MDU6TGFiZWwxMjQ1MTAwMTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:design"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32455/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 264,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 307,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-02-23T21:55:55Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6qMqTX",
    "number": 32455,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32455/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32455/timeline",
    "title": "Lua: vim.reg for register manipulation",
    "updated_at": "2025-02-18T09:08:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32455",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
        "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
        "followers_url": "https://api.github.com/users/hoofcushion/followers",
        "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
        "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/hoofcushion",
        "id": 32760059,
        "login": "hoofcushion",
        "node_id": "MDQ6VXNlcjMyNzYwMDU5",
        "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
        "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
        "repos_url": "https://api.github.com/users/hoofcushion/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/hoofcushion",
        "user_view_type": "public"
    }
}