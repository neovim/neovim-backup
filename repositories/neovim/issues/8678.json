{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "#8217 and #8450 describe some casualties of the change in #8107: since #8107, all processes spawned by Nvim are created in their own session (by calling `setsid()` in the child). Using `setsid()`  avoids serious bugs like #6530 (orphaned processes). It's a good thing to do, and is essentially what Vim's `job_start()` does as well.\r\n\r\nHowever, the terminal version (at least) of Vim doesn't do that for `system()`, `systemlist()` and `:!`.\r\n\r\n\"Fixing\" this as attempted in https://github.com/neovim/neovim/pull/8389 would regress https://github.com/neovim/neovim/pull/8107 for `system()`, `systemlist()`, and `:!`. For example, CTRL-C during this command would leave orphan processes:\r\n\r\n    :echo system('sleep 30|sleep 30|sleep 30')\r\n\r\nVim's approach for `system()`, `systemlist()`, and `:!` is:\r\n\r\n1. Block signals\r\n2. `fork()`\r\n3. Unblock signals in the child\r\n4. On CTRL-C, send SIGINT to the process-group id\r\n5. The parent (`vim`) ignores the signal. The child and its descendants do _not_, so sending the signal to the group kills everything except `vim` itself.\r\n\r\nTo do this in Nvim will (I think) require adding a case in `process_spawn()` to work without using libuv. This could be implemented like how `src/nvim/os/pty_process_unix.c` implements `ProcessType.kProcessTypePty`:  add `ProcessType.kProcessTypeUnix` and special-case it.\r\n\r\nThe work will be in implementing `src/nvim/os/unix_process.c` (again as mentioned, `src/nvim/os/pty_process_unix.c` would be a good starting point).\r\n\r\n",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Currently both neovim and vim is doing wrong. To fix the problem once for all, use the following process:\r\n\r\n1. neovim prepares pipes for the new chile\r\n2. neovim forks a new child process \r\n3. child dups pipes to stdin/stdout\r\n4. both neovim and child: create a new process group for the child (setpgid)\r\n5. both neovim and child: set the child active process group (tcsetpgrp)\r\n6. exec in the child (sh -c \"......\")\r\n7. while neovim waits child, handle input/output of child via pipes\r\n8. child exits, neovim is notified by SIGCLD\r\n9. set neovim to active process group (again tcsetpgrp)\r\n\r\n\r\n## Handle signals\r\nHere is how we handle signals during step 7. As we already set the child as active process group, when user hit Ctrl-C, the SIGINT will be send to the active process group directly (aka, all process created by the command), this is the default pty behaviour. And it is the child's duty to clean up all his children. In most case, all children created will receive SIGINT from tty, and quit themself, if some processes refuse to exit by SIGINT, it is their choice, nothing related to neovim.\r\n\r\n## Note\r\n1. no session is needed (setsid), unless we are emulating a term. So only `termopen` should create a new session, no other command should create a new session.\r\n2. the signals are generated and delivered by tty, we should avoid to proxy/delegate signals.\r\n3. when neovim decided to quit before some of its children, instead of use SIGTERM, we should sue SIGHUP to kill all the child process groups.",
            "created_at": "2019-07-17T05:18:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/8678#issuecomment-512105730",
            "id": 512105730,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8678",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjEwNTczMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/512105730/reactions"
            },
            "updated_at": "2019-07-17T05:18:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/512105730",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/154702?v=4",
                "events_url": "https://api.github.com/users/kghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/kghost/followers",
                "following_url": "https://api.github.com/users/kghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/kghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kghost",
                "id": 154702,
                "login": "kghost",
                "node_id": "MDQ6VXNlcjE1NDcwMg==",
                "organizations_url": "https://api.github.com/users/kghost/orgs",
                "received_events_url": "https://api.github.com/users/kghost/received_events",
                "repos_url": "https://api.github.com/users/kghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kghost",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@kghost you have not explained what is \"wrong\" about the setsid approach.\r\n\r\n> no session is needed (setsid), unless we are emulating a term. So only `termopen` should create a new session, no other command should create a new session.\r\n\r\nWhy shouldn't a powerful tool like Vim/Nvim consider itself a \"term\" (I think you mean \"shell\")? It is managing processes/jobs, just like a shell.",
            "created_at": "2019-07-17T09:02:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/8678#issuecomment-512168671",
            "id": 512168671,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8678",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjE2ODY3MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/512168671/reactions"
            },
            "updated_at": "2019-07-17T14:19:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/512168671",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk No, I haven't explained what's wrong, but #8450 #8217 #8527 does\r\n\r\nPlease reopen this, I'm working on my way to solve this problem.\r\n\r\na powerful tool like Vim/Nvim can consider itself a \"term\", only when `termopen`. But not when `:!` or `:system`. In this case, instead of allocating a new pty, it is totally right to use derived pty, and we should do this to reduce the problem causing by allocating a new pty, you can try running bash in another bash, the inner bash doesn't create a new session, we are in the situation just like this.",
            "created_at": "2019-07-17T12:30:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/8678#issuecomment-512233578",
            "id": 512233578,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8678",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjIzMzU3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/512233578/reactions"
            },
            "updated_at": "2019-07-17T14:19:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/512233578",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/154702?v=4",
                "events_url": "https://api.github.com/users/kghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/kghost/followers",
                "following_url": "https://api.github.com/users/kghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/kghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kghost",
                "id": 154702,
                "login": "kghost",
                "node_id": "MDQ6VXNlcjE1NDcwMg==",
                "organizations_url": "https://api.github.com/users/kghost/orgs",
                "received_events_url": "https://api.github.com/users/kghost/received_events",
                "repos_url": "https://api.github.com/users/kghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kghost",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I haven't explained what's wrong, but #8450 #8217 #8527 does\r\n\r\nAt least #8217 can be solved by changing `:!` to use `:terminal` implicitly (described in #5431). That is the long-term solution, and would be much, much more valuable.\r\n\r\nI'll reopen this since I forgot about the workaround in the main description:\r\n\r\n> adding a case in `process_spawn()` to work without using libuv. \r\n\r\nBut really, the long-term solution is to use `:terminal` implementation for `:!`.  Nvim is a client-server architecture first. The terminal UI is just a UI. ",
            "created_at": "2019-07-17T14:18:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/8678#issuecomment-512275467",
            "id": 512275467,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8678",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjI3NTQ2Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/512275467/reactions"
            },
            "updated_at": "2019-07-17T14:18:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/512275467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "OK, I got your concept, and happy to progress this way.\r\n\r\nCurrently uv_spawn is designed for detach process, which do use setsid but doesn't allocate pty. So I'm finding a way to replace it as you suggested, \r\n\r\n> adding a case in process_spawn() to work without using libuv.",
            "created_at": "2019-07-19T06:13:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/8678#issuecomment-513105388",
            "id": 513105388,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8678",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzEwNTM4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/513105388/reactions"
            },
            "updated_at": "2019-07-19T06:13:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/513105388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/154702?v=4",
                "events_url": "https://api.github.com/users/kghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/kghost/followers",
                "following_url": "https://api.github.com/users/kghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/kghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kghost",
                "id": 154702,
                "login": "kghost",
                "node_id": "MDQ6VXNlcjE1NDcwMg==",
                "organizations_url": "https://api.github.com/users/kghost/orgs",
                "received_events_url": "https://api.github.com/users/kghost/received_events",
                "repos_url": "https://api.github.com/users/kghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kghost",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Seems like this might be the cause of this: https://github.com/kovidgoyal/kitty/discussions/4869\r\n\r\nCan anyone help me confirm? Any news on a fix?",
            "created_at": "2022-03-23T18:45:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/8678#issuecomment-1076695966",
            "id": 1076695966,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8678",
            "node_id": "IC_kwDOAPphoM5ALROe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1076695966/reactions"
            },
            "updated_at": "2022-03-23T18:45:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1076695966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1565211?v=4",
                "events_url": "https://api.github.com/users/qbedard/events{/privacy}",
                "followers_url": "https://api.github.com/users/qbedard/followers",
                "following_url": "https://api.github.com/users/qbedard/following{/other_user}",
                "gists_url": "https://api.github.com/users/qbedard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/qbedard",
                "id": 1565211,
                "login": "qbedard",
                "node_id": "MDQ6VXNlcjE1NjUyMTE=",
                "organizations_url": "https://api.github.com/users/qbedard/orgs",
                "received_events_url": "https://api.github.com/users/qbedard/received_events",
                "repos_url": "https://api.github.com/users/qbedard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/qbedard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/qbedard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/qbedard",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Would this fix the issue that the FAQ describes as \n\n> ! AND SYSTEM() DO WEIRD THINGS WITH INTERACTIVE PROCESSES\n\nI use this a lot in Vim to launch TUIs (file manager, git, etc.) and would like to have this available in Neovim as well.",
            "created_at": "2025-01-08T15:03:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/8678#issuecomment-2577892704",
            "id": 2577892704,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8678",
            "node_id": "IC_kwDOAPphoM6Zp4Vg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2577892704/reactions"
            },
            "updated_at": "2025-01-08T15:03:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2577892704",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/959858?v=4",
                "events_url": "https://api.github.com/users/laktak/events{/privacy}",
                "followers_url": "https://api.github.com/users/laktak/followers",
                "following_url": "https://api.github.com/users/laktak/following{/other_user}",
                "gists_url": "https://api.github.com/users/laktak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/laktak",
                "id": 959858,
                "login": "laktak",
                "node_id": "MDQ6VXNlcjk1OTg1OA==",
                "organizations_url": "https://api.github.com/users/laktak/orgs",
                "received_events_url": "https://api.github.com/users/laktak/received_events",
                "repos_url": "https://api.github.com/users/laktak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/laktak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/laktak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/laktak",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No",
            "created_at": "2025-01-09T00:57:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/8678#issuecomment-2578982005",
            "id": 2578982005,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8678",
            "node_id": "IC_kwDOAPphoM6ZuCR1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2578982005/reactions"
            },
            "updated_at": "2025-01-09T00:57:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2578982005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/8678/comments",
    "created_at": "2018-07-03T22:23:04Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/8678/events",
    "html_url": "https://github.com/neovim/neovim/issues/8678",
    "id": 338073005,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "compatibility with Vim or older Neovim",
            "id": 109899712,
            "name": "compatibility",
            "node_id": "MDU6TGFiZWwxMDk4OTk3MTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/compatibility"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/8678/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 261,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 292,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-13T09:14:34Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWUzMzgwNzMwMDU=",
    "number": 8678,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/8678/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/8678/timeline",
    "title": "TUI: system(), systemlist(), :! in same process-group",
    "updated_at": "2025-01-09T00:57:24Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/8678",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}