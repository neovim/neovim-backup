{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "## Problem\r\n\r\nhttps://github.com/neovim/neovim/issues/25856 implemented `v:termresponse` but we don't yet use it to detect whether we can use 8-bit key sequences.\r\n\r\nRelated Vim help:\r\n\r\n    >       >       >       >       >       >       xterm-8bit xterm-8-bit\r\n    Xterm can be run in a mode where it uses 8-bit escape sequences.  The CSI code\r\n    is used instead of <Esc>[.  The advantage is that an <Esc> can quickly be\r\n    recognized in Insert mode, because it can't be confused with the start of a\r\n    special key.\r\n    For the builtin termcap entries, Vim checks if the 'term' option contains\r\n    \"8bit\" anywhere.  It then uses 8-bit characters for the termcap entries, the\r\n    mouse and a few other things.  You would normally set $TERM in your shell to\r\n    \"xterm-8bit\" and Vim picks this up and adjusts to the 8-bit setting\r\n    automatically.\r\n    When Vim receives a response to the t_RV (request version) sequence and it\r\n    starts with CSI, it assumes that the terminal is in 8-bit mode and will\r\n    convert all key sequences to their 8-bit variants.\r\n\r\n## Expected behavior\r\n\r\nNvim should detect whether it can use 8-bit mode, via a \"request version\" `TermResponse` (aka \"Primary Device Attributes\"?). Unless there's a better way.\r\n\r\n\r\n\r\n## Reference\r\n\r\n- Vim in some cases does a synchronous timeout-based check, e.g.: https://github.com/vim/vim/commit/ba6ec182973af726ce9b7b7eb3753fc3a7ae7d1b#diff-366ece1c6e8026aed5df9c6ae82c3967R2622\r\n- [S8C1T mode](http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-C1-_8-Bit_-Control-Characters)",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk \r\nhere the builtin termcap entries are from `src/nvim/tui/terminfo_defs.h` for 8-bit right?\r\nWhat needs to be done here? The what `termresponse` is doing here is setting the 8-bit setting\r\nautomatically when the `$TERM` changes.\r\n\r\nHow differently should nvim handle this? would like to work on this.\r\n",
            "created_at": "2018-03-02T17:34:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/6279#issuecomment-369993455",
            "id": 369993455,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6279",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk5MzQ1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/369993455/reactions"
            },
            "updated_at": "2018-03-02T17:34:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/369993455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12918431?v=4",
                "events_url": "https://api.github.com/users/geekodour/events{/privacy}",
                "followers_url": "https://api.github.com/users/geekodour/followers",
                "following_url": "https://api.github.com/users/geekodour/following{/other_user}",
                "gists_url": "https://api.github.com/users/geekodour/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/geekodour",
                "id": 12918431,
                "login": "geekodour",
                "node_id": "MDQ6VXNlcjEyOTE4NDMx",
                "organizations_url": "https://api.github.com/users/geekodour/orgs",
                "received_events_url": "https://api.github.com/users/geekodour/received_events",
                "repos_url": "https://api.github.com/users/geekodour/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/geekodour/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/geekodour/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/geekodour",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@geekodour  see https://github.com/neovim/neovim/pull/5556 for sample code that [requests](https://github.com/neovim/neovim/pull/5556/commits/d3852b30b06693a5596d966738f1ee6341f3601b#diff-3ac88981a139ac0eee448a6bd19c7569R200) a terminal response and [receives the response](https://github.com/neovim/neovim/pull/5556/commits/d3852b30b06693a5596d966738f1ee6341f3601b#diff-9fe05c714b192fe85bb903baf3355196R240). (Notice that this is asynchronous and some terminals may _never_ send a response, so we must handle the response asynchronously; see below.)\r\n\r\nThat shows how to get the response. Then something needs to be done with it.\r\n\r\n> The what termresponse is doing here is setting the 8-bit setting automatically when the $TERM changes\r\n\r\n\"Vim picks this up\" at startup, not runtime. Anyways, don't worry about that. We only care about this part:\r\n\r\n```\r\nWhen Vim receives a response to the t_RV (request version) sequence and it\r\nstarts with CSI, it assumes that the terminal is in 8-bit mode and will\r\nconvert all key sequences to their 8-bit variants.\r\n```\r\n\r\nI.e., query the terminal (as explained above), receive the response, and \"do something\" with the response. \"Do something\" in this case means \"convert all key sequences to their 8-bit variants\".\r\n\r\nFor Nvim that means (I think) we will need to:\r\n\r\n- re-initialize `term_input_init()` (`src/nvim/tui/input.c`). Specifically we need to tell libtermkey to use 8-bit mode. We need to be able to re-initialize at any time, because (as mentioned above) we don't know when (if ever) the terminal will send a response.\r\n- send `ESC a` to Nvim on stdin and see what happens. Some changes might (or might not) be needed in `src/nvim/keymap.c`.\r\n    - It should always be interpreted as `ESC a`, never `ALT-a`, regardless of `ttimeout` or `ttimeoutlen`.\r\n- send `ALT-a` to Nvim on stdin and see what happens. \r\n    - It should always be interpreted as `ALT-a`, never `ESC a`, regardless of `ttimeout` or `ttimeoutlen`.\r\n\r\n",
            "created_at": "2018-03-02T17:51:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/6279#issuecomment-369998333",
            "id": 369998333,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6279",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk5ODMzMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/369998333/reactions"
            },
            "updated_at": "2019-02-21T21:41:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/369998333",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk thankyou so much for your detailed and informative response. I read #5556 , will start working on it now.",
            "created_at": "2018-03-04T13:38:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/6279#issuecomment-370230024",
            "id": 370230024,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6279",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDIzMDAyNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/370230024/reactions"
            },
            "updated_at": "2018-03-04T13:38:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/370230024",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12918431?v=4",
                "events_url": "https://api.github.com/users/geekodour/events{/privacy}",
                "followers_url": "https://api.github.com/users/geekodour/followers",
                "following_url": "https://api.github.com/users/geekodour/following{/other_user}",
                "gists_url": "https://api.github.com/users/geekodour/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/geekodour",
                "id": 12918431,
                "login": "geekodour",
                "node_id": "MDQ6VXNlcjEyOTE4NDMx",
                "organizations_url": "https://api.github.com/users/geekodour/orgs",
                "received_events_url": "https://api.github.com/users/geekodour/received_events",
                "repos_url": "https://api.github.com/users/geekodour/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/geekodour/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/geekodour/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/geekodour",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@geekodour Note also:\r\n\r\n- you need to test this on a terminal that actually supports 8-bit mode. (e.g. xterm, pangoterm, maybe others)\r\n- use the same heuristic as Vim to \"guess\" that the terminal _does_ support 8-bit mode: _If Nvim receives a response to the \"request version\" sequence **and it starts with CSI,** assume that the terminal is in 8-bit mode._\r\n    - Hint: see Vim's [:help v:termresponse](http://vimdoc.sourceforge.net/htmldoc/eval.html#v:termresponse), xterm response will look like `\"<Esc>[ Pp ; Pv ; Pc c\"`.\r\n    ",
            "created_at": "2018-03-04T14:08:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/6279#issuecomment-370231950",
            "id": 370231950,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6279",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDIzMTk1MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/370231950/reactions"
            },
            "updated_at": "2018-03-04T14:20:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/370231950",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/6279/comments",
    "created_at": "2017-03-14T22:23:23Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/6279/events",
    "html_url": "https://github.com/neovim/neovim/issues/6279",
    "id": 214224697,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/6279/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUyMTQyMjQ2OTc=",
    "number": 6279,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/6279/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/6279/timeline",
    "title": "tui: S8C1T (8-bit) mode, v:termresponse",
    "updated_at": "2025-01-17T16:03:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/6279",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}