{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nNeovide added IME pre-edit support with API support https://github.com/neovide/neovide/pull/3110 and a plugin https://github.com/kanium3/neovide-ime.nvim. However, it had to immediately be reverted due to hangs when blocking message prompts were showing.\n\nThe reason for this was that `nvim_input` was changed to `nvim_exec_lua`, which calls a lua function to perform the actual input. But that lua function never gets executed when a message prompt is showing, even when it's a direct replacement like this\n```lua\nM.commit_handler = function(commit_raw_text, commit_formatted_text)\n    vim.api.nvim_input(commit_formatted_text)\nend\n```\n\nThe actual pre-edit functionality is complex, won't be possible, and doesn't even make sense when a message is waiting for input, so what we would like to have is a function like this:\n\n```lua\nM.commit_handler = function(commit_raw_text, commit_formatted_text)\n    if vim.in_fast_event() then\n        vim.api.nvim_input(commit_formatted_text)\n    else\n        -- do pre-edit stuff here\n    end\nend\n```\n\nBut as mentioned this does not work, due to `nvim_exec_lua` not being marked as `FUNC_API_FAST`\n\n### Expected behavior\n\nAn UI should be able to execute lua code when nvim is in a fast even handler. It could be done by changing `nvim_exec_lua` to allow it, but that can cause breakage, so maybe another more limited function could be added?\n\nNote, we don't want to do extra roundtrips by checking `vim.in_fast_event()` on the nvim side, which is not even possible to do in an atomic manner, so there could be race conditions.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "What specific things need to be done in a fast context? Maybe targeted API(s) could be added for them.\n\n> However, it had to immediately be reverted due to hangs when blocking message prompts were showing.\n> \n> The reason for this was that `nvim_input` was changed to `nvim_exec_lua`, which calls a lua function to perform the actual input.\n\nThis needs to be expanded, it seems like we're jumping to an \"XY solution\".\n\nWhat \"hangs\" and is there some other way we could achieve the goal instead of just adding a way to execute the universe in a fast context.",
            "created_at": "2025-09-14T18:57:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/35739#issuecomment-3289787286",
            "id": 3289787286,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35739",
            "node_id": "IC_kwDOAPphoM7EFiuW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289787286/reactions"
            },
            "updated_at": "2025-09-14T18:59:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289787286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "For this specific problem I need an API that does this\n```lua\nM.commit_handler = function(commit_raw_text, commit_formatted_text)\n    if vim.in_fast_event() then\n        vim.api.nvim_input(commit_formatted_text)\n    else\n        -- do pre-edit stuff here\n    end\nend\n```\nWhere pre-edit stuff is arbitrary lua code *not* run in fast context.\n\nAnd another one with the following signature \n`function(preedit_raw_text, cursor_offset)`",
            "created_at": "2025-09-14T19:03:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/35739#issuecomment-3289792715",
            "id": 3289792715,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35739",
            "node_id": "IC_kwDOAPphoM7EFkDL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289792715/reactions"
            },
            "updated_at": "2025-09-14T19:05:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289792715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Where pre-edit stuff is arbitrary lua code _not_ run in fast context.\n\nsorry, i don't understand. your code example should already work. `nvim_input` is \"fast\", and the `else` branch is not...",
            "created_at": "2025-09-14T19:07:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/35739#issuecomment-3289797261",
            "id": 3289797261,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35739",
            "node_id": "IC_kwDOAPphoM7EFlKN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289797261/reactions"
            },
            "updated_at": "2025-09-14T19:07:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289797261",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "No it doesn't, `nvim_exec_lua` cant be called from a remote when a message is showing, it will be queued, because it's not a fast API.  So it can't call `vim.api.nvim_input` that would send the input to close the message ",
            "created_at": "2025-09-14T19:11:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/35739#issuecomment-3289799895",
            "id": 3289799895,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35739",
            "node_id": "IC_kwDOAPphoM7EFlzX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289799895/reactions"
            },
            "updated_at": "2025-09-14T19:11:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289799895",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is the remote client calling `nvim_exec_lua('M.commit_handler')` ? That was the part I was missing.\n\nCan the remote client check `nvim_get_mode()`? It exists for this purpose. If it returns `blocking=true`, then the remote client should call `nvim_input`, else it can call `nvim_exec_lua`.",
            "created_at": "2025-09-14T19:21:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/35739#issuecomment-3289807137",
            "id": 3289807137,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35739",
            "node_id": "IC_kwDOAPphoM7EFnkh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289807137/reactions"
            },
            "updated_at": "2025-09-14T19:21:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289807137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes, the remote is calling it. \n\nAnd as explained in my first message, splitting it into two calls is a bad idea due to additional latency. And impossible due to race conditions. There's no guarantee that the actual call will have the same mode.",
            "created_at": "2025-09-14T19:35:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/35739#issuecomment-3289820262",
            "id": 3289820262,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35739",
            "node_id": "IC_kwDOAPphoM7EFqxm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289820262/reactions"
            },
            "updated_at": "2025-09-14T19:35:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289820262",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "how are we interpreting \"commit\"? something like `nvim_paste` might make sense, unless you expect commiting in normal mode to be read as a normal mode command",
            "created_at": "2025-09-14T19:46:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/35739#issuecomment-3289831048",
            "id": 3289831048,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35739",
            "node_id": "IC_kwDOAPphoM7EFtaI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289831048/reactions"
            },
            "updated_at": "2025-09-14T19:46:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289831048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> how are we interpreting \"commit\"? something like `nvim_paste` might make sense, unless you expect commiting in normal mode to be read as a normal mode command\n\nCommit, in this case means IME commit and means insert the text as if it was typed.\n\nWith pre-edit the implementation is more complex than that, here's the implementation we have right now https://github.com/kanium3/neovide-ime.nvim/blob/main/lua/neovide-ime/init.lua, but it's still fairly incomplete, and misses a lot of special cases.\n\nWinit has a quite good description of IME as we implement it in Neovide https://docs.rs/winit/latest/winit/event/enum.Ime.html\n\nBut it can be a bit more complex than that, see the wayland protocol for example https://wayland.app/protocols/text-input-unstable-v3",
            "created_at": "2025-09-14T19:56:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/35739#issuecomment-3289842623",
            "id": 3289842623,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35739",
            "node_id": "IC_kwDOAPphoM7EFwO_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289842623/reactions"
            },
            "updated_at": "2025-09-14T19:56:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289842623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "so for the actual question, it seems we want \"commit\" in normal mode to mean normal mode command? ",
            "created_at": "2025-09-14T20:10:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/35739#issuecomment-3289857582",
            "id": 3289857582,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35739",
            "node_id": "IC_kwDOAPphoM7EFz4u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289857582/reactions"
            },
            "updated_at": "2025-09-14T20:10:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289857582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> so for the actual question, it seems we want \"commit\" in normal mode to mean normal mode command?\n\nYes, it should act as regular input. \n\nIn fact, on at least some macOS systems dead keys are delivered as IME input and not as regular key presses, so some default mappings would stop working without it.\n\nBut often the user wants to automatically disable IME when going to the normal mode, so you don't want to create Chinese mappings for example. Those are things the plugin will take care of.\n\nThe default implementation without the plugin and pre-edit support is this.\n```lua\n---@param preedit_raw_text string\n---@param cursor_offset? [integer, integer] (start_col, end_col) This values show the cursor begin position and end position. The position is byte-wise indexed.\nM.preedit_handler = function(preedit_raw_text, cursor_offset) end\n\n---@param commit_raw_text string\n---@param commit_formatted_text string It's escaped.\nM.commit_handler = function(commit_raw_text, commit_formatted_text)\n    vim.api.nvim_input(commit_formatted_text)\nend\n```\nBut that already breaks because Neovide can't call it when nvim is blocking for input.",
            "created_at": "2025-09-14T20:29:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/35739#issuecomment-3289871364",
            "id": 3289871364,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35739",
            "node_id": "IC_kwDOAPphoM7EF3QE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289871364/reactions"
            },
            "updated_at": "2025-09-14T20:29:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289871364",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35739/comments",
    "created_at": "2025-09-12T18:58:25Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35739/events",
    "html_url": "https://github.com/neovim/neovim/issues/35739",
    "id": 3411629612,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35739/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7LWVYs",
    "number": 35739,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35739/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35739/timeline",
    "title": "Fast API support for nvim_exec_lua",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-14T20:29:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35739",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
        "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
        "followers_url": "https://api.github.com/users/fredizzimo/followers",
        "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
        "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fredizzimo",
        "id": 9946255,
        "login": "fredizzimo",
        "node_id": "MDQ6VXNlcjk5NDYyNTU=",
        "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
        "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
        "repos_url": "https://api.github.com/users/fredizzimo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fredizzimo",
        "user_view_type": "public"
    }
}