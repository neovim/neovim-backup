{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!-- Before reporting: search existing issues and check the FAQ. -->\r\n\r\n- `nvim --version`: NVIM v0.4.3\r\n- `vim -u DEFAULTS` (version: ) behaves differently?\r\n- Operating system/version: MacOS\r\n- Terminal name/version:\r\n- `$TERM`: xterm-256color\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\nSuppose there are two files test.vim and test2.vim in the same directory:\r\n\r\ntest.vim\r\n```vim\r\nlet id1 = nvim_open_win(bufadd('test.vim'), 1, {'relative':'win', 'width':20, 'height':5, 'row':15, 'col':15})\r\nlet id2 = nvim_open_win(bufadd('test2.vim'), 0, {'relative':'win', 'width':20, 'height':5, 'row':5, 'col':5})\r\nechom id1 id2\r\n\r\ncall nvim_win_set_option(id2, 'cursorline', v:true)\r\ncall nvim_win_set_option(id2, 'winhighlight', 'Normal:Error')\r\n\r\ncall nvim_win_close(id1, 1)\r\ncall nvim_win_close(id2, 1)\r\n\r\nedit test2.vim\r\n```\r\ntest2.vim, the content can be anything.\r\n```vim\r\nlet id1 = nvim_open_win(bufadd('test.vim'), 1, {'relative':'win', 'width':20, 'height':5, 'row':15, 'col':15})\r\nlet id2 = nvim_open_win(bufadd('test2.vim'), 0, {'relative':'win', 'width':20, 'height':5, 'row':5, 'col':5})\r\nechom id1 id2\r\n\r\ncall nvim_win_set_option(id2, 'cursorline', v:true)\r\ncall nvim_win_set_option(id2, 'winhighlight', 'Normal:Error')\r\n\r\ncall nvim_win_close(id1, 1)\r\ncall nvim_win_close(id2, 1)\r\n\r\nedit test2.vim\r\n```\r\n\r\nsteps:\r\n1. nvim -u NORC test.vim\r\n2. `so %`\r\n\r\n### Actual behaviour\r\n1. the cursorline appears\r\n2. the color of the window is the same as `Error`\r\n\r\n### Expected behaviour\r\n1. no cursorline\r\n2. the color of the window does not change\r\n\r\n",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "- Confirmed: the remaining (not-float) window is changed, instead of the (immediately-closed) floating windows. \r\n- If the `nvim_win_close` calls are removed, the problem doesn't happen.\r\n\r\nSeems like a order-of-operations bug: since the floating windows are closed immediately, by the time the redraw is \"resolved\", the options are applied to the current window instead...? ",
            "created_at": "2019-12-06T06:25:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-562449527",
            "id": 562449527,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQ0OTUyNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/562449527/reactions"
            },
            "updated_at": "2019-12-06T06:26:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/562449527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For better and worse, this is how window options in vim and neovim works. The default options for a buffer is set by the current or last window that displayed that buffer. You would have observed exactly the same with a temporary split window.",
            "created_at": "2020-01-29T11:10:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-579707226",
            "id": 579707226,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTcwNzIyNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/579707226/reactions"
            },
            "updated_at": "2020-01-29T11:10:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/579707226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bfredl I don't think this issue can be closed. This is not how window options in vim and neovim works.\r\nA option that local to window is bound to (winid, buffer number) pair, the option set for (winid1, buffer 1) should not take effect for (winid2, buffer 1).\r\n",
            "created_at": "2020-01-31T08:23:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580634146",
            "id": 580634146,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDYzNDE0Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580634146/reactions"
            },
            "updated_at": "2020-01-31T08:23:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580634146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2705841?v=4",
                "events_url": "https://api.github.com/users/Yggdroot/events{/privacy}",
                "followers_url": "https://api.github.com/users/Yggdroot/followers",
                "following_url": "https://api.github.com/users/Yggdroot/following{/other_user}",
                "gists_url": "https://api.github.com/users/Yggdroot/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Yggdroot",
                "id": 2705841,
                "login": "Yggdroot",
                "node_id": "MDQ6VXNlcjI3MDU4NDE=",
                "organizations_url": "https://api.github.com/users/Yggdroot/orgs",
                "received_events_url": "https://api.github.com/users/Yggdroot/received_events",
                "repos_url": "https://api.github.com/users/Yggdroot/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Yggdroot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Yggdroot/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Yggdroot",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This is not how window options in vim and neovim works.\r\nA option that local to window is bound to (winid, buffer number) pair, the option set for (winid1, buffer 1) should not take effect for (winid2, buffer 1).\r\n\r\nWhere does this come from? Documentation? Some experiments you did? Forget \"intuition\" or \"mental model\", it is likely wrong. I've already revised my mental model for window options five times (or rather four, one time I actually convinced bram to make the behaviour slightly more consistent instead) \r\n\r\nI just tested again with split windows and it behaves exactly the same. While the documentation doesn't give a complete operational description how local options work, there is nothing that directly contradictory with the docs here.",
            "created_at": "2020-01-31T08:44:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580640509",
            "id": 580640509,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY0MDUwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580640509/reactions"
            },
            "updated_at": "2020-01-31T08:44:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580640509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "But as far for _adding_ a new option mode to keep options private to a window (and never have them leak to another window), we could consider that. Though there could be some weird interactions with autocmds, because `FileType` expects to be able to set local window options _once_, because of this copying behevior (we could work around it using the autocmd window, and such..) So this would be a feature request and not a bug then.",
            "created_at": "2020-01-31T08:47:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580641572",
            "id": 580641572,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY0MTU3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580641572/reactions"
            },
            "updated_at": "2020-01-31T08:47:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580641572",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Where does this come from? Documentation? Some experiments you did? Forget \"intuition\" or \"mental model\", it is likely wrong. I've already revised my mental model for window options five times (or rather four, one time I actually convinced bram to make the behaviour slightly more consistent instead)\r\n> \r\n\r\nSome discussions in [this issue](https://github.com/vim/vim/issues/4945).  doc is referred by the discussion. @lacygoill\r\n\r\n> I just tested again with split windows and it behaves exactly the same. \r\n\r\nHow did you test it? Could you describe the exact steps please?\r\n\r\n",
            "created_at": "2020-01-31T09:34:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580658094",
            "id": 580658094,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY1ODA5NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580658094/reactions"
            },
            "updated_at": "2020-01-31T09:35:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580658094",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2705841?v=4",
                "events_url": "https://api.github.com/users/Yggdroot/events{/privacy}",
                "followers_url": "https://api.github.com/users/Yggdroot/followers",
                "following_url": "https://api.github.com/users/Yggdroot/following{/other_user}",
                "gists_url": "https://api.github.com/users/Yggdroot/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Yggdroot",
                "id": 2705841,
                "login": "Yggdroot",
                "node_id": "MDQ6VXNlcjI3MDU4NDE=",
                "organizations_url": "https://api.github.com/users/Yggdroot/orgs",
                "received_events_url": "https://api.github.com/users/Yggdroot/received_events",
                "repos_url": "https://api.github.com/users/Yggdroot/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Yggdroot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Yggdroot/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Yggdroot",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Some discussions in this issue.\r\n\r\nExactly how the presence of \"some discussion\" with multiple different standpoints a conclusive argument for anything?\r\n\r\n> doc is referred by the discussion.\r\n\r\nThis is beyond useless. If you have an useful reference you should quote it _here and now_. Why should I waste my time and scan a multi-page discussion for some reference that maybe or maybe not supports your case?\r\n\r\n> How did you test it? Could you describe the exact steps please?\r\n\r\ne file1\r\nsp file2\r\nset statusline\r\nquit\r\ne file2\r\n\r\n\r\n",
            "created_at": "2020-01-31T10:07:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580669774",
            "id": 580669774,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY2OTc3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580669774/reactions"
            },
            "updated_at": "2020-01-31T10:07:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580669774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> e file1\r\n> sp file2\r\n> set statusline\r\n> quit\r\n> e file2\r\n\r\nAre you serious? Can your test demonstrate anything?\r\n`set statusline` can only print the statusline, even though you mean `set statusline=`, at least you should use `setlocal`.",
            "created_at": "2020-01-31T10:22:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580674979",
            "id": 580674979,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY3NDk3OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580674979/reactions"
            },
            "updated_at": "2020-01-31T10:22:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580674979",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2705841?v=4",
                "events_url": "https://api.github.com/users/Yggdroot/events{/privacy}",
                "followers_url": "https://api.github.com/users/Yggdroot/followers",
                "following_url": "https://api.github.com/users/Yggdroot/following{/other_user}",
                "gists_url": "https://api.github.com/users/Yggdroot/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Yggdroot",
                "id": 2705841,
                "login": "Yggdroot",
                "node_id": "MDQ6VXNlcjI3MDU4NDE=",
                "organizations_url": "https://api.github.com/users/Yggdroot/orgs",
                "received_events_url": "https://api.github.com/users/Yggdroot/received_events",
                "repos_url": "https://api.github.com/users/Yggdroot/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Yggdroot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Yggdroot/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Yggdroot",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry, I meant `cursorline` but either set or setl is fine. (statusline is global-local and thus has another set of different behaviors...)",
            "created_at": "2020-01-31T10:33:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580679117",
            "id": 580679117,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY3OTExNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580679117/reactions"
            },
            "updated_at": "2020-01-31T10:33:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580679117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Forget \"intuition\" or \"mental model\", it is likely wrong.\r\n\r\nI don't think it's wrong, but it's incomplete.  Anyway, it doesn't change the fact that I think you're right on this issue.\r\n\r\n> I've already revised my mental model for window options five times\r\n\r\nI can relate to that; I had to do the same thing multiple times.\r\n\r\n> (or rather four, one time I actually convinced bram to make the behaviour slightly more consistent instead)\r\n\r\nYes, I think it was [this PR](https://github.com/vim/vim/pull/2336).  It was a welcome one, because it made the way window-local options are applied a little more consistent.\r\n\r\n---\r\n\r\nI don't have the time right now to write a full explanation (it would be very long to do), and I'm not sure anyone would be interested anyway.\r\n\r\nThe way window-local options are applied is explained – in part – at `:h local-options`.\r\nBut the explanation is incomplete, and there are exceptions as well as bugs.\r\n\r\nHere is one rule which is not completely explained at `:h local-options`, and which I inferred after many tests.  It's about the initialization of a window-local option.  There are 4 cases to consider:\r\n\r\n   1. the buffer has never been displayed anywhere\r\n\r\n   2. the buffer has already been displayed in at least one other window; the new window results from a split\r\n\r\n   3. the buffer has already been displayed in at least one other window; at least one of them has been closed\r\n\r\n   4. the buffer has already been displayed in at least one other window; none of them has been closed\r\n\r\nIn case `1.`, the local value is initialized from the global one.\r\nIn case `2.`, it's simply copied from the window which was split.\r\nIn case `3.`, it's initialized with the value it had in the **last** closed window (where it was displayed).\r\nIn case `4.`, it's initialized with the value it has in the window where it was displayed for the **first** time.\r\n\r\nI'm not sure to have correctly understood the original post – so maybe I'm wrong – but I think the behavior which is reported is an example of the case 3.\r\n",
            "created_at": "2020-01-31T10:37:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580680557",
            "id": 580680557,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY4MDU1Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580680557/reactions"
            },
            "updated_at": "2020-01-31T10:37:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580680557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8505073?v=4",
                "events_url": "https://api.github.com/users/lacygoill/events{/privacy}",
                "followers_url": "https://api.github.com/users/lacygoill/followers",
                "following_url": "https://api.github.com/users/lacygoill/following{/other_user}",
                "gists_url": "https://api.github.com/users/lacygoill/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lacygoill",
                "id": 8505073,
                "login": "lacygoill",
                "node_id": "MDQ6VXNlcjg1MDUwNzM=",
                "organizations_url": "https://api.github.com/users/lacygoill/orgs",
                "received_events_url": "https://api.github.com/users/lacygoill/received_events",
                "repos_url": "https://api.github.com/users/lacygoill/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lacygoill/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lacygoill/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lacygoill",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Here is one rule which is not completely explained at `:h local-options`\r\n\r\ngiven all that's written here and https://github.com/vim/vim/issues/4945 it would be nice if someone sent a doc PR (with less verbosity and more clarity than whatever the existing doc has). ",
            "created_at": "2020-01-31T10:41:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580681959",
            "id": 580681959,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY4MTk1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580681959/reactions"
            },
            "updated_at": "2020-01-31T10:41:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580681959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I agree, a improved documentation is always welcomed at the vim project.",
            "created_at": "2020-01-31T11:04:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580689640",
            "id": 580689640,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY4OTY0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580689640/reactions"
            },
            "updated_at": "2020-01-31T11:04:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580689640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/244927?v=4",
                "events_url": "https://api.github.com/users/chrisbra/events{/privacy}",
                "followers_url": "https://api.github.com/users/chrisbra/followers",
                "following_url": "https://api.github.com/users/chrisbra/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrisbra/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chrisbra",
                "id": 244927,
                "login": "chrisbra",
                "node_id": "MDQ6VXNlcjI0NDkyNw==",
                "organizations_url": "https://api.github.com/users/chrisbra/orgs",
                "received_events_url": "https://api.github.com/users/chrisbra/received_events",
                "repos_url": "https://api.github.com/users/chrisbra/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chrisbra/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrisbra/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chrisbra",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@lacygoill Right, that seems to be consistent with the implementation `find_wininfo()` and `get_winopts()`. The order in which entries are added to `buf->b_wininfo` seems somewhat arbitrary (it is created for first window upon _opening_ because it has to be non-NULL I think, otherwise a new entry is only put at the front when _leaving_ a buffer from a window), though I wonder if any small change to the defaults would be unambiguously better (perhaps favouring a window where the buffer is currently open over a closed one, but not sure it matters to anyone). ",
            "created_at": "2020-01-31T11:40:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/11525#issuecomment-580700405",
            "id": 580700405,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11525",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDcwMDQwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580700405/reactions"
            },
            "updated_at": "2020-01-31T11:40:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/580700405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/11525/comments",
    "created_at": "2019-12-06T06:04:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/11525/events",
    "html_url": "https://github.com/neovim/neovim/issues/11525",
    "id": 533764915,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim core functionality or code",
            "id": 858327504,
            "name": "core",
            "node_id": "MDU6TGFiZWw4NTgzMjc1MDQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/core"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/11525/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU1MzM3NjQ5MTU=",
    "number": 11525,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 5,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 5,
        "url": "https://api.github.com/repos/neovim/neovim/issues/11525/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/11525/timeline",
    "title": "allow options private to a window (not copied with the buffer)",
    "updated_at": "2025-01-17T16:02:15Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/11525",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2705841?v=4",
        "events_url": "https://api.github.com/users/Yggdroot/events{/privacy}",
        "followers_url": "https://api.github.com/users/Yggdroot/followers",
        "following_url": "https://api.github.com/users/Yggdroot/following{/other_user}",
        "gists_url": "https://api.github.com/users/Yggdroot/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Yggdroot",
        "id": 2705841,
        "login": "Yggdroot",
        "node_id": "MDQ6VXNlcjI3MDU4NDE=",
        "organizations_url": "https://api.github.com/users/Yggdroot/orgs",
        "received_events_url": "https://api.github.com/users/Yggdroot/received_events",
        "repos_url": "https://api.github.com/users/Yggdroot/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Yggdroot/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Yggdroot/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Yggdroot",
        "user_view_type": "public"
    }
}