{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI'm using virtual lines to show diagnostics from multiple sources which could either be from an external process (e.g., linters) or a language server. This means that each source gets a different namespace so whenever the diagnostics are displayed for the current line, the line characters are not contiguous. For example:\n\n<img width=\"986\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ef88b735-5442-450c-8750-2b75754da3ef\" />\n\nI do understand why this must be happening and so I thought to look at how Helix handles it and it does so correctly. Of course, the implementation details vary between the two editors but it does look better (minus the diagnostic source but that's a known issue):\n\n<img width=\"554\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/446600c9-74b1-433d-b65d-e3d53c887cc2\" />\n\n### Steps to reproduce\n\nUsing the following `minimal.lua`:\n```lua\n-- Run this file as `nvim --clean -u minimal.lua`\n\nfor name, url in pairs({\n\t-- ADD PLUGINS _NECESSARY_ TO REPRODUCE THE ISSUE, e.g:\n\t\"https://github.com/neovim/nvim-lspconfig\",\n}) do\n\tlocal install_path = vim.fn.fnamemodify(\"nvim_issue/\" .. name, \":p\")\n\tif vim.fn.isdirectory(install_path) == 0 then\n\t\tvim.fn.system({ \"git\", \"clone\", \"--depth=1\", url, install_path })\n\tend\n\tvim.opt.runtimepath:append(install_path)\nend\n\n-- ADD INIT.LUA SETTINGS _NECESSARY_ FOR REPRODUCING THE ISSUE\nvim.diagnostic.config({ virtual_lines = true })\n\nlocal lspconfig = require(\"lspconfig\")\nlspconfig.ruff.setup({})\nlspconfig.pyright.setup({})\nlspconfig.pylsp.setup({})\n```\n\nAnd, the following `t.py` file:\n```python\nfrom pathlib import Path\n```\n\nOpen it with `nvim --clean -u minimal.lua t.py`.\n\n<img width=\"853\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/21ecd4c0-b602-4f63-9472-bb96c78ea3e4\" />\n\n### Expected behavior\n\nI expected that the line characters drawn would account for diagnostics from other sources.\n\nI think one way to resolve this would be to look at the existing diagnostics whenever Neovim tries to render diagnostics from a source. This way it always refreshes the line characters.\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0-dev-1887+gb45a44dd3\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nmacOS 15.2\n\n### Terminal name/version\n\nkitty 0.39.1\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nbuilt from source",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'll tackle this as it's somewhat similar to https://github.com/neovim/neovim/pull/32703 and I'm a little concerned about regression(s).",
            "created_at": "2025-03-03T03:20:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/32693#issuecomment-2693186087",
            "id": 2693186087,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32693",
            "node_id": "IC_kwDOAPphoM6ghsIn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2693186087/reactions"
            },
            "updated_at": "2025-03-03T03:20:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2693186087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66286082?v=4",
                "events_url": "https://api.github.com/users/jamestrew/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamestrew/followers",
                "following_url": "https://api.github.com/users/jamestrew/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamestrew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamestrew",
                "id": 66286082,
                "login": "jamestrew",
                "node_id": "MDQ6VXNlcjY2Mjg2MDgy",
                "organizations_url": "https://api.github.com/users/jamestrew/orgs",
                "received_events_url": "https://api.github.com/users/jamestrew/received_events",
                "repos_url": "https://api.github.com/users/jamestrew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamestrew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamestrew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamestrew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Actually I'm not seeing 3 diagnostics messages like you are when using the minimal config\n\n![Image](https://github.com/user-attachments/assets/64086b3f-0466-4bfd-b409-219abfe5367d)\n\n\n\n<details>\n<summary>I believe I have all 3 servers running and attached</summary>\n\n```\n\nlspconfig:                                 require(\"lspconfig.health\").check()\n\nLSP configs active in this session (globally) ~\n- Configured servers: ruff, pyright, pylsp\n- OK Deprecated servers: (none)\n\nLSP configs active in this buffer (bufnr: 1) ~\n- Language client log: ~/.local/state/nvim/lsp.log\n- Detected filetype: `python`\n- 3 client(s) attached to this buffer\n- Client: `ruff` (id: 1, bufnr: [1])\n  root directory:    /tmp/\n  filetypes:         python\n  cmd:               /run/current-system/sw/bin/ruff server\n  version:           `ruff 0.9.8`\n  executable:        true\n  autostart:         true\n- Client: `pyright` (id: 2, bufnr: [1])\n  root directory:    /tmp/\n  filetypes:         python\n  cmd:               /nix/store/hw5cl9xm0220n8mxzl4nrgbgkvy1k47q-pyright-1.1.392/bin/pyright-langserver --stdio\n  version:           `?` (Failed to get version) Tried:\n  `/nix/store/hw5cl9xm0220n8mxzl4nrgbgkvy1k47q-pyright-1.1.392/bin/pyright-langserver --version`\n  `/nix/store/hw5cl9xm0220n8mxzl4nrgbgkvy1k47q-pyright-1.1.392/bin/pyright-langserver -version`\n  `/nix/store/hw5cl9xm0220n8mxzl4nrgbgkvy1k47q-pyright-1.1.392/bin/pyright-langserver version`\n  `/nix/store/hw5cl9xm0220n8mxzl4nrgbgkvy1k47q-pyright-1.1.392/bin/pyright-langserver --help`\n\n  executable:        true\n  autostart:         true\n- Client: `pylsp` (id: 3, bufnr: [1])\n  root directory:    /tmp/\n  filetypes:         python\n  cmd:               /run/current-system/sw/bin/pylsp\n  version:           `pylsp v1.12.2`\n  executable:        true\n  autostart:         true\n```\n\npyright 1.1.392\n\n\n</detail>",
            "created_at": "2025-03-03T04:00:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/32693#issuecomment-2693222182",
            "id": 2693222182,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32693",
            "node_id": "IC_kwDOAPphoM6gh08m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2693222182/reactions"
            },
            "updated_at": "2025-03-03T04:00:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2693222182",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66286082?v=4",
                "events_url": "https://api.github.com/users/jamestrew/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamestrew/followers",
                "following_url": "https://api.github.com/users/jamestrew/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamestrew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamestrew",
                "id": 66286082,
                "login": "jamestrew",
                "node_id": "MDQ6VXNlcjY2Mjg2MDgy",
                "organizations_url": "https://api.github.com/users/jamestrew/orgs",
                "received_events_url": "https://api.github.com/users/jamestrew/received_events",
                "repos_url": "https://api.github.com/users/jamestrew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamestrew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamestrew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamestrew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It seems that you're not seeing the diagnostic from Ruff. Do you have any Ruff config file (`pyproject.toml`, `ruff.toml` or `.ruff.toml`) in the directory where you're testing? I think `F401` is enabled by default in Ruff so that should be present. Can you try with the following settings which should ignore any config files if present (requires 0.9.8 which you have)?\n\n```lua\nlspconfig.ruff.setup({\n\tinit_options = {\n\t\tsettings = {\n\t\t\tconfigurationPreference = \"editorOnly\",\n\t\t},\n\t},\n})\n```\n\nCan you also check the LSP logs if there are any errors?",
            "created_at": "2025-03-03T05:28:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/32693#issuecomment-2693315116",
            "id": 2693315116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32693",
            "node_id": "IC_kwDOAPphoM6giLos",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2693315116/reactions"
            },
            "updated_at": "2025-03-03T09:55:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2693315116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67177269?v=4",
                "events_url": "https://api.github.com/users/dhruvmanila/events{/privacy}",
                "followers_url": "https://api.github.com/users/dhruvmanila/followers",
                "following_url": "https://api.github.com/users/dhruvmanila/following{/other_user}",
                "gists_url": "https://api.github.com/users/dhruvmanila/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dhruvmanila",
                "id": 67177269,
                "login": "dhruvmanila",
                "node_id": "MDQ6VXNlcjY3MTc3MjY5",
                "organizations_url": "https://api.github.com/users/dhruvmanila/orgs",
                "received_events_url": "https://api.github.com/users/dhruvmanila/received_events",
                "repos_url": "https://api.github.com/users/dhruvmanila/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dhruvmanila/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dhruvmanila/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dhruvmanila",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I was able to determine that's it's pylsp's flake8 provider (the middle two diags in my ss below) that I was missing\n\n![Image](https://github.com/user-attachments/assets/965e75ba-17df-4aee-8774-2f92755bfa57)\n\nBut it looks like pylsp/flake8 is sending the starting column as 0. Hence why neovim is rendering those like that.\n\nCan you elaborate more on \n> whenever the diagnostics are displayed for the current line, _the line characters are not contiguous._\n\nI'm not sure what exactly is the issue and what the correct behavior/appearance should be considering the info we're getting back from the language servers.\n\n<details>\n<summary>`vim.diagnostic.get(0)` output</summary>\n\n```lua\n{\n  {\n    _tags = {\n      unnecessary = true,\n    },\n    bufnr = 1,\n    code = \"F401\",\n    col = 20,\n    end_col = 24,\n    end_lnum = 0,\n    lnum = 0,\n    message = \"`pathlib.Path` imported but unused\",\n    namespace = 4,\n    severity = 2,\n    source = \"Ruff\",\n    user_data = {\n      lsp = {\n        code = \"F401\",\n        codeDescription = {\n          href = \"https://docs.astral.sh/ruff/rules/unused-import\",\n        },\n        data = {\n          code = \"F401\",\n          edits = {\n            {\n              newText = \"\",\n              range = {\n                [\"end\"] = {\n                  character = 0,\n                  line = 1,\n                },\n                start = {\n                  character = 0,\n                  line = 0,\n                },\n              },\n            },\n          },\n          kind = {\n            body = \"`pathlib.Path` imported but unused\",\n            name = \"UnusedImport\",\n            suggestion = \"Remove unused import: `pathlib.Path`\",\n          },\n          noqa_edit = {\n            newText = \"  # noqa: F401\\n\",\n            range = {\n              [\"end\"] = {\n                character = 0,\n                line = 1,\n              },\n              start = {\n                character = 24,\n                line = 0,\n              },\n            },\n          },\n        },\n        message = \"`pathlib.Path` imported but unused\",\n        range = {\n          [\"end\"] = {\n            character = 24,\n            line = 0,\n          },\n          start = {\n            character = 20,\n            line = 0,\n          },\n        },\n        severity = 2,\n        source = \"Ruff\",\n        tags = { 1 },\n      },\n    },\n  },\n  {\n    _tags = {\n      unnecessary = true,\n    },\n    bufnr = 1,\n    col = 20,\n    end_col = 24,\n    end_lnum = 0,\n    lnum = 0,\n    message = '\"Path\" is not accessed',\n    namespace = 10,\n    severity = 4,\n    source = \"Pyright\",\n    user_data = {\n      lsp = {\n        message = '\"Path\" is not accessed',\n        range = {\n          [\"end\"] = {\n            character = 24,\n            line = 0,\n          },\n          start = {\n            character = 20,\n            line = 0,\n          },\n        },\n        severity = 4,\n        source = \"Pyright\",\n        tags = { 1 },\n      },\n    },\n  },\n  {\n    bufnr = 1,\n    code = \"F401\",\n    col = 0,\n    end_col = 4,\n    end_lnum = 0,\n    lnum = 0,\n    message = \"'pathlib.Path' imported but unused\",\n    namespace = 9,\n    severity = 2,\n    source = \"flake8\",\n    user_data = {\n      lsp = {\n        code = \"F401\",\n        message = \"'pathlib.Path' imported but unused\",\n        range = {\n          [\"end\"] = {\n            character = 4,\n            line = 0,\n          },\n          start = {\n            character = 0,\n            line = 0,\n          },\n        },\n        severity = 2,\n        source = \"flake8\",\n      },\n    },\n  },\n  {\n    _tags = {\n      unnecessary = true,\n    },\n    bufnr = 1,\n    code = \"F401\",\n    col = 0,\n    end_col = 24,\n    end_lnum = 0,\n    lnum = 0,\n    message = \"F401 'pathlib.Path' imported but unused\",\n    namespace = 9,\n    severity = 2,\n    source = \"flake8\",\n    user_data = {\n      lsp = {\n        code = \"F401\",\n        message = \"F401 'pathlib.Path' imported but unused\",\n        range = {\n          [\"end\"] = {\n            character = 25,\n            line = 0,\n          },\n          start = {\n            character = 0,\n            line = 0,\n          },\n        },\n        severity = 2,\n        source = \"flake8\",\n        tags = { 1 },\n      },\n    },\n  },\n}\n\n```\n</detail>",
            "created_at": "2025-03-03T16:11:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/32693#issuecomment-2694888393",
            "id": 2694888393,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32693",
            "node_id": "IC_kwDOAPphoM6goLvJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2694888393/reactions"
            },
            "updated_at": "2025-03-03T16:11:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2694888393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66286082?v=4",
                "events_url": "https://api.github.com/users/jamestrew/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamestrew/followers",
                "following_url": "https://api.github.com/users/jamestrew/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamestrew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamestrew",
                "id": 66286082,
                "login": "jamestrew",
                "node_id": "MDQ6VXNlcjY2Mjg2MDgy",
                "organizations_url": "https://api.github.com/users/jamestrew/orgs",
                "received_events_url": "https://api.github.com/users/jamestrew/received_events",
                "repos_url": "https://api.github.com/users/jamestrew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamestrew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamestrew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamestrew",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32693/comments",
    "created_at": "2025-03-02T10:12:58Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32693/events",
    "html_url": "https://github.com/neovim/neovim/issues/32693",
    "id": 2889455392,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32693/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6sOZcg",
    "number": 32693,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32693/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32693/timeline",
    "title": "Virtual line diagnostics from multiple sources are not rendered correctly",
    "updated_at": "2025-03-03T16:11:03Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32693",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/67177269?v=4",
        "events_url": "https://api.github.com/users/dhruvmanila/events{/privacy}",
        "followers_url": "https://api.github.com/users/dhruvmanila/followers",
        "following_url": "https://api.github.com/users/dhruvmanila/following{/other_user}",
        "gists_url": "https://api.github.com/users/dhruvmanila/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dhruvmanila",
        "id": 67177269,
        "login": "dhruvmanila",
        "node_id": "MDQ6VXNlcjY3MTc3MjY5",
        "organizations_url": "https://api.github.com/users/dhruvmanila/orgs",
        "received_events_url": "https://api.github.com/users/dhruvmanila/received_events",
        "repos_url": "https://api.github.com/users/dhruvmanila/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dhruvmanila/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dhruvmanila/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dhruvmanila",
        "user_view_type": "public"
    }
}