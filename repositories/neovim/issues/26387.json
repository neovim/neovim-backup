{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhile working on [reproducible builds](https://reproducible-builds.org/) for [openSUSE](https://en.opensuse.org/openSUSE:Reproducible_Builds), I found that in our `neovim` package,\r\n`neovim-0.9.4/build/src/nvim/auto/api/private/ui_events_metadata.generated.h`\r\nand the resulting `nvim` binary vary between builds.\r\n\r\nThis is probably generated in `src/nvim/generators/gen_api_ui_events.lua`\r\n\r\n    dump_bin_array(metadata_output, 'ui_events_metadata', packed)\r\n\r\nand lua is notorious for its indeterministic order.\r\n\n\n### Steps to reproduce\n\nBuild neovim from scratch twice and compare results.\n\n### Expected behavior\n\nIt should be possible to build identical binaries twice.\n\n### Neovim version (nvim -v)\n\n0.9.4\n\n### Vim (not Nvim) behaves the same?\n\nvim behaves better\n\n### Operating system/version\n\nopenSUSE Tumbleweed 20231129\n\n### Terminal name/version\n\nN/A\n\n### $TERM environment variable\n\nN/A\n\n### Installation\n\nrpm/spec: https://github.com/bmwiedemann/openSUSE/blob/75d0b7716ffaf62a6764e3b87f1e5aa54049d32d/packages/n/neovim/neovim.spec#L169",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "here is a diff after filtering through `strings`\r\n```diff\r\n--- strings RPMS.1/usr/bin/nvim\r\n+++ strings RPMS.2/usr/bin/nvim\r\n@@ -39140,134 +39140,131 @@\r\n flush_event\r\n set_mark\r\n api_set_error\r\n-name\r\n-mode_info_set\r\n-since\r\n parameters\r\n Boolean\r\n enabled\r\n Array\r\n cursor_styles\r\n+since\r\n name\r\n-update_menu\r\n+mode_info_set\r\n+parameters\r\n since\r\n+name\r\n+update_menu\r\n parameters\r\n+since\r\n name\r\n busy_start\r\n-since\r\n parameters\r\n+since\r\n name\r\n busy_stop\r\n-since\r\n parameters\r\n+since\r\n name\r\n mouse_on\r\n-since\r\n parameters\r\n-name\r\n-mouse_off\r\n since\r\n-parameters\r\n name\r\n-mode_change\r\n-since\r\n+mouse_off\r\n```",
            "created_at": "2023-12-04T12:50:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/26387#issuecomment-1838570139",
            "id": 1838570139,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26387",
            "node_id": "IC_kwDOAPphoM5tllqb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1838570139/reactions"
            },
            "updated_at": "2023-12-04T12:50:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1838570139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/637990?v=4",
                "events_url": "https://api.github.com/users/bmwiedemann/events{/privacy}",
                "followers_url": "https://api.github.com/users/bmwiedemann/followers",
                "following_url": "https://api.github.com/users/bmwiedemann/following{/other_user}",
                "gists_url": "https://api.github.com/users/bmwiedemann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bmwiedemann",
                "id": 637990,
                "login": "bmwiedemann",
                "node_id": "MDQ6VXNlcjYzNzk5MA==",
                "organizations_url": "https://api.github.com/users/bmwiedemann/orgs",
                "received_events_url": "https://api.github.com/users/bmwiedemann/received_events",
                "repos_url": "https://api.github.com/users/bmwiedemann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bmwiedemann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bmwiedemann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bmwiedemann",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Duplicate: https://github.com/neovim/neovim/issues/20124",
            "created_at": "2023-12-04T12:57:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/26387#issuecomment-1838580409",
            "id": 1838580409,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26387",
            "node_id": "IC_kwDOAPphoM5tloK5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1838580409/reactions"
            },
            "updated_at": "2023-12-04T12:57:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1838580409",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">   and lua is notorious for its indeterministic order.\r\n\r\nArray-like tables have well-defined iteration order. map-like tables with string keys do not. (This is just the same as arrays and hash tables in any other language.)\r\n\r\nThe fix would be to find map-like tables being used as input or internally in a way such that a `pairs()` iteration determines the output order and change it so that an array are used for this order (preserving the order of the input).",
            "created_at": "2023-12-04T18:33:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/26387#issuecomment-1839238916",
            "id": 1839238916,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26387",
            "node_id": "IC_kwDOAPphoM5toI8E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1839238916/reactions"
            },
            "updated_at": "2023-12-04T18:33:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1839238916",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The message in commit cb757f2663e6950e655c6306d713338dfa66b18d says it was only a partial fix, because `mpack` still operates on these map-like tables with explicitly randomized order ( probably for https://lwn.net/Articles/474912/ )\r\nI'll need to have a look at lua sources there.",
            "created_at": "2023-12-05T04:55:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/26387#issuecomment-1840011657",
            "id": 1840011657,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26387",
            "node_id": "IC_kwDOAPphoM5trFmJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1840011657/reactions"
            },
            "updated_at": "2023-12-05T04:55:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1840011657",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/637990?v=4",
                "events_url": "https://api.github.com/users/bmwiedemann/events{/privacy}",
                "followers_url": "https://api.github.com/users/bmwiedemann/followers",
                "following_url": "https://api.github.com/users/bmwiedemann/following{/other_user}",
                "gists_url": "https://api.github.com/users/bmwiedemann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bmwiedemann",
                "id": 637990,
                "login": "bmwiedemann",
                "node_id": "MDQ6VXNlcjYzNzk5MA==",
                "organizations_url": "https://api.github.com/users/bmwiedemann/orgs",
                "received_events_url": "https://api.github.com/users/bmwiedemann/received_events",
                "repos_url": "https://api.github.com/users/bmwiedemann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bmwiedemann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bmwiedemann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bmwiedemann",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We do have a copy of lua-mpack at home (src/mpack/lmpack.c) so it would be possible to do the necessary improvements. \r\n\r\nLike we could add a metatable tag ( similar to _empty_dict ) which interprets an ordered array as an associative array. like `{{\"key\", \"foo\"}, {\"another_key\", 3}, <metatable> = vim._ordered}` would get serialised as a msgpack MAP with that input-defined ordering. (it doesn't need to do any verification of duplicate keys or anything, just spit it out)",
            "created_at": "2023-12-05T10:16:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/26387#issuecomment-1840448214",
            "id": 1840448214,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26387",
            "node_id": "IC_kwDOAPphoM5tswLW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1840448214/reactions"
            },
            "updated_at": "2023-12-05T10:16:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1840448214",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26387/comments",
    "created_at": "2023-12-04T12:50:10Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26387/events",
    "html_url": "https://github.com/neovim/neovim/issues/26387",
    "id": 2023785867,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "packaging and distributing Nvim to users",
            "id": 124686703,
            "name": "distribution",
            "node_id": "MDU6TGFiZWwxMjQ2ODY3MDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/distribution"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26387/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM54oIWL",
    "number": 26387,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26387/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26387/timeline",
    "title": "`ui_events_metadata.generated.h` reproducible builds",
    "updated_at": "2025-01-17T15:27:49Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26387",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/637990?v=4",
        "events_url": "https://api.github.com/users/bmwiedemann/events{/privacy}",
        "followers_url": "https://api.github.com/users/bmwiedemann/followers",
        "following_url": "https://api.github.com/users/bmwiedemann/following{/other_user}",
        "gists_url": "https://api.github.com/users/bmwiedemann/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bmwiedemann",
        "id": 637990,
        "login": "bmwiedemann",
        "node_id": "MDQ6VXNlcjYzNzk5MA==",
        "organizations_url": "https://api.github.com/users/bmwiedemann/orgs",
        "received_events_url": "https://api.github.com/users/bmwiedemann/received_events",
        "repos_url": "https://api.github.com/users/bmwiedemann/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bmwiedemann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bmwiedemann/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bmwiedemann",
        "user_view_type": "public"
    }
}