{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nOpening a very large file with a connected language server causes over a second of blocking lag. I tracked this down to https://github.com/neovim/neovim/blob/35e5307af25785ac90bd00f913fc0df5cf962db3/runtime/lua/vim/_system.lua#L119 (commenting it out or changing this to `stdout:write` removes the lag). But oddly enough, trying to time this with `vim.uv.hrtime()` showed that the line still ran quickly, making me think it deferred to another event loop iteration but then started blocking there.\n\n### Steps to reproduce\n\nOpen [the big linux file](https://raw.githubusercontent.com/torvalds/linux/master/drivers/gpu/drm/amd/include/asic_reg/dcn/dcn_3_2_0_sh_mask.h): `nvim --clean thebiglinuxfile.h -u minimal.lua`\n\nwith:\n\n```lua\n-- minimal.lua\nvim.schedule(function()\n  vim.lsp.start {\n    cmd = { 'clangd' },\n    filetypes = { 'c', 'cpp', 'objc', 'objcpp', 'cuda', 'proto' },\n    root_dir = function(fname)\n      return vim.fs.root(0, { '.git' })\n    end,\n    single_file_support = true,\n    capabilities = {\n      textDocument = {\n        completion = {\n          editsNearCursor = true,\n        },\n      },\n      offsetEncoding = { 'utf-8', 'utf-16' },\n    },\n  }\nend)\n```\n\ntry and move the cursor within the first second or two of opening nvim, and observe a long blocking period\n\n### Expected behavior\n\nThe data should be sent to the server asynchronously (no blocking should be observed)\n\n### Nvim version (nvim -v)\n\nNightly 81ea44fa6aca27e6871d5baa158e2a5bcfa41981\n\n### Vim (not Nvim) behaves the same?\n\nNA\n\n### Operating system/version\n\nNixOS 25.05\n\n### Terminal name/version\n\nGhostty 1.1.2\n\n### $TERM environment variable\n\nxterm-ghostty\n\n### Installation\n\nBuild from source",
    "closed_at": "2025-03-16T18:12:37Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
        "events_url": "https://api.github.com/users/clason/events{/privacy}",
        "followers_url": "https://api.github.com/users/clason/followers",
        "following_url": "https://api.github.com/users/clason/following{/other_user}",
        "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/clason",
        "id": 2361214,
        "login": "clason",
        "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
        "organizations_url": "https://api.github.com/users/clason/orgs",
        "received_events_url": "https://api.github.com/users/clason/received_events",
        "repos_url": "https://api.github.com/users/clason/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/clason",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Does it still block if you make this change:\n```diff\ndiff --git a/runtime/lua/vim/_system.lua b/runtime/lua/vim/_system.lua\nindex 157172447a..4071a6f8f9 100644\n--- a/runtime/lua/vim/_system.lua\n+++ b/runtime/lua/vim/_system.lua\n@@ -116,7 +116,7 @@ function SystemObj:write(data)\n       stdin:write('\\n')\n     end\n   elseif type(data) == 'string' then\n-    stdin:write(data)\n+    stdin:write(data, function() end)\n   elseif data == nil then\n     -- Shutdown the write side of the duplex stream and then close the pipe.\n     -- Note shutdown will wait for all the pending write requests to complete\n```",
            "created_at": "2025-03-05T23:05:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/32740#issuecomment-2702279887",
            "id": 2702279887,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32740",
            "node_id": "IC_kwDOAPphoM6hEYTP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2702279887/reactions"
            },
            "updated_at": "2025-03-05T23:08:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2702279887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It does unfortunately, and even if these code blocks in `main.c` are removed:\n\nhttps://github.com/neovim/neovim/blob/35e5307af25785ac90bd00f913fc0df5cf962db3/src/nvim/main.c#L681\n\n(not sure if this one was already obvious)",
            "created_at": "2025-03-05T23:09:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/32740#issuecomment-2702285254",
            "id": 2702285254,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32740",
            "node_id": "IC_kwDOAPphoM6hEZnG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2702285254/reactions"
            },
            "updated_at": "2025-03-05T23:09:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2702285254",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> even if these code blocks in `main.c` are removed: [neovim/src/nvim/main.c](https://github.com/neovim/neovim/blob/35e5307af25785ac90bd00f913fc0df5cf962db3/src/nvim/main.c#L681)\n\n\nI'm confused. The repro mentions `nvim --clean thebiglinuxfile.h`. But if nvim's stdin is involved, I would expect the repro to look more like `cat thebiglinuxfile.h | nvim -` .\n\nIs this about `nvim -` reading from stdin on startup, or LSP doing something with `vim.system()` ?",
            "created_at": "2025-03-07T12:50:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/32740#issuecomment-2706381200",
            "id": 2706381200,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32740",
            "node_id": "IC_kwDOAPphoM6hUBmQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706381200/reactions"
            },
            "updated_at": "2025-03-07T12:53:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706381200",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry I should've elaborated: basically on LSP startup, neovim fires a didOpen event which gives the entire buffer text to the LSP. From my understanding it is sent to the lsp using a transport, which uses vim.system and sends data to the LSP via stdin under the hood",
            "created_at": "2025-03-07T15:06:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/32740#issuecomment-2706680905",
            "id": 2706680905,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32740",
            "node_id": "IC_kwDOAPphoM6hVKxJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706680905/reactions"
            },
            "updated_at": "2025-03-07T15:06:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706680905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32740/comments",
    "created_at": "2025-03-05T22:44:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32740/events",
    "html_url": "https://github.com/neovim/neovim/issues/32740",
    "id": 2898719082,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 520282574,
            "name": "event-loop",
            "node_id": "MDU6TGFiZWw1MjAyODI1NzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/event-loop"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32740/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6sxvFq",
    "number": 32740,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32740/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32740/timeline",
    "title": "Sending large data to subprocess blocks the editor",
    "updated_at": "2025-03-16T18:12:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32740",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}