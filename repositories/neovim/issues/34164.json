{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nAfter https://github.com/neovim/neovim/pull/33605 I am now getting errors when neovim is trying to watch files with the roslyn language server. I am not 100% sure whether roslyn is sending invalid `globPattern`, or if this is an issue in neovim, but I am trying here first to see what you think. If it is an invalid `globPattern`, can we just ignore it?\n\n### Steps to reproduce\n\nUse this init.lua (with your own cmd for the server). Can be installed from here: https://dev.azure.com/azure-public/vside/_artifacts/feed/vs-impl\n\n```init.lua\nvim.lsp.config(\"roslyn_ls\", {\n    cmd = {\n        vim.fs.normalize(\"~/.local/share/nvim/mason/bin/roslyn\"),\n        \"--logLevel=Information\",\n        \"--extensionLogDirectory=\" .. vim.fs.dirname(vim.lsp.get_log_path()),\n        \"--stdio\",\n    },\n    filetypes = { \"cs\" },\n    root_dir = function(bufnr, on_dir)\n        local dir = vim.fs.root(bufnr, function(name)\n            return name:match(\"%.csproj$\") ~= nil\n        end)\n        if dir then\n            on_dir(dir)\n        end\n    end,\n    on_init = {\n        function(client)\n            local root_dir = client.config.root_dir\n            for entry, type in vim.fs.dir(root_dir) do\n                if type == \"file\" and vim.endswith(entry, \".csproj\") then\n                    client:notify(\"project/open\", {\n                        projects = vim.tbl_map(function(file)\n                            return vim.uri_from_fname(file)\n                        end, { vim.fs.joinpath(root_dir, entry) }),\n                    })\n                end\n            end\n        end,\n    },\n})\nvim.lsp.enable(\"roslyn_ls\")\n```\n\nCreate a new dotnet project:\n```\ndotnet new console -n App\nnvim App/Program.cs\n```\n\nNotice the error `Invalid glob` from when neovim is trying register the files in `globPattern` from the server.\n\nI added this diff:\n```diff\ndiff --git a/runtime/lua/vim/glob.lua b/runtime/lua/vim/glob.lua\nindex 740cf7a7d1..f2b7afeb9c 100644\n--- a/runtime/lua/vim/glob.lua\n+++ b/runtime/lua/vim/glob.lua\n@@ -370,7 +370,7 @@ g = m.P(g)\n ---@return vim.lpeg.Pattern #An |lua-lpeg| representation of the pattern\n function M.to_lpeg(pattern)\n   local lpeg_pattern = g:match(pattern) --[[@as vim.lpeg.Pattern?]]\n-  assert(lpeg_pattern, 'Invalid glob')\n+  assert(lpeg_pattern, string.format('Invalid glob %s', pattern))\n   return lpeg_pattern\n end\n```\n\nand saw that it is this: `.NETCoreApp,Version=v10.0.AssemblyAttributes.cs` that is causing the error.\n\n### Expected behavior\n\nI am expecting no error. Should neovim report an error for this?\n\n### Nvim version (nvim -v)\n\nNVIM v0.12.0-dev-432+ga96665cf48\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nmacOS 15.4.1\n\n### Terminal name/version\n\nkitty 0.34.1\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nBuilt from source",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for reporting this! The debug output is like\n\n```\n+\tGlob\t1\t\".\"\n +\tElement\t1\t\".\"\n  +\tDSeg\t1\t\".\"\n  -\tDSeg\t1\n  +\tDSEnd\t1\t\".\"\n  -\tDSEnd\t1\n  +\tSegment\t1\t\".\"\n   +\tWord\t1\t\".\"\n    +\tFIRST\t1\t\".\"\n    =\tFIRST\t1-0\t\"\"\n    +\tWordAux\t1\t\".\"\n     +\tBranch\t1\t\".\"\n      +\tCondList\t1\t\".\"\n      -\tCondList\t1\n     -\tBranch\t1\n     +\tSimple\t1\t\".\"\n      +\tToken\t1\t\".\"\n       +\tQues\t1\t\".\"\n       -\tQues\t1\n       +\tClass\t1\t\".\"\n       -\tClass\t1\n       +\tEscape\t1\t\".\"\n       -\tEscape\t1\n       +\tLiteral\t1\t\".\"\n       =\tLiteral\t1-11\t\".NETCoreApp\"\n      =\tToken\t1-11\t\".NETCoreApp\"\n      +\tToken\t12\t\",\"\n       +\tQues\t12\t\",\"\n       -\tQues\t12\n       +\tClass\t12\t\",\"\n       -\tClass\t12\n       +\tEscape\t12\t\",\"\n       -\tEscape\t12\n       +\tLiteral\t12\t\",\"\n       -\tLiteral\t12\n      -\tToken\t12\n      +\tBoundary\t12\t\",\"\n      -\tBoundary\t12\n     =\tSimple\t1-11\t\".NETCoreApp\"\n     +\tSimple\t12\t\",\"\n      +\tToken\t12\t\",\"\n       +\tQues\t12\t\",\"\n       -\tQues\t12\n       +\tClass\t12\t\",\"\n       -\tClass\t12\n       +\tEscape\t12\t\",\"\n       -\tEscape\t12\n       +\tLiteral\t12\t\",\"\n       -\tLiteral\t12\n      -\tToken\t12\n     -\tSimple\t12\n     +\tBranch\t12\t\",\"\n      +\tCondList\t12\t\",\"\n      -\tCondList\t12\n     -\tBranch\t12\n    =\tWordAux\t1-11\t\".NETCoreApp\"\n   =\tWord\t1-11\t\".NETCoreApp\"\n   +\tStar\t12\t\",\"\n   -\tStar\t12\n   +\tStar\t12\t\",\"\n   -\tStar\t12\n  =\tSegment\t1-11\t\".NETCoreApp\"\n =\tElement\t1-11\t\".NETCoreApp\"\n-\tGlob\t1\n```\n\nshowing that comma isn't properly handled in `Word` rule.",
            "created_at": "2025-05-25T08:55:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/34164#issuecomment-2907701704",
            "id": 2907701704,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34164",
            "node_id": "IC_kwDOAPphoM6tUAHI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2907701704/reactions"
            },
            "updated_at": "2025-05-25T08:55:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2907701704",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7542439?v=4",
                "events_url": "https://api.github.com/users/brynne8/events{/privacy}",
                "followers_url": "https://api.github.com/users/brynne8/followers",
                "following_url": "https://api.github.com/users/brynne8/following{/other_user}",
                "gists_url": "https://api.github.com/users/brynne8/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brynne8",
                "id": 7542439,
                "login": "brynne8",
                "node_id": "MDQ6VXNlcjc1NDI0Mzk=",
                "organizations_url": "https://api.github.com/users/brynne8/orgs",
                "received_events_url": "https://api.github.com/users/brynne8/received_events",
                "repos_url": "https://api.github.com/users/brynne8/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brynne8/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brynne8/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brynne8",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34164/comments",
    "created_at": "2025-05-24T20:38:15Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34164/events",
    "html_url": "https://github.com/neovim/neovim/issues/34164",
    "id": 3088716609,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34164/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM64GhNB",
    "number": 34164,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34164/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34164/timeline",
    "title": "Invalid glob",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-25T08:55:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34164",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5160701?v=4",
        "events_url": "https://api.github.com/users/seblyng/events{/privacy}",
        "followers_url": "https://api.github.com/users/seblyng/followers",
        "following_url": "https://api.github.com/users/seblyng/following{/other_user}",
        "gists_url": "https://api.github.com/users/seblyng/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seblyng",
        "id": 5160701,
        "login": "seblyng",
        "node_id": "MDQ6VXNlcjUxNjA3MDE=",
        "organizations_url": "https://api.github.com/users/seblyng/orgs",
        "received_events_url": "https://api.github.com/users/seblyng/received_events",
        "repos_url": "https://api.github.com/users/seblyng/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seblyng/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seblyng/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seblyng",
        "user_view_type": "public"
    }
}