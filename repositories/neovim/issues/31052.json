{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI'm working on \"a_project\" that uses `&mousemoveevent`. This feature is not widely implemented in `gui`s. If someone uses a feature in \"a_project\" that depends in this working in the `gui`, an error should be given rather than randomly failing. To give a meaningful error, whether or not `&mousemoveevent` is supported by the `gui` needes to be determined.\n\nThis issue is about a general way to get information about `gui` clients.\n\nI'm relatively new to `neovim`, and have just started looking at `gui`s. I don't know how much is only selectively or partially implemented. If `&mousemoveevent` is the only `neovim` feature not implemented by `gui`s, then this is less of a problem...\n\nNote: `neovide` has `client`, but `client.attributes` is nil. `goneovim` does not even have `client`, so not even the `name` is available. \n\n### Expected behavior\n\nA way to find out what features are available/implemented in a `gui`. Maybe the things laid out in `ui.txt` are a good starting point; but I see that `&mousemoveevent` is not in there; maybe there's lower level features that need to be mentioned.\n\n@justinmk https://github.com/neovim/neovim/issues/27949 may be loosely related. In particular, \"simplify remote plugins\", could include the retrieval of information about the `gui`/plugin.\n\nWondering about a script that determines what features are available. Hmm, maybe derived from the tests.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@clason Is `&mousemoveevent` the only `neovim` feature that is not implemented in all `gui`s?",
            "created_at": "2024-11-02T21:56:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453181005",
            "id": 2453181005,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SOJJN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453181005/reactions"
            },
            "updated_at": "2024-11-02T21:56:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453181005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Neovim does not have \"features\"; everything is always enabled. And Neovim GUIs are not at all like GVim. What you're asking for is a (new) protocol specific to mouse movements. I'm not sure that is required; my suspicion is that this is an XY problem. But hard to tell without having more details.\n\n> @justinmk https://github.com/neovim/neovim/issues/27949 may be loosely related.\n\nIt's really not; remote plugins are something completely different.",
            "created_at": "2024-11-02T21:57:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453181256",
            "id": 2453181256,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SOJNI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453181256/reactions"
            },
            "updated_at": "2024-11-02T21:58:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453181256",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I also suspect that you'll get a lot more mileage out of asking these questions at https://matrix.to/#/#neovim-guis:matrix.org.",
            "created_at": "2024-11-02T21:58:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453182811",
            "id": 2453182811,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SOJlb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453182811/reactions"
            },
            "updated_at": "2024-11-02T21:58:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453182811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's really not; remote plugins are something completely different.\n\nMy bad.",
            "created_at": "2024-11-02T22:06:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453197489",
            "id": 2453197489,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SONKx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453197489/reactions"
            },
            "updated_at": "2024-11-02T22:06:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453197489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Neovim does not have \"features\"; everything is always enabled. And Neovim GUIs are not at all like GVim. What you're asking for is a (new) protocol specific to mouse movements. I'm not sure that is required; my suspicion is that this is an XY problem. But hard to tell without having more details.\n\nI'm not sure what you're talking about. If one does `&mousemoveevent = true` with `nvim-tui` then `<MouseMove>` events start getting generated. It doesn't with `neovide` or `goneovim`. It's been suggested that with https://github.com/tk-shirasaka/envim has implemented it.\n\nI'm looking for something akin to getting the `name` from `nvim_get_chan_info(chan)`. Maybe something new like `nvim_get_gui_info()` to find out what ~features~ capabilities are implemented.",
            "created_at": "2024-11-02T22:22:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453211185",
            "id": 2453211185,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SOQgx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453211185/reactions"
            },
            "updated_at": "2024-11-02T22:22:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453211185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I also suspect that you'll get a lot more mileage out of asking these questions at https://matrix.to/#/#neovim-guis:matrix.org.\n\nLooks interesting, thanks.",
            "created_at": "2024-11-02T22:22:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453211252",
            "id": 2453211252,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SOQh0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453211252/reactions"
            },
            "updated_at": "2024-11-02T22:22:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453211252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It's been suggested that with https://github.com/tk-shirasaka/envim has implemented it.\n\nBy whom? And in what context? It's clear that you're lacking basic information about how the RPC API and Neovim GUIs operate (which is fine, but jumping to conclusions is not). I would recommend reading the documentation and asking in support channels (which this is not!) first.\n\n> Maybe something new like nvim_get_gui_info() to find out what features capabilities are implemented.\n\nThat is simply not a thing. The API is event based; you get events, you handle events -- if no events are generated, there is nothing you can (or have to) do.",
            "created_at": "2024-11-02T22:29:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453212504",
            "id": 2453212504,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SOQ1Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453212504/reactions"
            },
            "updated_at": "2024-11-02T22:32:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453212504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > It's been suggested that with https://github.com/tk-shirasaka/envim has implemented it.\n> \n> By whom? And in what context?\n\nhttps://github.com/neovim/neovim/issues/30965#issuecomment-2452811715\n\n> It's clear that you're lacking basic information about how the RPC API and Neovim GUIs operate (which is fine, but jumping to conclusions is not). I would recommend reading the documentation and asking in support channels (which this is not!) first.\n",
            "created_at": "2024-11-02T22:34:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453213721",
            "id": 2453213721,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SORIZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453213721/reactions"
            },
            "updated_at": "2024-11-02T22:34:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453213721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Note the exact wording.",
            "created_at": "2024-11-02T22:35:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453214016",
            "id": 2453214016,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SORNA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453214016/reactions"
            },
            "updated_at": "2024-11-02T22:35:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453214016",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > Maybe something new like nvim_get_gui_info() to find out what features capabilities are implemented.\n> \n> That is simply not a thing. The API is event based; you get events, you handle events -- if no events are generated, there is nothing you can (or have to) do.\n\nThis is  request is for a way to determine what `neovim` capabilities are supported by a `gui` (the title change makes no sense). Just because \"everything is always enabled\", does not mean that everything has been implemented by a `gui`. Were I to consider a specific implementation, it could start with the `gui` sending it's capabilities (from a well know list); possibly as part of it's attach.  And then something like `nvim_get_gui_info()` could retrieve it.\n\n",
            "created_at": "2024-11-02T23:00:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453218762",
            "id": 2453218762,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SOSXK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453218762/reactions"
            },
            "updated_at": "2024-11-02T23:00:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453218762",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And, again, you're thinking about this all wrong. This is simply not how Neovim and GUIs interact. I don't know how to make this any clearer.",
            "created_at": "2024-11-02T23:01:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453219121",
            "id": 2453219121,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SOScx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453219121/reactions"
            },
            "updated_at": "2024-11-02T23:01:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453219121",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If your request was \"burn down everything you've built in the last ten years and reimplement it from scratch how _I_ think it should work\", that'd be a quick \"wontfix\" indeed. I'm giving you the benefit of the doubt here.",
            "created_at": "2024-11-02T23:05:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453219717",
            "id": 2453219717,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SOSmF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453219717/reactions"
            },
            "updated_at": "2024-11-02T23:05:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453219717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm working on \"a_project\" that uses `&mousemoveevent`. ...\n>\n> Expected behavior: A way to find out what features are available/implemented in a `gui`\n\nIn general, UIs are expected to support options (such as 'mousemoveevent') that the user has enabled. If the UI doesn't implement something it simply has no effect. Considering the concrete example of 'mousemoveevent', what would you do with that info if the UI declares it's not supported?\n\nOTOH `:help ui-option` lists various capabilities that a UI can enable in the `nvim_ui_attach()` call, and which are part of the `nvim_list_uis()` result. I don't have any strong objection to augmenting that concept. We already have the `option_set` UI event which broadcasts to UIs when a \"gui option\" is set/unset. So that knowledge is already built-into Nvim core in some sense.\n\n# Proposal\n\n- Let UIs declare, via `nvim_ui_attach()`, which \"gui options\" (see `option_set` in `:help ui`) they support.\n- Mention those as part of the `nvim_list_uis()` result.",
            "created_at": "2024-11-03T15:56:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453476011",
            "id": 2453476011,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SPRKr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453476011/reactions"
            },
            "updated_at": "2024-11-03T15:57:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453476011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> In general, UIs are expected to support options (such as 'mousemoveevent') that the user has enabled. If the UI doesn't implement something it simply has no effect. Considering the concrete example of 'mousemoveevent', what would you do with that info if the UI declares it's not supported?\n\nA `vim` popup has a config option `mousemoved` that depend on getting `<MouseMove>` events. The option works on `nvim-tui` using the popup compatibility layer for `neovim`. See https://github.com/errael/plenary.nvim/blob/POPUPS/POPUP.md for the list of currently supported/working options; it's at around 90%, quite usable. It's on hold while plotting a way forward.\n\nThe idea is that in `popup.create({what}, {opts})` give some kind of error/warning if `{opts}` specify a feature that depends on a capability not implemented in the running `ui`.\n\n",
            "created_at": "2024-11-03T17:14:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453500479",
            "id": 2453500479,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SPXI_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453500479/reactions"
            },
            "updated_at": "2024-11-06T20:13:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453500479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Neovim floating windows are very different from Vim popups. and the (unofficial, partial, best-effort) compatibility layer cannot paper over that. If you have issues about using plenary, you should ask there (first).",
            "created_at": "2024-11-03T19:18:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453546843",
            "id": 2453546843,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SPidb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453546843/reactions"
            },
            "updated_at": "2024-11-03T19:18:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453546843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Neovim floating windows are very different from Vim popups. and the (unofficial, partial, best-effort) compatibility layer cannot paper over that. \n\nNote that the link I provided is to a fork of plenary which is \"7 commits ahead\" (and these are not small commits).  It runs with `nvim-tui`, is usable and `vim` compatible. (there's the recent #30844, #30939)\n\nOn what basis do you say \"compatibility layer cannot paper over [the differences between `neovim` floating windows and `vim` popups]\"? I've done a lot of side by side comparisons using the compatibility layer and **I must disagree**. This issue is not the place; I've just opened https://github.com/errael/plenary.nvim/discussions if you have something concrete to say.",
            "created_at": "2024-11-03T20:11:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/31052#issuecomment-2453562138",
            "id": 2453562138,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31052",
            "node_id": "IC_kwDOAPphoM6SPmMa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453562138/reactions"
            },
            "updated_at": "2024-11-06T19:51:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453562138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 16,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31052/comments",
    "created_at": "2024-11-02T21:50:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31052/events",
    "html_url": "https://github.com/neovim/neovim/issues/31052",
    "id": 2630817008,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31052/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6czxTw",
    "number": 31052,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31052/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31052/timeline",
    "title": "API: get UI client-capabilities/implemented-features",
    "updated_at": "2025-01-17T15:26:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31052",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
        "events_url": "https://api.github.com/users/errael/events{/privacy}",
        "followers_url": "https://api.github.com/users/errael/followers",
        "following_url": "https://api.github.com/users/errael/following{/other_user}",
        "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/errael",
        "id": 20450427,
        "login": "errael",
        "node_id": "MDQ6VXNlcjIwNDUwNDI3",
        "organizations_url": "https://api.github.com/users/errael/orgs",
        "received_events_url": "https://api.github.com/users/errael/received_events",
        "repos_url": "https://api.github.com/users/errael/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/errael",
        "user_view_type": "public"
    }
}