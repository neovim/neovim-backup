{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nhttps://github.com/neovim/neovim/pull/35778 added extmark urls to help tags and links to open the Nvim documentation of the current tag in the browser with `gx`. Currently it is not checked if that helptag/helplink actually points to a Nvim-owned helptag.\n\n### Steps to reproduce\n\n0. `echo \"|link-to-a-plugin|\" > pluginhelp.txt`\n1. `nvim --clean pluginhelp.txt`\n2. `:set ft=help`\n3. `gx`\n\n### Expected behavior\n\nI'm not sure yet. Couple of options:\n\n1. Leave it as is\n2. Only set urls on help files in $VIMRUNTIME. Drawback: doesn't work when a plugin doc links to a Nvim-owned helptag\n3. Check if the tag is in the $VIMRUNTIME/doc/tags file (if it exists). Could have performance drawbacks?\n\n### Nvim version (nvim -v)\n\nNVIM v0.12.0-dev-1278+g09266830bd-dirty\n\n---\n\nAlso: `b:undo_ftplugin` currently doesn't remove the url extmarks. I'll add that to the upcoming PR when a decision has been made on what to do with the originally reported bug.",
    "closed_at": "2025-10-12T22:08:19Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Check if the tag is in the $VIMRUNTIME/doc/tags file (if it exists). Could have performance drawbacks?\n\nThat one seems best. Might be able to use `taglist()` or similar. \n\nOption 2 (Only set urls on help files in $VIMRUNTIME) is also fine.\n\nIdeally, we would set the extmark urls only in the viewport. If our current treesitter API makes that easy to do, I think we should try that.",
            "created_at": "2025-10-09T01:45:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/36083#issuecomment-3383760215",
            "id": 3383760215,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36083",
            "node_id": "IC_kwDOAPphoM7JsBVX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3383760215/reactions"
            },
            "updated_at": "2025-10-09T01:45:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3383760215",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Ideally, we would set the extmark urls only in the viewport. If our current treesitter API makes that easy to do, I think we should try that.\n\n~Works with a decoration provider. Only thing is that after clearing the namespace in `b:undo_ftplugin`, the namespace is immediately filled again. How can we disable a decoration provider?~\n\n\n<details><summary>Code if that may help</summary>\n\n```lua\n  local helpbuf = vim.api.nvim_get_current_buf()\n  vim.api.nvim_set_decoration_provider(url_ns, {\n    on_win = function (_, _, buf, topline, botline)\n      if buf ~= helpbuf then\n        return\n      end\n      for _, match, _ in query:iter_matches(root, 0, topline, botline) do\n        for id, nodes in pairs(match) do\n          if query.captures[id] == 'helplink' then\n            for _, node in ipairs(nodes) do\n              local sl, sc, el, ec = node:range()\n              if #vim.api.nvim_buf_get_extmarks(buf, url_ns, { sl, sc }, { el, ec }, {}) == 0 then\n                local tag = vim.treesitter.get_node_text(node, 0)\n                vim.api.nvim_buf_set_extmark(0, url_ns, sl, sc, {\n                  end_line = el,\n                  end_col = ec,\n                  url = base .. vim.uri_encode(tag),\n                })\n              end\n            end\n          end\n        end\n      end\n    end\n  })\n```\n\n</details> \n\nEDIT: created PR. Let's discuss there.",
            "created_at": "2025-10-10T11:30:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/36083#issuecomment-3389529791",
            "id": 3389529791,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36083",
            "node_id": "IC_kwDOAPphoM7KCB6_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3389529791/reactions"
            },
            "updated_at": "2025-10-10T11:53:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3389529791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/36083/comments",
    "created_at": "2025-10-08T13:08:28Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/36083/events",
    "html_url": "https://github.com/neovim/neovim/issues/36083",
    "id": 3495378886,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "funtime",
            "id": 120251370,
            "name": "runtime",
            "node_id": "MDU6TGFiZWwxMjAyNTEzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/runtime"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/36083/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7QVz_G",
    "number": 36083,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/36083/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/36083/timeline",
    "title": "url in help pages set for non nvim-owned helptags",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-12T22:08:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/36083",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
        "events_url": "https://api.github.com/users/yochem/events{/privacy}",
        "followers_url": "https://api.github.com/users/yochem/followers",
        "following_url": "https://api.github.com/users/yochem/following{/other_user}",
        "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yochem",
        "id": 23235841,
        "login": "yochem",
        "node_id": "MDQ6VXNlcjIzMjM1ODQx",
        "organizations_url": "https://api.github.com/users/yochem/orgs",
        "received_events_url": "https://api.github.com/users/yochem/received_events",
        "repos_url": "https://api.github.com/users/yochem/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yochem",
        "user_view_type": "public"
    }
}