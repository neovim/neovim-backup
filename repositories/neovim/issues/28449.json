{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "## Problem\r\n\r\nThis issue tracks some known functions that we want in `vim.func`.\r\n\r\nRelated: `vim.iter` https://github.com/neovim/neovim/issues/23233\r\n\r\n## Expected behavior\r\n\r\nfrom https://github.com/neovim/neovim/pull/8677#issuecomment-403737119 : \r\n\r\n- (transparent?) coroutine support https://www.lua.org/pil/9.3.html\r\n- \"once\"\r\n- memoize / LRU\r\n- partial application (currying? ~~but see also the caveats mentioned [here](https://github.com/moriyalb/lamda#notice)~~ [counterpoint](https://github.com/neovim/neovim/issues/28449#issuecomment-2068856725)) \r\n    - [curry](https://github.com/vigemus/iron.nvim/blob/eac8f6330/lua/iron/utils.lua#L25) (this is an applied example)\r\n\r\n## References\r\n\r\n- https://lua-stdlib.github.io/functional/modules/functional.html",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> nil is the very annoy params in lua because it not only none value but also absent argument. we can not tell the difference, so if we curry the method, the nil args is rejected to send or the method will return a curried function as a invalid result.\r\n\r\nI don't think this is true. `select('#', ...)` should tell you the number of passed arguments, including any tailing `nil`'s.\r\n\r\nI would implement currying as this:\r\n\r\n```lua\r\nlocal function curry(fn, ...)\r\n  local n, args = select('#', ...), { ... }\r\n  return function(...)\r\n    local fargs = {}\r\n    for i = 1, n do\r\n      fargs[i] = args[i]\r\n    end\r\n    for i = 1, select('#', ...) do\r\n      fargs[n+i] = select(i, ...)\r\n    end\r\n    return fn(unpack(fargs, 1, n + n2)\r\n  end\r\nend\r\n\r\nlocal curried = curry(f, 1, 2, 3, 4, nil, nil)\r\n\r\ncurried(5, 6, 7, nil)\r\n-- equiv to:\r\n-- f(1, 2, 3, 4, nil, nil, 5, 6, 7, nil)\r\n```",
            "created_at": "2024-04-22T08:56:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/28449#issuecomment-2068856725",
            "id": 2068856725,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28449",
            "node_id": "IC_kwDOAPphoM57UD-V",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2068856725/reactions"
            },
            "updated_at": "2024-04-22T09:04:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2068856725",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ```lua\r\n> curried(5, 6, 7, nil)\r\n> ```\r\n\r\nIs that currying or partial application? https://stackoverflow.com/a/218055/152142",
            "created_at": "2024-04-22T10:03:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/28449#issuecomment-2068991950",
            "id": 2068991950,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28449",
            "node_id": "IC_kwDOAPphoM57Uk_O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2068991950/reactions"
            },
            "updated_at": "2024-04-22T10:03:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2068991950",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah yeah, it's creating a partial, which is what you usually want.\n\nI'm sure the same concept can be used to create a currying function.",
            "created_at": "2024-04-22T10:59:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/28449#issuecomment-2069098521",
            "id": 2069098521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28449",
            "node_id": "IC_kwDOAPphoM57U_AZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2069098521/reactions"
            },
            "updated_at": "2024-04-22T11:10:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2069098521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have been porting a haskell library to lua so I have looked into currying in lua quite a bit, and this is what I am currently using in that project:\r\n\r\n```lua\r\nlocal function rev_unpack(t, n)\r\n   for i = 1, math.floor(n / 2) do\r\n      t[i], t[n - i + 1] = t[n - i + 1], t[i]\r\n   end\r\n   return unpack(t, 1, n)\r\nend\r\n\r\nlocal function curry(func, nparams)\r\n   local info = debug.getinfo(func, \"u\")\r\n   if info.isvararg then\r\n      error \"cannot curry a function with variable number of arguments\"\r\n   end\r\n   nparams = nparams or info.nparams\r\n   if nparams < 2 then\r\n      return func\r\n   end\r\n   local function aux(argtrace, n)\r\n      if n < 1 then\r\n         return func(rev_unpack(argtrace, nparams))\r\n      else\r\n         return function(...)\r\n            local len = select(\"#\", ...)\r\n            for i = 1, len do\r\n               argtrace[n - i + 1] = select(i, ...)\r\n            end\r\n            return aux(argtrace, n - len)\r\n         end\r\n      end\r\n   end\r\n   return aux({}, nparams)\r\nend\r\n\r\ncurry(function(a, b, c, d, e, f, g)\r\n   print(a, b, c, d, e, f, g)\r\nend)(1)(nil)(3, nil, nil, 6, 7) -- prints(1, nil, 3, nil, nil, 6, 7)\r\n\r\n```\r\nIt does both typical `currying`, producing a one argument function at a time, and partials like shown above, and it handles nils fine. I am sure it could be improved, also here are some problems for a good 'curry' in lua:\r\n\r\n1. It is weird to call curry on vararg functions, like what does it mean to call `curry(print)`? should it throw errror or return print as is?\r\n2. I once read somewhere that debug library may not be fast(maybe not so in luajit?), so I make nparams an optional parameter, It is nice when I use it in my personal project, but not good as an api, because user could provide wrong number of params:\r\n```lua\r\n curry(function(a, b, c, d, e, f, g)\r\n   return a + b + c + d + e + f + g\r\nend, 6)(1)(2)(3, 4)(5)(6, 7) --  attempt to perform arithmetic on local 'g' (a nil value)\r\n```\r\n3. I actually feel like a `bind` function is nicer than curry in a scripting context, while curry is good for complex composable logic, like I could write `keymap= vim.fn.bind(vim.keymap.set, { [4] = {noremap = true}})` and then use the new keymap function. It would be even better to write default like {opts = {noremap = true}} and merge the opts if there exists new args that are passed in.",
            "created_at": "2024-07-15T10:40:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/28449#issuecomment-2228199111",
            "id": 2228199111,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28449",
            "node_id": "IC_kwDOAPphoM6Ez57H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2228199111/reactions"
            },
            "updated_at": "2024-07-15T10:40:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2228199111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111681693?v=4",
                "events_url": "https://api.github.com/users/neo451/events{/privacy}",
                "followers_url": "https://api.github.com/users/neo451/followers",
                "following_url": "https://api.github.com/users/neo451/following{/other_user}",
                "gists_url": "https://api.github.com/users/neo451/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neo451",
                "id": 111681693,
                "login": "neo451",
                "node_id": "U_kgDOBqggnQ",
                "organizations_url": "https://api.github.com/users/neo451/orgs",
                "received_events_url": "https://api.github.com/users/neo451/received_events",
                "repos_url": "https://api.github.com/users/neo451/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neo451/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neo451/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/neo451",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28449/comments",
    "created_at": "2024-04-21T23:17:58Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28449/events",
    "html_url": "https://github.com/neovim/neovim/issues/28449",
    "id": 2255322506,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28449/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6GbX2K",
    "number": 28449,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28449/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28449/timeline",
    "title": "Lua: vim.func functional utils",
    "updated_at": "2025-01-17T15:27:17Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28449",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}