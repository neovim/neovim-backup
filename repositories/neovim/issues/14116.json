{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "[nvim-dap](https://github.com/mfussenegger/nvim-dap) uses `buftype=prompt` for the debug REPL.\r\n\r\nIt looks as if by default any input to a prompt buffer sets the `modified` flag. This is a bit annoying for the REPL case, because users usually don't care whether the REPL is modified or not and they shouldn't get a \"Did not save [dap-repl]\" message. So I added something like this:\r\n\r\n\r\n```\r\napi.nvim_buf_attach(buf, false, {\r\n  on_lines = function(b)\r\n    api.nvim_buf_set_option(b, 'modified', false)\r\n  end;\r\n  on_changedtick = function(b)\r\n    api.nvim_buf_set_option(b, 'modified', false)\r\n  end;\r\n  ...\r\n```\r\n\r\nBut this workaround had the side effect of [breaking the backspace key](https://github.com/mfussenegger/nvim-dap/issues/119) in that after you type something you can no longer remove the characters with backspace.\r\n\r\n\r\nIs there any other good way to that would allow to treat a prompt buffer like a terminal or `nofile` where modifications don't matter?\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "probably `buftype=prompt,nofile` should be allowed. Perhaps it can be suggested upstream?",
            "created_at": "2021-03-12T09:40:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-797368585",
            "id": 797368585,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzM2ODU4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/797368585/reactions"
            },
            "updated_at": "2021-03-12T09:40:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/797368585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Are there any updates? ",
            "created_at": "2021-07-24T01:51:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-885984371",
            "id": 885984371,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM40zwxz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/885984371/reactions"
            },
            "updated_at": "2021-07-24T01:51:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/885984371",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/45864384?v=4",
                "events_url": "https://api.github.com/users/cogig/events{/privacy}",
                "followers_url": "https://api.github.com/users/cogig/followers",
                "following_url": "https://api.github.com/users/cogig/following{/other_user}",
                "gists_url": "https://api.github.com/users/cogig/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cogig",
                "id": 45864384,
                "login": "cogig",
                "node_id": "MDQ6VXNlcjQ1ODY0Mzg0",
                "organizations_url": "https://api.github.com/users/cogig/orgs",
                "received_events_url": "https://api.github.com/users/cogig/received_events",
                "repos_url": "https://api.github.com/users/cogig/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cogig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cogig/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cogig",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Afaik no one has reported it upstream to vim yet. I myself didn't get to it - because it would first be necessary to verify that the behavior isn't already different and the problem also occurs within vim.\r\n\r\nIf you could take care of that, that would be great.",
            "created_at": "2021-07-24T12:38:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-886047927",
            "id": 886047927,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM400AS3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/886047927/reactions"
            },
            "updated_at": "2021-07-24T12:38:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/886047927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bfredl @mfussenegger I have tried the latest version of neovim.\r\n```\r\nNVIM v0.6.0-dev+65-g46009499a\r\nBuild type: Release\r\nLuaJIT 2.1.0-beta3\r\n```\r\nThe problem still exists in nvim-dap repl.",
            "created_at": "2021-07-25T00:24:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-886128026",
            "id": 886128026,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM400T2a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/886128026/reactions"
            },
            "updated_at": "2021-07-25T00:32:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/886128026",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/45864384?v=4",
                "events_url": "https://api.github.com/users/cogig/events{/privacy}",
                "followers_url": "https://api.github.com/users/cogig/followers",
                "following_url": "https://api.github.com/users/cogig/following{/other_user}",
                "gists_url": "https://api.github.com/users/cogig/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cogig",
                "id": 45864384,
                "login": "cogig",
                "node_id": "MDQ6VXNlcjQ1ODY0Mzg0",
                "organizations_url": "https://api.github.com/users/cogig/orgs",
                "received_events_url": "https://api.github.com/users/cogig/received_events",
                "repos_url": "https://api.github.com/users/cogig/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cogig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cogig/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cogig",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mfussenegger @bfredl How to comfirm that the problem also occurs within vim? I have no idea. Can you give me any advise?",
            "created_at": "2021-07-25T00:32:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-886128630",
            "id": 886128630,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM400T_2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/886128630/reactions"
            },
            "updated_at": "2021-07-25T00:32:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/886128630",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/45864384?v=4",
                "events_url": "https://api.github.com/users/cogig/events{/privacy}",
                "followers_url": "https://api.github.com/users/cogig/followers",
                "following_url": "https://api.github.com/users/cogig/following{/other_user}",
                "gists_url": "https://api.github.com/users/cogig/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cogig",
                "id": 45864384,
                "login": "cogig",
                "node_id": "MDQ6VXNlcjQ1ODY0Mzg0",
                "organizations_url": "https://api.github.com/users/cogig/orgs",
                "received_events_url": "https://api.github.com/users/cogig/received_events",
                "repos_url": "https://api.github.com/users/cogig/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cogig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cogig/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cogig",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mfussenegger @bfredl I think the bug has large degree of influence on usage of repl and watch window. Many key can't work well.",
            "created_at": "2021-07-26T03:55:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-886351962",
            "id": 886351962,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM401Kha",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/886351962/reactions"
            },
            "updated_at": "2021-07-26T03:55:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/886351962",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22888402?v=4",
                "events_url": "https://api.github.com/users/pittcat/events{/privacy}",
                "followers_url": "https://api.github.com/users/pittcat/followers",
                "following_url": "https://api.github.com/users/pittcat/following{/other_user}",
                "gists_url": "https://api.github.com/users/pittcat/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pittcat",
                "id": 22888402,
                "login": "pittcat",
                "node_id": "MDQ6VXNlcjIyODg4NDAy",
                "organizations_url": "https://api.github.com/users/pittcat/orgs",
                "received_events_url": "https://api.github.com/users/pittcat/received_events",
                "repos_url": "https://api.github.com/users/pittcat/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pittcat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pittcat/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pittcat",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I ran into this myself a little while ago while working on a Fennel REPL plugin. Vim modified the behavior of `'modified'` to respect `buftype=prompt` in https://github.com/vim/vim/commit/4551c0a9fcdbdef52836d4852686d54b5e47fdaf, solely for the termdebug plugin.\r\n\r\nWe could consider breaking with upstream on this and making `buftype=prompt` always ignore `'modified'` as it did before that commit (which I would argue is the less surprising behavior).",
            "created_at": "2021-11-22T23:31:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-976006637",
            "id": 976006637,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM46LK3t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/976006637/reactions"
            },
            "updated_at": "2021-11-22T23:31:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/976006637",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It seems it's pretty common for plugins to use the workaround mentioned in the original post leading to the broken backspace issue also mentioned in the original post. I ran into it using a couple different plugins and am currently using the following workaround. I decided to just go ahead and set the remap for all prompts since it's a common issue but the logic should be able to be pulled down into individual plugins. That being said, I do think this is a case where we should break from vim in the name of usability and change the default behavior in neovim so these workarounds aren't needed.\r\n\r\n```lua\r\nfunction PromptBackspace() --Expects to have entered normal mode before entering function, will return to insert mode\r\n  local currentLineNumber = vim.fn[\"line\"](\".\")\r\n  local currentColumnNumber = vim.fn[\"col\"](\".\")\r\n  local currentLineLength = vim.fn[\"col\"](\"$\")\r\n  local currentLine = vim.api.nvim_buf_get_lines(0, currentLineNumber-1, currentLineNumber, false)[1]\r\n  local _, endPrompt = string.find(currentLine, \"> \")\r\n\r\n  if endPrompt == nil then\r\n    endPrompt = 0\r\n  end\r\n\r\n  if currentColumnNumber ~= endPrompt then --Not beginning of the prompt\r\n    if currentColumnNumber == currentLineLength - 1 then --Not beginning of prompt and is the end of the line\r\n      vim.cmd([[normal x]])\r\n      vim.cmd([[startinsert!]])\r\n    else --Not beginning of prompt and is not the end of the line\r\n      vim.cmd([[normal x]])\r\n      vim.cmd([[startinsert]])\r\n    end\r\n  else --Beginning of prompt\r\n    vim.cmd([[startinsert]])\r\n  end\r\nend\r\n\r\nvim.cmd([[\r\nfun! PromptBackspaceSetup()\r\n    if v:option_new == 'prompt'\r\n      inoremap <buffer> <backspace> <esc>:lua PromptBackspace()<cr>\r\n    endif\r\nendfun\r\n\r\nautocmd OptionSet * call PromptBackspaceSetup() \"not using a lua function here because of error when accessing :help\r\n]])\r\n```",
            "created_at": "2021-11-23T01:01:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-976069244",
            "id": 976069244,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM46LaJ8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/976069244/reactions"
            },
            "updated_at": "2021-11-23T01:01:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/976069244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9106735?v=4",
                "events_url": "https://api.github.com/users/pfeiferj/events{/privacy}",
                "followers_url": "https://api.github.com/users/pfeiferj/followers",
                "following_url": "https://api.github.com/users/pfeiferj/following{/other_user}",
                "gists_url": "https://api.github.com/users/pfeiferj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pfeiferj",
                "id": 9106735,
                "login": "pfeiferj",
                "node_id": "MDQ6VXNlcjkxMDY3MzU=",
                "organizations_url": "https://api.github.com/users/pfeiferj/orgs",
                "received_events_url": "https://api.github.com/users/pfeiferj/received_events",
                "repos_url": "https://api.github.com/users/pfeiferj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pfeiferj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pfeiferj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pfeiferj",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "An improvement to the previous backspace workaround that doesn't switch between normal and insert modes:\r\n\r\n```lua\r\nfunction PromptBackspace()\r\n  -- Allows backspacing through previously set text when in a prompt.\r\n  --\r\n  -- Note 1: Insert mode cursor is after (+1) the column as opposed to in normal mode it would be on (+0) the column.\r\n  -- Note 2: nvim_win_[get|set]_cursor is (1, 0) indexed for (line, column) while nvim_buf_[get|set]_[lines|text] is 0 indexed for both.\r\n\r\n  local currentCursor = vim.api.nvim_win_get_cursor(0)\r\n  local currentLineNumber = currentCursor[1]\r\n  local currentColumnNumber = currentCursor[2]\r\n  local promptLength = vim.str_utfindex(vim.fn['prompt_getprompt']('%'));\r\n\r\n  if (currentColumnNumber) ~= promptLength then\r\n    vim.api.nvim_buf_set_text(0, currentLineNumber-1, currentColumnNumber-1, currentLineNumber-1, currentColumnNumber, {\"\"})\r\n    vim.api.nvim_win_set_cursor(0, {currentLineNumber, currentColumnNumber-1})\r\n  end\r\nend\r\n\r\nvim.cmd([[\r\nfun! PromptBackspaceSetup()\r\n    if v:option_new == 'prompt'\r\n      inoremap <buffer> <backspace> <Cmd>lua PromptBackspace()<cr>\r\n    endif\r\nendfun\r\n\r\nautocmd OptionSet * call PromptBackspaceSetup() \"not using a lua function here because of error when accessing :help\r\n]])\r\n```\r\nEdit: updated to get actual prompt text to determine prompt length\r\nEdit2: updated prompt length detection as per @rcarriga's suggestion",
            "created_at": "2021-11-24T05:51:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-977555102",
            "id": 977555102,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM46RE6e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/977555102/reactions"
            },
            "updated_at": "2021-11-30T15:41:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/977555102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9106735?v=4",
                "events_url": "https://api.github.com/users/pfeiferj/events{/privacy}",
                "followers_url": "https://api.github.com/users/pfeiferj/followers",
                "following_url": "https://api.github.com/users/pfeiferj/following{/other_user}",
                "gists_url": "https://api.github.com/users/pfeiferj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pfeiferj",
                "id": 9106735,
                "login": "pfeiferj",
                "node_id": "MDQ6VXNlcjkxMDY3MzU=",
                "organizations_url": "https://api.github.com/users/pfeiferj/orgs",
                "received_events_url": "https://api.github.com/users/pfeiferj/received_events",
                "repos_url": "https://api.github.com/users/pfeiferj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pfeiferj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pfeiferj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pfeiferj",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just FYI @pfeiferj (or anyone using the workaround) `string.len` doesn't work with unicode characters in the prompt, you can use `vim.str_utfindex` instead :smile: ",
            "created_at": "2021-11-30T09:01:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-982422778",
            "id": 982422778,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM46jpT6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/982422778/reactions"
            },
            "updated_at": "2021-11-30T09:01:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/982422778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24252670?v=4",
                "events_url": "https://api.github.com/users/rcarriga/events{/privacy}",
                "followers_url": "https://api.github.com/users/rcarriga/followers",
                "following_url": "https://api.github.com/users/rcarriga/following{/other_user}",
                "gists_url": "https://api.github.com/users/rcarriga/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rcarriga",
                "id": 24252670,
                "login": "rcarriga",
                "node_id": "MDQ6VXNlcjI0MjUyNjcw",
                "organizations_url": "https://api.github.com/users/rcarriga/orgs",
                "received_events_url": "https://api.github.com/users/rcarriga/received_events",
                "repos_url": "https://api.github.com/users/rcarriga/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rcarriga/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rcarriga/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rcarriga",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "whoops, updated the post. Dang unicode messing everything up, clearly the world should have adapted to 256 characters not programmers to languages/emojis lol. ",
            "created_at": "2021-11-30T15:47:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-982763036",
            "id": 982763036,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM46k8Yc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/982763036/reactions"
            },
            "updated_at": "2021-11-30T15:47:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/982763036",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9106735?v=4",
                "events_url": "https://api.github.com/users/pfeiferj/events{/privacy}",
                "followers_url": "https://api.github.com/users/pfeiferj/followers",
                "following_url": "https://api.github.com/users/pfeiferj/following{/other_user}",
                "gists_url": "https://api.github.com/users/pfeiferj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pfeiferj",
                "id": 9106735,
                "login": "pfeiferj",
                "node_id": "MDQ6VXNlcjkxMDY3MzU=",
                "organizations_url": "https://api.github.com/users/pfeiferj/orgs",
                "received_events_url": "https://api.github.com/users/pfeiferj/received_events",
                "repos_url": "https://api.github.com/users/pfeiferj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pfeiferj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pfeiferj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pfeiferj",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> We could consider breaking with upstream on this and making `buftype=prompt` always ignore `'modified'` as it did before that commit (which I would argue is the less surprising behavior).\r\n\r\nDoes this sound good to other folks?  If so, I'd be happy to take a shot at implementing it if contributions are welcome.\r\n\r\nEdit: Ah, this appears to just be a one line change in undo.c.",
            "created_at": "2022-09-09T02:17:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/14116#issuecomment-1241421501",
            "id": 1241421501,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14116",
            "node_id": "IC_kwDOAPphoM5J_pa9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1241421501/reactions"
            },
            "updated_at": "2022-09-10T00:32:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1241421501",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54521218?v=4",
                "events_url": "https://api.github.com/users/beardedsakimonkey/events{/privacy}",
                "followers_url": "https://api.github.com/users/beardedsakimonkey/followers",
                "following_url": "https://api.github.com/users/beardedsakimonkey/following{/other_user}",
                "gists_url": "https://api.github.com/users/beardedsakimonkey/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/beardedsakimonkey",
                "id": 54521218,
                "login": "beardedsakimonkey",
                "node_id": "MDQ6VXNlcjU0NTIxMjE4",
                "organizations_url": "https://api.github.com/users/beardedsakimonkey/orgs",
                "received_events_url": "https://api.github.com/users/beardedsakimonkey/received_events",
                "repos_url": "https://api.github.com/users/beardedsakimonkey/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/beardedsakimonkey/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/beardedsakimonkey/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/beardedsakimonkey",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/14116/comments",
    "created_at": "2021-03-12T09:38:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/14116/events",
    "html_url": "https://github.com/neovim/neovim/issues/14116",
    "id": 829933674,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/14116/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4Mjk5MzM2NzQ=",
    "number": 14116,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 9,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 9,
        "url": "https://api.github.com/repos/neovim/neovim/issues/14116/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/14116/timeline",
    "title": "Ignore modified state with buftype prompt ",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/14116",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger",
        "user_view_type": "public"
    }
}