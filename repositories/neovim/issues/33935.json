{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nSince the indexing is end-exclusive, `nvim_buf_get_text` should allow specifying one position beyond the last valid position, just as `nvim_buf_get_lines` does.\n\n\n### Steps to reproduce\n\n1. prepare `minimal.lua`\n\n```lua\nvim.cmd([[\n.a\nline 1\nline 2\n.\n]])\n\nvim.keymap.set(\n\t\"n\",\n\t\"w\",\n\tfunction()\n\t\tvim.print(vim.api.nvim_buf_get_text(0, 0, 0, 1, 0, {}))\n\tend\n)\n\nvim.keymap.set(\n\t\"n\",\n\t\"e\",\n\tfunction()\n\t\tvim.print(vim.api.nvim_buf_get_text(0, 0, 0, 2, 0, {}))\n\tend\n)\n\nvim.keymap.set(\n\t\"n\",\n\t\"r\",\n\tfunction()\n\t\tvim.print(vim.api.nvim_buf_get_lines(0, 0, 2, true))\n\tend\n)\n```\n\n2. `nvim --clean -u minimal.lua`\n3. press `w`, print:\n\n```\n{ \"line 1\", \"\" }\n```\n\nthis is expected\n\n4. press `e`, error:\n\n```\nE5108: Lua: /home/aidan/Downloads/minimal.lua:20: Index out of bounds\nstack traceback:\n        [C]: in function 'nvim_buf_get_text'\n        /home/aidan/Downloads/minimal.lua:20: in function </home/aidan/Downloads/minimal.lua:19>\nPress ENTER or type command to continue\n```\n\n5. press `r`, print:\n\n```\n{ \"line 1\", \"line 2\" }\n```\n\nthis is expected\n\n### Expected behavior\n\npress `e`, print:\n\n```\n{ \"line 1\", \"line 2\", \"\" }\n```\n\n---\n\nEven with `strict_indexing = true`, `nvim_buf_get_lines` allows specifying one position past the end, so I believe `nvim_buf_get_text` should do the same.\n\n\n### Nvim version (nvim -v)\n\nNVIM v0.12.0-dev-334+g3121e02ae0\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\n6.14.4-arch1-1\n\n### Terminal name/version\n\nst 0.8.5\n\n### $TERM environment variable\n\nst-256color\n\n### Installation\n\nAUR",
    "closed_at": "2025-05-10T04:29:12Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This does not make sense, since `nvim_buf_get_text` accepts both an inclusive `end_row` and an exclusive `end_col`.",
            "created_at": "2025-05-10T04:29:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2868340884",
            "id": 2868340884,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6q92iU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868340884/reactions"
            },
            "updated_at": "2025-05-10T04:29:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868340884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "There’s no such thing as: exclusive `end_row` and exclusive `end_col`.\n\nWhen considering both `row` and `col`, an end position can only be either inclusive or exclusive, corresponding to two cases:\n\n1. (inclusive `end_row`, inclusive `end_col`)\n2. (inclusive `end_row`, exclusive `end_col`)\n\nIf the case I mentioned is not allowed, how can one use `vim.api.nvim_buf_get_text` to retrieve all the text from a buffer?\n\nNote that the buffer content is `{ \"line 1\", \"line 2\", \"\" }`, not `{ \"line 1\", \"line 2\" }`.\n\nPlease consider the logic behind this.\n",
            "created_at": "2025-05-10T04:42:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2868358111",
            "id": 2868358111,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6q96vf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868358111/reactions"
            },
            "updated_at": "2025-05-10T04:43:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868358111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/97080720?v=4",
                "events_url": "https://api.github.com/users/aidancz/events{/privacy}",
                "followers_url": "https://api.github.com/users/aidancz/followers",
                "following_url": "https://api.github.com/users/aidancz/following{/other_user}",
                "gists_url": "https://api.github.com/users/aidancz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aidancz",
                "id": 97080720,
                "login": "aidancz",
                "node_id": "U_kgDOBclVkA",
                "organizations_url": "https://api.github.com/users/aidancz/orgs",
                "received_events_url": "https://api.github.com/users/aidancz/received_events",
                "repos_url": "https://api.github.com/users/aidancz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aidancz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aidancz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aidancz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If the case I mentioned is not allowed, how can one use `vim.api.nvim_buf_get_text` to retrieve all the text from a buffer?\n\n`nvim_buf_get_text(0, 0, 0, -1, -1, {})`\n\n> Note that the buffer content is `{ \"line 1\", \"line 2\", \"\" }`, not `{ \"line 1\", \"line 2\" }`.\n\nNo, it's `{ \"line 1\", \"line 2\" }`.",
            "created_at": "2025-05-10T04:48:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2868360905",
            "id": 2868360905,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6q97bJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868360905/reactions"
            },
            "updated_at": "2025-05-10T04:51:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868360905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "No, `{ \"line 1\", \"line 2\" }` is the correct output from `vim.api.nvim_buf_get_lines`.\n\nHowever, for `vim.api.nvim_buf_get_text`, the correct output should be `{ \"line 1\", \"line 2\", \"\" }`.\n\nThis difference arises because `nvim_buf_get_lines` returns an array of lines, where each item implicitly ends with a newline. In contrast, `nvim_buf_get_text` returns an array of **text** (the documentation is wrong here), where newlines are indicated by gaps between the elements.\n\nPlease consider the `w` mapping's output above",
            "created_at": "2025-05-10T05:10:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2868395208",
            "id": 2868395208,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6q-DzI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868395208/reactions"
            },
            "updated_at": "2025-05-10T05:10:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868395208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/97080720?v=4",
                "events_url": "https://api.github.com/users/aidancz/events{/privacy}",
                "followers_url": "https://api.github.com/users/aidancz/followers",
                "following_url": "https://api.github.com/users/aidancz/following{/other_user}",
                "gists_url": "https://api.github.com/users/aidancz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aidancz",
                "id": 97080720,
                "login": "aidancz",
                "node_id": "U_kgDOBclVkA",
                "organizations_url": "https://api.github.com/users/aidancz/orgs",
                "received_events_url": "https://api.github.com/users/aidancz/received_events",
                "repos_url": "https://api.github.com/users/aidancz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aidancz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aidancz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aidancz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> However, for `vim.api.nvim_buf_get_text`, the correct output should be `{ \"line 1\", \"line 2\", \"\" }`.\n\nNo, it shouldn't.",
            "created_at": "2025-05-10T05:17:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2868397781",
            "id": 2868397781,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6q-EbV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868397781/reactions"
            },
            "updated_at": "2025-05-10T05:17:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868397781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Reason? \n\n`vim.api.nvim_buf_get_text` already works this way.\n\nIf you believe this behavior is not ideal, please open a new issue to discuss what the expected behavior should be.\n\nFor now, this issue should be reopened.",
            "created_at": "2025-05-10T05:24:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2868401001",
            "id": 2868401001,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6q-FNp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868401001/reactions"
            },
            "updated_at": "2025-05-10T05:24:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868401001",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/97080720?v=4",
                "events_url": "https://api.github.com/users/aidancz/events{/privacy}",
                "followers_url": "https://api.github.com/users/aidancz/followers",
                "following_url": "https://api.github.com/users/aidancz/following{/other_user}",
                "gists_url": "https://api.github.com/users/aidancz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aidancz",
                "id": 97080720,
                "login": "aidancz",
                "node_id": "U_kgDOBclVkA",
                "organizations_url": "https://api.github.com/users/aidancz/orgs",
                "received_events_url": "https://api.github.com/users/aidancz/received_events",
                "repos_url": "https://api.github.com/users/aidancz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aidancz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aidancz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aidancz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Reason?\n\nThere are only two lines in the buffer. The third line does not exist. There is no such thing as \"indicating new line\" in either API.",
            "created_at": "2025-05-10T05:29:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2868402670",
            "id": 2868402670,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6q-Fnu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868402670/reactions"
            },
            "updated_at": "2025-05-10T05:32:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868402670",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> `nvim_buf_get_text` returns an array of **text** (the documentation is wrong here), where newlines are indicated by gaps between the elements\n\nYou might think that `nvim_buf_get_text` returns an array of lines, but it doesn't.\n\nConvincing others is never easy. I've already stated my reasons above, and I believe the author of this api should decide whether my request is reasonable.\n\nLet's leave it at that for now.\n\n@gpanders ",
            "created_at": "2025-05-10T05:39:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2868406679",
            "id": 2868406679,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6q-GmX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868406679/reactions"
            },
            "updated_at": "2025-05-10T05:39:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868406679",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/97080720?v=4",
                "events_url": "https://api.github.com/users/aidancz/events{/privacy}",
                "followers_url": "https://api.github.com/users/aidancz/followers",
                "following_url": "https://api.github.com/users/aidancz/following{/other_user}",
                "gists_url": "https://api.github.com/users/aidancz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aidancz",
                "id": 97080720,
                "login": "aidancz",
                "node_id": "U_kgDOBclVkA",
                "organizations_url": "https://api.github.com/users/aidancz/orgs",
                "received_events_url": "https://api.github.com/users/aidancz/received_events",
                "repos_url": "https://api.github.com/users/aidancz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aidancz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aidancz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aidancz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I would like to add some information here:\n\n## The purpose of this issue is:\n\nFor a two-line buffer, like:\n\n```\nline 1\nline 2\n```\n\nallow specifying {end_row = 2, end_col = 0} as the end position for `vim.api.nvim_buf_get_text` and `vim.api.nvim_buf_set_text`\n\n## Why do I want to do this?\n\nFirst, `vim.api.nvim_buf_set_extmark` already allows using this position. Here is an example:\n\n`minimal.lua`\n\n```lua\nvim.cmd([[\n.a\nline 1\nline 2\n.\n]])\n\nvim.api.nvim_buf_set_extmark(\n\t0,\n\tvim.api.nvim_create_namespace(\"test\"),\n\t0,\n\t0,\n\t{\n\t\tend_row = 2,\n\t\tend_col = 0,\n\t\thl_eol = true,\n\t\thl_group = \"Visual\",\n\t}\n)\n```\n\nrun `nvim --clean -u minimal.lua`\n\nSame as \"0-based indices, inclusive end\\_row, exclusive end\\_col,\" why does `vim.api.nvim_buf_set_extmark` allow using the position `{end_row = 2, end_col = 0}`? Because without using this position, the buffer's final EOL (End of Line) would not be highlighted.\n\nThen, for `vim.api.nvim_buf_get_text`, the situation is similar. If the position `{2, 0}` is not allowed, this API will not be able to retrieve the final EOL. Here is an example:\n\n`minimal.lua`:\n\n```lua\nremove_last_eol = function()\n\tvim.opt.binary = true\n\tvim.opt.fixendofline = false\n\tvim.opt.endofline = false\nend\n\nvim.cmd([[\n.a\nline 1\nline 2\n.\n]])\n\nvim.cmd(\"f test\")\n\nvim.cmd(\"silent w!\")\nvim.print(vim.fn.system(\"xxd test\"))\nvim.print(vim.api.nvim_buf_get_text(0, 0, 0, -1, -1, {}))\n\nremove_last_eol()\n\nvim.cmd(\"silent w!\")\nvim.print(vim.fn.system(\"xxd test\"))\nvim.print(vim.api.nvim_buf_get_text(0, 0, 0, -1, -1, {}))\n```\n\nrun `nvim --clean -u minimal.lua`\n\n![Image](https://github.com/user-attachments/assets/006c56e0-780a-4016-ab54-d8edb922e544)\n\nFor different buffer contents, `vim.api.nvim_buf_get_text` gives the same result. It cannot distinguish whether the final character of a buffer is an EOL, which is clearly incorrect behavior for an API intended to retrieve buffer characters.\n\nIn the case with an EOL, it should output `{\"line 1\", \"line 2\", \"\"}`. In the case without an EOL, it should output `{\"line 1\", \"line 2\"}`.\n\nWhy do I think this way?\n\nBecause the result of `vim.api.nvim_buf_get_text(0, 0, 0, 1, 0, {})` is `{\"line 1\", \"\"}`,\nand the result of `vim.api.nvim_buf_get_text(0, 0, 0, 0, -1, {})` is `{\"line 1\"}`.\n\nIt is clear that this API uses the gaps between list elements to represent EOL. If you have doubts about this, you can experiment further.\n\nTherefore, you can use `table.concat(output, \"\\n\")` to get the original string.\n\nHowever, for a buffer where the final character is an EOL, there is no gap to represent the final EOL.\n\nThus, returning `{\"line 1\", \"line 2\"}` is incorrect; the correct output should be `{\"line 1\", \"line 2\", \"\"}`.\n\n### Finally\n\nI sincerely request to reopen this issue.\n\nIf you have any other questions, feel free to @aidancz, and I will do my best to respond promptly.",
            "created_at": "2025-05-13T16:27:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2877194234",
            "id": 2877194234,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6rfn_6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2877194234/reactions"
            },
            "updated_at": "2025-05-13T16:27:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2877194234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/97080720?v=4",
                "events_url": "https://api.github.com/users/aidancz/events{/privacy}",
                "followers_url": "https://api.github.com/users/aidancz/followers",
                "following_url": "https://api.github.com/users/aidancz/following{/other_user}",
                "gists_url": "https://api.github.com/users/aidancz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aidancz",
                "id": 97080720,
                "login": "aidancz",
                "node_id": "U_kgDOBclVkA",
                "organizations_url": "https://api.github.com/users/aidancz/orgs",
                "received_events_url": "https://api.github.com/users/aidancz/received_events",
                "repos_url": "https://api.github.com/users/aidancz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aidancz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aidancz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aidancz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "EOLs are file characters, not buffer characters. Gaps  between list items indicate that the items belong to two different lines. They do not indicate EOL.",
            "created_at": "2025-05-13T23:02:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2878144739",
            "id": 2878144739,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6rjQDj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2878144739/reactions"
            },
            "updated_at": "2025-05-13T23:06:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2878144739",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Alright, I think I can roughly understand why the current behavior is like this\n\nThank you very much for your reply❤️👍",
            "created_at": "2025-05-14T01:16:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/33935#issuecomment-2878355404",
            "id": 2878355404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33935",
            "node_id": "IC_kwDOAPphoM6rkDfM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2878355404/reactions"
            },
            "updated_at": "2025-05-14T01:16:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2878355404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/97080720?v=4",
                "events_url": "https://api.github.com/users/aidancz/events{/privacy}",
                "followers_url": "https://api.github.com/users/aidancz/followers",
                "following_url": "https://api.github.com/users/aidancz/following{/other_user}",
                "gists_url": "https://api.github.com/users/aidancz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aidancz",
                "id": 97080720,
                "login": "aidancz",
                "node_id": "U_kgDOBclVkA",
                "organizations_url": "https://api.github.com/users/aidancz/orgs",
                "received_events_url": "https://api.github.com/users/aidancz/received_events",
                "repos_url": "https://api.github.com/users/aidancz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aidancz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aidancz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aidancz",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33935/comments",
    "created_at": "2025-05-10T04:22:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33935/events",
    "html_url": "https://github.com/neovim/neovim/issues/33935",
    "id": 3053655822,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "current behavior is by design, and change is not desired",
            "id": 77997479,
            "name": "closed:wontfix",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:wontfix"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33935/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM62AxcO",
    "number": 33935,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33935/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33935/timeline",
    "title": "`vim.api.nvim_buf_get_text` should permit specifying one position beyond the last valid position",
    "type": null,
    "updated_at": "2025-05-14T01:16:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33935",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/97080720?v=4",
        "events_url": "https://api.github.com/users/aidancz/events{/privacy}",
        "followers_url": "https://api.github.com/users/aidancz/followers",
        "following_url": "https://api.github.com/users/aidancz/following{/other_user}",
        "gists_url": "https://api.github.com/users/aidancz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/aidancz",
        "id": 97080720,
        "login": "aidancz",
        "node_id": "U_kgDOBclVkA",
        "organizations_url": "https://api.github.com/users/aidancz/orgs",
        "received_events_url": "https://api.github.com/users/aidancz/received_events",
        "repos_url": "https://api.github.com/users/aidancz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/aidancz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aidancz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/aidancz",
        "user_view_type": "public"
    }
}