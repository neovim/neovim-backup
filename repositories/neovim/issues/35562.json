{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nThe problem with vim.pack is that it has no lazy loading. There are lazy loading libraries such as lz.n but they don't seem to work with cmd lazy loading.\n\n### Expected behavior\n\nIf neovim could have the later and now functions from mini.deps, i would fully migrate.",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/138321129?v=4",
        "events_url": "https://api.github.com/users/Coding4Hours/events{/privacy}",
        "followers_url": "https://api.github.com/users/Coding4Hours/followers",
        "following_url": "https://api.github.com/users/Coding4Hours/following{/other_user}",
        "gists_url": "https://api.github.com/users/Coding4Hours/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Coding4Hours",
        "id": 138321129,
        "login": "Coding4Hours",
        "node_id": "U_kgDOCD6c6Q",
        "organizations_url": "https://api.github.com/users/Coding4Hours/orgs",
        "received_events_url": "https://api.github.com/users/Coding4Hours/received_events",
        "repos_url": "https://api.github.com/users/Coding4Hours/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Coding4Hours/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Coding4Hours/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Coding4Hours",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I assume by \"lazy loading\" you mean user-configured entrypoints such as *commands* and *keybindings* which cause a plugin to load. (If that isn't what you mean, then you should have given more specifics.)\n\nLazy-loading is already supported via `autoload/` and `lua/`. Plugin authors can provide \"lazy loading\" by providing a `plugin/<name>.lua` file which defines their commands and keymappings. This file should be small, and should not eagerly `require()` the rest of your plugin. Commands and mappings should do the `require()`. (P.S.: the code required to do this is THE SAME AMOUNT OF CODE needed to configure \"lazy loading\" in your lazy.nvim config, so avoiding `plugin/*.lua` serves *no purpose at all*.)\n\nPutting that burden on *every* user, instead of solving it *once* per plugin, is an *anti-feature*. Plugins should solve that, users should not have to micro-manage this in their configs. I don't buy the argument that plugin authors are incapable of this, yet somehow every user is capable of it. \n\nOf course, users that want to do that are free to install plugin \"managers\" that allow them to, but it's out of scope for Neovim core, so don't bother asking for it.\n\n## Proposal\n\nWhat *is* in scope: lazy.nvim points to a known issue, which is that Nvim doesn't give plugins clear guidance or a mechanism for configuring the plugin without also loading it.\n\n1. [x] Document how to provide `setup{}` (or whatever) without loading other modules in the plugin. https://github.com/neovim/neovim/pull/29073\n2. [ ] Introduce a way to configure plugins without calling `setup{}`. \n    - I think [enhancing `vim.g`](https://github.com/neovim/neovim/issues/12544#issuecomment-1116794687) makes sense, but maybe there's some other idea, like some sort of interface to `plugin/*.lua` (since `require()` does not work with that)",
            "created_at": "2025-08-31T02:56:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3239702727",
            "id": 3239702727,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BGfDH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 23,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 5,
                "laugh": 0,
                "rocket": 6,
                "total_count": 35,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239702727/reactions"
            },
            "updated_at": "2025-09-01T22:56:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239702727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Since what you want is just `later()` from `mini.deps`, it can easily be emulated with an autocmd.\n\nBut I would wonder what is the benefit of that, seems like that `later()` just defers the loading of plugins to right after UI has fully started, which means you don't really save any time with it",
            "created_at": "2025-08-31T05:42:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3239793620",
            "id": 3239793620,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BG1PU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239793620/reactions"
            },
            "updated_at": "2025-08-31T05:42:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239793620",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I assume by \"lazy loading\" you mean user-configured entrypoints such as commands and keybindings which cause a plugin to load. (If that isn't what you mean, then you should have given more specifics.)\n>\n> Lazy-loading is already supported via autoload/ and lua/. Plugin authors can provide \"lazy loading\" by providing a plugin/<name>.lua file which defines their commands and keymappings. This file should be small, and should not eagerly require() the rest of your plugin. Commands and mappings should do the require(). (P.S.: the code required to do this is THE SAME AMOUNT OF CODE that would be required to configured \"lazy loading\" in your lazy.nvim config, so avoiding plugin/*.lua serves no purpose at all.)\n>\n> Putting that burden on every user, instead of solving it once per plugin, is an anti-feature. Plugins should solve that, users should not have to micro-manage this in their configs. I don't buy the argument that plugin authors are incapable of this, yet somehow every user is capable of it.\n\n+1000\n\n> Introduce a way to configure plugins without calling setup{}. \n\nCore already has `vim.*.config()`. As long as this is low weight (which it can be), I think this would be a good convention to standardize around.\n\n---\n\nAfter a long time of being against the idea, I've now come around to the idea of adding something like `vim.lazy_require()` which acts like require but not until the returned table is indexed or called. Whilst not perfect it will provide an _easy_ path for plugins who have lots of eager `requires` at the top of modules.\n\nWe've been using something in core for a long time so I don't see much risk in supporting something for plugins. It does have a few edge cases, but 99% works as you would expect.\n\nPast work: https://github.com/tjdevries/lazy-require.nvim",
            "created_at": "2025-08-31T09:22:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3239947899",
            "id": 3239947899,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BHa57",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239947899/reactions"
            },
            "updated_at": "2025-08-31T09:41:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239947899",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If neovim could have the later and now functions from mini.deps, i would fully migrate.\n\nMy idea was to wait until basics of `vim.pack` is fully done and then suggest something like `vim.func.now` and (a some variant of)`vim.func.later`. I think they can have use cases outside of lazy loading plugins and *only then* it is a good idea to add them to core. Adding them as part of `vim.pack` indeed feels a bit too much.\n\n> Since what you want is just `later()` from `mini.deps`, it can easily be emulated with an autocmd.\n\n[It](https://github.com/nvim-mini/mini.nvim/blob/ddb70da6ec6aa896cfde87350d1e8dffb57ddef0/lua/mini/deps.lua#L739-L759) [can not be](https://github.com/nvim-mini/mini.nvim/blob/ddb70da6ec6aa896cfde87350d1e8dffb57ddef0/lua/mini/deps.lua#L1550-L1580) done \"easily\"",
            "created_at": "2025-08-31T12:09:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3240097852",
            "id": 3240097852,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BH_g8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240097852/reactions"
            },
            "updated_at": "2025-08-31T12:10:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240097852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The problem with vim.pack is that it has no lazy loading. There are lazy loading libraries such as lz.n but they don't seem to work with cmd lazy loading.\n\nIsn't this quite easy to implement by using `load` in the opts table?\n\n```lua\nvim.pack.add({\n\t\"https://github.com/nvim-lua/plenary.nvim\",\n\t{\n\t\tsrc = \"https://github.com/olimorris/codecompanion.nvim\",\n\t\tdata = {\n\t\t\tcmd = { \"CodeCompanionChat\" },\n\t\t\tconfig = function()\n\t\t\t\trequire(\"codecompanion\").setup()\n\t\t\tend,\n\t\t},\n\t},\n}, {\n\tload = function(p)\n\t\tlocal data = p.spec.data or {}\n\t\tif data.cmd then\n\t\t\tfor _, cmd in ipairs(data.cmd) do\n\t\t\t\tvim.api.nvim_create_user_command(cmd, function()\n\t\t\t\t\tvim.cmd.packadd(p.spec.name)\n\t\t\t\t\tif p.spec.data and p.spec.data.config then\n\t\t\t\t\t\tp.spec.data.config()\n\t\t\t\t\tend\n\t\t\t\t\tvim.cmd(cmd)\n\t\t\t\tend, {})\n\t\t\tend\n\t\telse\n\t\t\tvim.cmd.packadd(p.spec.name)\n\t\tend\n\tend,\n})\n```",
            "created_at": "2025-08-31T12:42:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3240119323",
            "id": 3240119323,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BIEwb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240119323/reactions"
            },
            "updated_at": "2025-08-31T12:42:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240119323",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5160701?v=4",
                "events_url": "https://api.github.com/users/seblyng/events{/privacy}",
                "followers_url": "https://api.github.com/users/seblyng/followers",
                "following_url": "https://api.github.com/users/seblyng/following{/other_user}",
                "gists_url": "https://api.github.com/users/seblyng/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seblyng",
                "id": 5160701,
                "login": "seblyng",
                "node_id": "MDQ6VXNlcjUxNjA3MDE=",
                "organizations_url": "https://api.github.com/users/seblyng/orgs",
                "received_events_url": "https://api.github.com/users/seblyng/received_events",
                "repos_url": "https://api.github.com/users/seblyng/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seblyng/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seblyng/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seblyng",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The problem with vim.pack is that it has no lazy loading. There are lazy loading libraries such as lz.n but they don't seem to work with cmd lazy loading.\n\n> If neovim could have the later and now functions from mini.deps, i would fully migrate.\n\nNow I feel it is unclear what OP actually wants, \"cmd lazy loading\" or \"later and now functions from mini.deps\". I used to use both `lazy.nvim` and `mini.deps` and I think they are totally different things. Now I'm afraid this issue is yet another \"low-effort issue\", like #35306 (from the same author)\n\n> After a long time of being against the idea, I've now come around to the idea of adding something like vim.lazy_require() which acts like require but not until the returned table is indexed or called. Whilst not perfect it will provide an easy path for plugins who have lots of eager requires at the top of modules.\n\nJust for references, I used to have a similar feature request in this discussion https://github.com/neovim/neovim/discussions/33008",
            "created_at": "2025-08-31T14:01:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3240166836",
            "id": 3240166836,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BIQW0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240166836/reactions"
            },
            "updated_at": "2025-08-31T14:05:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240166836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This should probably be a pinned issue, at least until 0.13 release or so, because I'm seeing the request for vim.pack \"lazy loading\" in some form or another continuing to appear. Given your excellent and thorough answer, @justinmk, I think it should be given prominence somewhere in the docs if not pinned here (or maybe both?).",
            "created_at": "2025-08-31T15:42:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3240230830",
            "id": 3240230830,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BIf-u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240230830/reactions"
            },
            "updated_at": "2025-08-31T15:42:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240230830",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7416158?v=4",
                "events_url": "https://api.github.com/users/craigmac/events{/privacy}",
                "followers_url": "https://api.github.com/users/craigmac/followers",
                "following_url": "https://api.github.com/users/craigmac/following{/other_user}",
                "gists_url": "https://api.github.com/users/craigmac/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/craigmac",
                "id": 7416158,
                "login": "craigmac",
                "node_id": "MDQ6VXNlcjc0MTYxNTg=",
                "organizations_url": "https://api.github.com/users/craigmac/orgs",
                "received_events_url": "https://api.github.com/users/craigmac/received_events",
                "repos_url": "https://api.github.com/users/craigmac/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/craigmac/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/craigmac/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/craigmac",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Also, by lazy loading i meant later and now from mini.deps.",
            "created_at": "2025-08-31T15:45:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3240232248",
            "id": 3240232248,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BIgU4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240232248/reactions"
            },
            "updated_at": "2025-08-31T15:45:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240232248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/138321129?v=4",
                "events_url": "https://api.github.com/users/Coding4Hours/events{/privacy}",
                "followers_url": "https://api.github.com/users/Coding4Hours/followers",
                "following_url": "https://api.github.com/users/Coding4Hours/following{/other_user}",
                "gists_url": "https://api.github.com/users/Coding4Hours/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Coding4Hours",
                "id": 138321129,
                "login": "Coding4Hours",
                "node_id": "U_kgDOCD6c6Q",
                "organizations_url": "https://api.github.com/users/Coding4Hours/orgs",
                "received_events_url": "https://api.github.com/users/Coding4Hours/received_events",
                "repos_url": "https://api.github.com/users/Coding4Hours/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Coding4Hours/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Coding4Hours/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Coding4Hours",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Then what does \"cmd lazy loading\" mean? And why is lz.n not enough?",
            "created_at": "2025-08-31T16:36:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3240262273",
            "id": 3240262273,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BInqB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240262273/reactions"
            },
            "updated_at": "2025-08-31T16:36:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240262273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Then what does \"cmd lazy loading\" mean? And why is lz.n not enough?\n\nI meant by cmd lazy loading as in, i run StartupTime and then startuptime loads and it does normal startuptime. and lz.ns cmd lazy loading doesnt work",
            "created_at": "2025-08-31T16:45:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3240267173",
            "id": 3240267173,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BIo2l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240267173/reactions"
            },
            "updated_at": "2025-08-31T16:45:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240267173",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/138321129?v=4",
                "events_url": "https://api.github.com/users/Coding4Hours/events{/privacy}",
                "followers_url": "https://api.github.com/users/Coding4Hours/followers",
                "following_url": "https://api.github.com/users/Coding4Hours/following{/other_user}",
                "gists_url": "https://api.github.com/users/Coding4Hours/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Coding4Hours",
                "id": 138321129,
                "login": "Coding4Hours",
                "node_id": "U_kgDOCD6c6Q",
                "organizations_url": "https://api.github.com/users/Coding4Hours/orgs",
                "received_events_url": "https://api.github.com/users/Coding4Hours/received_events",
                "repos_url": "https://api.github.com/users/Coding4Hours/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Coding4Hours/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Coding4Hours/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Coding4Hours",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "NOOO WAHAT",
            "created_at": "2025-08-31T16:46:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3240267805",
            "id": 3240267805,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BIpAd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240267805/reactions"
            },
            "updated_at": "2025-08-31T16:46:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240267805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/138321129?v=4",
                "events_url": "https://api.github.com/users/Coding4Hours/events{/privacy}",
                "followers_url": "https://api.github.com/users/Coding4Hours/followers",
                "following_url": "https://api.github.com/users/Coding4Hours/following{/other_user}",
                "gists_url": "https://api.github.com/users/Coding4Hours/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Coding4Hours",
                "id": 138321129,
                "login": "Coding4Hours",
                "node_id": "U_kgDOCD6c6Q",
                "organizations_url": "https://api.github.com/users/Coding4Hours/orgs",
                "received_events_url": "https://api.github.com/users/Coding4Hours/received_events",
                "repos_url": "https://api.github.com/users/Coding4Hours/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Coding4Hours/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Coding4Hours/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Coding4Hours",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I meant by cmd lazy loading as in, i run StartupTime and then startuptime loads and it does normal startuptime. and lz.ns cmd lazy loading doesnt work\n\nThen it is not related to \"later from mini.deps\"?",
            "created_at": "2025-09-01T11:46:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3242058674",
            "id": 3242058674,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BPeOy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3242058674/reactions"
            },
            "updated_at": "2025-09-01T11:46:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3242058674",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > I meant by cmd lazy loading as in, i run StartupTime and then startuptime loads and it does normal startuptime. and lz.ns cmd lazy loading doesnt work\n> \n> Then it is not related to \"later from mini.deps\"?\n\ni meant as i found a replacement which waslater and now frmo mini.deps",
            "created_at": "2025-09-01T16:20:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3242862801",
            "id": 3242862801,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BSijR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3242862801/reactions"
            },
            "updated_at": "2025-09-01T16:20:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3242862801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/138321129?v=4",
                "events_url": "https://api.github.com/users/Coding4Hours/events{/privacy}",
                "followers_url": "https://api.github.com/users/Coding4Hours/followers",
                "following_url": "https://api.github.com/users/Coding4Hours/following{/other_user}",
                "gists_url": "https://api.github.com/users/Coding4Hours/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Coding4Hours",
                "id": 138321129,
                "login": "Coding4Hours",
                "node_id": "U_kgDOCD6c6Q",
                "organizations_url": "https://api.github.com/users/Coding4Hours/orgs",
                "received_events_url": "https://api.github.com/users/Coding4Hours/received_events",
                "repos_url": "https://api.github.com/users/Coding4Hours/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Coding4Hours/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Coding4Hours/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Coding4Hours",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "and now i like it better then normal lazy loading",
            "created_at": "2025-09-01T16:20:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3242863116",
            "id": 3242863116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7BSioM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3242863116/reactions"
            },
            "updated_at": "2025-09-01T16:20:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3242863116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/138321129?v=4",
                "events_url": "https://api.github.com/users/Coding4Hours/events{/privacy}",
                "followers_url": "https://api.github.com/users/Coding4Hours/followers",
                "following_url": "https://api.github.com/users/Coding4Hours/following{/other_user}",
                "gists_url": "https://api.github.com/users/Coding4Hours/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Coding4Hours",
                "id": 138321129,
                "login": "Coding4Hours",
                "node_id": "U_kgDOCD6c6Q",
                "organizations_url": "https://api.github.com/users/Coding4Hours/orgs",
                "received_events_url": "https://api.github.com/users/Coding4Hours/received_events",
                "repos_url": "https://api.github.com/users/Coding4Hours/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Coding4Hours/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Coding4Hours/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Coding4Hours",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> lz.ns cmd lazy loading doesnt work\n\n[It does](https://github.com/nvim-neorocks/lz.n/blob/590d1fcae1c34bf7f366de87908aa990a2b555af/spec/lz_n_spec.lua?plain=1#L8). If there's an edge case where it doesn't, feel free to open an issue in the lz.n repository.",
            "created_at": "2025-09-05T06:27:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3257219613",
            "id": 3257219613,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7CJTod",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3257219613/reactions"
            },
            "updated_at": "2025-09-05T06:27:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3257219613",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Introduce a way to configure plugins without calling setup{}.\n\nWhat is the problem with simply putting the configuration table in its own separate module, so that it can be `require`d directly, without overhead (instead of redundant wrapper functions or other custom interfaces)?\n\n```lua\nrequire('plugin').setup {\n  key1 = val1,\n  key2 = val2,\n}\n```\n\nvs\n\n```lua\ndo\n  local o = require('myplugin.opts')\n  o.key1 = val1\n  o.key2 = val2\nend\n```\n\n> I think https://github.com/neovim/neovim/issues/12544#issuecomment-1116794687 makes sense, but maybe there's some other idea, like some sort of interface to plugin/*.lua (since require() does not work with that)\n\nWhat problems are those other approaches supposed to solve?",
            "created_at": "2025-09-06T13:33:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3262175136",
            "id": 3262175136,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7CcNeg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3262175136/reactions"
            },
            "updated_at": "2025-09-06T17:43:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3262175136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17800844?v=4",
                "events_url": "https://api.github.com/users/ggandor/events{/privacy}",
                "followers_url": "https://api.github.com/users/ggandor/followers",
                "following_url": "https://api.github.com/users/ggandor/following{/other_user}",
                "gists_url": "https://api.github.com/users/ggandor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ggandor",
                "id": 17800844,
                "login": "ggandor",
                "node_id": "MDQ6VXNlcjE3ODAwODQ0",
                "organizations_url": "https://api.github.com/users/ggandor/orgs",
                "received_events_url": "https://api.github.com/users/ggandor/received_events",
                "repos_url": "https://api.github.com/users/ggandor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ggandor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ggandor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ggandor",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ggandor  `require('myplugin.config')` (mentioned in https://github.com/neovim/neovim/issues/35562#issuecomment-3239947899 ) is a decent approach, which \"stops the bleeding\". We can mention it at `:help lua-plugin`.\n\n> > I think [#12544 (comment)](https://github.com/neovim/neovim/issues/12544#issuecomment-1116794687) makes sense, but maybe there's some other idea, like some sort of interface to plugin/*.lua (since require() does not work with that)\n> \n> What problems are those other approaches supposed to solve?\n\nHaven't deeply thought about it, haven't ruled it out.",
            "created_at": "2025-09-06T17:41:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/35562#issuecomment-3262760334",
            "id": 3262760334,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35562",
            "node_id": "IC_kwDOAPphoM7CecWO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3262760334/reactions"
            },
            "updated_at": "2025-09-06T17:42:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3262760334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 17,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35562/comments",
    "created_at": "2025-08-31T02:23:22Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35562/events",
    "html_url": "https://github.com/neovim/neovim/issues/35562",
    "id": 3369686388,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "startup, shutdown, attach, detach",
            "id": 870629450,
            "name": "lifecycle",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lifecycle"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        },
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35562/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7I2VV0",
    "number": 35562,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35562/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35562/timeline",
    "title": "vim.pack lazy loading",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-06T17:43:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35562",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/138321129?v=4",
        "events_url": "https://api.github.com/users/Coding4Hours/events{/privacy}",
        "followers_url": "https://api.github.com/users/Coding4Hours/followers",
        "following_url": "https://api.github.com/users/Coding4Hours/following{/other_user}",
        "gists_url": "https://api.github.com/users/Coding4Hours/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Coding4Hours",
        "id": 138321129,
        "login": "Coding4Hours",
        "node_id": "U_kgDOCD6c6Q",
        "organizations_url": "https://api.github.com/users/Coding4Hours/orgs",
        "received_events_url": "https://api.github.com/users/Coding4Hours/received_events",
        "repos_url": "https://api.github.com/users/Coding4Hours/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Coding4Hours/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Coding4Hours/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Coding4Hours",
        "user_view_type": "public"
    }
}