{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nDuring packaging for MacPorts (https://github.com/macports/macports-ports/pull/24120#discussion_r1613998031), the question came up why the cmake build system (under `cmake.deps/`) is strictly separate from the toplevel CMakeLists.txt, requiring either multiple manual steps or using the additional wrapper Makefile. This has become especially cumbersome since as of v0.10.0, neovim expects multiple builtin tree-sitter parsers to be available at `<prefix>/lib/nvim/parser` or otherwise will throw runtime errors on common tasks like opening `:help`.\r\n\r\nEven worse is the fact that the toplevel cmake silently does or does not use the parsers in `.deps` depending on whether they were built manually before, so forgetting to build them can easily go through unnoticed, which is what initially happened in MacPorts. Using the wrapper Makefile is not a good option there.\r\n\r\nCMake has extensive builtin functionality for embedding other cmake roots, from e.g. a simple `add_subdirectory` to ExternalProject/FetchContent. Having `cmake.deps/` as a standalone-buildable project makes sense because you can point multiple neovim builds to it. But I was not able to find reasons in the codebase or past issues why there had to be a wrapper-Makefile around the toplevel cmake for tasks that cmake itself should be able to handle just fine.\r\nSo my question is: Was this a deliberate design decision and what was the reasoning behind it?\r\n\r\n### Expected behavior\r\n\r\nI could imagine a build system like this:\r\n* `cmake.deps/` stays mostly as-is: A standalone project for bundled dependencies\r\n* The toplevel CMakeLists.txt can (using options) be manually pointed to a `.deps` folder, told to not use bundled dependencies at all, or it will embed `cmake.deps/` itself using something like ExternalProject and build and manage a specified subset of dependencies in its own build dir. It should fail the build if building any of the dependencies fails.\r\n* Makefile can be removed, or at least stripped down a lot to only go through the toplevel cmake.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This is basically impossible without nasty hacks. An attempt of this was made in https://github.com/neovim/neovim/pull/22054 and the problem is that `FetchContent` only works with projects who use cmake and we have many dependencies who don't use cmake. We can't use ExternalProject either as that is run during build time instead of configure time which will make the main build error as dependencies (that now don't exist) need to be resolved in configure time. It's a nasty situation cmake has explicitly expressed they will not try to fix as \"cmake is not a package manager\". A workaround for this is to fork all our dependencies that don't use cmake and add a top level `Cmakelists.txt` file or something, but it didn't seem popular when I brought this up. The best hope I can give is that we may change the build system in the future: https://github.com/neovim/neovim/pull/28344.\r\n\r\nWith that background out of the way: I don't quite understand why this is a problem. Distros are usually expected to package everything themselves and should able to just run the main build since all dependencies are already available. I don't quite get what blocks you from just using the main file (assuming you've already packaged all dependencies).",
            "created_at": "2024-05-27T15:24:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2133693543",
            "id": 2133693543,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_LZRn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133693543/reactions"
            },
            "updated_at": "2024-05-27T15:24:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133693543",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you for linking the pr, this is what I was looking for. Good to see this was already approached.\r\n\r\n> We can't use ExternalProject either as that is run during build time instead of configure time which will make the main build error as dependencies (that now don't exist) need to be resolved in configure time.\r\n\r\nThis can probably be worked around by predicting the exact paths of installed files by the external project and putting dependencies on the target created by `ExternalProject_Add` instead of using a find module. But I understand this may be considered hacky and it also adds another code path to resolve each dependency.\r\n\r\n> With that background out of the way: I don't quite understand why this is a problem. Distros are usually expected to package everything themselves and should able to just run the main build since all dependencies are already available. I don't quite get what blocks you from just using the main file (assuming you've already packaged all dependencies).\r\n\r\nThis is the case for MacPorts, except for the tree-sitter parsers, which are expected to be installed in a neovim-specific directory. In that sense:\r\n* Should those parsers really be considered an external dependency or rather a part of neovim itself?\r\n* Could generic packages of those parsers, like https://ports.macports.org/port/tree-sitter-c/details/ be used reliably with neovim or is the ABI/API too unstable so neovim needs the exact version from its own build system?\r\n* Or, since they are already being built with a custom injected CMakeLists.txt, would it be reasonable to only integrate those into the main cmake somehow?",
            "created_at": "2024-05-27T19:11:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2133953242",
            "id": 2133953242,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_MYra",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133953242/reactions"
            },
            "updated_at": "2024-05-27T19:11:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133953242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1460997?v=4",
                "events_url": "https://api.github.com/users/thestr4ng3r/events{/privacy}",
                "followers_url": "https://api.github.com/users/thestr4ng3r/followers",
                "following_url": "https://api.github.com/users/thestr4ng3r/following{/other_user}",
                "gists_url": "https://api.github.com/users/thestr4ng3r/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thestr4ng3r",
                "id": 1460997,
                "login": "thestr4ng3r",
                "node_id": "MDQ6VXNlcjE0NjA5OTc=",
                "organizations_url": "https://api.github.com/users/thestr4ng3r/orgs",
                "received_events_url": "https://api.github.com/users/thestr4ng3r/received_events",
                "repos_url": "https://api.github.com/users/thestr4ng3r/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thestr4ng3r/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thestr4ng3r/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thestr4ng3r",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thank you for asking these questions. Yes, these parsers should be considered part of Neovim, just like the other runtime files, and you cannot rely on \"semantic version\" stability (the exact same version should work, but no guarantees -- and there is a virtual guarantee that no two consumers (Helix, Emacs, Neovim) will depend on the same version. ",
            "created_at": "2024-05-27T19:42:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2133979741",
            "id": 2133979741,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_MfJd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133979741/reactions"
            },
            "updated_at": "2024-05-27T19:42:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133979741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This can probably be worked around by predicting the exact paths of installed files by the external project and putting dependencies on the target created by ExternalProject_Add instead of using a find module.\r\n\r\nWe don't use a find module for these because they are runtime dependencies. It is not cmake that locates these but neovim itself. Neovim relies on these being in the correct location during runtime.\r\n\r\n> Should those parsers really be considered an external dependency or rather a part of neovim itself?\r\n\r\nI don't know if this is a philosophical question or a practical one. They are dependencies because we don't maintain them. If you mean that we should *treat* them as they are part of neovim (like with runtime files) then that is a different question. It's probably not a popular suggestion as other distros will throw a hissy fit, although I don't remember exactly why. They don't like this though.\r\n\r\n> Could generic packages of those parsers, like [ports.macports.org/port/tree-sitter-c/details](https://ports.macports.org/port/tree-sitter-c/details/) be used reliably with neovim or is the ABI/API too unstable so neovim needs the exact version from its own build system?\r\n\r\nExact",
            "created_at": "2024-05-27T19:46:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2133982881",
            "id": 2133982881,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_Mf6h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133982881/reactions"
            },
            "updated_at": "2024-05-27T19:47:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133982881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Or, since they are already being built with a custom injected CMakeLists.txt, would it be reasonable to only integrate those into the main cmake somehow?\r\n\r\nI'll need to think about this. Normally this would be out of the question for dependencies that have other dependencies relying on them (such as luajit), but it might be possible for dependencies that don't have other dependencies relying on them (such as parsers IIRC). I will need to experiment first to say for sure.",
            "created_at": "2024-05-27T19:52:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2133988581",
            "id": 2133988581,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_MhTl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133988581/reactions"
            },
            "updated_at": "2024-05-27T19:52:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133988581",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I still don't understand why packaging the parsers are not an option. Is it too much work to package the parsers or what's the problem?",
            "created_at": "2024-05-29T10:01:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2137030011",
            "id": 2137030011,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_YH17",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2137030011/reactions"
            },
            "updated_at": "2024-05-29T10:01:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2137030011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I don't know if this is a philosophical question or a practical one. They are dependencies because we don't maintain them. If you mean that we should _treat_ them as they are part of neovim (like with runtime files) then that is a different question. \r\n\r\nThe latter. It seems more logical to me that in the specific case of the parsers, which need to be an exact version and installed in an nvim-specific location, they are part of the core nvim build itself.\r\nIt would also be more convenient if I build manually since right now I am forced to build `cmake.deps/` for the parsers, even if I try to supply all dependencies from my distribution because the parsers can't be reliably used from generic packages.\r\n\r\n> It's probably not a popular suggestion as other distros will throw a hissy fit, although I don't remember exactly why. They don't like this though.\r\n\r\nThey usually want a library to be installed in a single location by a single package, so it can be patched and updated for bug and security fixes without having to dig through all downstream packages that use it and where it might be bundled somehow with an outdated version.\r\nThis is absolutely reasonable for most dependencies, but not so much for the neovim parsers as those have to be an exact version. Of course one could split it into e.g. two packages `neovim` and `neovim-parsers`, but that does not bring much benefit as `neovim-parsers` has no purpose other than being a dependency of `neovim` and can't be updated independently anyway.\r\n\r\n> I still don't understand why packaging the parsers are not an option. Is it too much work to package the parsers or what's the problem?\r\n\r\nIt is an option, but it is not perfect. Basically there are two possibilities:\r\n* Split neovim in two packages as described above. Works, but produces unnecessary overhead.\r\n* Build the parsers as a \"pre-configure\" step, as done here: https://github.com/macports/macports-ports/pull/24120/files#diff-b34df68f0c13c7ef026ff83093a1a67b40081bbae10e7d3ebb413781be46ae53R50-R53 Works too, but requires jumping through hoops to pass all the right arguments as the MacPorts-native cmake integration can't be used for this step.",
            "created_at": "2024-05-29T14:05:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2137502145",
            "id": 2137502145,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_Z7HB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2137502145/reactions"
            },
            "updated_at": "2024-05-29T14:05:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2137502145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1460997?v=4",
                "events_url": "https://api.github.com/users/thestr4ng3r/events{/privacy}",
                "followers_url": "https://api.github.com/users/thestr4ng3r/followers",
                "following_url": "https://api.github.com/users/thestr4ng3r/following{/other_user}",
                "gists_url": "https://api.github.com/users/thestr4ng3r/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thestr4ng3r",
                "id": 1460997,
                "login": "thestr4ng3r",
                "node_id": "MDQ6VXNlcjE0NjA5OTc=",
                "organizations_url": "https://api.github.com/users/thestr4ng3r/orgs",
                "received_events_url": "https://api.github.com/users/thestr4ng3r/received_events",
                "repos_url": "https://api.github.com/users/thestr4ng3r/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thestr4ng3r/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thestr4ng3r/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thestr4ng3r",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I *think* it's possible to move the parsers download/installation to main build. Only question is if it makes sense to do in general and if other distributions have a problem with this (there are others).\r\n\r\n@neovim/automation thoughts?",
            "created_at": "2024-05-29T20:35:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2138220962",
            "id": 2138220962,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_cqmi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2138220962/reactions"
            },
            "updated_at": "2024-05-29T20:35:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2138220962",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Speaking with my Debian hat on, I'm packaging the parsers independently. This is in the (possibly misguided) hope that the tree-sitter story around parser distribution / versioning / interface stability improves in the long run, so there doesn't need to be such strict association between parsers and users of the parsers.\r\n\r\n> It seems more logical to me that in the specific case of the parsers, which need to be an exact version and installed in an nvim-specific location, they are part of the core nvim build itself.\r\n\r\nThe parser packages in Debian aren't shipping pre-built parsers, partly for the reasons you mention here. The \"build\" of the parser packages re-generates the `src/` directory using tree-sitter-cli and then builds a package from that. This package contains the code needed to build the .so as well as a helper Makefile to hide the details of the build itself. The intent is that from the perspective of packages needing parsers, they have a standard mechanism to build any of the packaged parsers.\r\n\r\nThen neovim (and eventually other packages) have build dependencies on, e.g., tree-sitter-c-src, and use the respective helper Makefile to build the version of the parser they need. They then install the resulting shared object where needed (in `&rtp/parser/<foo>.so` for neovim).\r\n\r\nIt's all structured so that, if needed, multiple versions of a parser can be available and each dependent package can build the one it needs, although neovim is currently the only consumer so I haven't actually started providing multiple versions.\r\n\r\nYes, this was a lot of up front work, but it ensures Debian can regenerate all parsers, if needed, and provides a standard interface (which I can simplify going forward) that any package in Debian can use. Adding new parsers is pretty simple. Updating the tree-sitter tooling is much more involved.\r\n\r\n---\r\nAll that being said, I also understand that given the current state of the tree-sitter ecosystem, it's much more attractive to just make Neovim build everything itself. At a minimum, that would require vendoring the parsers, since many distributions don't allow network access during the build.",
            "created_at": "2024-05-29T22:00:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2138330832",
            "id": 2138330832,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_dFbQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 3,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2138330832/reactions"
            },
            "updated_at": "2024-05-29T22:00:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2138330832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We can't vendor parsers atm as they'd be system dependent. If vendoring parsers is the approach we wanna take then we need wasmtime up and running first.",
            "created_at": "2024-05-30T14:19:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2139666109",
            "id": 2139666109,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_iLa9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2139666109/reactions"
            },
            "updated_at": "2024-05-30T14:19:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2139666109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> We can't vendor parsers atm as they'd be system dependent. If vendoring parsers is the approach we wanna take then we need wasmtime up and running first.\r\n\r\nIf I understand the initial request right, this would be about vendoring the parser sources, not the binaries. Only to avoid the download.\r\nI could imagine this to happen as part of an automated build process of a release source tarball for neovim that the parser sources are also bundled in, and the build system takes these pre-cached sources if available and skips the download.",
            "created_at": "2024-05-30T16:29:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2140169341",
            "id": 2140169341,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_kGR9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2140169341/reactions"
            },
            "updated_at": "2024-05-30T16:29:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2140169341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1460997?v=4",
                "events_url": "https://api.github.com/users/thestr4ng3r/events{/privacy}",
                "followers_url": "https://api.github.com/users/thestr4ng3r/followers",
                "following_url": "https://api.github.com/users/thestr4ng3r/following{/other_user}",
                "gists_url": "https://api.github.com/users/thestr4ng3r/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thestr4ng3r",
                "id": 1460997,
                "login": "thestr4ng3r",
                "node_id": "MDQ6VXNlcjE0NjA5OTc=",
                "organizations_url": "https://api.github.com/users/thestr4ng3r/orgs",
                "received_events_url": "https://api.github.com/users/thestr4ng3r/received_events",
                "repos_url": "https://api.github.com/users/thestr4ng3r/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thestr4ng3r/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thestr4ng3r/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thestr4ng3r",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If I understand the initial request right, this would be about vendoring the parser sources, not the binaries. Only to avoid the download.\r\n\r\nHave you seen the size of some of these parsers? We do _not_ want them in our source tree and blowing up the repo.",
            "created_at": "2024-05-30T16:32:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2140178833",
            "id": 2140178833,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_kImR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2140178833/reactions"
            },
            "updated_at": "2024-05-30T16:32:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2140178833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Have you seen the size of some of these parsers? We do _not_ want them in our source tree and blowing up the repo.\r\n\r\nAbsolutely. This is why I suggested to put them into release tarballs only, not into the repo. If you have the tarball and want to build it, you would then need to download them sooner or later anyway so there it makes no difference anymore.",
            "created_at": "2024-05-30T16:35:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2140190138",
            "id": 2140190138,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_kLW6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2140190138/reactions"
            },
            "updated_at": "2024-05-30T16:35:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2140190138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1460997?v=4",
                "events_url": "https://api.github.com/users/thestr4ng3r/events{/privacy}",
                "followers_url": "https://api.github.com/users/thestr4ng3r/followers",
                "following_url": "https://api.github.com/users/thestr4ng3r/following{/other_user}",
                "gists_url": "https://api.github.com/users/thestr4ng3r/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thestr4ng3r",
                "id": 1460997,
                "login": "thestr4ng3r",
                "node_id": "MDQ6VXNlcjE0NjA5OTc=",
                "organizations_url": "https://api.github.com/users/thestr4ng3r/orgs",
                "received_events_url": "https://api.github.com/users/thestr4ng3r/received_events",
                "repos_url": "https://api.github.com/users/thestr4ng3r/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thestr4ng3r/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thestr4ng3r/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thestr4ng3r",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Our tarballs are (intentionally!) identical to the source tree, though. (Insert xz reference here.)",
            "created_at": "2024-05-30T16:36:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2140194368",
            "id": 2140194368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_kMZA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2140194368/reactions"
            },
            "updated_at": "2024-05-30T16:36:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2140194368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Absolutely. This is why I suggested to put them into release tarballs only, not into the repo.\r\n\r\nThen that is not vendoring in neovim(?) lingo, vendoring is including external source code into the neovim repo. Your suggestion is also not any different than just moving the parser installation from the deps cmake build to the main cmake build, which is basically what I proposed. This approach would help macports, but not tryhard distros like debian and fedora as they can't use internet connection.\r\n\r\n@jamessan's suggestion of vendoring parsers would overall help more distros (including macports), but is also more ambitious. That is probably a decent long term goal/workaround.",
            "created_at": "2024-05-30T16:55:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2140255608",
            "id": 2140255608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_kbV4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2140255608/reactions"
            },
            "updated_at": "2024-05-30T16:55:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2140255608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Then that is not vendoring in neovim(?) lingo, vendoring is including external source code into the neovim repo. Your suggestion is also not any different than just moving the parser installation from the deps cmake build to the main cmake build, which is basically what I proposed. This approach would help macports, but not tryhard distros like debian and fedora as they can't use internet connection.\r\n\r\nThere are two suggestions here. We should not mix them:\r\n* Move parser installation from deps cmake to main cmake: helps macports and the overall build process with other dependencies provided by the system\r\n* Include parser sources in neovim release tarballs (not git): helps building without allowing network access",
            "created_at": "2024-05-31T12:46:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2142042976",
            "id": 2142042976,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_rPtg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142042976/reactions"
            },
            "updated_at": "2024-05-31T12:46:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142042976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1460997?v=4",
                "events_url": "https://api.github.com/users/thestr4ng3r/events{/privacy}",
                "followers_url": "https://api.github.com/users/thestr4ng3r/followers",
                "following_url": "https://api.github.com/users/thestr4ng3r/following{/other_user}",
                "gists_url": "https://api.github.com/users/thestr4ng3r/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thestr4ng3r",
                "id": 1460997,
                "login": "thestr4ng3r",
                "node_id": "MDQ6VXNlcjE0NjA5OTc=",
                "organizations_url": "https://api.github.com/users/thestr4ng3r/orgs",
                "received_events_url": "https://api.github.com/users/thestr4ng3r/received_events",
                "repos_url": "https://api.github.com/users/thestr4ng3r/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thestr4ng3r/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thestr4ng3r/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thestr4ng3r",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Include parser sources in neovim release tarballs (not git): helps building without allowing network access\r\n\r\nCompletely out of question. Don't waste your time trying to argue about that.",
            "created_at": "2024-05-31T12:52:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2142064046",
            "id": 2142064046,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_rU2u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142064046/reactions"
            },
            "updated_at": "2024-05-31T12:52:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142064046",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Alright, then I think this entire issue now boils down to just the question whether moving the tree-sitter parser handling from cmake.deps to the main cmake build is possible and sensible.",
            "created_at": "2024-05-31T13:37:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2142183397",
            "id": 2142183397,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM5_rx_l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142183397/reactions"
            },
            "updated_at": "2024-05-31T13:37:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142183397",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1460997?v=4",
                "events_url": "https://api.github.com/users/thestr4ng3r/events{/privacy}",
                "followers_url": "https://api.github.com/users/thestr4ng3r/followers",
                "following_url": "https://api.github.com/users/thestr4ng3r/following{/other_user}",
                "gists_url": "https://api.github.com/users/thestr4ng3r/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thestr4ng3r",
                "id": 1460997,
                "login": "thestr4ng3r",
                "node_id": "MDQ6VXNlcjE0NjA5OTc=",
                "organizations_url": "https://api.github.com/users/thestr4ng3r/orgs",
                "received_events_url": "https://api.github.com/users/thestr4ng3r/received_events",
                "repos_url": "https://api.github.com/users/thestr4ng3r/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thestr4ng3r/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thestr4ng3r/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thestr4ng3r",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "As a PoC, macports now uses this patch to integrate the parsers into the toplevel cmake: https://github.com/macports/macports-ports/blob/77f8d99816f5e9ac3ef7869a772f79f1d26f8f24/editors/neovim/files/embed-parsers-build.diff\r\nThis patch is made to be small and easily adaptable to future neovim versions, so not meant to be upstreamed as-is of course, but at least it shows that it can theoretically work.\r\nAlso, if possible FetchContent + add_subdirectory may be better than the current ExternalProject since this would avoid having to manually pass through cmake args.",
            "created_at": "2024-06-08T06:41:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/29042#issuecomment-2155839374",
            "id": 2155839374,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29042",
            "node_id": "IC_kwDOAPphoM6Af3-O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2155839374/reactions"
            },
            "updated_at": "2024-06-08T06:41:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2155839374",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1460997?v=4",
                "events_url": "https://api.github.com/users/thestr4ng3r/events{/privacy}",
                "followers_url": "https://api.github.com/users/thestr4ng3r/followers",
                "following_url": "https://api.github.com/users/thestr4ng3r/following{/other_user}",
                "gists_url": "https://api.github.com/users/thestr4ng3r/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thestr4ng3r",
                "id": 1460997,
                "login": "thestr4ng3r",
                "node_id": "MDQ6VXNlcjE0NjA5OTc=",
                "organizations_url": "https://api.github.com/users/thestr4ng3r/orgs",
                "received_events_url": "https://api.github.com/users/thestr4ng3r/received_events",
                "repos_url": "https://api.github.com/users/thestr4ng3r/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thestr4ng3r/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thestr4ng3r/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thestr4ng3r",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 19,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29042/comments",
    "created_at": "2024-05-27T14:29:56Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29042/events",
    "html_url": "https://github.com/neovim/neovim/issues/29042",
    "id": 2319296490,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29042/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6KPafq",
    "number": 29042,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29042/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29042/timeline",
    "title": "Integrate tree-sitter parsers into the toplevel build system",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:58:12Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29042",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1460997?v=4",
        "events_url": "https://api.github.com/users/thestr4ng3r/events{/privacy}",
        "followers_url": "https://api.github.com/users/thestr4ng3r/followers",
        "following_url": "https://api.github.com/users/thestr4ng3r/following{/other_user}",
        "gists_url": "https://api.github.com/users/thestr4ng3r/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/thestr4ng3r",
        "id": 1460997,
        "login": "thestr4ng3r",
        "node_id": "MDQ6VXNlcjE0NjA5OTc=",
        "organizations_url": "https://api.github.com/users/thestr4ng3r/orgs",
        "received_events_url": "https://api.github.com/users/thestr4ng3r/received_events",
        "repos_url": "https://api.github.com/users/thestr4ng3r/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/thestr4ng3r/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thestr4ng3r/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/thestr4ng3r",
        "user_view_type": "public"
    }
}