{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI haven't found any issues that I think are quite the same as this, although there have been some related requests about overriding highlights/patterns, but please point me to them if someone's already asked for this!\n\nProgramatically modifying tree-sitter queries is [technically possible](https://github.com/nvim-treesitter/nvim-treesitter/issues/3058#issuecomment-1166335036) today with `vim.treesitter.query.set()` and unparsed query text, but this is not ideal for slight tweaks on existing queries (or indeed for creating new queries dynamically... I guess you could generate the query string?). It seems convenient / preferable to simply get an existing query and extend/append to it for more fine-grained changes.\n\nSome possible use cases for this kind of API:\n\n1. Disable/override a single pattern from an existing builtin/upstream query, without copy-pasting the entire query just to make small changes\n    - Can \"replace\" a pattern by disabling it and adding a new `; extends` query\n    - Prevents manually updating from the upstream with another copy/paste\n1. Add a custom predicate/directive to an existing query (generalization of 1)    - Allows implementing things like buffer-local variables to toggle certain patterns\n    - Custom predicates can add metadata for use with `Inspect!`\n\nOne downside of this is that capture/pattern IDs (indices) would become a part of the external API; I believe right now they're mainly used internally by neovim for highlights etc; although users can read already them, I don't know if they can actually use them for anything? This seems to already be a stable part of the tree-sitter API though, so I don't know if there's really any reason for concern here.\n\nSome others similar feature requests have been made/attempted previously: #23373, #26303, #3058, #1346, #17802 so I think there is generally a desire for some form of this, and even if this proposal isn't the final form I think it would provide the building blocks for a more convenient feature.\n\n### Expected behavior\n\nI propose making two main changes that could be useful for supporting this kind of override use case:\n\n1. Expose [the treesitter APIs](https://github.com/tree-sitter/tree-sitter/blob/master/lib/include/tree_sitter/api.h#L1019-L1034) to disable captures/queries, something like:\n    - `TSQuery:disable_capture(capture_name)`\n    - `TSQuery:disable_pattern(pattern_idx)`\n\n   The caveat of these APIs is they appear to be irreversible, so they wouldn't be as generally useful, but I think there is still utility for e.g. overriding a single pattern or disabling a particular highlight.\n\n2. Support modifying queries in Lua and registering the modified query, for example:\n```lua\nlocal q = vim.treesitter.query.get('lua', 'highlights')\n-- Do some modifications to q, e.g. inserting new predicates\ntable.insert(q.info.patterns[1], {'eq?', 0, 'foo'})\n-- Tell nvim to use the modified query. This could alternately be its own separate function:\nvim.treesitter.query.set('lua', 'highlights', q)\n```\n\n\nI have written a proof-of-concept that shows both of these options generally work, but I wanted to open an issue first to see if this kind of proposal makes sense and would be accepted. If so I am happy to open a PR implementing this change!",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think we should start with the first approach and see how far this gets us.",
            "created_at": "2025-03-05T08:37:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/32729#issuecomment-2700226950",
            "id": 2700226950,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32729",
            "node_id": "IC_kwDOAPphoM6g8jGG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2700226950/reactions"
            },
            "updated_at": "2025-03-05T08:37:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2700226950",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I think we should start with the first approach and see how far this gets us.\n\nI can open a PR for this hopefully soon.\n\nThe main downside I see with having _only_ those APIs is that it is kinda hard to identify patterns (captures are easier). Maybe it would make sense to add pattern indices to the output of `get_captures_at_pos` so that users could identify a given pattern more obviously...",
            "created_at": "2025-03-08T17:03:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/32729#issuecomment-2708396869",
            "id": 2708396869,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32729",
            "node_id": "IC_kwDOAPphoM6hbttF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2708396869/reactions"
            },
            "updated_at": "2025-03-08T17:03:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2708396869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11131775?v=4",
                "events_url": "https://api.github.com/users/ian-h-chamberlain/events{/privacy}",
                "followers_url": "https://api.github.com/users/ian-h-chamberlain/followers",
                "following_url": "https://api.github.com/users/ian-h-chamberlain/following{/other_user}",
                "gists_url": "https://api.github.com/users/ian-h-chamberlain/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ian-h-chamberlain",
                "id": 11131775,
                "login": "ian-h-chamberlain",
                "node_id": "MDQ6VXNlcjExMTMxNzc1",
                "organizations_url": "https://api.github.com/users/ian-h-chamberlain/orgs",
                "received_events_url": "https://api.github.com/users/ian-h-chamberlain/received_events",
                "repos_url": "https://api.github.com/users/ian-h-chamberlain/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ian-h-chamberlain/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ian-h-chamberlain/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ian-h-chamberlain",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32729/comments",
    "created_at": "2025-03-05T01:28:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32729/events",
    "html_url": "https://github.com/neovim/neovim/issues/32729",
    "id": 2895850401,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32729/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6smyuh",
    "number": 32729,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32729/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32729/timeline",
    "title": "treesitter API: programatically modifying parsed queries",
    "updated_at": "2025-03-08T17:03:35Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32729",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11131775?v=4",
        "events_url": "https://api.github.com/users/ian-h-chamberlain/events{/privacy}",
        "followers_url": "https://api.github.com/users/ian-h-chamberlain/followers",
        "following_url": "https://api.github.com/users/ian-h-chamberlain/following{/other_user}",
        "gists_url": "https://api.github.com/users/ian-h-chamberlain/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ian-h-chamberlain",
        "id": 11131775,
        "login": "ian-h-chamberlain",
        "node_id": "MDQ6VXNlcjExMTMxNzc1",
        "organizations_url": "https://api.github.com/users/ian-h-chamberlain/orgs",
        "received_events_url": "https://api.github.com/users/ian-h-chamberlain/received_events",
        "repos_url": "https://api.github.com/users/ian-h-chamberlain/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ian-h-chamberlain/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ian-h-chamberlain/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ian-h-chamberlain",
        "user_view_type": "public"
    }
}