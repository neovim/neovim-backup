{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nOriginally reported here - https://github.com/neovim/nvim-lspconfig/issues/3081\n\nNot sure if issue or enhancement, the problem comes from the fact that in deep extend we usually have a source and destination as specified by the first parameter (or some people may consider all paramters source, and the result the destination), however by default if the property is not present in the destination it is copied by reference. Which works as as documented, however if we are using a generic template table for the defaults, as in the example from lspconfig issue, which is used to extend other configs, we have to deep copy the template config when doing every deep extend - `local extend1 = vim.tbl_deep_extend('keep', emtpy1, vim.fn.deepcopy(default_config))`. **This is not just an inconvenience, but rather can cause hidden, or hard to track bugs (ref original issue). The input paramters become inadvertently mutable**\n\n### Steps to reproduce\n\n```lua\nlocal default_config = {\n  settings = { \"init\" },\n  init_options = vim.empty_dict(),\n  handlers = {},\n}\n\nlocal empty1 = {\n    root_dir = \"e1\",\n    cmd = { \"test1\" }\n}\n\nlocal empty2 = {\n    root_dir = \"e2\",\n    cmd = { \"test1\" }\n}\n\nlocal extend1 = vim.tbl_deep_extend('keep', empty1, default_config)\nextend1.init_options.from_extend_one = \"extend1\"\ntable.insert(extend1.settings, \"one\")\nextend1.handlers.from_extend_one = \"extend1\"\nvim.print(extend1)\n\nlocal extend2 = vim.tbl_deep_extend('keep', empty2, default_config)\nextend2.init_options.from_extend_two = \"extend2\"\ntable.insert(extend2.settings, \"two\")\nextend2.handlers.from_extend_two = \"extend2\"\nvim.print(extend2)\n```\n\n### Expected behavior\n\nExtending should take into account which is the destination table that is being extended. And maybe provide us with a way to specify that every other source table properties should be deep copied into the destination table, when not present (or something along those lines). Or even produce a complete deep copy of the original parameters. It may be hard to define well, so open to suggestions.\n\nCurrently as we know deep extends only creates a merged copy table of the source + destination if the properties are present in both, however copies by reference when the property is not present. This is causing the issue, it can cause confusion, also considering the name of the function. \n\nImagine the usual nvim plugin design, which has an internal defaults config table for its config, and does call deep_extend(user_config, plugin_config) in the .setup function, usually those are called at startup with some user provided config which overrides some, and does not fully replace the defaults, if the user wants to call the plugin .setup a second time to re-configure / change the plugin behavior at runtime under some conditions, the initial call to the .setup would/may interfere with any subsequent/new call and the .setup will not start from a \"fresh\" state, because, there is going to be an inherent state being preserved silently in the internal default plugin table config - plugin_config, used in the deep_extend\n\nNew behavior values could be added like - \"force_copy\" \"keep_copy\", but that is up to debate, i  have no particular preference.\n\n\n### Nvim version (nvim -v)\n\nmaster\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nUbuntu\n\n### Terminal name/version\n\nalacritty\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\ngithub",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> New behavior values could be added like - \"force_copy\" \"keep_copy\",\n\nhttps://github.com/neovim/neovim/pull/33819 ?\n\nrelated: https://github.com/neovim/neovim/pull/15124",
            "created_at": "2025-05-05T18:25:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/33859#issuecomment-2851945557",
            "id": 2851945557,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33859",
            "node_id": "IC_kwDOAPphoM6p_TxV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2851945557/reactions"
            },
            "updated_at": "2025-05-05T18:25:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2851945557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33859/comments",
    "created_at": "2025-05-05T13:10:33Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33859/events",
    "html_url": "https://github.com/neovim/neovim/issues/33859",
    "id": 3039632070,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33859/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM61LRrG",
    "number": 33859,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33859/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33859/timeline",
    "title": "tbl_deep_extend behavior when extending between tables",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-05T18:25:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33859",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
        "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
        "followers_url": "https://api.github.com/users/asmodeus812/followers",
        "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
        "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/asmodeus812",
        "id": 15955811,
        "login": "asmodeus812",
        "node_id": "MDQ6VXNlcjE1OTU1ODEx",
        "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
        "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
        "repos_url": "https://api.github.com/users/asmodeus812/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/asmodeus812",
        "user_view_type": "public"
    }
}