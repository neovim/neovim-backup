{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Neovim version (nvim -v)\r\n\r\nneovim-0.9.0~ubuntu1+git202212110018-224473546-333b5866f (from unstable ppa build). Also reproduced it after compiling in current 0.9.0 master a6b05cb75d330dd995d3ad21ee08bb0a2cfcae74\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nNo, vim 8.2\r\n\r\n### Operating system/version\r\n\r\nUbuntu 22.04.1\r\n\r\n### Terminal name/version\r\n\r\nxterm(372)\r\n\r\n### $TERM environment variable\r\n\r\nxterm, happens identically in xterm-256color\r\n\r\n### Installation\r\n\r\napt\r\n\r\n### How to reproduce the issue\r\n\r\n1. nvim --clean on xterm\r\n2. do `i<C-r>=getchar()<CR>` to insert directly from getchar()\r\n3. input your curly brace (in my case, with shift+square bracket)\r\n\r\n\r\n### Expected behavior\r\n\r\nThe ascii code for the curly brace is input.\r\n\r\n### Actual behavior\r\n\r\nDoing this gets me `ü\u0002}` (or the opposite curly brace in the last position, if that was what was entered). If I save the file as plaintext, the hexdump looks like:  80c2 bcc3 7d02 000a. Also happens with the square brackets.\r\n\r\nAlternatively, if you assign the getchar value to a variable and then echo it, it gets shown as something like `<80><fc>^B}`.\r\n\r\nAppears to only happen on xterm. Doing the same thing on gnome-terminal, xfce4-terminal and urxvt prints out the proper ascii value for the curly brace. I found out about it because it breaks the vim-surround plugin. ",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Also happens with the square brackets.\r\n\r\nWhat keyboard layout are you using?",
            "created_at": "2022-12-13T12:37:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/21399#issuecomment-1348464394",
            "id": 1348464394,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21399",
            "node_id": "IC_kwDOAPphoM5QX-8K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1348464394/reactions"
            },
            "updated_at": "2022-12-13T12:37:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1348464394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > Also happens with the square brackets.\r\n> \r\n> What keyboard layout are you using?\r\n\r\nMy bad, I got confused since I changed some stuff just recently. But maybe this will be useful information for debugging.\r\nI used to have my keyboard layout on the standard most common qwerty US layout (from setxkbmap us), and in that case, the square bracket works normally. In this scenario, out of all the shift-modified number keys, `@`, `}`, `{` and `^` bug out in this way.\r\n\r\nHowever, I recently switched the position of my parens and square brackets using `xmodmap` since I find the shift modifier annoying to reach for and parens show up more often. After running the following:\r\n```\r\nxmodmap -e \"keycode 35 = parenright braceright\"\r\nxmodmap -e \"keycode 34 = parenleft braceleft\"\r\nxmodmap -e \"keycode 18 = 9 bracketleft\"\r\nxmodmap -e \"keycode 19 = 0 bracketright\"\r\n```\r\n\r\nthen in addition to all the previous ones, the square brackets also break. Other than this change, layout is still standard en_us qwerty.",
            "created_at": "2022-12-14T01:58:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/21399#issuecomment-1350240842",
            "id": 1350240842,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21399",
            "node_id": "IC_kwDOAPphoM5QewpK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1350240842/reactions"
            },
            "updated_at": "2022-12-14T02:00:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1350240842",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/30383615?v=4",
                "events_url": "https://api.github.com/users/reach-satori/events{/privacy}",
                "followers_url": "https://api.github.com/users/reach-satori/followers",
                "following_url": "https://api.github.com/users/reach-satori/following{/other_user}",
                "gists_url": "https://api.github.com/users/reach-satori/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/reach-satori",
                "id": 30383615,
                "login": "reach-satori",
                "node_id": "MDQ6VXNlcjMwMzgzNjE1",
                "organizations_url": "https://api.github.com/users/reach-satori/orgs",
                "received_events_url": "https://api.github.com/users/reach-satori/received_events",
                "repos_url": "https://api.github.com/users/reach-satori/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/reach-satori/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/reach-satori/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/reach-satori",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I am also having similar issues on xterm 379 with the braces, specifically with the autosurround plugin.\r\n\r\nWhen in nvim and running `i<C-r>=getchar()<CR>` + `{` I get the output `<t_ü>\u0002{` which visually presents as `<t_ü>^B{`\r\n\r\nWhen i echo'd the value, I got a similar result of `<80><fc>\\2{`\r\n\r\nMy braces don't flip; however it's still not the ascii that gets put out from other terminals.",
            "created_at": "2023-03-10T07:32:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/21399#issuecomment-1463389897",
            "id": 1463389897,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21399",
            "node_id": "IC_kwDOAPphoM5XOY7J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1463389897/reactions"
            },
            "updated_at": "2023-03-10T07:42:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1463389897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/99044751?v=4",
                "events_url": "https://api.github.com/users/Xemptuous/events{/privacy}",
                "followers_url": "https://api.github.com/users/Xemptuous/followers",
                "following_url": "https://api.github.com/users/Xemptuous/following{/other_user}",
                "gists_url": "https://api.github.com/users/Xemptuous/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Xemptuous",
                "id": 99044751,
                "login": "Xemptuous",
                "node_id": "U_kgDOBedNjw",
                "organizations_url": "https://api.github.com/users/Xemptuous/orgs",
                "received_events_url": "https://api.github.com/users/Xemptuous/received_events",
                "repos_url": "https://api.github.com/users/Xemptuous/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Xemptuous/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Xemptuous/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Xemptuous",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I can reproduce same issue in xterm 379 and on older xterm 356 on Fedora 37 .\r\n\r\n NVIM is v0.10.0-dev-317+g30a0299bc\r\n\r\n`getchar()` is returning garbage for curly braces and some other characters.\r\n\r\nI cannot reproduce it in alacritty, kitty,  libvte based terminals and st term.\r\n\r\nAlso I cannot reproduce it in xterm when running screen or tmux.\r\n\r\nI cannot reproduce it in vim.\r\n\r\nBesides the fact that getchar is returning garbage, probably related is that when using `i_CTRL-K` or `i_CTRL-V` and pressing `}` you will see `<S-}>`.\r\n\r\nSome other characters are causing problem also: \r\n- `i_CTRL-V~` will return `<S-~>`\r\n- `i_CTRL-V@` will return `<S-@>`\r\n- `i_CTRL-V^` will return `<S-^>`\r\n- `i_CTRL-V_` will return `<S-_>`\r\n- `i_CTRL-V{` will return `<S-{>`\r\n- `i_CTRL-V}` will return `<S-}>`\r\n\r\nThis is all with  `us` keyboard. \r\n\r\nFor example `hr` keyboard would have `}` on `n` with right ALT  and then would curly braces work fine but `_` would not because you also need to press SHIFT.",
            "created_at": "2023-05-13T01:27:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/21399#issuecomment-1546484211",
            "id": 1546484211,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21399",
            "node_id": "IC_kwDOAPphoM5cLXnz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1546484211/reactions"
            },
            "updated_at": "2023-05-13T01:27:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1546484211",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33133?v=4",
                "events_url": "https://api.github.com/users/vsajko/events{/privacy}",
                "followers_url": "https://api.github.com/users/vsajko/followers",
                "following_url": "https://api.github.com/users/vsajko/following{/other_user}",
                "gists_url": "https://api.github.com/users/vsajko/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vsajko",
                "id": 33133,
                "login": "vsajko",
                "node_id": "MDQ6VXNlcjMzMTMz",
                "organizations_url": "https://api.github.com/users/vsajko/orgs",
                "received_events_url": "https://api.github.com/users/vsajko/received_events",
                "repos_url": "https://api.github.com/users/vsajko/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vsajko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vsajko/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vsajko",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It seems that the assumption in this function is not right:\r\n```c\r\nstatic void forward_modified_utf8(TermInput *input, TermKeyKey *key)\r\n{\r\n  size_t len;\r\n  char buf[64];\r\n\r\n  if (key->type == TERMKEY_TYPE_KEYSYM\r\n      && key->code.sym == TERMKEY_SYM_SUSPEND) {\r\n    len = (size_t)snprintf(buf, sizeof(buf), \"<C-Z>\");\r\n  } else if (key->type != TERMKEY_TYPE_UNICODE) {\r\n    len = termkey_strfkey(input->tk, buf, sizeof(buf), key, TERMKEY_FORMAT_VIM);\r\n  } else {\r\n    assert(key->modifiers);\r\n    if (key->code.codepoint >= 0xE000 && key->code.codepoint <= 0xF8FF\r\n        && map_has(KittyKey, cstr_t)(&kitty_key_map,\r\n                                     (KittyKey)key->code.codepoint)) {\r\n      handle_kitty_key_protocol(input, key);\r\n      return;\r\n    }\r\n    // Termkey doesn't include the S- modifier for ASCII characters (e.g.,\r\n    // ctrl-shift-l is <C-L> instead of <C-S-L>.  Vim, on the other hand,\r\n    // treats <C-L> and <C-l> the same, requiring the S- modifier.\r\n    len = termkey_strfkey(input->tk, buf, sizeof(buf), key, TERMKEY_FORMAT_VIM);\r\n    if ((key->modifiers & TERMKEY_KEYMOD_CTRL)\r\n        && !(key->modifiers & TERMKEY_KEYMOD_SHIFT)\r\n        && ASCII_ISUPPER(key->code.codepoint)) {\r\n      assert(len <= 62);\r\n      // Make room for the S-\r\n      memmove(buf + 3, buf + 1, len - 1);\r\n      buf[1] = 'S';\r\n      buf[2] = '-';\r\n      len += 2;\r\n    }\r\n  }\r\n\r\n  tinput_enqueue(input, buf, len);\r\n}\r\n```\r\nlibtermkey can include the S- modifier for ASCII characters.\r\nWe can see `<S-{>` with gdb.\r\n\r\n![image](https://github.com/neovim/neovim/assets/49939375/a8a5aecc-de03-41da-9684-91c8f0e41917)\r\n---\r\n\r\nThen here are some logs of libtermkey when I use neovim and press `{`\r\n```\r\ngetkey(force=0): buffer 1b 5b 32 37 3b 32 3b 31 32 33 7e\r\nDriver terminfo yields TERMKEY_RES_NONE\r\nDriver CSI yields TERMKEY_RES_KEY\r\nUnicode codepoint=U+007b utf8='{' mod=S+00\r\n```\r\nThe xterm send buffer \"1b 5b 32 37 3b 32 3b 31 32 33 7e\" or \"\\033[27;2;123~\" to neovim\r\nneovim push the data to libtermkey using `termkey_push_bytes` which would then be stringified to `<S-{>`\r\n\r\nHowever when using demo program of libtermkey, the xterm would just send a `{`\r\n```\r\ngetkey(force=0): buffer 7b\r\nDriver terminfo yields TERMKEY_RES_NONE\r\nDriver CSI yields TERMKEY_RES_NONE\r\ngetkey_simple(force=0) yields TERMKEY_RES_KEY\r\nUnicode codepoint=U+007b utf8='{' mod=+00\r\n```\r\n\r\nIt looks like neovim sets the terminal emulator into a different state from demo of libtermkey.\r\n",
            "created_at": "2023-06-08T16:24:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/21399#issuecomment-1582987802",
            "id": 1582987802,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21399",
            "node_id": "IC_kwDOAPphoM5eWnoa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1582987802/reactions"
            },
            "updated_at": "2023-06-08T16:24:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1582987802",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49939375?v=4",
                "events_url": "https://api.github.com/users/D0ot/events{/privacy}",
                "followers_url": "https://api.github.com/users/D0ot/followers",
                "following_url": "https://api.github.com/users/D0ot/following{/other_user}",
                "gists_url": "https://api.github.com/users/D0ot/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/D0ot",
                "id": 49939375,
                "login": "D0ot",
                "node_id": "MDQ6VXNlcjQ5OTM5Mzc1",
                "organizations_url": "https://api.github.com/users/D0ot/orgs",
                "received_events_url": "https://api.github.com/users/D0ot/received_events",
                "repos_url": "https://api.github.com/users/D0ot/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/D0ot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/D0ot/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/D0ot",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There is a function in Vim that removes Shift modifier in some hard-coded cases:\r\n```c\r\n/*\r\n * Some keys already have Shift included, pass them as normal keys.\r\n * When Ctrl is also used <C-H> and <C-S-H> are different, but <C-S-{> should\r\n * be <C-{>.  Same for <C-S-}> and <C-S-|>.\r\n * Also for <A-S-a> and <M-S-a>.\r\n * This includes all printable ASCII characters except a-z.\r\n * Digits are included because with AZERTY the Shift key is used to get them.\r\n */\r\n    int\r\nmay_remove_shift_modifier(int modifiers, int key)\r\n{\r\n    if ((modifiers == MOD_MASK_SHIFT\r\n\t\t|| modifiers == (MOD_MASK_SHIFT | MOD_MASK_ALT)\r\n\t\t|| modifiers == (MOD_MASK_SHIFT | MOD_MASK_META))\r\n\t    && ((key >= '!' && key <= '/')\r\n\t\t|| (key >= ':' && key <= 'Z')\r\n\t\t|| vim_isdigit(key)\r\n\t\t|| (key >= '[' && key <= '`')\r\n\t\t|| (key >= '{' && key <= '~')))\r\n\treturn modifiers & ~MOD_MASK_SHIFT;\r\n\r\n    if (modifiers == (MOD_MASK_SHIFT | MOD_MASK_CTRL)\r\n\t\t&& (key == '{' || key == '}' || key == '|'))\r\n\treturn modifiers & ~MOD_MASK_SHIFT;\r\n\r\n    return modifiers;\r\n}\r\n```\r\nWhile adding this function to Nvim and calling it somewhere may fix this issue, I wonder if this can cause other problems (e.g. when using kitty keyboard protocol). It is also not clear what is the best place to call this in Nvim.\r\n\r\nAlso fixing this in XTerm may cause problems in kitty: https://github.com/vim/vim/issues/12518",
            "created_at": "2023-06-11T00:44:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/21399#issuecomment-1585884347",
            "id": 1585884347,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21399",
            "node_id": "IC_kwDOAPphoM5ehqy7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1585884347/reactions"
            },
            "updated_at": "2023-09-07T01:27:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1585884347",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "There is a workaround in xterm configuration that works for me.\r\n```\r\nxterm*translations: #override \\n\\\r\n    Shift <KeyPress>]:string(\"}\") \\n\\\r\n    Shift <KeyPress>[:string(\"{\") \\n\\\r\n    Shift <KeyPress>-:string(\"_\") \\n\\\r\n    Shift <KeyPress>`:string(\"~\") \\n\\\r\n    Shift <KeyPress>2:string(\"@\") \\n\\\r\n    Shift <KeyPress>6:string(\"^\")\r\n```\r\nPut it in `~/.Xresources` and run `xrdb ~/.Xresources`\r\n\r\nThere is a chance that this will break behavior of some programs.",
            "created_at": "2023-09-16T20:41:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/21399#issuecomment-1722311987",
            "id": 1722311987,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21399",
            "node_id": "IC_kwDOAPphoM5mqGUz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722311987/reactions"
            },
            "updated_at": "2023-09-16T20:41:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722311987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33133?v=4",
                "events_url": "https://api.github.com/users/vsajko/events{/privacy}",
                "followers_url": "https://api.github.com/users/vsajko/followers",
                "following_url": "https://api.github.com/users/vsajko/following{/other_user}",
                "gists_url": "https://api.github.com/users/vsajko/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vsajko",
                "id": 33133,
                "login": "vsajko",
                "node_id": "MDQ6VXNlcjMzMTMz",
                "organizations_url": "https://api.github.com/users/vsajko/orgs",
                "received_events_url": "https://api.github.com/users/vsajko/received_events",
                "repos_url": "https://api.github.com/users/vsajko/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vsajko/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vsajko/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vsajko",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/21399/comments",
    "created_at": "2022-12-13T12:19:35Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/21399/events",
    "html_url": "https://github.com/neovim/neovim/issues/21399",
    "id": 1494131132,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is fixed in vim and patch needs to be ported",
            "id": 152276149,
            "name": "has:vim-patch",
            "node_id": "MDU6TGFiZWwxNTIyNzYxNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:vim-patch"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 396626349,
            "name": "input",
            "node_id": "MDU6TGFiZWwzOTY2MjYzNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/input"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/21399/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 286,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 346,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-30T01:06:01Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM5ZDqG8",
    "number": 21399,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/21399/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/21399/timeline",
    "title": "getchar() returns garbage for certain characters in xterm",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-31T02:35:39Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/21399",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/30383615?v=4",
        "events_url": "https://api.github.com/users/reach-satori/events{/privacy}",
        "followers_url": "https://api.github.com/users/reach-satori/followers",
        "following_url": "https://api.github.com/users/reach-satori/following{/other_user}",
        "gists_url": "https://api.github.com/users/reach-satori/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/reach-satori",
        "id": 30383615,
        "login": "reach-satori",
        "node_id": "MDQ6VXNlcjMwMzgzNjE1",
        "organizations_url": "https://api.github.com/users/reach-satori/orgs",
        "received_events_url": "https://api.github.com/users/reach-satori/received_events",
        "repos_url": "https://api.github.com/users/reach-satori/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/reach-satori/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/reach-satori/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/reach-satori",
        "user_view_type": "public"
    }
}