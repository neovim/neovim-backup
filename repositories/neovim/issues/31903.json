{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        }
    ],
    "author_association": "MEMBER",
    "body": "## Problem\n\n`:help api-contract` has been very successful in supporting client stability, which allows Nvim to evolve without requiring clients to move in lockstep. But it has some restrictions that could be removed without breaking clients, while also allow us to evolve the API better.\n\nNote that the primary concern of the api-contract is RUNTIME stability. BUILD-TIME stability is a secondary and almost negligible concern. The goal is to avoid breaking end-user GUIs/apps; the goal is NOT to avoid api client developers from having to adjust when they consume a new version of Nvim.\n\n## Expected behavior\n\n1. [ ] `opts` parameter is always treated as optional. Any **following parameters** are treated as optional.\n    - Old clients that don't send the parameters will continue to work.\n    - Clients written in languages that don't support \"optional parameter\" syntax will need to pass null. This may require (at *build-time*) some languages like java(?) to change a parameter from `int` to `Object`.     \n    - **Bonus:** `vim.api` no longer requires all parameters.\n        - before: `lua =vim.api.nvim_exec2('echo \"foo\"', {})`\n        - after: `lua =vim.api.nvim_exec2('echo \"foo\"')`\n2. [ ] Functions that currently return `void` may be changed to return a value. #34811\n    - Old clients that don't expect the returned value will simply ignore it.\n\n## Implementation\n\n- Update the back-compat test: https://github.com/neovim/neovim/blob/891d2f4029259b2790b9aa3ca71ebca0ff3d7eba/test/functional/api/version_spec.lua#L136\n- Update the generator to treat `opts` arg as optional ([see below](https://github.com/neovim/neovim/issues/31903#issuecomment-2661590353))\n    - Any arguments *following* `opts` are also optional.\n- ~~will likely need a new `FUNC_API_XX` thing, e.g. like `FUNC_API_OPTIONAL(<number>)`~~",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "How are optional values supposed to be represented on the C side? \n- As part of one `Dict opts`\n- As an `Object`\n- With new optional versions of the api types\n- With per-type sentinal values\n\nOr is there another way already used? I'm guessing raw nullable pointers is not ideal. \nAlternatively, are the generated wrappers just supposed to set appropriate default values when they get an object with nil type for something marked with `FUNC_API_OPTIONAL`?",
            "created_at": "2025-02-15T12:19:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/31903#issuecomment-2660896117",
            "id": 2660896117,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31903",
            "node_id": "IC_kwDOAPphoM6emg11",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2660896117/reactions"
            },
            "updated_at": "2025-02-15T14:20:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2660896117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Typed dicts like `Dict(foo)` already allow optional keys (using a separate bitset, no need for in-type sentinels)",
            "created_at": "2025-02-15T15:39:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/31903#issuecomment-2660975344",
            "id": 2660975344,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31903",
            "node_id": "IC_kwDOAPphoM6em0Lw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2660975344/reactions"
            },
            "updated_at": "2025-02-15T15:39:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2660975344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@bfredl are you suggesting that `Dict(opt)` be used as a last parameter, which is then always considered optional? That could be interesting. That would eliminate the need for `FUNC_API_OPTIONAL`, \"nullable pointers \", etc.\n\nFor example, in the following signature, our generator will understand (by convention) that `opts` is optional (and its keys):\n\n    String nvim_buf_get_name(Buffer buffer, Dict(exec_opts) *opts, Error *err)\n\nSo although we wouldn't support \"variadic\" parameters, we can get pretty much what we want by a simple convention.\n\nIf I misunderstood, can you elaborate, perhaps with a code sample :)",
            "created_at": "2025-02-16T19:54:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/31903#issuecomment-2661590353",
            "id": 2661590353,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31903",
            "node_id": "IC_kwDOAPphoM6epKVR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661590353/reactions"
            },
            "updated_at": "2025-02-16T19:54:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661590353",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "actually I was just describing the status-quo, but that can additionally be used to add an extra `Dict(stuff)` to existing methods without `nvim_foo_bar2()` if we \"relax\" the contract as suggested (and I think that is more scalable than progressively adding more and more positional args, if an arg wasn't needed to start with, it probably should be an \"option\" kwarg, although exceptions can of course be made). ",
            "created_at": "2025-02-16T20:06:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/31903#issuecomment-2661594882",
            "id": 2661594882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31903",
            "node_id": "IC_kwDOAPphoM6epLcC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661594882/reactions"
            },
            "updated_at": "2025-02-16T20:06:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661594882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31903/comments",
    "created_at": "2025-01-07T17:09:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31903/events",
    "html_url": "https://github.com/neovim/neovim/issues/31903",
    "id": 2773346671,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "compatibility with Vim or older Neovim",
            "id": 109899712,
            "name": "compatibility",
            "node_id": "MDU6TGFiZWwxMDk4OTk3MTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/compatibility"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "channels, RPC, msgpack",
            "id": 242522707,
            "name": "channels-rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channels-rpc"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31903/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 90,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 70,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-07-07T17:05:04Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM6lTelv",
    "number": 31903,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 9,
        "total_count": 9,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31903/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31903/timeline",
    "title": "API: relax api contract",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-06T13:51:49Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31903",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}