{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\n(correct me if wrong) the current practices for reading all contents/text of a file into memory are:\n\n```lua\nlocal content = vim.fn.readfile(file_path)\nlocal text = table.concat(content, '\\n')\n```\n\nor \n\n```lua\nlocal f = assert(io.open(file_path, 'r'))\nlocal text = f:read('*a')\nf:close()\n```\n\n\n### Expected behavior\n\nAlthough reading a whole file into memory is not always a good idea, it's a common practice and should be ergonomic.\n\n- Add `vim.fs.read()`\n- Mention `io.lines()` in doc for an \"iterator\" alternative.\n\np.s. For reading a file in \"iterable\" fashion, what is the current practice? @lewis6991 how would that look with `vim.async` ?\n\n\n### Alternative\n\nI forgot about `readblob()`. That seems good enough, could document this at `:help vim.fs.read()`.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "If we `read`, we should also `write`:\n```lua\n--- @param filename string\n--- @return string\nfunction read_file(filename)\n  local file = assert(io.open(filename, 'r'))\n  local r = file:read('*a')\n  file:close()\n  return r\nend\n\n--- @param filename string\n--- @param content string\nfunction write_file(filename, content)\n  local file = assert(io.open(filename, 'w'))\n  file:write(content)\n  file:close()\nend\n```",
            "created_at": "2025-09-01T20:01:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/35589#issuecomment-3243182027",
            "id": 3243182027,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35589",
            "node_id": "IC_kwDOAPphoM7BTwfL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243182027/reactions"
            },
            "updated_at": "2025-09-01T20:01:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243182027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You would use `vim.uv.fs_read()` (https://neovim.io/doc/user/luvref.html#uv.fs_read()) which is a callback style function, and then wrap it using `vim.async` to get a colored function.\n\n```lua\n\n--- @async\n--- @param path string\n--- @param chunk_size integer\n--- @return string\nlocal function read_file(path, chunk_size)\n  local fd = vim.uv.fs_open(path)\n  local size = ... -- some chunk size\n  local chunks = {}\n  while true do\n    local err, data = vim.async.await(4, vim.uv.fs_read, fd, chunk_size)\n    if err then\n      error(err)\n    end\n    if data == '' then\n      -- eof\n      break\n    end\n    table.insert(chunks, data)\n  end\n  return table.concat(chunks)\nend\n\nlocal contents = vim.async.run(read_file, 64):wait()\n```",
            "created_at": "2025-09-01T20:02:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/35589#issuecomment-3243183399",
            "id": 3243183399,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35589",
            "node_id": "IC_kwDOAPphoM7BTw0n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243183399/reactions"
            },
            "updated_at": "2025-09-01T20:17:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243183399",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "ok so maybe we want `vim.fs.iter()` (pseudoname) too? \n\nedit: forgot about `io.lines()`",
            "created_at": "2025-09-01T20:17:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/35589#issuecomment-3243201274",
            "id": 3243201274,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35589",
            "node_id": "IC_kwDOAPphoM7BT1L6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243201274/reactions"
            },
            "updated_at": "2025-09-01T21:10:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243201274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ok so maybe we want `vim.fs.iter()` (pseudoname) ? \n\nHmm, gut instinct would be to put anything async under `vim.async.*` since it's buying into that specific library. However if we make `vim.async.await()` block on the main thread (via `vim.wait()`, then `vim.fs.iter()` would not _require_ a `vim.async` context to work, and would even work within coroutines not owned by `vim.async`.\n\nNot fully sure though. Could be risky. I really don't want `vim.async` stuff to proliferate across `vim.*`.",
            "created_at": "2025-09-01T20:24:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/35589#issuecomment-3243208846",
            "id": 3243208846,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35589",
            "node_id": "IC_kwDOAPphoM7BT3CO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243208846/reactions"
            },
            "updated_at": "2025-09-01T20:24:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243208846",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">> ok so maybe we want `vim.fs.iter()` (pseudoname) ?\n>\n> gut instinct would be to put anything async under `vim.async.*`\n\nI mean a regular Lua iterator that returns file chunks.",
            "created_at": "2025-09-01T20:44:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/35589#issuecomment-3243231790",
            "id": 3243231790,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35589",
            "node_id": "IC_kwDOAPphoM7BT8ou",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243231790/reactions"
            },
            "updated_at": "2025-09-01T20:45:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243231790",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That wouldn't be the same as the function I posted since it wouldn't ever wait on the event loop. It would only need to use the sync version `uv.fs_read`, but you could just as well use `io.read(size)`. Also the stdlib already provides a `io.lines()` iterator.",
            "created_at": "2025-09-01T21:08:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/35589#issuecomment-3243257055",
            "id": 3243257055,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35589",
            "node_id": "IC_kwDOAPphoM7BUCzf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243257055/reactions"
            },
            "updated_at": "2025-09-01T21:08:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243257055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> it wouldn't ever wait on the event loop.\n\nit could call `vim.wait(0)` to yield?\n\ni forgot about `io.lines()` 👍 ",
            "created_at": "2025-09-01T21:10:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/35589#issuecomment-3243259240",
            "id": 3243259240,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35589",
            "node_id": "IC_kwDOAPphoM7BUDVo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243259240/reactions"
            },
            "updated_at": "2025-09-01T21:10:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243259240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35589/comments",
    "created_at": "2025-09-01T19:58:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35589/events",
    "html_url": "https://github.com/neovim/neovim/issues/35589",
    "id": 3373654415,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "file metadata/attributes, filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35589/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 741,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 633,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-09-08T22:10:01Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM7JFeGP",
    "number": 35589,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35589/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35589/timeline",
    "title": "vim.fs.read()",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-02T12:57:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35589",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}