{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nFor a snippet `/**  */` labeled with `/**` I get `/**/**  */` after completion at the end of line containing `/**` (see repros).\n\n### Steps to reproduce\n\nI have prepared both the test case and the repro to manual usage (extracted from existing tests).\n\nTest case:\n```lua\n  it('starts in correct place if label is not a keyword', function()\n    local completion_list = {\n      isIncomplete = false,\n      items = {\n        {\n          label = '/**',\n          insertText = '/** ${1:hello} */',\n          insertTextFormat = 2,\n        },\n      },\n    }\n    exec_lua(function()\n      vim.o.completeopt = 'menuone,noselect'\n    end)\n    create_server(completion_list)\n    feed('0i/<c-x><c-o>')\n    retry(nil, nil, function()\n      eq(\n        1,\n        exec_lua(function()\n          return vim.fn.pumvisible()\n        end)\n      )\n    end)\n    feed('<C-n><C-y>')\n    eq(\n      { true, { '/** ${1:hello} */' } },\n      exec_lua(function()\n        return {\n          vim.snippet.active({ direction = 1 }),\n          vim.api.nvim_buf_get_lines(0, 0, -1, true),\n        }\n      end)\n    ) -- this assertion fails\n    feed('<tab>')\n    eq(\n      #'/** hello */',\n      exec_lua(function()\n        return vim.api.nvim_win_get_cursor(0)[2]\n      end)\n    )\n  end)\n```\n\ninit.lua:\n```lua\nlocal function create_server(opts)\n  opts = opts or {}\n  local server = {}\n  server.messages = {}\n\n  function server.cmd(dispatchers)\n    local closing = false\n    local handlers = opts.handlers or {}\n    local srv = {}\n\n    function srv.request(method, params, callback)\n      table.insert(server.messages, {\n        method = method,\n        params = params,\n      })\n      local handler = handlers[method]\n      if handler then\n        handler(method, params, callback)\n      elseif method == 'initialize' then\n        callback(nil, {\n          capabilities = opts.capabilities or {},\n        })\n      elseif method == 'shutdown' then\n        callback(nil, nil)\n      end\n      local request_id = #server.messages\n      return true, request_id\n    end\n\n    function srv.notify(method, params)\n      table.insert(server.messages, {\n        method = method,\n        params = params,\n      })\n      if method == 'exit' then\n        dispatchers.on_exit(0, 15)\n      end\n    end\n\n    function srv.is_closing()\n      return closing\n    end\n\n    function srv.terminate()\n      closing = true\n    end\n\n    return srv\n  end\n\n  return server\nend\n\nlocal completion_result = {\n  isIncomplete = false,\n  items = {\n    {\n      label = '/**',\n      insertText = '/** ${1:hello} */',\n      insertTextFormat = 2,\n      kind = 15,\n      detail = 'Snippet with non-word label',\n    },\n  },\n}\n\nlocal server = create_server({\n  capabilities = {\n    completionProvider = {},\n  },\n  handlers = {\n    ['textDocument/completion'] = function (_, _, callback)\n      callback(nil, completion_result)\n    end,\n  },\n})\n\n-- vim.o.completeopt = 'menuone,noinsert'\nvim.o.completeopt = 'menuone,noselect'\nvim.fn.complete = vim.schedule_wrap(vim.fn.complete)\n\nvim.api.nvim_create_autocmd('UIEnter', {\n  callback = function ()\n    vim.lsp.start({\n      name = 'dummy',\n      cmd = server.cmd,\n      on_attach = function (client, bufnr0)\n        vim.lsp.completion.enable(true, client.id, bufnr0, {})\n      end,\n    })\n  end\n})\n```\n\n(start Insert mode, type `/` and complete with `<C-x><C-o><C-n><C-y>`). \n\n### Expected behavior\n\nProvide the correct `startcol` to vim.fn.complete. \n\nI have doubts whether this problem is solvable.\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-1013+gc8e47f648-dirty (dirty because of added test case only)\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nDebian Sid\n\n### Terminal name/version\n\nalacritty 0.15.0-dev (6dbd785b)\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nfrom repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "If the server provides only the insertText instead of a textEdit the word boundary is inferred by the client, which depends on the `iskeyword` setting.\n\nNot sure if there's anything to do about this. Maybe tree-sitter could provide some better info regarding the word boundary, not sure?",
            "created_at": "2024-10-22T18:17:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/30905#issuecomment-2429945649",
            "id": 2429945649,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30905",
            "node_id": "IC_kwDOAPphoM6Q1gcx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2429945649/reactions"
            },
            "updated_at": "2024-10-22T18:17:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2429945649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Anyway I'll try to look at textEdit case in free time, first on the repro, then maybe on the source linked above. ",
            "created_at": "2024-10-22T18:45:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/30905#issuecomment-2429999132",
            "id": 2429999132,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30905",
            "node_id": "IC_kwDOAPphoM6Q1tgc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2429999132/reactions"
            },
            "updated_at": "2024-10-22T18:45:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2429999132",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> the word boundary is inferred by the client, which depends on the `iskeyword` setting.\n> \n> ... Maybe tree-sitter could provide some better info regarding the word boundary\n\nrelated:\n- https://github.com/neovim/neovim/pull/30501\n- https://github.com/neovim/neovim/pull/30060",
            "created_at": "2024-10-23T12:26:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/30905#issuecomment-2431978671",
            "id": 2431978671,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30905",
            "node_id": "IC_kwDOAPphoM6Q9Qyv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2431978671/reactions"
            },
            "updated_at": "2024-10-23T12:26:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2431978671",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "link https://github.com/vim/vim/pull/16716 .. I would probably change to `isexpand` instead of named `completetrigger` todo.txt is described as `isexpand`..",
            "created_at": "2025-03-11T12:13:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/30905#issuecomment-2713956180",
            "id": 2713956180,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30905",
            "node_id": "IC_kwDOAPphoM6hw69U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2713956180/reactions"
            },
            "updated_at": "2025-03-11T12:13:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2713956180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30905/comments",
    "created_at": "2024-10-22T17:15:53Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30905/events",
    "html_url": "https://github.com/neovim/neovim/issues/30905",
    "id": 2606035573,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30905/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 265,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 309,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-03-16T14:47:11Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6bVPJ1",
    "number": 30905,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30905/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30905/timeline",
    "title": "LSP completion: wrong startcol if label is not a keyword",
    "updated_at": "2025-03-11T12:13:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30905",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia",
        "user_view_type": "public"
    }
}