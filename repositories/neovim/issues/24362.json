{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nIt doesn't appear possible to set the `v:searchforward`  variable in a way that persists after a function return:\r\n```vimhelp\r\nv:searchforward\t\t\t*v:searchforward* *searchforward-variable*\r\n\t\tSearch direction:  1 after a forward search, 0 after a\r\n\t\tbackward search.  It is reset to forward when directly setting\r\n\t\tthe last search pattern, see |quote/|.\r\n\t\tNote that the value is restored when returning from a\r\n\t\tfunction. |function-search-undo|.\r\n\t\tRead-write.\r\n```\r\nBut it is necessary to be able to set this variable in a persistent way in order to write plugins that override search-related actions, such as the `*` and `#` keys, and provide custom implementations for them.\r\n\r\nAlso, if there are any other such variables with this \"automatic revert\" behavior, consider giving those the same treatment.\n\n### Expected behavior\n\nSome (new?) API for setting the `v:searchforward` variable in a way that persists after the return of the function that sets it.\r\n\r\nNote I am not suggesting that we change current behavior; I am merely suggesting that we add a new API method that does the new thing, preserving backward compatibility.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "The last search pattern is also reset when returning from a function\r\n```\r\n10. Last search pattern register\t\"/\t\t*quote_/* *quote/*\r\nContains the most recent search-pattern.  This is used for \"n\" and 'hlsearch'.\r\nIt is writable with `:let`, you can change it to have 'hlsearch' highlight\r\nother matches without actually searching.  You can't yank or delete into this\r\nregister.  The search direction is available in |v:searchforward|.\r\nNote that the value is restored when returning from a function\r\n|function-search-undo|.\r\n```\r\nSo there needs to be a way to set both of them persistently to achieve the use cases mentioned in this issue.",
            "created_at": "2023-07-15T13:56:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/24362#issuecomment-1636776340",
            "id": 1636776340,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24362",
            "node_id": "IC_kwDOAPphoM5hjzmU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636776340/reactions"
            },
            "updated_at": "2023-07-15T13:56:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636776340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think `function-search-undo` doesn't apply to lua functions (probably by accident?). For example flash.nvim sets the search direction and register and it persists\r\n\r\nhttps://github.com/folke/flash.nvim/blob/9c53dad391801acb9ce9aa49820f15f6692aec91/lua/flash/jump.lua#L223",
            "created_at": "2023-07-15T15:50:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/24362#issuecomment-1636806643",
            "id": 1636806643,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24362",
            "node_id": "IC_kwDOAPphoM5hj6_z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636806643/reactions"
            },
            "updated_at": "2023-07-15T15:50:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636806643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5981889?v=4",
                "events_url": "https://api.github.com/users/IndianBoy42/events{/privacy}",
                "followers_url": "https://api.github.com/users/IndianBoy42/followers",
                "following_url": "https://api.github.com/users/IndianBoy42/following{/other_user}",
                "gists_url": "https://api.github.com/users/IndianBoy42/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/IndianBoy42",
                "id": 5981889,
                "login": "IndianBoy42",
                "node_id": "MDQ6VXNlcjU5ODE4ODk=",
                "organizations_url": "https://api.github.com/users/IndianBoy42/orgs",
                "received_events_url": "https://api.github.com/users/IndianBoy42/received_events",
                "repos_url": "https://api.github.com/users/IndianBoy42/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/IndianBoy42/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/IndianBoy42/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/IndianBoy42",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@no-more-secrets what are the repro steps (including code)? To confirm if this happens only in vimscript or also Lua.\r\n\r\n> `function-search-undo` doesn't apply to lua functions (probably by accident?)\r\n\r\nNot necessarily a \"feature\" that we want in Lua.\r\n\r\n> I am merely suggesting that we add a new API method that does the new thing, preserving backward compatibility.\r\n\r\nDid you try something like`vim.schedule_wrap()` , `vim.defer_fn()`?\r\n\r\nRelated search quirk: https://github.com/neovim/neovim/issues/18879",
            "created_at": "2023-07-15T17:59:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/24362#issuecomment-1636844420",
            "id": 1636844420,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24362",
            "node_id": "IC_kwDOAPphoM5hkEOE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636844420/reactions"
            },
            "updated_at": "2023-07-15T18:47:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636844420",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk After trying to put together a reproducer, I think I may not fully understand what the problem actually is, but there does seem to be something going on, unless I am missing something.  When I do this:\r\n```lua\r\nvim.keymap.set( 'n', 'n', function()\r\n  vim.v.searchforward = 1 - vim.v.searchforward\r\n  print( 'searchforward', vim.v.searchforward )\r\nend )\r\n```\r\nand then repeatedly press `n`, I get messages that alternate between `1` and `0`, as expected.  And it of course demonstrates that, in this case, the value of the variable does persist.\r\n\r\nBut then, to make `n` advance to the next match as usual, I add one additional command:\r\n```lua\r\nvim.keymap.set( 'n', 'n', function()\r\n  vim.v.searchforward = 1 - vim.v.searchforward\r\n  print( 'searchforward', vim.v.searchforward )\r\n  vim.cmd[[silent! normal! n]]\r\nend )\r\n```\r\nWhat I would expect to happen there is that, as we repeatedly press `n`, we continue to see the `1`/`0` alternating in the message box, and then we also see the search direction alternating direction.  But instead, what I observe is that it sticks on `0` and the direction doesn't change.\r\n\r\nHopefully I am doing something wrong, but I'm not sure what :-)",
            "created_at": "2023-07-15T18:42:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/24362#issuecomment-1636853480",
            "id": 1636853480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24362",
            "node_id": "IC_kwDOAPphoM5hkGbo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636853480/reactions"
            },
            "updated_at": "2023-07-15T18:42:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636853480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8852457?v=4",
                "events_url": "https://api.github.com/users/no-more-secrets/events{/privacy}",
                "followers_url": "https://api.github.com/users/no-more-secrets/followers",
                "following_url": "https://api.github.com/users/no-more-secrets/following{/other_user}",
                "gists_url": "https://api.github.com/users/no-more-secrets/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/no-more-secrets",
                "id": 8852457,
                "login": "no-more-secrets",
                "node_id": "MDQ6VXNlcjg4NTI0NTc=",
                "organizations_url": "https://api.github.com/users/no-more-secrets/orgs",
                "received_events_url": "https://api.github.com/users/no-more-secrets/received_events",
                "repos_url": "https://api.github.com/users/no-more-secrets/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/no-more-secrets/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/no-more-secrets/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/no-more-secrets",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24362/comments",
    "created_at": "2023-07-15T13:40:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24362/events",
    "html_url": "https://github.com/neovim/neovim/issues/24362",
    "id": 1806094167,
    "labels": [
        {
            "color": "F9D0C4",
            "default": false,
            "description": "wrong behavior inherited from vim",
            "id": 154310492,
            "name": "bug-vim",
            "node_id": "MDU6TGFiZWwxNTQzMTA0OTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-vim"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24362/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 285,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 339,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-04T21:53:41Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM5rps9X",
    "number": 24362,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24362/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24362/timeline",
    "title": "set last search pattern/direction from a Vimscript function",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:58:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24362",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8852457?v=4",
        "events_url": "https://api.github.com/users/no-more-secrets/events{/privacy}",
        "followers_url": "https://api.github.com/users/no-more-secrets/followers",
        "following_url": "https://api.github.com/users/no-more-secrets/following{/other_user}",
        "gists_url": "https://api.github.com/users/no-more-secrets/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/no-more-secrets",
        "id": 8852457,
        "login": "no-more-secrets",
        "node_id": "MDQ6VXNlcjg4NTI0NTc=",
        "organizations_url": "https://api.github.com/users/no-more-secrets/orgs",
        "received_events_url": "https://api.github.com/users/no-more-secrets/received_events",
        "repos_url": "https://api.github.com/users/no-more-secrets/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/no-more-secrets/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/no-more-secrets/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/no-more-secrets",
        "user_view_type": "public"
    }
}