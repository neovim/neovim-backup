{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\nMany servers support [relatedInformation](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticRelatedInformation); I'm personally struggling with clagnd.\n\n```bash\n$ cat <<EOF >repro.cpp\nvoid foo(char);\nvoid foo(double);\nvoid bar() {\n    foo(1);\n}\nEOF\n$ nvim -u minimal_init.lua repro.cpp\n:lua require('lspconfig').clangd.setup{}\n:lua vim.diagnostic.setqflist()\n```\n\n### Expected behavior\n\nClangd shows three diagnostics (error + 2x info), just like standalone compiler:\n```\nrepro.cpp:4:5: error: call to 'foo' is ambiguous\n    foo(1);\n    ^~~\nrepro.cpp:1:6: note: candidate function\nvoid foo(char);\n     ^\nrepro.cpp:2:6: note: candidate function\nvoid foo(double);\n```\n\nVSCode handles this correctly:\n![img](https://user-images.githubusercontent.com/17150781/183085819-919ca79b-ce48-4225-b224-19678647d458.png)\n\n### Actual behavior\n\nClangd reports one diagnostic with two items in the `relatedInformation` list:\nhttps://gist.github.com/BigRedEye/253629638e1d71f4df667a3e8e05a1d3.\n\nNeovim [does not parse relatedInformation](https://github.com/neovim/neovim/blob/master/runtime/lua/vim/lsp/diagnostic.lua#L88) and displays just one main diagnostic:\n![img](https://user-images.githubusercontent.com/17150781/183086488-b136360c-7e23-4fd8-b4b8-0a01f7418fed.png)\n\n\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@glepnir Are you still working on this? I also really would like to have this feature and would like to help out with the implementation if needed!",
            "created_at": "2022-11-25T07:52:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/19649#issuecomment-1327123721",
            "id": 1327123721,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19649",
            "node_id": "IC_kwDOAPphoM5PGk0J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1327123721/reactions"
            },
            "updated_at": "2022-11-25T07:52:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1327123721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13141438?v=4",
                "events_url": "https://api.github.com/users/tom-anders/events{/privacy}",
                "followers_url": "https://api.github.com/users/tom-anders/followers",
                "following_url": "https://api.github.com/users/tom-anders/following{/other_user}",
                "gists_url": "https://api.github.com/users/tom-anders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tom-anders",
                "id": 13141438,
                "login": "tom-anders",
                "node_id": "MDQ6VXNlcjEzMTQxNDM4",
                "organizations_url": "https://api.github.com/users/tom-anders/orgs",
                "received_events_url": "https://api.github.com/users/tom-anders/received_events",
                "repos_url": "https://api.github.com/users/tom-anders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tom-anders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tom-anders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tom-anders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "In the meantime, for anyone who wants this, here's a quick and dirty implementation I added to my config:\r\n\r\n```lua\r\nlocal function getlines(location)\r\n  local uri = location.targetUri or location.uri\r\n  if uri == nil then\r\n    return\r\n  end\r\n  local bufnr = vim.uri_to_bufnr(uri)\r\n  if not vim.api.nvim_buf_is_loaded(bufnr) then\r\n    vim.fn.bufload(bufnr)\r\n  end\r\n  local range = location.targetRange or location.range\r\n\r\n  local lines = vim.api.nvim_buf_get_lines(bufnr, range.start.line, range['end'].line+1, false)\r\n  return table.concat(lines, '\\n')\r\nend\r\n\r\nvim.diagnostic.config({float = {format = function(diag) \r\n    local message = diag.message\r\n    local client = vim.lsp.get_active_clients({name = message.source})[1]\r\n    if not client then\r\n        return diag.message\r\n    end\r\n\r\n    local relatedInfo = {messages = {}, locations = {}}\r\n    for _, info in ipairs(diag.user_data.lsp.relatedInformation) do\r\n        table.insert(relatedInfo.messages, info.message)\r\n        table.insert(relatedInfo.locations, info.location)\r\n    end\r\n\r\n    for i, loc in ipairs(vim.lsp.util.locations_to_items(relatedInfo.locations, client.offset_encoding)) do\r\n        message = string.format(\"%s\\n%s (%s:%d):\\n\\t%s\", message, relatedInfo.messages[i], \r\n                                vim.fn.fnamemodify(loc.filename, ':.'), loc.lnum,\r\n                                getlines(relatedInfo.locations[i]))\r\n    end\r\n\r\n    return message\r\nend}})\r\n```",
            "created_at": "2022-11-25T10:16:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/19649#issuecomment-1327287313",
            "id": 1327287313,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19649",
            "node_id": "IC_kwDOAPphoM5PHMwR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 2,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1327287313/reactions"
            },
            "updated_at": "2025-05-04T15:04:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1327287313",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13141438?v=4",
                "events_url": "https://api.github.com/users/tom-anders/events{/privacy}",
                "followers_url": "https://api.github.com/users/tom-anders/followers",
                "following_url": "https://api.github.com/users/tom-anders/following{/other_user}",
                "gists_url": "https://api.github.com/users/tom-anders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tom-anders",
                "id": 13141438,
                "login": "tom-anders",
                "node_id": "MDQ6VXNlcjEzMTQxNDM4",
                "organizations_url": "https://api.github.com/users/tom-anders/orgs",
                "received_events_url": "https://api.github.com/users/tom-anders/received_events",
                "repos_url": "https://api.github.com/users/tom-anders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tom-anders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tom-anders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tom-anders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@tom-anders Got an error:\r\n\r\n```\r\n îª‡  Error  12:00:25 msg_show.lua_error Error detected while processing CursorHold Autocommands for \"*\":\r\n12:00:25 msg_show Error executing lua callback: ...config/nvim/lua/ningwang/data/lsp/utils/common_setup.lua:57: bad argument #1 to 'ipairs' (table expected, got nil)\r\nstack traceback:\r\n\t[C]: in function 'ipairs'\r\n\t...config/nvim/lua/ningwang/data/lsp/utils/common_setup.lua:57: in function 'format'\r\n\t...rapped-5bf2f4b/share/nvim/runtime/lua/vim/diagnostic.lua:144: in function 'reformat_diagnostics'\r\n\t...rapped-5bf2f4b/share/nvim/runtime/lua/vim/diagnostic.lua:1373: in function 'open_float'\r\n\t/Users/ningwang/.config/nvim/lua/plugins/UX.lua:225: in function </Users/ningwang/.config/nvim/lua/plugins/UX.lua:219>\r\n```",
            "created_at": "2023-04-01T04:01:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/19649#issuecomment-1492822163",
            "id": 1492822163,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19649",
            "node_id": "IC_kwDOAPphoM5Y-qiT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1492822163/reactions"
            },
            "updated_at": "2024-09-15T14:43:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1492822163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The following redefinition of the `textDocument/publishDiagnostics` handler may be used to get the related information in the diagnostic message as well as hint-level diagnostics for the related information (extended from https://github.com/neovim/neovim/issues/22744#issuecomment-1479318034):\r\n\r\n```lua\r\nlocal original = vim.lsp.handlers['textDocument/publishDiagnostics']\r\nvim.lsp.handlers['textDocument/publishDiagnostics'] = function(_, result, ctx, config)\r\n   vim.tbl_map(function(item)\r\n      if item.relatedInformation and #item.relatedInformation > 0 then\r\n         vim.tbl_map(function(k)\r\n            if k.location then\r\n               local tail = vim.fn.fnamemodify(vim.uri_to_fname(k.location.uri), ':t')\r\n               k.message = tail ..\r\n                   '(' .. (k.location.range.start.line + 1) .. ', ' .. (k.location.range.start.character + 1) ..\r\n                   '): ' .. k.message\r\n\r\n               if k.location.uri == vim.uri_from_bufnr(0) then\r\n                  table.insert(result.diagnostics, {\r\n                     code = item.code,\r\n                     message = k.message,\r\n                     range = k.location.range,\r\n                     severity = vim.lsp.protocol.DiagnosticSeverity.Hint,\r\n                     source = item.source,\r\n                     relatedInformation = {},\r\n                  })\r\n               end\r\n            end\r\n            item.message = item.message .. '\\n' .. k.message\r\n         end, item.relatedInformation)\r\n      end\r\n   end, result.diagnostics)\r\n   original(_, result, ctx, config)\r\nend\r\n```",
            "created_at": "2023-10-06T09:25:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/19649#issuecomment-1750272564",
            "id": 1750272564,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19649",
            "node_id": "IC_kwDOAPphoM5oUwo0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 1,
                "laugh": 0,
                "rocket": 1,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750272564/reactions"
            },
            "updated_at": "2023-10-06T09:25:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750272564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/84244131?v=4",
                "events_url": "https://api.github.com/users/ayusrc/events{/privacy}",
                "followers_url": "https://api.github.com/users/ayusrc/followers",
                "following_url": "https://api.github.com/users/ayusrc/following{/other_user}",
                "gists_url": "https://api.github.com/users/ayusrc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ayusrc",
                "id": 84244131,
                "login": "ayusrc",
                "node_id": "MDQ6VXNlcjg0MjQ0MTMx",
                "organizations_url": "https://api.github.com/users/ayusrc/orgs",
                "received_events_url": "https://api.github.com/users/ayusrc/received_events",
                "repos_url": "https://api.github.com/users/ayusrc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ayusrc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ayusrc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ayusrc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think this is an API issue; only `message` in `vim.Diagnostic` is displayable content. It is easy to add `relatedInformation` to `message` in some format, but this makes `message` verbose and affects the display effect of any handler.",
            "created_at": "2025-05-08T07:04:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/19649#issuecomment-2862000966",
            "id": 2862000966,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19649",
            "node_id": "IC_kwDOAPphoM6qlqtG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2862000966/reactions"
            },
            "updated_at": "2025-05-08T07:04:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2862000966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/19649/comments",
    "created_at": "2022-08-05T13:26:19Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/19649/events",
    "html_url": "https://github.com/neovim/neovim/issues/19649",
    "id": 1329939575,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/19649/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 719,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-05-13T00:50:38Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5PRUR3",
    "number": 19649,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/19649/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/19649/timeline",
    "title": "diagnostics `relatedInformation` (related information) not parsed & displayed",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-08T07:04:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/19649",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/17150781?v=4",
        "events_url": "https://api.github.com/users/BigRedEye/events{/privacy}",
        "followers_url": "https://api.github.com/users/BigRedEye/followers",
        "following_url": "https://api.github.com/users/BigRedEye/following{/other_user}",
        "gists_url": "https://api.github.com/users/BigRedEye/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/BigRedEye",
        "id": 17150781,
        "login": "BigRedEye",
        "node_id": "MDQ6VXNlcjE3MTUwNzgx",
        "organizations_url": "https://api.github.com/users/BigRedEye/orgs",
        "received_events_url": "https://api.github.com/users/BigRedEye/received_events",
        "repos_url": "https://api.github.com/users/BigRedEye/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/BigRedEye/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BigRedEye/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/BigRedEye",
        "user_view_type": "public"
    }
}