{
    "active_lock_reason": "off-topic",
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "This is mostly just for tracking. Obviously everyone wants this, but it looks like work... üòè \r\n\r\n# Problem\r\n\r\nvscode has \"remote\" tools (broadly referred to as `vscode-remote`, in particular `vscode remote-ssh`)\r\n\r\n- https://code.visualstudio.com/docs/remote/remote-overview\r\n- https://code.visualstudio.com/docs/remote/ssh\r\n\r\n... that allow the user to\r\n\r\n1. input a ssh URI (hostname + port)\r\n     - or select from a list of hosts discovered from your local `~/.ssh/config`\r\n2. vscode connects to the remote ssh endpoint using your local `~/.ssh` credentials\r\n    - or prompts for password as needed\r\n3. vscode starts a new local UI\r\n4. vscode installs _another vscode_ on the remote machine automatically\r\n    - it also installs your plugins, on the remote!\r\n5. the new local vscode UI controls the remote vscode server, and you can use it to work on the remote machine very much like a local vscode.\r\n\r\n# Ideaaaaaa\r\n\r\n1. Implement a \"universal installer\" script (sh, powershell) that pulls from \r\nhttps://github.com/neovim/neovim/releases and installs the correct Nvim on the current machine\r\n   ```\r\n    curl https://neovim.io/install-hax && bash install-hax\r\n   ```\r\n    - does something like this already exist? \r\n        - https://github.com/rhysd/action-setup-vim\r\n        - https://github.com/NTBBloodbath/nvenv\r\n        - https://github.com/MordechaiHadad/bob\r\n2. Implement an Nvim plugin that works like vscode remote-ssh (described above)\r\n    - select ssh host from `~/.ssh/config`\r\n    - installs Nvim on the remote (if suitable `nvim` version is not found on the remote)\r\n    - starts remote Nvim server\r\n    - configures ssh tunnel\r\n    - starts local Nvim UI connected to the remote Nvim",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Relates to https://github.com/chipsenkbeil/distant.nvim",
            "created_at": "2023-01-03T19:33:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1370149517",
            "id": 1370149517,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5RqtKN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 3,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1370149517/reactions"
            },
            "updated_at": "2023-01-03T19:33:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1370149517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "More related ideas:\r\n- virtually (or via scp) adding local rtp to the remote environment? Or maybe have a dedicated lua file for it that let's users spin up their preferred environment: a remote equivalent to `init.lua` when `init.lua` is not yet present on the remote.\r\n- the possibility to manage such attachments and quickly switch between them",
            "created_at": "2023-01-03T20:38:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1370202450",
            "id": 1370202450,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5Rq6FS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1370202450/reactions"
            },
            "updated_at": "2023-01-03T20:38:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1370202450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is it really necessary to include this in the core (if that's the plan)?\r\nRemote files can already be edited through `sshfs` with a local editor.\r\nUsing a remote editor should be accomplished with an external plugin instead.",
            "created_at": "2023-01-04T08:13:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1370601252",
            "id": 1370601252,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5Rsbck",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 17,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 18,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1370601252/reactions"
            },
            "updated_at": "2023-01-04T08:15:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1370601252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24971970?v=4",
                "events_url": "https://api.github.com/users/ObserverOfTime/events{/privacy}",
                "followers_url": "https://api.github.com/users/ObserverOfTime/followers",
                "following_url": "https://api.github.com/users/ObserverOfTime/following{/other_user}",
                "gists_url": "https://api.github.com/users/ObserverOfTime/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ObserverOfTime",
                "id": 24971970,
                "login": "ObserverOfTime",
                "node_id": "MDQ6VXNlcjI0OTcxOTcw",
                "organizations_url": "https://api.github.com/users/ObserverOfTime/orgs",
                "received_events_url": "https://api.github.com/users/ObserverOfTime/received_events",
                "repos_url": "https://api.github.com/users/ObserverOfTime/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ObserverOfTime/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ObserverOfTime/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ObserverOfTime",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is it really necessary to include this in the core (if that's the plan)?\r\n\r\nafaik, this should be possible as a shell script + plugin (which is the current proposal described above). \r\n\r\ndoesn't need to be in core, but until a plugin magically appears, this issue just tracks the general idea. And if a plugin does magically appear, then it might make sense to integrate it as a builtin plugin later. ",
            "created_at": "2023-01-04T08:49:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1370631789",
            "id": 1370631789,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5Rsi5t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1370631789/reactions"
            },
            "updated_at": "2023-01-04T08:49:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1370631789",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "One major difference with vscode-remote vs a remote nvim UI is that with vscode-remote, all the keyboard input (and thus the actual buffer changes) are done by local client, with the input and server-driven updates being synchronized asynchronously in the background.\n\nThis becomes very important when you have a high latency connection--vscode-remote stays feeling \"snappy\" when typing with characters being displayed to the screen instantly, but a remote nvim will start to be laggy with displaying input (or even just a normal nvim run in an ssh session).\n\nNot saying we should try to make it work like vscode-remote, but just wanted to point out the high latency remote connection use case as food for thought. ",
            "created_at": "2023-01-07T16:56:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1374539337",
            "id": 1374539337,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5R7c5J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 48,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 49,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1374539337/reactions"
            },
            "updated_at": "2023-01-07T16:56:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1374539337",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/394891?v=4",
                "events_url": "https://api.github.com/users/jdrouhard/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdrouhard/followers",
                "following_url": "https://api.github.com/users/jdrouhard/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdrouhard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdrouhard",
                "id": 394891,
                "login": "jdrouhard",
                "node_id": "MDQ6VXNlcjM5NDg5MQ==",
                "organizations_url": "https://api.github.com/users/jdrouhard/orgs",
                "received_events_url": "https://api.github.com/users/jdrouhard/received_events",
                "repos_url": "https://api.github.com/users/jdrouhard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdrouhard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdrouhard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdrouhard",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "yep, see also emacs [TRAMP](https://www.emacswiki.org/emacs/TrampMode). It's definitely a better model in many respects, but more complex. vscode has a [VFS](https://github.com/microsoft/vscode/blob/be54d2be91cc7443d0c44ed2a483475b12747b2d/src/vs/platform/workspace/common/virtualWorkspace.ts) layer, Nvim would need something like that.\r\n\r\nThe door is open for some sort of VFS model in Nvim, but that's orthogonal to this tracking issue.",
            "created_at": "2023-01-08T15:22:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1374861102",
            "id": 1374861102,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5R8rcu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 10,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1374861102/reactions"
            },
            "updated_at": "2023-01-08T15:22:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1374861102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What you can do in VS code is also to manage multiple remote sessions. Maybe there could be a command to reattach the TUI client to another server during a running session. Then, it could be implemented via a plugin only in a running session.",
            "created_at": "2023-01-08T17:08:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1374882879",
            "id": 1374882879,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5R8ww_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1374882879/reactions"
            },
            "updated_at": "2023-01-08T17:08:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1374882879",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk curious if there would be a way to embed the distant library into neovim itself. It's a rust library, so if we exported it in a C-friendly way, it could be consumed.\r\n\r\nIf so, you could have neovim provide tramp natively and support doing this via ssh and distant's own protocol. And anything else added eventually like Google Drive, Dropbox, etc. for file editing.\r\n\r\nWould take a lot of the work out of needing to handle all of the protocol stuff and support something higher level where you can edit files, read files, run programs, etc. on the remote machine. Also supports remote shells and whatnot.\r\n\r\nAll of these features are in the distant.nvim plugin, but would love to have them be native.",
            "created_at": "2023-03-07T16:07:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1458431042",
            "id": 1458431042,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5W7eRC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 12,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 12,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1458431042/reactions"
            },
            "updated_at": "2023-03-07T16:16:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1458431042",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2481802?v=4",
                "events_url": "https://api.github.com/users/chipsenkbeil/events{/privacy}",
                "followers_url": "https://api.github.com/users/chipsenkbeil/followers",
                "following_url": "https://api.github.com/users/chipsenkbeil/following{/other_user}",
                "gists_url": "https://api.github.com/users/chipsenkbeil/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chipsenkbeil",
                "id": 2481802,
                "login": "chipsenkbeil",
                "node_id": "MDQ6VXNlcjI0ODE4MDI=",
                "organizations_url": "https://api.github.com/users/chipsenkbeil/orgs",
                "received_events_url": "https://api.github.com/users/chipsenkbeil/received_events",
                "repos_url": "https://api.github.com/users/chipsenkbeil/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chipsenkbeil/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chipsenkbeil/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chipsenkbeil",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This is going to be a killer feature!",
            "created_at": "2023-04-11T09:27:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1502986454",
            "id": 1502986454,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5ZlcDW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1502986454/reactions"
            },
            "updated_at": "2023-04-11T09:29:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1502986454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2771499?v=4",
                "events_url": "https://api.github.com/users/meicale/events{/privacy}",
                "followers_url": "https://api.github.com/users/meicale/followers",
                "following_url": "https://api.github.com/users/meicale/following{/other_user}",
                "gists_url": "https://api.github.com/users/meicale/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/meicale",
                "id": 2771499,
                "login": "meicale",
                "node_id": "MDQ6VXNlcjI3NzE0OTk=",
                "organizations_url": "https://api.github.com/users/meicale/orgs",
                "received_events_url": "https://api.github.com/users/meicale/received_events",
                "repos_url": "https://api.github.com/users/meicale/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/meicale/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/meicale/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/meicale",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here's my 2 cents.\r\n\r\nI would love to see remote development as a feature (perhaps in a plugin, but I do want it!), but I think following the footsteps of VSCode is the wrong approach. \r\n\r\n# VSCode approach downsides\r\n1. Running Neovim on the remote takes CPU, RAM and disk space. This can be a complete dealbreaker for some of the more resource-intensive plugins, like `rust-analyzer`.\r\n2. As noted by @jdrouhard , latencies quickly become an issue, which makes remote development feeling no better than just SSHing into the host and typing manually.\r\n3. We'd have to write a script for installing Neovim. We want it to be reliable enough to not warrant any manual intervention. This is a **tall** order. Consider the sheer varierty of targets: you have Linux targets that use `glibc`, `musl`, ancient kernels, different BSDs, Windows, mingw, MacOS. All of them with their own quirks. Differences in Neovim dependencies might introduce subtle bugs that are basically impossible to debug.\r\n4. You would also have to bootstrap the installation somehow. `curl` might be not present on the target, and so can `bash`. The package manager varierty is also quite gigantic. You would have to handle A LOT of platforms to bootstrap the Neovim installation.\r\n5. Plugins are pretty ad-hoc. Some of them depend on some runtime (LSPs are a great example), some require packages to be installed on the host, some require fonts (basically every plugin that wants Nerd Fonts). You are usually expected to handle it yourself, but it doesn't mesh well with automation. And then, a lot of plugin managers support version pinning but don't enforce it by default, so you could easily get a different version of a plugin installed which would cause unexpected problems. And then some plugins also have their internal update mechanism (LSP servers, Treesitter), which can also explode on you.\r\n\r\n\r\n# Better approach\r\n1. We should use local Neovim for everything. That way we are sure that everything works, and it doesn't require extra effort.\r\n2. We mount remote files locally, and open them in Neovim. SSHFS is one way to do it, but it's unmaintained and problematic. I suggest rclone - [it supports remote mounting](https://rclone.org/commands/rclone_mount/). It does a lot of what we'd like to have itself, it's reasonably efficient, it caches files locally (which means that if you experience a disconnect - you can continue your work) and it comes with a very nice perk of supporting a lot of cloud providers. Maybe you are storing JSONs or JS files on S3 - you can redact them with Neovim seamlessly! This is actually better than what VSCode can offer.\r\n3. We'd have to sync the changes. Rclone has commands and settings for syncing changes: you could set it to sync changes every 5 seconds, and do it in background asynchronously. You would likely have to auto-write changes to local filesystem in Neovim just before that, which should be fine. This can be made reasonably efficient and nice to use if you play around with the settings, you'd be able to handle disconnects too. Rclone also lets you resolve conflicts!\r\n\r\n# Prior work\r\nhttps://github.com/ipod825/vim-netranger - implements a file manager that also can use `rclone`. This is basically what we want.\r\nhttps://github.com/DanielWeidinger/nvim-sshfs - implementation with SSHFS",
            "created_at": "2023-05-24T23:49:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1562068798",
            "id": 1562068798,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5dG0c-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 9,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 15,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562068798/reactions"
            },
            "updated_at": "2023-05-24T23:49:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562068798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66781795?v=4",
                "events_url": "https://api.github.com/users/KFearsoff/events{/privacy}",
                "followers_url": "https://api.github.com/users/KFearsoff/followers",
                "following_url": "https://api.github.com/users/KFearsoff/following{/other_user}",
                "gists_url": "https://api.github.com/users/KFearsoff/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KFearsoff",
                "id": 66781795,
                "login": "KFearsoff",
                "node_id": "MDQ6VXNlcjY2NzgxNzk1",
                "organizations_url": "https://api.github.com/users/KFearsoff/orgs",
                "received_events_url": "https://api.github.com/users/KFearsoff/received_events",
                "repos_url": "https://api.github.com/users/KFearsoff/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KFearsoff/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KFearsoff/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KFearsoff",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The obvious glaring downside to the \"local everything\" approach is if you actually need to develop in the remote server's environment.\n\nWhat if I have a work laptop with bare minimum essentials (a terminal emulator, maybe a neovim install, and a VPN), and I can't have the full development environment toolchain? Pick your poison: gcc with lots of of library dependencies, node with tons of npm modules, whatever. It might not even be the same OS. Windows->Linux, Linux->macOS, etc.\n\nWith vscode-remote, I can have a development experience that \"feels\" local whilst actually running in a completely different environment that is equipped appropriately. In this way, vscode-remote and remote nvim UI's approaches are superior to some sort of file synchronization method to pull files locally for editing.",
            "created_at": "2023-05-25T00:22:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1562089498",
            "id": 1562089498,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5dG5ga",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 37,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 37,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562089498/reactions"
            },
            "updated_at": "2023-05-25T00:22:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562089498",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/394891?v=4",
                "events_url": "https://api.github.com/users/jdrouhard/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdrouhard/followers",
                "following_url": "https://api.github.com/users/jdrouhard/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdrouhard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdrouhard",
                "id": 394891,
                "login": "jdrouhard",
                "node_id": "MDQ6VXNlcjM5NDg5MQ==",
                "organizations_url": "https://api.github.com/users/jdrouhard/orgs",
                "received_events_url": "https://api.github.com/users/jdrouhard/received_events",
                "repos_url": "https://api.github.com/users/jdrouhard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdrouhard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdrouhard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdrouhard",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Mounting remote files locally such as sshfs under poor network is not friendly for local git, and git operations become terribly  slow.",
            "created_at": "2023-05-25T01:59:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1562152701",
            "id": 1562152701,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5dHI79",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 10,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562152701/reactions"
            },
            "updated_at": "2023-05-25T01:59:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562152701",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8176642?v=4",
                "events_url": "https://api.github.com/users/chaneyzorn/events{/privacy}",
                "followers_url": "https://api.github.com/users/chaneyzorn/followers",
                "following_url": "https://api.github.com/users/chaneyzorn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chaneyzorn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chaneyzorn",
                "id": 8176642,
                "login": "chaneyzorn",
                "node_id": "MDQ6VXNlcjgxNzY2NDI=",
                "organizations_url": "https://api.github.com/users/chaneyzorn/orgs",
                "received_events_url": "https://api.github.com/users/chaneyzorn/received_events",
                "repos_url": "https://api.github.com/users/chaneyzorn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chaneyzorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chaneyzorn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chaneyzorn",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> The obvious glaring downside to the \"local everything\" approach is if you actually need to develop in the remote server's environment.\r\n\r\nI thought the thread is about the opposite. Doesn't Neovim already support remote server's environment with `nvim --headless --listen 0.0.0.0:8080` and `nvim --server=neovim.com:8080`?\r\n\r\n> With vscode-remote, I can have a development experience that \"feels\" local whilst actually running in a completely different environment that is equipped appropriately. In this way, vscode-remote and remote nvim UI's approaches are superior to some sort of file synchronization method to pull files locally for editing.\r\n\r\nSure, that's true. I'm personally a lot more interested in working locally on remote files, but working locally with a remote environment is a cool usecase.\r\n\r\n> Mounting remote files locally such as sshfs under poor network is not friendly for local git, and git operations become terribly slow.\r\n\r\nI have proposed using Rclone, which has functionality of letting you resolve conflicts. I guess that could be used to always prefer the local `.git` over the remote one, which would introduce its own set of issues, but I don't think git-related issues are avoidable anyway. Git really works quite poorly with file synchronization.\r\n\r\nI think that's more of a UI issue, though. I'd imagine you'd be able to make a local checkout if you have remote access to the machine that has the repository, no? In that case, it would be much better to just avoid this remote dance altogether and `git clone` locally.",
            "created_at": "2023-05-25T07:55:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1562450075",
            "id": 1562450075,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5dIRib",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562450075/reactions"
            },
            "updated_at": "2023-05-25T07:55:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562450075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66781795?v=4",
                "events_url": "https://api.github.com/users/KFearsoff/events{/privacy}",
                "followers_url": "https://api.github.com/users/KFearsoff/followers",
                "following_url": "https://api.github.com/users/KFearsoff/following{/other_user}",
                "gists_url": "https://api.github.com/users/KFearsoff/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KFearsoff",
                "id": 66781795,
                "login": "KFearsoff",
                "node_id": "MDQ6VXNlcjY2NzgxNzk1",
                "organizations_url": "https://api.github.com/users/KFearsoff/orgs",
                "received_events_url": "https://api.github.com/users/KFearsoff/received_events",
                "repos_url": "https://api.github.com/users/KFearsoff/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KFearsoff/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KFearsoff/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KFearsoff",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I thought the thread is about the opposite. Doesn't Neovim already support remote server's environment with nvim --headless --listen 0.0.0.0:8080 and nvim --server=neovim.com:8080?\r\n\r\nAs @jdrouhard mentioned above, remote TUI over ssh/tcp does not provide a local vim file buffer. Every time the cursor is moved (not even an edit action), the terminal needs to be refreshed through ssh, which will cause obvious lag when the network is not good.\r\n\r\nMounting remote files locally do provide a local vim file buffer, but full filesystem-level access over network are unnecessary, and the experience isn't good.\r\n\r\nSuch as local git or local LSP server, need to analyze the complete context of the project, when over network , the input is huge and the output is small.",
            "created_at": "2023-05-25T09:52:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1562615726",
            "id": 1562615726,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5dI5-u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 9,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562615726/reactions"
            },
            "updated_at": "2023-05-25T10:48:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562615726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8176642?v=4",
                "events_url": "https://api.github.com/users/chaneyzorn/events{/privacy}",
                "followers_url": "https://api.github.com/users/chaneyzorn/followers",
                "following_url": "https://api.github.com/users/chaneyzorn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chaneyzorn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chaneyzorn",
                "id": 8176642,
                "login": "chaneyzorn",
                "node_id": "MDQ6VXNlcjgxNzY2NDI=",
                "organizations_url": "https://api.github.com/users/chaneyzorn/orgs",
                "received_events_url": "https://api.github.com/users/chaneyzorn/received_events",
                "repos_url": "https://api.github.com/users/chaneyzorn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chaneyzorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chaneyzorn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chaneyzorn",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have played around with Neovim's `--remote-ui` option and some SSH tunneling of via sockets. I made a **semi-automated solution** here, https://codeberg.org/ashwinvis/ssh.nvim . Someone might find it useful\r\n\r\nI agree particularly with @jdrouhard's take [[1](https://github.com/neovim/neovim/issues/21635#issuecomment-1374539337)]. What we have in neovim natively is:\r\n\r\n- Communication over `scp://` using `netrw` which gives a **local everything** approach. Buffer is cached locally making it \"snappy\" even with high network latency, `:Lexplore` would show the remote files. The problem is, things like LSP, integrated `:terminal` and `:!` commands do not work.\r\n- Using `nvim --remote-ui --server` or `neovide --server` option is a **remote everything** approach. It works with some semi-automation as shown above, until someone makes a plugin to make this truly effortless and cross-platform. It does not have the downsides of `netrw` (LSP, terminal and commands works) but everything is synchronous. It works only with a good network and is painful to use over network with high latency.\r\n\r\nPeople have mentioned VScode remote-ssh and Emacs TRAMP. Another tool which works well remotely out of the box is **JupyterLab**  because it was always built with a client-server model. The buffers are cached in the client's browser and everything is executed in the server.",
            "created_at": "2023-05-26T07:59:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1563969191",
            "id": 1563969191,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5dOEan",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 30,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 30,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1563969191/reactions"
            },
            "updated_at": "2023-05-26T08:02:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1563969191",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9155111?v=4",
                "events_url": "https://api.github.com/users/ashwinvis/events{/privacy}",
                "followers_url": "https://api.github.com/users/ashwinvis/followers",
                "following_url": "https://api.github.com/users/ashwinvis/following{/other_user}",
                "gists_url": "https://api.github.com/users/ashwinvis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ashwinvis",
                "id": 9155111,
                "login": "ashwinvis",
                "node_id": "MDQ6VXNlcjkxNTUxMTE=",
                "organizations_url": "https://api.github.com/users/ashwinvis/orgs",
                "received_events_url": "https://api.github.com/users/ashwinvis/received_events",
                "repos_url": "https://api.github.com/users/ashwinvis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ashwinvis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ashwinvis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ashwinvis",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> curious if there would be a way to embed the distant library into neovim itself. It's a rust library, so if we exported it in a C-friendly way, it could be consumed.\r\n\r\nI don't think this is a good idea. SSH is ubiquitous. Distant is very new and not currently supported.\r\n\r\nThe beauty of VCode remote is how seemless it is and it \"just works\" most of the time.\r\n\r\nThe security implications of SSH are also very well understood while distant would be something entirely new that users would have to understand.\r\n\r\nI would be for this if \r\nA) It was seamless and the end user does not have to add distant to the remote machine\r\nB) If all the communication could be wrapped in an SSH tunnel\r\n\r\notherwise I worry it would be too niche.",
            "created_at": "2023-07-02T17:40:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1616746303",
            "id": 1616746303,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5gXZc_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616746303/reactions"
            },
            "updated_at": "2023-07-02T17:40:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616746303",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40780143?v=4",
                "events_url": "https://api.github.com/users/elijahmorg/events{/privacy}",
                "followers_url": "https://api.github.com/users/elijahmorg/followers",
                "following_url": "https://api.github.com/users/elijahmorg/following{/other_user}",
                "gists_url": "https://api.github.com/users/elijahmorg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elijahmorg",
                "id": 40780143,
                "login": "elijahmorg",
                "node_id": "MDQ6VXNlcjQwNzgwMTQz",
                "organizations_url": "https://api.github.com/users/elijahmorg/orgs",
                "received_events_url": "https://api.github.com/users/elijahmorg/received_events",
                "repos_url": "https://api.github.com/users/elijahmorg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elijahmorg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elijahmorg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elijahmorg",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I would be for this if \n> A) It was seamless and the end user does not have to add distant to the remote machine\n> B) If all the communication could be wrapped in an SSH tunnel\n> \n> otherwise I worry it would be too niche.\n\nDistant also supports acting as an ssh client, so you get both feature sets. So yes you can! :smile:\n\n> The security implications of SSH are also very well understood while distant would be something entirely new that users would have to understand.\n\nFair enough. Distant uses a very modern encryption and authentication standard on par with ssh, but it definitely isn't battle tested or audited, although the crypto libraries have been audited. \n\n\nBut advanced functionality like running a file watcher for remote changes, translating language server file references such that it can work on the remote machine, remote filesystem searching, and persistent connections (like eternal terminal) are implemented using distant.\n\nRegardless, using it as a client library would give you a high level abstraction for file io and process execution, rather than needing to work with ssh and the sftp subsystem.\n\nAs distant implements support for other remote platforms, neovim would also get it for free.\n\nSo I'm not necessarily sold on limiting to ssh. We've seen the wonders that Lua had over vim script! :smile:",
            "created_at": "2023-07-02T17:59:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1616753637",
            "id": 1616753637,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5gXbPl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616753637/reactions"
            },
            "updated_at": "2023-07-02T18:10:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616753637",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2481802?v=4",
                "events_url": "https://api.github.com/users/chipsenkbeil/events{/privacy}",
                "followers_url": "https://api.github.com/users/chipsenkbeil/followers",
                "following_url": "https://api.github.com/users/chipsenkbeil/following{/other_user}",
                "gists_url": "https://api.github.com/users/chipsenkbeil/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chipsenkbeil",
                "id": 2481802,
                "login": "chipsenkbeil",
                "node_id": "MDQ6VXNlcjI0ODE4MDI=",
                "organizations_url": "https://api.github.com/users/chipsenkbeil/orgs",
                "received_events_url": "https://api.github.com/users/chipsenkbeil/received_events",
                "repos_url": "https://api.github.com/users/chipsenkbeil/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chipsenkbeil/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chipsenkbeil/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chipsenkbeil",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I created a plugin for this use case: [**remote-nvim.nvim**](https://github.com/amitds1997/remote-nvim.nvim). If you use [devpod](https://github.com/loft-sh/devpod), you can also develop inside devcontainers using this plugin.\r\n\r\nI deployed the first release of the plugin yesterday (**v0.0.1**) üéâ. Feel free to reach out to me if you have any questions about the plugin. You can drop your queries about the plugin over in the [release discussion](https://github.com/amitds1997/remote-nvim.nvim/discussions/30).\r\n\r\nI have only tested this with MacOS and Linux. Support for Windows is planned but timelines are not decided yet.",
            "created_at": "2023-08-10T05:47:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1672591990",
            "id": 1672591990,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5jsbp2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 2,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672591990/reactions"
            },
            "updated_at": "2023-08-10T05:47:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672591990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29333147?v=4",
                "events_url": "https://api.github.com/users/amitds1997/events{/privacy}",
                "followers_url": "https://api.github.com/users/amitds1997/followers",
                "following_url": "https://api.github.com/users/amitds1997/following{/other_user}",
                "gists_url": "https://api.github.com/users/amitds1997/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amitds1997",
                "id": 29333147,
                "login": "amitds1997",
                "node_id": "MDQ6VXNlcjI5MzMzMTQ3",
                "organizations_url": "https://api.github.com/users/amitds1997/orgs",
                "received_events_url": "https://api.github.com/users/amitds1997/received_events",
                "repos_url": "https://api.github.com/users/amitds1997/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amitds1997/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amitds1997/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amitds1997",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I created a plugin for this use case: [**remote-nvim.nvim**](https://github.com/amitds1997/remote-nvim.nvim). If you use [devpod](https://github.com/loft-sh/devpod), you can also develop inside devcontainers using this plugin.\r\n> \r\n> I deployed the first release of the plugin yesterday (**v0.0.1**) tada. Feel free to reach out to me if you have any questions about the plugin. You can drop your queries about the plugin over in the [release discussion](https://github.com/amitds1997/remote-nvim.nvim/discussions/30).\r\n> \r\n> I have only tested this with MacOS and Linux. Support for Windows is planned but timelines are not decided yet.\r\n\r\nDoes this do something magic or just setup neovim remotely and start a headless nvim client?",
            "created_at": "2023-08-10T06:24:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1672627021",
            "id": 1672627021,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5jskNN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672627021/reactions"
            },
            "updated_at": "2023-08-11T12:30:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672627021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41792945?v=4",
                "events_url": "https://api.github.com/users/fecet/events{/privacy}",
                "followers_url": "https://api.github.com/users/fecet/followers",
                "following_url": "https://api.github.com/users/fecet/following{/other_user}",
                "gists_url": "https://api.github.com/users/fecet/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fecet",
                "id": 41792945,
                "login": "fecet",
                "node_id": "MDQ6VXNlcjQxNzkyOTQ1",
                "organizations_url": "https://api.github.com/users/fecet/orgs",
                "received_events_url": "https://api.github.com/users/fecet/received_events",
                "repos_url": "https://api.github.com/users/fecet/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fecet/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fecet/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fecet",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Does this do something magic or just setup neovim remotely and start a headless nvim client?\r\n\r\nNo magic. It installs Neovim on the remote server in a custom folder and then starts a headless server over on remote and then launches a client locally. Everything done by the plugin is managed inside that folder.",
            "created_at": "2023-08-10T06:30:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1672633588",
            "id": 1672633588,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5jslz0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672633588/reactions"
            },
            "updated_at": "2023-08-10T06:32:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672633588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29333147?v=4",
                "events_url": "https://api.github.com/users/amitds1997/events{/privacy}",
                "followers_url": "https://api.github.com/users/amitds1997/followers",
                "following_url": "https://api.github.com/users/amitds1997/following{/other_user}",
                "gists_url": "https://api.github.com/users/amitds1997/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amitds1997",
                "id": 29333147,
                "login": "amitds1997",
                "node_id": "MDQ6VXNlcjI5MzMzMTQ3",
                "organizations_url": "https://api.github.com/users/amitds1997/orgs",
                "received_events_url": "https://api.github.com/users/amitds1997/received_events",
                "repos_url": "https://api.github.com/users/amitds1997/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amitds1997/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amitds1997/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amitds1997",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oops",
            "created_at": "2023-08-10T06:32:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1672636280",
            "id": 1672636280,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5jsmd4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672636280/reactions"
            },
            "updated_at": "2023-08-13T04:28:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672636280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I want to add some brainstorming thoughts to this discussion to focus on what a real implementation of this for Neovim would actually look like. Continuing where @ashwinvis left off, what is the middle ground between \"local everything\" and \"remote everything\"? I'll call this the \"hybrid remote editing\" approach. The goal of this is to act like \"remote everything\", but where config is local and the UI isn't dependent on the network.\r\n\r\n- All UI needs to be rendered locally. Buffers need to be available and edited locally. Swapfiles are local. This part looks just like using netrw.\r\n- All filesystem access and process execution needs to happen remotely. Effectively, nvim should think that it's running on the remote system. This would mean that `!` filters would be remote, all language server integrations would be remote, `:terminal`, `:cd`, etc. Also, environment variables should all come from the remote host.\r\n- For simplicity, I think the entire neovim process only exists in one editing context. To start a hybrid remote editing session, you would invoke nvim with a flag that enables it. This avoids a lot of headaches around mixing contexts, and is also how VS Code implements this.\r\n\r\nHow could we actually implement this? I think the best way is to give add a new concept of \"location\" to vim. The initial \"location\" is \"default\". While this location is active, all operations (FS, process execution, environment) work exactly as if they were performed on the remote machine.\r\n\r\nThere should be some APIs to change the location to \"local\", like `:local COMMAND` to run a command with a local location, a Lua API to use the local location for the duration of a function call, etc (I think a variety of these will be necessary). While the local location is set, operations work as they do today (e.g. they run in the context of the machine vim is running on).\r\n\r\nThe default location works like a sandbox that only has some specific escape hatches. This means that existing scripts that aren't location-aware can continue to work unaffected: as far as they can tell, they are running on the remote editing host. But new scripts will be able to \"escape\" with the local location (an example: opening a URL in the user's browser requires executing a process in the local location).\r\n\r\nA quick \"user story\": Imagine running `ssh user@myhost -L 4000:localhost:4000` and then `cd path/to/folder && nvim --hybrid-remote-editing-listen=4000`, then opening a new terminal and starting `nvim --hybrid-remote-editing=localhost:4000`. Neovim starts as usual with your local init files, and `:pwd` reports that you are in `/home/user/path/to/folder`. If you `:e index.ts`, nvim finds and loads the appropriate `ftplugin` in the (local) `vimruntimepath`. Some script decides to run a linter, which will run on the remote host, resulting in some signs being applied to the buffer. When you run `:terminal`, the prompt is `user@myhost ~/path/to/folder` and it is running remotely. When you turn off wifi, you can continue to move around the buffer, but async jobs (like the linter) never finish and sync commands like `:w` hang nvim.\r\n\r\nOpen questions:\r\n- What APIs are covered under the \"location\" concept? The goal of the default location is to effectively trick any user command or script that isn't \"location-aware\" that it's actually running on the remote system.\r\n- What internal changes need to be made location-aware? Two obvious ones: init scripts and swap files.\r\n- In this proposal, the `:source` builtin and all other script evaluation happens in the local location. This side-steps the security concerns, but it may be desirable to add a separate API to enable sourcing remote files.\r\n- This proposal does not talk about installation of neovim on the remote at all. I think this is outside the scope of core. If Neovim provides an API to \"restart in a hybrid remote editing context\", then a script can implement this behavior itself.",
            "created_at": "2023-08-10T09:17:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1672860975",
            "id": 1672860975,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5jtdUv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672860975/reactions"
            },
            "updated_at": "2023-08-11T12:35:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672860975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1216626?v=4",
                "events_url": "https://api.github.com/users/CGamesPlay/events{/privacy}",
                "followers_url": "https://api.github.com/users/CGamesPlay/followers",
                "following_url": "https://api.github.com/users/CGamesPlay/following{/other_user}",
                "gists_url": "https://api.github.com/users/CGamesPlay/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/CGamesPlay",
                "id": 1216626,
                "login": "CGamesPlay",
                "node_id": "MDQ6VXNlcjEyMTY2MjY=",
                "organizations_url": "https://api.github.com/users/CGamesPlay/orgs",
                "received_events_url": "https://api.github.com/users/CGamesPlay/received_events",
                "repos_url": "https://api.github.com/users/CGamesPlay/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/CGamesPlay/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/CGamesPlay/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/CGamesPlay",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Buffers need to be available and edited locally. Swapfiles are local.\r\n\r\nWhere did that requirement come from? \r\n\r\n> There should be some APIs to change the location to \"local\", like `:local COMMAND` to run a command with a local location,\r\n\r\nThis is too complicated and outside the scope of this issue. The goal of this issue is not full emacs TRAMP. The goal is just what I described in the main description: auto-download nvim on the remote and connecting to that from a local nvim, with a single command. \r\n\r\nCreate a separate issue for more complex approach such as emacs TRAMP.",
            "created_at": "2023-08-11T12:35:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1674698983",
            "id": 1674698983,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5j0eDn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1674698983/reactions"
            },
            "updated_at": "2023-08-11T12:35:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1674698983",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sorry for being considered off-topic. I think it's worth pointing out that the subject of this issue says \"like vscode remote-ssh\", which does all editing locally and has the notion of local and remote execution contexts. That's why I thought it was related!",
            "created_at": "2023-08-12T03:36:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1675658544",
            "id": 1675658544,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5j4IUw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1675658544/reactions"
            },
            "updated_at": "2023-08-12T03:36:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1675658544",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1216626?v=4",
                "events_url": "https://api.github.com/users/CGamesPlay/events{/privacy}",
                "followers_url": "https://api.github.com/users/CGamesPlay/followers",
                "following_url": "https://api.github.com/users/CGamesPlay/following{/other_user}",
                "gists_url": "https://api.github.com/users/CGamesPlay/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/CGamesPlay",
                "id": 1216626,
                "login": "CGamesPlay",
                "node_id": "MDQ6VXNlcjEyMTY2MjY=",
                "organizations_url": "https://api.github.com/users/CGamesPlay/orgs",
                "received_events_url": "https://api.github.com/users/CGamesPlay/received_events",
                "repos_url": "https://api.github.com/users/CGamesPlay/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/CGamesPlay/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/CGamesPlay/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/CGamesPlay",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I personally strongly agree that neovim should have a remote mode as powerful as vscode. This is definitely a killer feature.",
            "created_at": "2023-08-12T05:47:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1675722551",
            "id": 1675722551,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5j4X83",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 38,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 38,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1675722551/reactions"
            },
            "updated_at": "2023-08-12T05:47:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1675722551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41792945?v=4",
                "events_url": "https://api.github.com/users/fecet/events{/privacy}",
                "followers_url": "https://api.github.com/users/fecet/followers",
                "following_url": "https://api.github.com/users/fecet/following{/other_user}",
                "gists_url": "https://api.github.com/users/fecet/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fecet",
                "id": 41792945,
                "login": "fecet",
                "node_id": "MDQ6VXNlcjQxNzkyOTQ1",
                "organizations_url": "https://api.github.com/users/fecet/orgs",
                "received_events_url": "https://api.github.com/users/fecet/received_events",
                "repos_url": "https://api.github.com/users/fecet/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fecet/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fecet/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fecet",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Running Neovim on the remote takes CPU, RAM and disk space. This can be a complete dealbreaker for some of the more resource-intensive plugins, like rust-analyzer.\r\n\r\nThis is exactly what I'm after though. When Apple switched to ARM I wasn't affected, because all the work happens in a remote environment. Also means a small Macbook Air gets a lot of life, since nothing that intensive is actually running on it.\r\n\r\n> As noted by @jdrouhard , latencies quickly become an issue, which makes remote development feeling no better than just SSHing into the host and typing manually.\r\n\r\nYou've listed this under problems of VSCode's approach, when it's actually not a problem with how they've architected things.\r\n\r\n> We should use local Neovim for everything.\r\n\r\nI disagree, reasoning stated above.\r\n\r\n> We mount remote files locally, and open them in Neovim. SSHFS is one way to do it\r\n\r\nI have never had any luck with SSHFS and it's counterparts on macOS.",
            "created_at": "2023-08-28T16:32:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1695998309",
            "id": 1695998309,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5lFuFl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1695998309/reactions"
            },
            "updated_at": "2023-11-21T15:43:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1695998309",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4729?v=4",
                "events_url": "https://api.github.com/users/mikew/events{/privacy}",
                "followers_url": "https://api.github.com/users/mikew/followers",
                "following_url": "https://api.github.com/users/mikew/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mikew",
                "id": 4729,
                "login": "mikew",
                "node_id": "MDQ6VXNlcjQ3Mjk=",
                "organizations_url": "https://api.github.com/users/mikew/orgs",
                "received_events_url": "https://api.github.com/users/mikew/received_events",
                "repos_url": "https://api.github.com/users/mikew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mikew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mikew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Another reason to have work happening in the remote environment  (aside from more available RAM and CPU in a remote server than on a low end laptop) is when you have a poor internet connection, one that is good enough to maintain a text editing session, but not good enough for downloading large dependencies/containers required for development or uploading build results, etc.",
            "created_at": "2023-11-02T14:19:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1790826434",
            "id": 1790826434,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5qvdfC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 8,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1790826434/reactions"
            },
            "updated_at": "2023-11-21T15:42:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1790826434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4527338?v=4",
                "events_url": "https://api.github.com/users/kellpossible/events{/privacy}",
                "followers_url": "https://api.github.com/users/kellpossible/followers",
                "following_url": "https://api.github.com/users/kellpossible/following{/other_user}",
                "gists_url": "https://api.github.com/users/kellpossible/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kellpossible",
                "id": 4527338,
                "login": "kellpossible",
                "node_id": "MDQ6VXNlcjQ1MjczMzg=",
                "organizations_url": "https://api.github.com/users/kellpossible/orgs",
                "received_events_url": "https://api.github.com/users/kellpossible/received_events",
                "repos_url": "https://api.github.com/users/kellpossible/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kellpossible/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kellpossible/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kellpossible",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It seems that we know what we want already and that thing is to offload the burden of running an IDE to a server so that your craptop can manage for a few more years.\r\nHow should one go about implementing this? I'm not a neovim dev I just use it and I like it so maybe some of you might know something obvious that I don't see. Since there's an option to have\r\n> nvim --headless --listen 0.0.0.0:8080 and nvim --server=neovim.com:8080\r\n\r\nthen would it not make sense to have this work without latency by using caching? Why not?\r\n\r\nThe optimal solution would move the most amount of resource-intensive tasks to the server and leave the UI and only that on the client. Why can't neovim do that since it's already capable of being a server?",
            "created_at": "2023-11-20T07:10:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1818353338",
            "id": 1818353338,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5sYd66",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 3,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1818353338/reactions"
            },
            "updated_at": "2023-11-21T15:42:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1818353338",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/80976541?v=4",
                "events_url": "https://api.github.com/users/ivandimitrov8080/events{/privacy}",
                "followers_url": "https://api.github.com/users/ivandimitrov8080/followers",
                "following_url": "https://api.github.com/users/ivandimitrov8080/following{/other_user}",
                "gists_url": "https://api.github.com/users/ivandimitrov8080/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ivandimitrov8080",
                "id": 80976541,
                "login": "ivandimitrov8080",
                "node_id": "MDQ6VXNlcjgwOTc2NTQx",
                "organizations_url": "https://api.github.com/users/ivandimitrov8080/orgs",
                "received_events_url": "https://api.github.com/users/ivandimitrov8080/received_events",
                "repos_url": "https://api.github.com/users/ivandimitrov8080/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ivandimitrov8080/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ivandimitrov8080/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ivandimitrov8080",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Locking this since comments are now repeating things already addressed above.",
            "created_at": "2023-11-21T15:43:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/21635#issuecomment-1821175803",
            "id": 1821175803,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21635",
            "node_id": "IC_kwDOAPphoM5sjO_7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1821175803/reactions"
            },
            "updated_at": "2023-11-21T15:43:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1821175803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 29,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/21635/comments",
    "created_at": "2023-01-03T19:07:31Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/21635/events",
    "html_url": "https://github.com/neovim/neovim/issues/21635",
    "id": 1517804618,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "F3A62E",
            "default": false,
            "description": "community: Google Summer of Code project",
            "id": 834483397,
            "name": "gsoc",
            "node_id": "MDU6TGFiZWw4MzQ0ODMzOTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gsoc"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "remote UI, --remote commands, p2p / peer-to-peer",
            "id": 2269137131,
            "name": "remote",
            "node_id": "MDU6TGFiZWwyMjY5MTM3MTMx",
            "url": "https://api.github.com/repos/neovim/neovim/labels/remote"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/21635/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5ad9xK",
    "number": 21635,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 123,
        "-1": 2,
        "confused": 0,
        "eyes": 0,
        "heart": 27,
        "hooray": 5,
        "laugh": 2,
        "rocket": 0,
        "total_count": 159,
        "url": "https://api.github.com/repos/neovim/neovim/issues/21635/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/21635/timeline",
    "title": "remote ssh plugin (like vscode remote-ssh)",
    "updated_at": "2025-01-17T15:32:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/21635",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}