{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nhttps://github.com/neovide/neovide/issues/3126\n\nPreviously reported to Neovide. I was instructed to make an issue here.\n\n### Steps to reproduce\n\n1. launch an UI client with multigrid support, like Neovide `neovide -- --clean`\n2. `set wrap` and enable the experimental ui with `lua require('vim._extui').enable({})`\n3. do `'echoerr \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"'`\n4. `messages`\n\n![Image](https://github.com/user-attachments/assets/18b9b703-f4b8-4a2e-9d30-2192a781a841)\n\n### Expected behavior\n\n![Image](https://github.com/user-attachments/assets/a242c20f-cddd-405e-a4d7-18f9c1a5083a)\n\n### Nvim version (nvim -v)\n\nNVIM v0.12.0-dev-27311b0\n\n### Vim (not Nvim) behaves the same?\n\nn/a\n\n### Operating system/version\n\nDebian trixie\n\n### Terminal name/version\n\nNeovide 0.15.0\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nbob",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Not sure it's Nvim's responsibility to crop the passed float dimensions, as the TUI does. Doesn't the UI know its own size and the maximum dimensions it can display for a floating window? @bfredl\n\nIt is a different issue @clason, the former is about the 'wrap' option, this is about the window dimensions passed to the `win_float_pos` event.\n\nextui passes a large number for the float width as a shorthand to always occupy the available columns, which the TUI handles gracefully, and the `win_float_pos` events or Neovide don't.",
            "created_at": "2025-05-08T13:47:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/33909#issuecomment-2863135396",
            "id": 2863135396,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33909",
            "node_id": "IC_kwDOAPphoM6qp_qk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863135396/reactions"
            },
            "updated_at": "2025-05-08T13:59:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863135396",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "For reference:\n\n- with Kitty/gnome terminal/nvim terminal: text wraps normally. Can set linebreak once focused on pager\n- with Neovide: text doesn't wrap at all. Setting wrap and linebreak doesn't work",
            "created_at": "2025-05-08T15:17:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/33909#issuecomment-2863430412",
            "id": 2863430412,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33909",
            "node_id": "IC_kwDOAPphoM6qrHsM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863430412/reactions"
            },
            "updated_at": "2025-05-08T15:17:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863430412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/200692511?v=4",
                "events_url": "https://api.github.com/users/yilisharcs/events{/privacy}",
                "followers_url": "https://api.github.com/users/yilisharcs/followers",
                "following_url": "https://api.github.com/users/yilisharcs/following{/other_user}",
                "gists_url": "https://api.github.com/users/yilisharcs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yilisharcs",
                "id": 200692511,
                "login": "yilisharcs",
                "node_id": "U_kgDOC_ZTHw",
                "organizations_url": "https://api.github.com/users/yilisharcs/orgs",
                "received_events_url": "https://api.github.com/users/yilisharcs/received_events",
                "repos_url": "https://api.github.com/users/yilisharcs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yilisharcs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yilisharcs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yilisharcs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Not sure it's Nvim's responsibility to crop the passed float dimensions, as the TUI does. Doesn't the UI know its own size and the maximum dimensions it can display for a floating window? @bfredl \n\nIt does but it does, but resizing has as far as I know always been out of the scope for the UI, at least it's not documented as an UI responsibility. On the other hand moving the windows was not documented as a responsibility either until very recently. And on nightly it's optional as the absolute coordinates are included in the protocol.\n\nMoving is also much easier to implement than resizing . Resizing can't really be done, at least not with word wrapping with proper cursor navigation. Yes the UI could  call `nvim_win_set_width`, but then it would start fighting against plugins that also wants to control the width. \n\nIn only aware of one other plugin that creates an oversized window, LunarVim creates a terminal of 100000x100000, which is big enough to crash neovim, even before the GUI has time to react.\n\nFor the reference the message window has a width of 10000, and at least does not crash. And here's the code that automatically sets the window to the maximum client side when not using multigrid \nhttps://github.com/neovim/neovim/blob/50c200fcd4749f98ebf7e9f55fddb10f99085327/src/nvim/winfloat.c#L223-L226. \n\nI guess the idea there was that some special multigrid UIs could render floating windows bigger than the main grid.\n\n\n\n",
            "created_at": "2025-05-08T23:04:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/33909#issuecomment-2864643083",
            "id": 2864643083,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33909",
            "node_id": "IC_kwDOAPphoM6qvvwL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2864643083/reactions"
            },
            "updated_at": "2025-05-08T23:04:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2864643083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I want to expand my comment a little bit. I don't think anything in the core should change based on the mere presence of a multigrid UI and https://github.com/neovim/neovim/pull/32691, is one step in that direction. \n\nA plugin targeting a multigrid UI that does non-standard things in regard to placement and sizing, will have to be aware of that. And the plugin will not be compatible with non-multigrid UIs, unless both cases are taken into account. Therefore, I suggest that a new config setting is added to the window config that allows oversized windows instead of the following check\n```lua\nif (!ui_has(kUIMultigrid)) { \n   wp->w_height = MIN(wp->w_height, Rows - win_border_height(wp)); \n   wp->w_width = MIN(wp->w_width, Columns - win_border_width(wp)); \n }\n```\n\nIf such a window is rendered by the TUI, it's just clipped instead of resized.\n\nSimilarly, there could be a config setting to disable the automatic movement of the window.\n\nBoth settings would be enabled by default (to allow movement and resizing), except for external windows, which would have both set to false.",
            "created_at": "2025-05-09T10:47:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/33909#issuecomment-2866086726",
            "id": 2866086726,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33909",
            "node_id": "IC_kwDOAPphoM6q1QNG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2866086726/reactions"
            },
            "updated_at": "2025-05-09T10:47:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2866086726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Seems premature to me. Why should a plugin dictate how a multigrid UI renders a window. Even if it wants to, lets wait for a plugin that does, instead of adding two potentially useful options. For now I would think that the multigrid UI is the one who should clip window dimensions if it is constrained to a parent grid (granted I lack any experience with implementing a multigrid UI, so deferring to @bfredl for any further discussion).",
            "created_at": "2025-05-09T11:59:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/33909#issuecomment-2866274106",
            "id": 2866274106,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33909",
            "node_id": "IC_kwDOAPphoM6q1986",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2866274106/reactions"
            },
            "updated_at": "2025-05-09T11:59:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2866274106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Clipping is possible, but we need resizing for text wrapping. That's not possible to do without implementing custom line wrapping logic, cursor placement, and cursor movement logic. \n\nNeovide also wants to render *exactly* like the TUI, despite being a multigrid UI. Any logic that changes based on the presence of a multigrid UI prevents that. We also want to be able to connect to the same instance as the TUI without messing up the layout of the TUI, which the above branch will do.\n\nIMO, multigrid should not be a separate mode that changes everything by default, instead it should be something that can be taken advantage of, when you *know* that the target supports it. Neovide does *not* support windows that extend out of the main area, therefore Neovim should apply the normal logic, and don't try to send us anything we don't support, unless explicitly requesting it.\n\n**Edit**, there could be an option that enables resizing globally, but that's much less flexible than if it's per window.\n**Edit2:** One case where Neovide could disable the automatic resize per window, is if we support rendering some windows with a smaller font, maybe for some LSP documentation or something. In that case, I would expect that the Neovide aware plugin shows it with a suitable width for that font, places it on where it belongs on the global grid so that it doesn't go out of the screen, and finally disables the automatic resize, so that Neovim doesn't think it does. The reason for the plugin to calculate the placement, is that it has a lot of more information available than the UI, and can decide on an aesthetically pleasing location, maybe in the middle of the screen, or close to the symbol, with the anchor in the correct corner. ",
            "created_at": "2025-05-09T12:12:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/33909#issuecomment-2866319326",
            "id": 2866319326,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33909",
            "node_id": "IC_kwDOAPphoM6q2I_e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2866319326/reactions"
            },
            "updated_at": "2025-05-09T13:31:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2866319326",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Together with #32691 , we would need something like first class support for sizing constraints in the UI protocol separate from the \"multigrid\" flag itself. A very basic version of this would just be an extra flag which allows an UI like neovide to opt-in to the sizing constraints of the TUI renderer while still using the ext_multigrid protocol format.\n\n> I guess the idea there was that some special multigrid UIs could render floating windows bigger than the main grid.\n\nAn obvious example of this would be an UI using smaller font sizes on popup windows while still \"clipping\" to the main grid boundaries. such an an UI would still have sizing constraints, just different ones than the TUI/compositor. \n\nSo while keeping in mind, in the long run we don't want to lock into the current false dichotomy between \"TUI constraints\" and \"no contstraints\" (or using a sub-par mechanism which leads to multiple redraw cycles of invalid sizing, as mentioned), we should sketch some kind of mechanism which as a starting point signals the \"TUI constraints\" while keeping room for later extensions.",
            "created_at": "2025-05-12T08:58:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/33909#issuecomment-2871622884",
            "id": 2871622884,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33909",
            "node_id": "IC_kwDOAPphoM6rKXzk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2871622884/reactions"
            },
            "updated_at": "2025-05-12T08:59:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2871622884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> An obvious example of this would be an UI using smaller font sizes on popup windows while still \"clipping\" to the main grid boundaries. such an an UI would still have sizing constraints, just different ones than the TUI/compositor.\n\nYes, that's the case I'm describing in my \"edit2\". Since an UI might want to mix between having automatic and manual resizing, at least that's what we would want for Neovide (in the future), I think it should be a window configuration option.",
            "created_at": "2025-05-12T09:35:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/33909#issuecomment-2871776186",
            "id": 2871776186,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33909",
            "node_id": "IC_kwDOAPphoM6rK9O6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2871776186/reactions"
            },
            "updated_at": "2025-05-12T09:37:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2871776186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33909/comments",
    "created_at": "2025-05-08T13:33:55Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33909/events",
    "html_url": "https://github.com/neovim/neovim/issues/33909",
    "id": 3049026205,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "floating windows, popups, hover",
            "id": 3234818716,
            "name": "floatwin",
            "node_id": "MDU6TGFiZWwzMjM0ODE4NzE2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/floatwin"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33909/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM61vHKd",
    "number": 33909,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33909/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33909/timeline",
    "title": "multigrid UI: win_float_pos dimensions are not cropped to the main grid?",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-12T09:37:01Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33909",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/200692511?v=4",
        "events_url": "https://api.github.com/users/yilisharcs/events{/privacy}",
        "followers_url": "https://api.github.com/users/yilisharcs/followers",
        "following_url": "https://api.github.com/users/yilisharcs/following{/other_user}",
        "gists_url": "https://api.github.com/users/yilisharcs/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yilisharcs",
        "id": 200692511,
        "login": "yilisharcs",
        "node_id": "U_kgDOC_ZTHw",
        "organizations_url": "https://api.github.com/users/yilisharcs/orgs",
        "received_events_url": "https://api.github.com/users/yilisharcs/received_events",
        "repos_url": "https://api.github.com/users/yilisharcs/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yilisharcs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yilisharcs/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yilisharcs",
        "user_view_type": "public"
    }
}