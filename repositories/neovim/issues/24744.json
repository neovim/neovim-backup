{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI want to set some filetypes to be backup-ed. And other filetypes to keep their original. But backupskip applies universaly to backup and patchmode. The same for backupdir. (it would be nice to have a folder with my backup files while patchmoded .orig stay in the original folder.)\r\n\r\nExample:\r\n\r\nI have two files: an `example1.conf  `and an `example2.text`\r\n\r\nSetting backup will create an `example.conf.bak` and an `example.text.bak` (or `example1.conf~` and `example2.text~` as per the original behavior.)\r\n\r\nSetting `patchmode` will create `example1.conf.orig` and `example2.text.orig` respectively.\r\n\r\nGiven my aim is to have `example1.conf.orig` and `example2.text.bak`,\r\n\r\nI read the `:h` on `backupskip`.\r\n\r\nBut (if I understand :h correctly,) `backupskip` applies both to `vim.opt.backup` and `vim.opt.patchmode`.\r\n\r\nTherefore, if I was to add the extension `*.conf` to `backupskip`, I would end up with no example1 backup or original, and example2.text.bak along with an exampl2.orig\n\n### Expected behavior\n\nHaving a `patchmodeskip` and `patchmodedir` would make for a clean solution to this.\r\n\r\nI believe a solution could be devised with autocommands, but I am (rightfully?) reluctant to apply hacky solutions to the save-your-ass functionality that is a backup. It is supposed to to work when everything else fails, after all. In my mind (maybe I am wrong,) autocommandds would compromise it.",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Is this only about the filenames? I don't see why we need to enhance core functionality to support that. \r\n\r\nNvim plans to expose a file watcher interface, then you could create a handler that copies or renames the files. \r\n\r\n> I believe a solution could be devised with autocommands, but I am (rightfully?) reluctant to apply hacky solutions to the save-your-ass functionality that is a backup.\r\n\r\nIf an existing Nvim event is triggered when these backup files are created, then yes, an autocmd handler can safely rename or copy a file (`writefile()` has an fsync flag \"s\"), then delete the old unwanted file.\r\n\r\nVim/Nvim also has swapfiles and 'undofile' which protect from data loss. But in general your editor is not the best way to protect against data loss, your filesystem or an OS job should do that.",
            "created_at": "2023-09-14T11:13:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/24744#issuecomment-1719252356",
            "id": 1719252356,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24744",
            "node_id": "IC_kwDOAPphoM5mebWE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1719252356/reactions"
            },
            "updated_at": "2023-09-14T11:14:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1719252356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Right, I am probably not explaining it the right way.\r\n\r\nDesired behaviour is for nvim to detect filetype and apply patchmode for certain filetypes, backup for others.\r\n\r\nExample: A textile file should have a backup of it saved. A bash file should have the original version (patchmode) of it saved.\r\n\r\nSaid behavior would be possible if backupskip didn't apply both to vim.opt.backup and vim.opt.patchmode. Ie if there was a patchmodeskip. (and preferably a patchmodedir so that we could also set a different save location for the \"patchmode\" dot.original files)\r\n\r\nThis https://vi.stackexchange.com/questions/42825/backup-only-certain-filetypes/42828?noredirect=1#comment76835_42828 is about the same issue. I might have done a better job explaining it there. (Might.)",
            "created_at": "2023-09-15T06:16:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/24744#issuecomment-1720735097",
            "id": 1720735097,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24744",
            "node_id": "IC_kwDOAPphoM5mkFV5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1720735097/reactions"
            },
            "updated_at": "2023-09-15T10:06:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1720735097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/128935777?v=4",
                "events_url": "https://api.github.com/users/Vikareaj/events{/privacy}",
                "followers_url": "https://api.github.com/users/Vikareaj/followers",
                "following_url": "https://api.github.com/users/Vikareaj/following{/other_user}",
                "gists_url": "https://api.github.com/users/Vikareaj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Vikareaj",
                "id": 128935777,
                "login": "Vikareaj",
                "node_id": "U_kgDOB69nYQ",
                "organizations_url": "https://api.github.com/users/Vikareaj/orgs",
                "received_events_url": "https://api.github.com/users/Vikareaj/received_events",
                "repos_url": "https://api.github.com/users/Vikareaj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Vikareaj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Vikareaj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Vikareaj",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Ie if there was a patchmodeskip. (and preferably a patchmodedir so that we could also set a different save location for the \"patchmode\" dot.original files)\r\n\r\nSeems reasonable. Though in general the 'backup' and 'patchmode' options are from a time before DVCS (git) was ubiquitous, so these features are rarely used.",
            "created_at": "2023-09-15T09:59:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/24744#issuecomment-1721007560",
            "id": 1721007560,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24744",
            "node_id": "IC_kwDOAPphoM5mlH3I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1721007560/reactions"
            },
            "updated_at": "2023-09-15T09:59:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1721007560",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24744/comments",
    "created_at": "2023-08-16T19:48:59Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24744/events",
    "html_url": "https://github.com/neovim/neovim/issues/24744",
    "id": 1853815895,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "upstream issue that must be fixed in Vim first",
            "id": 2639399975,
            "name": "needs:vim-patch",
            "node_id": "MDU6TGFiZWwyNjM5Mzk5OTc1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:vim-patch"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24744/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 285,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 339,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-04T21:53:41Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM5ufvxX",
    "number": 24744,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24744/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24744/timeline",
    "title": "options: add 'patchmodeskip', 'patchmodedir'",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:57:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24744",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/128935777?v=4",
        "events_url": "https://api.github.com/users/Vikareaj/events{/privacy}",
        "followers_url": "https://api.github.com/users/Vikareaj/followers",
        "following_url": "https://api.github.com/users/Vikareaj/following{/other_user}",
        "gists_url": "https://api.github.com/users/Vikareaj/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Vikareaj",
        "id": 128935777,
        "login": "Vikareaj",
        "node_id": "U_kgDOB69nYQ",
        "organizations_url": "https://api.github.com/users/Vikareaj/orgs",
        "received_events_url": "https://api.github.com/users/Vikareaj/received_events",
        "repos_url": "https://api.github.com/users/Vikareaj/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Vikareaj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Vikareaj/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Vikareaj",
        "user_view_type": "public"
    }
}