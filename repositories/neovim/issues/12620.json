{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "# Intro\r\n\r\nWe had a discussion about this on gitter the other day, see https://gitter.im/neovim/neovim?at=5f07781c46c75b1e5e3524ff\r\n\r\nPresently, all insert mode completion is based on exact prefix matches. This works great when you have a small list of candidates but as soon as your list of candidates grows large, it becomes frustrating to narrow down. You have to either type the exact prefix yourself or navigate the huge list.\r\n\r\nI propose we add a new option `fuzzy` to `completeopt` that will enable fuzzy completion in all completion modes. i.e omnifunc, file completion and keyword completion would all become fuzzy. This would make it much simpler to narrow the completion list when it becomes large and is a standard feature found in nearly every other modern editor.\r\n\r\nI am *not* proposing this become default as we want to avoid surprising existing users.\r\n\r\n# Why can't this be implemented with a plugin?\r\n\r\nThe gitter link above discusses this in more detail but the problem is that plugins can only fetch the initial candidates fuzzily. As you type more characters, neovim narrows down the list of candidates itself instead of consulting whatever plugin is providing completions. Thus, as you type more characters, you have to provide the exact prefix to narrow down the list.\r\n\r\nIt may seem to work if you have autocomplete enabled in which case when the list is narrowed down to zero candidates, the plugin will repopulate the list with new candidates based on fuzzy matching but this results in awkward flickering. See https://github.com/neovim/neovim/pull/8184#issuecomment-377431559\r\n\r\n# Implementation\r\n\r\nWe discussed that the current matching implementation is written in C and so difficult to extend. To implement this feature, it may be a good idea to switch the matching implementation to lua first and then add a fuzzy completoept. I'm not 100% sure as it may be easier to write only the fuzzy matching implementation in lua or reuse https://github.com/neovim/neovim/pull/8184/files which imports [fzy](https://github.com/jhawthorn/fzy).\r\n\r\nPlease let me know how you think this is best implemented.\r\n\r\nI'm happy to lead this feature so feel free to assign me. I probably won't get to it soon though so if anyone else would like to take it off my hands, please feel free.\r\n\r\ncc @Shougo @clason @fsouza",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think this would be a great feature.\r\n\r\nBut one thing that should probably be considered is how this would work in combination with LSP where the server can do fuzzy filtering.\r\nSee the discussion in https://github.com/microsoft/language-server-protocol/issues/898\r\n\r\nMaybe some way to configure a \"use fuzzy, except for completion source x\" should be kept in mind - at least as a potential follow up. Bonus if this could be set on a per buffer basis, for cases where some server supports server-side fuzzy filtering and another doesn't.\r\n",
            "created_at": "2020-07-11T10:13:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-657033830",
            "id": 657033830,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzAzMzgzMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657033830/reactions"
            },
            "updated_at": "2020-07-11T10:18:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657033830",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I also think this is a worthwhile addition but should be handled carefully. I don't know how accessible the omnicomplete function is from within lua, but it seems to me a reasonable first step would be to allow injecting lua functions as candidate filters into omnicompletion. These could then be used to implement non-standard sorting and -- in particular fuzzy -- filtering. \r\n\r\nAs a second thought, it could be useful to have a generic (and highly tunable) fuzzy matching utility function in  lua, which could then be used by other plugins as well (such as completion-nvim, which already implements a basic version itself).\r\n\r\nAs a last point, I'd like to second @mfussenegger's comment that the LSP spec does not specify whether sorting, filtering, etc. is the job of the server or the client, so the behavior differs wildly between servers -- leading to problems if the client assumes differently... But the proposal is much more general than LSP completion, of course.",
            "created_at": "2020-07-11T11:01:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-657043823",
            "id": 657043823,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzA0MzgyMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657043823/reactions"
            },
            "updated_at": "2020-07-11T11:01:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657043823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mfussenegger @clason \r\n\r\n> Maybe some way to configure a \"use fuzzy, except for completion source x\" should be kept in mind - at least as a potential follow up. Bonus if this could be set on a per buffer basis, for cases where some server supports server-side fuzzy filtering and another doesn't.\r\n\r\nThe feature is already implemented.\r\n\r\nPlease read `:help complete-items`.\r\n\r\n```\r\n\t\t\t\t\t\t*complete-items*\r\nEach list item can either be a string or a Dictionary.  When it is a string it\r\nis used as the completion.  When it is a Dictionary it can contain these\r\nitems:\r\n\tword\t\tthe text that will be inserted, mandatory\r\n\tabbr\t\tabbreviation of \"word\"; when not empty it is used in\r\n\t\t\tthe menu instead of \"word\"\r\n\tmenu\t\textra text for the popup menu, displayed after \"word\"\r\n\t\t\tor \"abbr\"\r\n\tinfo\t\tmore information about the item, can be displayed in a\r\n\t\t\tpreview window\r\n\tkind\t\tsingle letter indicating the type of completion\r\n\ticase\t\twhen non-zero case is to be ignored when comparing\r\n\t\t\titems to be equal; when omitted zero is used, thus\r\n\t\t\titems that only differ in case are added\r\n\tequal\t\twhen non-zero, always treat this item to be equal when\r\n\t\t\tcomparing. Which means, \"equal=1\" disables filtering\r\n\t\t\tof this item.\r\n\tdup\t\twhen non-zero this match will be added even when an\r\n\t\t\titem with the same word is already present.\r\n\tempty\t\twhen non-zero this match will be added even when it is\r\n\t\t\tan empty string\r\n\tuser_data \tcustom data which is associated with the item and\r\n\t\t\tavailable in |v:completed_item|; it can be any type;\r\n\t\t\tdefaults to an empty string\r\n```\r\n\r\nIf the source set equal, the filtering is disabled.  So no problem.",
            "created_at": "2020-07-12T01:36:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-657160235",
            "id": 657160235,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzE2MDIzNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657160235/reactions"
            },
            "updated_at": "2020-07-12T01:36:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657160235",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here's another fuzzy matching library you may want to look into: https://github.com/dbousque/batch_jaro_winkler",
            "created_at": "2020-07-12T11:32:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-657209587",
            "id": 657209587,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzIwOTU4Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657209587/reactions"
            },
            "updated_at": "2020-07-12T11:32:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657209587",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/442039?v=4",
                "events_url": "https://api.github.com/users/silenc3r/events{/privacy}",
                "followers_url": "https://api.github.com/users/silenc3r/followers",
                "following_url": "https://api.github.com/users/silenc3r/following{/other_user}",
                "gists_url": "https://api.github.com/users/silenc3r/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/silenc3r",
                "id": 442039,
                "login": "silenc3r",
                "node_id": "MDQ6VXNlcjQ0MjAzOQ==",
                "organizations_url": "https://api.github.com/users/silenc3r/orgs",
                "received_events_url": "https://api.github.com/users/silenc3r/received_events",
                "repos_url": "https://api.github.com/users/silenc3r/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/silenc3r/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/silenc3r/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/silenc3r",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't think we even need to implement the fuzzy matching in the first PR.\r\n\r\nSimply exposing a place to pass in a lua function that does fuzzy matching would be enough. Users can create plugins that implement the fuzzy matching themselves.\r\n\r\n```lua\r\nvim.register_fuzzy_complete(function(...)\r\n  -- do fuzzy matching here\r\nend)\r\n```\r\n\r\nor\r\n\r\n`set completefuzzy=v:lua.my_plugin.fuzzy_sort`\r\n\r\nEither of these options are probably fine. I think simply giving the user a hook for the right place would probably enough.",
            "created_at": "2020-07-13T21:46:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-657809809",
            "id": 657809809,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzgwOTgwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657809809/reactions"
            },
            "updated_at": "2020-07-13T21:46:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657809809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(Of course, later we could implement some in core if we thought it'd be useful).",
            "created_at": "2020-07-13T21:46:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-657809912",
            "id": 657809912,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzgwOTkxMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657809912/reactions"
            },
            "updated_at": "2020-07-13T21:46:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657809912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> (Of course, later we could implement some in core if we thought it'd be useful).\r\n\r\nI think including it by default would be very much in line with neovim's goal of being vim with strong defaults and somewhat batteries included. I'd argue this feature falls under that given the prevalence of fuzzy matching in all other modern editors.\r\n\r\nTo clarify, I mean that if we added such a hook, we'd probably end up deprecating it anyway at some point in favour of builtin fuzzy completion at some point.",
            "created_at": "2020-07-14T02:58:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-657937091",
            "id": 657937091,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzkzNzA5MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657937091/reactions"
            },
            "updated_at": "2020-07-14T02:58:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/657937091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
                "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
                "followers_url": "https://api.github.com/users/nhooyr/followers",
                "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
                "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nhooyr",
                "id": 10180857,
                "login": "nhooyr",
                "node_id": "MDQ6VXNlcjEwMTgwODU3",
                "organizations_url": "https://api.github.com/users/nhooyr/orgs",
                "received_events_url": "https://api.github.com/users/nhooyr/received_events",
                "repos_url": "https://api.github.com/users/nhooyr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nhooyr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I do not think we'd deprecate the hook -- you may want different fuzzy finders for different options. \r\n\r\nAdditionally, people have different ideas of how fuzzy / what fuzzy means, and they should be able to just set a new callback for the hook.\r\n\r\nI think it's a good idea to implement one, but I'm suggesting it doesn't have to be in C and it doesn't have to be the world's craziest thing. Exposing a hook + a strong example written in Lua as a sane default is good. We can always add other strategies later / improve the one we create.",
            "created_at": "2020-07-14T16:21:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-658276535",
            "id": 658276535,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODI3NjUzNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 14,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 14,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/658276535/reactions"
            },
            "updated_at": "2020-07-14T16:21:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/658276535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Got it. Hook + strong included example sounds good to me.",
            "created_at": "2020-07-23T15:53:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-663086180",
            "id": 663086180,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzA4NjE4MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/663086180/reactions"
            },
            "updated_at": "2020-07-23T15:53:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/663086180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
                "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
                "followers_url": "https://api.github.com/users/nhooyr/followers",
                "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
                "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nhooyr",
                "id": 10180857,
                "login": "nhooyr",
                "node_id": "MDQ6VXNlcjEwMTgwODU3",
                "organizations_url": "https://api.github.com/users/nhooyr/orgs",
                "received_events_url": "https://api.github.com/users/nhooyr/received_events",
                "repos_url": "https://api.github.com/users/nhooyr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nhooyr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `set completefuzzy=v:lua.my_plugin.fuzzy_sort`\r\n\r\nWhy doesn't `completefunc` work? Can someone explain this in 2 brief sentences (not a link to a gitter discussion)",
            "created_at": "2020-09-05T19:20:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-687651458",
            "id": 687651458,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzY1MTQ1OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/687651458/reactions"
            },
            "updated_at": "2020-09-05T19:20:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/687651458",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk \r\n\r\n> The gitter link above discusses this in more detail but the **problem is that plugins can only fetch the initial candidates fuzzily. As you type more characters, neovim narrows down the list of candidates itself instead of consulting whatever plugin is providing completions. Thus, as you type more characters, you have to provide the exact prefix to narrow down the list.**\r\n\r\n> **It may seem to work if you have autocomplete enabled in which case when the list is narrowed down to zero candidates, the plugin will repopulate the list with new candidates based on fuzzy matching but this results in awkward flickering. See https://github.com/neovim/neovim/pull/8184#issuecomment-377431559**",
            "created_at": "2020-09-05T20:16:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-687658010",
            "id": 687658010,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzY1ODAxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/687658010/reactions"
            },
            "updated_at": "2020-09-05T20:16:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/687658010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
                "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
                "followers_url": "https://api.github.com/users/nhooyr/followers",
                "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
                "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nhooyr",
                "id": 10180857,
                "login": "nhooyr",
                "node_id": "MDQ6VXNlcjEwMTgwODU3",
                "organizations_url": "https://api.github.com/users/nhooyr/orgs",
                "received_events_url": "https://api.github.com/users/nhooyr/received_events",
                "repos_url": "https://api.github.com/users/nhooyr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nhooyr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Flicker is a UI perf bug, not a reason to introduce new options.\r\n\r\nBut even if flicker is fixed, the current model feels hacky/awkward. In https://github.com/neovim/neovim/pull/8184#issuecomment-376613311 I suggested something like `completefilterfunc` which Nvim could consult for its narrowing routine. Does that fit the use-case here? (Maybe this is what @tjdevries was implying with `completefuzzy`, just the \"fuzzy\" part sounds over-specific--the goal is \"filtering\" (matching/sorting), no?)\r\n\r\nAlso related: https://github.com/neovim/neovim/pull/4682",
            "created_at": "2020-09-05T20:25:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-687658912",
            "id": 687658912,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzY1ODkxMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/687658912/reactions"
            },
            "updated_at": "2020-09-05T20:27:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/687658912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Flicker is a UI perf bug, not a reason to introduce new options.\r\n\r\nThat's fair now that I think about it. If we fix the flicker that definitely allows plugins to implement this themselves but I like the idea of a `completefilterfunc` so my filtering across native completions and plugins is exactly the same.",
            "created_at": "2020-09-08T16:23:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-688990276",
            "id": 688990276,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODk5MDI3Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/688990276/reactions"
            },
            "updated_at": "2020-09-08T16:23:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/688990276",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
                "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
                "followers_url": "https://api.github.com/users/nhooyr/followers",
                "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
                "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nhooyr",
                "id": 10180857,
                "login": "nhooyr",
                "node_id": "MDQ6VXNlcjEwMTgwODU3",
                "organizations_url": "https://api.github.com/users/nhooyr/orgs",
                "received_events_url": "https://api.github.com/users/nhooyr/received_events",
                "repos_url": "https://api.github.com/users/nhooyr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nhooyr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "FYI: https://github.com/vim/vim/pull/6932",
            "created_at": "2020-09-11T11:05:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-691029719",
            "id": 691029719,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTAyOTcxOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/691029719/reactions"
            },
            "updated_at": "2020-09-11T11:05:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/691029719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "[asyncomplete.vim](https://github.com/prabirshrestha/asyncomplete.vim) solve this by using concept of [preprocessor](https://github.com/prabirshrestha/asyncomplete.vim/blob/0d4ec1805d50fd39b8b41626e0761736feb307d0/doc/asyncomplete.txt#L74-L106). Trying to come up with good fuzzy algorithm wasn't worth for me since some fuzzy algorithm might not make sense for certain language while makes sense for others. If you start implementing MRU it starts getting more complicated so I pushed it to userland.\r\n\r\nWhile not officially supported you can also create an async asyncomplete preprocessor. Here are few examples;\r\nhttps://github.com/machakann/asyncomplete-ezfilter.vim\r\nhttps://github.com/tsufeki/asyncomplete-fuzzy-match\r\n\r\nFew notable difference compared to other autocomplete plugins is that asyncomplete only takes a function that user can sort/match/filter instead of making it separate. argument to preprocessor takes `{ 'source_name': items}` which looks like `{ 'lsp': [item1, item2]}`, `{buffer: [item1, item2]}`. This allows the user to get the source options and sort it by priority and other improvements they want such as might be don't even show buffer if there are items from other sources.\r\n\r\n+1 `completefilterfunc` since it is very simple and powerful similar to asyncomplete. \r\n\r\nIn future it could support async but I'm hoping lua is fast enough that this wouldn't be a concern.\r\n\r\n```vim\r\nfunction! s:completfilterfunc(opt) abort\r\n   call timer_start(1000, {t->a:opt.complete([])})\r\nendfunction\r\n\r\nset completefilterfunc+=s:completefilterfunc\r\n```\r\n\r\nIf use `+=` one could allow chaining.",
            "created_at": "2020-09-13T14:42:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-691680197",
            "id": 691680197,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTY4MDE5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/691680197/reactions"
            },
            "updated_at": "2020-09-13T14:42:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/691680197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there any news on this PR?\r\nI use neovim native LSP support and can't find any completion plugin support fuzzy :cry: ",
            "created_at": "2021-03-20T17:56:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-803434926",
            "id": 803434926,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzQzNDkyNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803434926/reactions"
            },
            "updated_at": "2021-09-24T13:08:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803434926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20609495?v=4",
                "events_url": "https://api.github.com/users/luathn/events{/privacy}",
                "followers_url": "https://api.github.com/users/luathn/followers",
                "following_url": "https://api.github.com/users/luathn/following{/other_user}",
                "gists_url": "https://api.github.com/users/luathn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luathn",
                "id": 20609495,
                "login": "luathn",
                "node_id": "MDQ6VXNlcjIwNjA5NDk1",
                "organizations_url": "https://api.github.com/users/luathn/orgs",
                "received_events_url": "https://api.github.com/users/luathn/received_events",
                "repos_url": "https://api.github.com/users/luathn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luathn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luathn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luathn",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@luathn I don't know about the PR (really looking forward to it too), but both nvim-compe and completion-nvim support fuzzy search.",
            "created_at": "2021-03-20T18:13:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-803437616",
            "id": 803437616,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzQzNzYxNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803437616/reactions"
            },
            "updated_at": "2021-09-24T13:08:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803437616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/108725?v=4",
                "events_url": "https://api.github.com/users/fsouza/events{/privacy}",
                "followers_url": "https://api.github.com/users/fsouza/followers",
                "following_url": "https://api.github.com/users/fsouza/following{/other_user}",
                "gists_url": "https://api.github.com/users/fsouza/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fsouza",
                "id": 108725,
                "login": "fsouza",
                "node_id": "MDQ6VXNlcjEwODcyNQ==",
                "organizations_url": "https://api.github.com/users/fsouza/orgs",
                "received_events_url": "https://api.github.com/users/fsouza/received_events",
                "repos_url": "https://api.github.com/users/fsouza/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fsouza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fsouza/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fsouza",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@fsouza \r\ncompletion-nvim has an issue flicker when using fuzzy.\r\nBut nvim-compe is awesome. I just tried it out and it's great!\r\nThank you.",
            "created_at": "2021-03-20T19:11:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/12620#issuecomment-803447636",
            "id": 803447636,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12620",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzQ0NzYzNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803447636/reactions"
            },
            "updated_at": "2021-09-24T13:08:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803447636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20609495?v=4",
                "events_url": "https://api.github.com/users/luathn/events{/privacy}",
                "followers_url": "https://api.github.com/users/luathn/followers",
                "following_url": "https://api.github.com/users/luathn/following{/other_user}",
                "gists_url": "https://api.github.com/users/luathn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luathn",
                "id": 20609495,
                "login": "luathn",
                "node_id": "MDQ6VXNlcjIwNjA5NDk1",
                "organizations_url": "https://api.github.com/users/luathn/orgs",
                "received_events_url": "https://api.github.com/users/luathn/received_events",
                "repos_url": "https://api.github.com/users/luathn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luathn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luathn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luathn",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 18,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12620/comments",
    "created_at": "2020-07-11T04:28:25Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/12620/events",
    "html_url": "https://github.com/neovim/neovim/issues/12620",
    "id": 655131919,
    "labels": [
        {
            "color": "BFDADC",
            "default": false,
            "description": "High-risk, potential for delicate/cascading effects",
            "id": 407247013,
            "name": "complexity:high",
            "node_id": "MDU6TGFiZWw0MDcyNDcwMTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:high"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim core functionality or code",
            "id": 858327504,
            "name": "core",
            "node_id": "MDU6TGFiZWw4NTgzMjc1MDQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/core"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/12620/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2NTUxMzE5MTk=",
    "number": 12620,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 18,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 18,
        "url": "https://api.github.com/repos/neovim/neovim/issues/12620/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/12620/timeline",
    "title": "'completefilterfunc'",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:57:47Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/12620",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
        "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
        "followers_url": "https://api.github.com/users/nhooyr/followers",
        "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
        "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nhooyr",
        "id": 10180857,
        "login": "nhooyr",
        "node_id": "MDQ6VXNlcjEwMTgwODU3",
        "organizations_url": "https://api.github.com/users/nhooyr/orgs",
        "received_events_url": "https://api.github.com/users/nhooyr/received_events",
        "repos_url": "https://api.github.com/users/nhooyr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nhooyr",
        "user_view_type": "public"
    }
}