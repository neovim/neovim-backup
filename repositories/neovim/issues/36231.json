{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI've encountered an issue when running `vim.pack.update()` where the update fails with:\n\n```\nE5108: Lua: /usr/local/share/nvim/runtime/lua/vim/pack.lua:838: attempt to concatenate field 'sha_target' (a nil value)\nstack traceback:\n        /usr/local/share/nvim/runtime/lua/vim/pack.lua:838: in function 'compute_feedback_lines_single'\n        /usr/local/share/nvim/runtime/lua/vim/pack.lua:870: in function 'compute_feedback_lines'\n        /usr/local/share/nvim/runtime/lua/vim/pack.lua:1054: in function 'update'\n        [string \":lua\"]:1: in main chunk\n```\n\n```\n> nvim --version\nNVIM v0.12.0-dev-1467+g671841673e-dirty\nBuild type: RelWithDebInfo\nLuaJIT 2.1.1760617492\n```\n\n### Steps to reproduce\n\nI could reproduce this by adding this package to the template (and clearing out the packs in `.local/share/nvim/site/pack/core/opt`).\n\n```\n-- Run this file as `nvim --clean -u minimal.lua`\n\nfor name, url in pairs {\n  -- ADD PLUGINS _NECESSARY_ TO REPRODUCE THE ISSUE, e.g:\n  -- 'https://github.com/author1/plugin1',\n  -- 'https://github.com/author2/plugin2',\n} do\n  local install_path = vim.fn.fnamemodify('nvim_issue/' .. name, ':p')\n  if vim.fn.isdirectory(install_path) == 0 then\n    vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\n  end\n  vim.opt.runtimepath:append(install_path)\nend\n\n-- ADD INIT.LUA SETTINGS _NECESSARY_ FOR REPRODUCING THE ISSUE\n\nvim.pack.add({ \"https://github.com/aileot/nvim-thyme\" }, { confirm = false })\n```\n\nAnd then do `:lua vim.pack.update()`\n\n(I'm also getting some other error while running the minimal reproduction that I don't get when using the standard config but not sure it's relevant here.)\n\n### Expected behavior\n\nDon't crash and allow plugins to be updated.\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-1467+g671841673e-dirty (commit a08aa77e40)\n\n### Vim (not Nvim) behaves the same?\n\nDon't nowk\n\n### Operating system/version\n\nVoid Linux\n\n### Terminal name/version\n\nGhostty 1.1.3\n\n### $TERM environment variable\n\nxterm-ghostty\n\n### Installation\n\nBuild from source",
    "closed_at": "2025-10-19T08:47:31Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I can not reproduce. Here are full steps:\n- Create a new '\\~/.config/nvim-repro' directory with 'init.lua' that contains a single `vim.pack.add({ \"https://github.com/aileot/nvim-thyme\" })` (with or without `{ confirm = false }`). Make sure that '\\~/.config/nvim-repro' was not used for `NVIM_APPNAME` before. Otherwise, remove other relevant directories ('\\~/.local/share/nvim-repro' and '\\~/.local/state/nvim-repro').\n- Start Neovim as `NVIM_APPNAME=nvim-repro nvim` (`nvim` is the latest built version).\n- Wait for the plugin to be installed.\n- Run `:lua vim.pack.update()`. Confirmation buffer is shown as expected. No errors also if doing that after restart (when plugin is already installed).\n\nIf you follow these steps, can you reproduce the error? If not, please, modify them so that the error is reproducible.",
            "created_at": "2025-10-18T14:15:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/36231#issuecomment-3418462139",
            "id": 3418462139,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36231",
            "node_id": "IC_kwDOAPphoM7LwZe7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418462139/reactions"
            },
            "updated_at": "2025-10-18T19:42:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418462139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I just migrated from Lazy.nvim to vim.pack, and I also have this issue. My neovim version is v0.12.0-dev+1466-a04c73ca0.\n\nThe issue occurs when a nonexistent plugin is in `nvim-pack-lock.json`. This happened to me because I tried to install https://github.com/catppuccin/nvim with `vim.pack`, and then realized that I needed to add `name = catppuccin`  to the spec to name the package `catppuccin` instead of `nvim`. This left the following entry in `nvim-pack-lock.json`:\n\n```json\n    \"nvim\": {\n      \"rev\": \"af58927\",\n      \"src\": \"https://github.com/catppuccin/nvim\"\n    },\n```\n\nRemoving this entry fixes the issue for me.\n\nUntil this is properly fixed in `vim.pack` itself, deleting your `nvim-pack-lock.json` file or removing any broken entries will solve this problem.\n\nEdit: Deleting `nvim-pack-lock.json` will recreate the file, but it will be missing some packages as well as the \"rev\" and \"src\" fields for the packages it does find. I assume this is another bug in the lockfile generation. To correctly regenerate everything, `rm -rf ~/.local/share/nvim/site/pack/` in addition to the `nvim-pack-lock.json` file.",
            "created_at": "2025-10-18T19:13:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/36231#issuecomment-3418750755",
            "id": 3418750755,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36231",
            "node_id": "IC_kwDOAPphoM7Lxf8j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418750755/reactions"
            },
            "updated_at": "2025-10-18T19:18:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418750755",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51250849?v=4",
                "events_url": "https://api.github.com/users/superatomic/events{/privacy}",
                "followers_url": "https://api.github.com/users/superatomic/followers",
                "following_url": "https://api.github.com/users/superatomic/following{/other_user}",
                "gists_url": "https://api.github.com/users/superatomic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/superatomic",
                "id": 51250849,
                "login": "superatomic",
                "node_id": "MDQ6VXNlcjUxMjUwODQ5",
                "organizations_url": "https://api.github.com/users/superatomic/orgs",
                "received_events_url": "https://api.github.com/users/superatomic/received_events",
                "repos_url": "https://api.github.com/users/superatomic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/superatomic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/superatomic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/superatomic",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> To correctly regenerate everything, `rm -rf ~/.local/share/nvim/site/pack/` in addition to the `nvim-pack-lock.json` file.\n\nYes! This is what I was missing and it explains why I was struggling to replicate it. This works.",
            "created_at": "2025-10-18T19:27:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/36231#issuecomment-3418757664",
            "id": 3418757664,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36231",
            "node_id": "IC_kwDOAPphoM7Lxhog",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 2,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418757664/reactions"
            },
            "updated_at": "2025-10-18T19:27:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418757664",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4",
                "events_url": "https://api.github.com/users/treeman/events{/privacy}",
                "followers_url": "https://api.github.com/users/treeman/followers",
                "following_url": "https://api.github.com/users/treeman/following{/other_user}",
                "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/treeman",
                "id": 162027,
                "login": "treeman",
                "node_id": "MDQ6VXNlcjE2MjAyNw==",
                "organizations_url": "https://api.github.com/users/treeman/orgs",
                "received_events_url": "https://api.github.com/users/treeman/received_events",
                "repos_url": "https://api.github.com/users/treeman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/treeman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/treeman",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The issue occurs when a nonexistent plugin is in `nvim-pack-lock.json`. This happened to me because I tried to install https://github.com/catppuccin/nvim with `vim.pack`, and then realized that I needed to add `name = catppuccin` to the spec to name the package `catppuccin` instead of `nvim`.\n\nWell, as far as `vim.pack` is concerned, this describes a legitimate installation of a plugin named `nvim` once which is just later not used. Same as if it is very lazy loaded but just hasn't yet been loaded. It *is* possible to have two plugins with the same `src` but different names. There doesn't appear anything to fix here.\n\nFollowing the steps with `catppuccing` example (first have `vim.pack.add({ \"https://github.com/catppuccin/nvim\" })`, then change to `vim.pack.add({ { src = \"https://github.com/catppuccin/nvim\", name = \"catppuccin\" } })`, restart, and `vim.pack.update()`), I still could not reproduce the issue. Updates and `vim.pack.del()` work as expected.\n\n@superatomic, do you have more details about the reproduction steps of this particular error in the issue title?\n\n---\n\n> Edit: Deleting `nvim-pack-lock.json` will recreate the file, but it will be missing some packages as well as the \"rev\" and \"src\" fields for the packages it does find. I assume this is another bug in the lockfile generation. To correctly regenerate everything, `rm -rf ~/.local/share/nvim/site/pack/` in addition to the `nvim-pack-lock.json` file.\n\nThat is #36162. It is being worked on.",
            "created_at": "2025-10-18T19:40:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/36231#issuecomment-3418764321",
            "id": 3418764321,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36231",
            "node_id": "IC_kwDOAPphoM7LxjQh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418764321/reactions"
            },
            "updated_at": "2025-10-18T19:41:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418764321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Following the steps with catppuccing example (first have vim.pack.add({ \"https://github.com/catppuccin/nvim\" }), then change to vim.pack.add({ { src = \"https://github.com/catppuccin/nvim\", name = \"catppuccin\" } }), restart, and vim.pack.update()), I still could not reproduce the issue. Updates and vim.pack.del() work as expected.\n\nStrange. I'll work to make a reproducible init.lua.",
            "created_at": "2025-10-18T19:43:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/36231#issuecomment-3418765564",
            "id": 3418765564,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36231",
            "node_id": "IC_kwDOAPphoM7Lxjj8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418765564/reactions"
            },
            "updated_at": "2025-10-18T19:43:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418765564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51250849?v=4",
                "events_url": "https://api.github.com/users/superatomic/events{/privacy}",
                "followers_url": "https://api.github.com/users/superatomic/followers",
                "following_url": "https://api.github.com/users/superatomic/following{/other_user}",
                "gists_url": "https://api.github.com/users/superatomic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/superatomic",
                "id": 51250849,
                "login": "superatomic",
                "node_id": "MDQ6VXNlcjUxMjUwODQ5",
                "organizations_url": "https://api.github.com/users/superatomic/orgs",
                "received_events_url": "https://api.github.com/users/superatomic/received_events",
                "repos_url": "https://api.github.com/users/superatomic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/superatomic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/superatomic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/superatomic",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Figured out what went wrong. Turns out it was user error, at least for me. When I realized `vim.pack.add` had installed a package named `nvim`, I fixed the line, and then manually deleted the package.\n\nThe following init.lua simulates this behavior. Just run it twice.\n\n```lua\nlocal lock = vim.fs.joinpath(vim.fn.stdpath('config'), 'nvim-pack-lock.json')\nif not vim.uv.fs_stat(lock) then\n  vim.pack.add {\n    'https://github.com/catppuccin/nvim',\n  }\nelse\n  -- Realize mistake and delete broken package\n  local pack = vim.fs.joinpath(vim.fn.stdpath('data'), 'site/pack/core/opt/nvim')\n  vim.fs.rm(pack, { recursive = true, force = true })\n\n  -- Add package correctly\n  vim.pack.add {\n    { src = 'https://github.com/catppuccin/nvim', name = 'catppuccin' },\n  }\n\n  vim.pack.update()\nend\n\nvim.cmd.colorscheme 'catppuccin'\n```\n\n@treeman I would be interested to know if you did a similar thing.\n\nAs I understand it, manually messing with packages is not supported by `vim.pack`:\n\n> It is assumed that all plugins in the directory are managed exclusively by vim.pack.\n\nHowever, I still find it surprising that fully removing a package can break `vim.pack`. Especially when it gracefully handles the situation if the package is still specified in `vim.pack.add` (which it needs to to regenerate packages from just a `nvim-pack-lock.json` on a new machine), and only breaks when the deleted package is not `.add`ed.\n\nI would expect `vim.pack` to either ignore the entry in the lockfile, to reinstall the package with the information provided in the lockfile, or to remove the entry.",
            "created_at": "2025-10-18T20:07:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/36231#issuecomment-3418782400",
            "id": 3418782400,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36231",
            "node_id": "IC_kwDOAPphoM7LxnrA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418782400/reactions"
            },
            "updated_at": "2025-10-18T20:07:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418782400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51250849?v=4",
                "events_url": "https://api.github.com/users/superatomic/events{/privacy}",
                "followers_url": "https://api.github.com/users/superatomic/followers",
                "following_url": "https://api.github.com/users/superatomic/following{/other_user}",
                "gists_url": "https://api.github.com/users/superatomic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/superatomic",
                "id": 51250849,
                "login": "superatomic",
                "node_id": "MDQ6VXNlcjUxMjUwODQ5",
                "organizations_url": "https://api.github.com/users/superatomic/orgs",
                "received_events_url": "https://api.github.com/users/superatomic/received_events",
                "repos_url": "https://api.github.com/users/superatomic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/superatomic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/superatomic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/superatomic",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think I  managed to somehow get a repeat on a second computer, although the example isn't very nice as it includes a fennel to lua compiler and load override via [lze](https://github.com/BirdeeHub/lze). This is how I got the error:\n\n1. `git clone https://github.com/treeman/nvim-repro` to `~/.config/nvim-repro`\n2. `NVIM_APPNAME=nvim-repro nvim`\n3. `v` then `:trust` (for fennel -> lua compilation)\n4. Close and reopen and do `:lua vim.pack.update()` and I'm greeted with the `'sha_target' being nil` error\n\n(There's probably a simpler way to get a repeat but I've struggled and I really need to go to bed. This is what I ended up with when I stripped down my current config that I'm trying to rewrite from Lazy to vim.pack while also trying out fennel...)\n\n> [@treeman](https://github.com/treeman) I would be interested to know if you did a similar thing.\n\nMaybe? I adapted this code from the [lze](https://github.com/BirdeeHub/lze) examples:\n\n```lua\nvim.pack.add({\n    {\n      src = \"https://github.com/NTBBloodBatch/sweetie.nvim\",\n      ...\n}, {\n  load = function(p)\n    local spec = p.spec.data or {}\n    spec.name = p.spec.name\n    require('lze').load(spec)\n  end,\n  -- choose your preference for install confirmation\n  confirm = true,\n})\n```\n\nI was in the process of rewriting my config and I'm sure I added/removed plugins all over the place, in different kinds of configurations, while playing with lazy loading.\n\nEdit: I forgot to commit the lock file that's likely causing the issue.\n\nUnfortunately if you remove the lock file together with the pack files I no longer get the error, and I can't remember exactly what I did to generate the bad lock file.",
            "created_at": "2025-10-18T20:30:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/36231#issuecomment-3418796560",
            "id": 3418796560,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36231",
            "node_id": "IC_kwDOAPphoM7LxrIQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418796560/reactions"
            },
            "updated_at": "2025-10-18T20:58:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3418796560",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4",
                "events_url": "https://api.github.com/users/treeman/events{/privacy}",
                "followers_url": "https://api.github.com/users/treeman/followers",
                "following_url": "https://api.github.com/users/treeman/following{/other_user}",
                "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/treeman",
                "id": 162027,
                "login": "treeman",
                "node_id": "MDQ6VXNlcjE2MjAyNw==",
                "organizations_url": "https://api.github.com/users/treeman/orgs",
                "received_events_url": "https://api.github.com/users/treeman/received_events",
                "repos_url": "https://api.github.com/users/treeman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/treeman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/treeman",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Having on slept in it I realized that the reproduction above doesn't demonstrate anything other than the lock file being out of sync.\n\nHere's a simpler reproduction:\n\n`init.lua`:\n\n```lua\nvim.pack.add({\n\t\"https://github.com/aileot/nvim-thyme\",\n}, { confirm = false })\n```\n\n`nvim-pack-lock.json`:\n\n```json\n{\n  \"plugins\": {\n    \"nvim-laurel\": {\n      \"rev\": \"b197317\",\n      \"src\": \"https://github.com/aileot/nvim-laurel\"\n    },\n    \"nvim-thyme\": {\n      \"rev\": \"1ce4edb\",\n      \"src\": \"https://github.com/aileot/nvim-thyme\"\n    }\n  }\n}\n````\n\n---\n\nAs for why the packs themselves don't match up to the lock file from the beginning, I'm not sure. I suspect I cleared them because I had previously used another fennel plugin that interfered with the new one I was trying to install, while leaving the lock file alone.",
            "created_at": "2025-10-19T04:57:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/36231#issuecomment-3419215948",
            "id": 3419215948,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36231",
            "node_id": "IC_kwDOAPphoM7LzRhM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3419215948/reactions"
            },
            "updated_at": "2025-10-19T04:57:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3419215948",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4",
                "events_url": "https://api.github.com/users/treeman/events{/privacy}",
                "followers_url": "https://api.github.com/users/treeman/followers",
                "following_url": "https://api.github.com/users/treeman/following{/other_user}",
                "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/treeman",
                "id": 162027,
                "login": "treeman",
                "node_id": "MDQ6VXNlcjE2MjAyNw==",
                "organizations_url": "https://api.github.com/users/treeman/orgs",
                "received_events_url": "https://api.github.com/users/treeman/received_events",
                "repos_url": "https://api.github.com/users/treeman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/treeman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/treeman",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> When I realized `vim.pack.add` had installed a package named `nvim`, I fixed the line, and then manually deleted the package.\n\nYes, manually deleting plugin's directory makes lockfile out of sync with what is actually on the disk. And I indeed can reproduce the issue.\n\n> As I understand it, manually messing with packages is not supported by `vim.pack`:\n> \n> > It is assumed that all plugins in the directory are managed exclusively by vim.pack.\n> \n> However, I still find it surprising that fully removing a package can break `vim.pack`. Especially when it gracefully handles the situation if the package is still specified in `vim.pack.add` (which it needs to to regenerate packages from just a `nvim-pack-lock.json` on a new machine), and only breaks when the deleted package is not `.add`ed.\n\nCorrect, manually adjusting anything in the 'pack/core/opt' directory is not supported. Otherwise, it will open a floodgate of issues which would make a `vim.pack` code *a lot* more (needlessly) complex.\n\n> I would expect `vim.pack` to either ignore the entry in the lockfile, to reinstall the package with the information provided in the lockfile, or to remove the entry.\n\nI do agree the current robustness level can be improved, but the problem is to find the right balance with \"happy path\" performance (i.e. when there are no issues). It doesn't look like exaggeration that over 99.9% of Neovim startups will not need the robustness checks at all, So the original idea was to instead rely on \"on demand\" `:checkhealth nvim-pack`, which will check lockfile validity and suggest steps to make it right.\n\nThere is [a plan](https://github.com/neovim/neovim/issues/34763#issuecomment-3330305488) to \"force install all plugins from lockfile at once\" (i.e. if it is in lockfile but not on disk -> install it at correct state), but it should not affect \"happy path\" performance much. *I think* I have an idea on how to achieve that plus resolve #36162 without hopefully much change in startup performance.\n\n---\n\nAnyway, this issue happens due to steps that are explicitly documented as not supported. And there are other places that track possible solutions to it. I think I am going to close this one.",
            "created_at": "2025-10-19T08:47:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/36231#issuecomment-3419429604",
            "id": 3419429604,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36231",
            "node_id": "IC_kwDOAPphoM7L0Frk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3419429604/reactions"
            },
            "updated_at": "2025-10-19T08:47:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3419429604",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think it's reasonable to track this in another issue. Thanks!",
            "created_at": "2025-10-19T14:23:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/36231#issuecomment-3419707443",
            "id": 3419707443,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36231",
            "node_id": "IC_kwDOAPphoM7L1Jgz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3419707443/reactions"
            },
            "updated_at": "2025-10-19T14:23:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3419707443",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4",
                "events_url": "https://api.github.com/users/treeman/events{/privacy}",
                "followers_url": "https://api.github.com/users/treeman/followers",
                "following_url": "https://api.github.com/users/treeman/following{/other_user}",
                "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/treeman",
                "id": 162027,
                "login": "treeman",
                "node_id": "MDQ6VXNlcjE2MjAyNw==",
                "organizations_url": "https://api.github.com/users/treeman/orgs",
                "received_events_url": "https://api.github.com/users/treeman/received_events",
                "repos_url": "https://api.github.com/users/treeman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/treeman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/treeman",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/36231/comments",
    "created_at": "2025-10-18T06:42:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/36231/events",
    "html_url": "https://github.com/neovim/neovim/issues/36231",
    "id": 3528193527,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/36231/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7SS_X3",
    "number": 36231,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/36231/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/36231/timeline",
    "title": "vim.pack: Update fails on 'sha_target' being nil",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-19T14:23:24Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/36231",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4",
        "events_url": "https://api.github.com/users/treeman/events{/privacy}",
        "followers_url": "https://api.github.com/users/treeman/followers",
        "following_url": "https://api.github.com/users/treeman/following{/other_user}",
        "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/treeman",
        "id": 162027,
        "login": "treeman",
        "node_id": "MDQ6VXNlcjE2MjAyNw==",
        "organizations_url": "https://api.github.com/users/treeman/orgs",
        "received_events_url": "https://api.github.com/users/treeman/received_events",
        "repos_url": "https://api.github.com/users/treeman/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/treeman/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/treeman",
        "user_view_type": "public"
    }
}