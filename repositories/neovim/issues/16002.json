{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\r\n\r\nNo.\r\n\r\n### Feature description\r\n\r\nLet's start with an example, save the following to a file:\r\n```vim\r\nset laststatus=2\r\nset fillchars=stl:-\r\nfunction My_neat_stl()\r\n  return \"nice stl\"\r\nendfunction\r\nlet &l:stl='%{My_neat_stl()}'\r\n```\r\nThen do `:so %` to source that file.\r\nYou'll notice that the output will be something like `nice-stl-----(...)`.\r\n\r\nI think this should not happen. By returning certain string from a function I expect it to be exactly as I returned it. It would be nice if it that was the case or if there was a way to at least escape that space so that it continues to be one in the statusline.",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/74260683?v=4",
        "events_url": "https://api.github.com/users/ndavd/events{/privacy}",
        "followers_url": "https://api.github.com/users/ndavd/followers",
        "following_url": "https://api.github.com/users/ndavd/following{/other_user}",
        "gists_url": "https://api.github.com/users/ndavd/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ndavd",
        "id": 74260683,
        "login": "ndavd",
        "node_id": "MDQ6VXNlcjc0MjYwNjgz",
        "organizations_url": "https://api.github.com/users/ndavd/orgs",
        "received_events_url": "https://api.github.com/users/ndavd/received_events",
        "repos_url": "https://api.github.com/users/ndavd/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ndavd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ndavd/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ndavd",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Maybe there can be people who actually depend on this behavior. On the other hand, workarounds have been mentioned in <https://github.com/vim/vim/issues/8995>.",
            "created_at": "2021-10-26T23:15:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/16002#issuecomment-952400649",
            "id": 952400649,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16002",
            "node_id": "IC_kwDOAPphoM44xHsJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/952400649/reactions"
            },
            "updated_at": "2021-10-26T23:15:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/952400649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I don't see how someone would depend on this behavior. About that workaround, I know it since I made that issue as well and I'm currently using it, but it seems to make more sense this way, if you're returning a space from a function I guess you would not want for it to be changed since you have full control of the function you made you return whatever you need and don't expect it to be later substituted by the `fillchar`... \r\nBut anyway this workaround works, I just thought it's still worth mentioning because it seems like a bug to me.",
            "created_at": "2021-10-27T11:59:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/16002#issuecomment-952850102",
            "id": 952850102,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16002",
            "node_id": "IC_kwDOAPphoM44y1a2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/952850102/reactions"
            },
            "updated_at": "2021-10-27T11:59:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/952850102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/74260683?v=4",
                "events_url": "https://api.github.com/users/ndavd/events{/privacy}",
                "followers_url": "https://api.github.com/users/ndavd/followers",
                "following_url": "https://api.github.com/users/ndavd/following{/other_user}",
                "gists_url": "https://api.github.com/users/ndavd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ndavd",
                "id": 74260683,
                "login": "ndavd",
                "node_id": "MDQ6VXNlcjc0MjYwNjgz",
                "organizations_url": "https://api.github.com/users/ndavd/orgs",
                "received_events_url": "https://api.github.com/users/ndavd/received_events",
                "repos_url": "https://api.github.com/users/ndavd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ndavd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ndavd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ndavd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm mixed on this. I can conceive of cases where a user _would_ want all spaces to be filled with `'fillchars'`, even those they insert themselves, e.g. if they insert spaces for padding or something.\r\n\r\nBecause of this, I'm leaning toward agreeing with Bram. In the face of ambiguity on what a user might expect, it's best to assume as little as possible and provide the tools to let users do what they want: in this case, that means using NBSP (as Bram suggested) to emulate a space that is not filled by 'fillchars'.",
            "created_at": "2021-10-27T13:41:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/16002#issuecomment-952943068",
            "id": 952943068,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16002",
            "node_id": "IC_kwDOAPphoM44zMHc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/952943068/reactions"
            },
            "updated_at": "2021-10-27T13:41:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/952943068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Maybe send a doc change to Vim describing how to use nbsp to satisfy this use case, and we'll get that in the runtime update.",
            "created_at": "2021-10-27T15:12:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/16002#issuecomment-953028512",
            "id": 953028512,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16002",
            "node_id": "IC_kwDOAPphoM44zg-g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/953028512/reactions"
            },
            "updated_at": "2021-10-27T15:12:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/953028512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "yeah that sounds good",
            "created_at": "2021-10-27T15:14:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/16002#issuecomment-953031208",
            "id": 953031208,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16002",
            "node_id": "IC_kwDOAPphoM44zhoo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/953031208/reactions"
            },
            "updated_at": "2021-10-27T15:14:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/953031208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/74260683?v=4",
                "events_url": "https://api.github.com/users/ndavd/events{/privacy}",
                "followers_url": "https://api.github.com/users/ndavd/followers",
                "following_url": "https://api.github.com/users/ndavd/following{/other_user}",
                "gists_url": "https://api.github.com/users/ndavd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ndavd",
                "id": 74260683,
                "login": "ndavd",
                "node_id": "MDQ6VXNlcjc0MjYwNjgz",
                "organizations_url": "https://api.github.com/users/ndavd/orgs",
                "received_events_url": "https://api.github.com/users/ndavd/received_events",
                "repos_url": "https://api.github.com/users/ndavd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ndavd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ndavd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ndavd",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16002/comments",
    "created_at": "2021-10-12T19:26:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/16002/events",
    "html_url": "https://github.com/neovim/neovim/issues/16002",
    "id": 1024212219,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "issue needs attention from an expert, or PR proposes significant changes to architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "tabline, winbar, statuscolumn",
            "id": 3385615828,
            "name": "statusline",
            "node_id": "LA_kwDOAPphoM7JzGXU",
            "url": "https://api.github.com/repos/neovim/neovim/labels/statusline"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/16002/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM49DDz7",
    "number": 16002,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/16002/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/16002/timeline",
    "title": "statusline: make strings that come from expressions not being evaluated by fillchars ",
    "updated_at": "2025-01-17T15:59:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/16002",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/74260683?v=4",
        "events_url": "https://api.github.com/users/ndavd/events{/privacy}",
        "followers_url": "https://api.github.com/users/ndavd/followers",
        "following_url": "https://api.github.com/users/ndavd/following{/other_user}",
        "gists_url": "https://api.github.com/users/ndavd/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ndavd",
        "id": 74260683,
        "login": "ndavd",
        "node_id": "MDQ6VXNlcjc0MjYwNjgz",
        "organizations_url": "https://api.github.com/users/ndavd/orgs",
        "received_events_url": "https://api.github.com/users/ndavd/received_events",
        "repos_url": "https://api.github.com/users/ndavd/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ndavd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ndavd/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ndavd",
        "user_view_type": "public"
    }
}