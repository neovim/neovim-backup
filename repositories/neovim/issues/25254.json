{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nOccasionally, when I am using `nvim-treesitter`'s incremental selection, neovim crashes. I see it occurring while editing Rust and Python files.\r\n\r\nAt first I was pretty sure it was https://github.com/neovim/neovim/issues/24783 and https://github.com/neovim/neovim/issues/23613, which was finally fixed by https://github.com/neovim/neovim/pull/24796 and back ported to nvim v0.9.2. But even after updating I am still seeing similar crashes.\r\n\r\nIn the archive below are two coredumps of the crash, and following it the output of `bt` in gdb for the last coredump.\r\n\r\n[coredumps.tar.gz](https://github.com/neovim/neovim/files/12667664/coredumps.tar.gz)\r\n\r\n<details>\r\n  <summary>Backtrace</summary>\r\n\r\n```gdb\r\n           PID: 4597 (nvim)\r\n           UID: 1000 (rodrigodd)\r\n           GID: 1000 (rodrigodd)\r\n        Signal: 11 (SEGV)\r\n     Timestamp: Tue 2023-09-19 21:39:53 -03 (39min ago)\r\n  Command Line: nvim --embed render/src/lib.rs\r\n    Executable: /usr/bin/nvim\r\n Control Group: /user.slice/user-1000.slice/session-3.scope\r\n          Unit: session-3.scope\r\n         Slice: user-1000.slice\r\n       Session: 3\r\n     Owner UID: 1000 (rodrigodd)\r\n       Boot ID: 41590c1a451849c9b790cc567bbcc5f5\r\n    Machine ID: e031b41f9df244e2b74641456973fcab\r\n      Hostname: nb-rodrigo\r\n       Storage: /var/lib/systemd/coredump/core.nvim.1000.41590c1a451849c9b790cc567bbcc5f5.4597.1695170393000000.zst (present)\r\n  Size on Disk: 9.8M\r\n       Message: Process 4597 (nvim) of user 1000 dumped core.\r\n\r\n                Stack trace of thread 4597:\r\n                #0  0x00007f4067ec5f74 ts_node_end_point (libtree-sitter.so.0 + 0x7f74)\r\n                #1  0x0000556dc036fbee n/a (nvim + 0x1e9bee)\r\n                #2  0x00007f4067e1fef6 n/a (libluajit-5.1.so.2 + 0x9ef6)\r\n                #3  0x00007f4067e32ab3 lua_pcall (libluajit-5.1.so.2 + 0x1cab3)\r\n                #4  0x0000556dc03639b1 n/a (nvim + 0x1dd9b1)\r\n                #5  0x0000556dc0373163 n/a (nvim + 0x1ed163)\r\n                #6  0x0000556dc0374638 ex_lua (nvim + 0x1ee638)\r\n                #7  0x0000556dc0515881 n/a (nvim + 0x38f881)\r\n                #8  0x0000556dc0309559 do_cmdline (nvim + 0x183559)\r\n                #9  0x0000556dc03ca777 n/a (nvim + 0x244777)\r\n                #10 0x0000556dc03c4436 n/a (nvim + 0x23e436)\r\n                #11 0x0000556dc04931c7 state_enter (nvim + 0x30d1c7)\r\n                #12 0x0000556dc03c3309 normal_enter (nvim + 0x23d309)\r\n                #13 0x0000556dc01fb777 main (nvim + 0x75777)\r\n                #14 0x00007f4067a27cd0 n/a (libc.so.6 + 0x27cd0)\r\n                #15 0x00007f4067a27d8a __libc_start_main (libc.so.6 + 0x27d8a)\r\n                #16 0x0000556dc01fdb85 _start (nvim + 0x77b85)\r\n\r\n                Stack trace of thread 13134:\r\n                #0  0x0000000000000000 n/a (n/a + 0x0)\r\n                ELF object binary architecture: AMD x86-64\r\n\r\nGNU gdb (GDB) 13.2\r\nCopyright (C) 2023 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.\r\nType \"show copying\" and \"show warranty\" for details.\r\nThis GDB was configured as \"x86_64-pc-linux-gnu\".\r\nType \"show configuration\" for configuration details.\r\nFor bug reporting instructions, please see:\r\n<https://www.gnu.org/software/gdb/bugs/>.\r\nFind the GDB manual and other documentation resources online at:\r\n    <http://www.gnu.org/software/gdb/documentation/>.\r\n\r\nFor help, type \"help\".\r\nType \"apropos word\" to search for commands related to \"word\"...\r\nReading symbols from /usr/bin/nvim...\r\nReading symbols from /home/rodrigodd/.cache/debuginfod_client/c581c5fbec614fe78eb1c89dc0bf1cb2eebcc357/debuginfo...\r\n\r\nwarning: Can't open file anon_inode:[io_uring] which was expanded to anon_inode:[io_uring] during file-backed mapping note processing\r\n\r\nwarning: Can't open file anon_inode:[io_uring] which was expanded to anon_inode:[io_uring] during file-backed mapping note processing\r\n\r\nwarning: Can't open file anon_inode:[io_uring] which was expanded to anon_inode:[io_uring] during file-backed mapping note processing\r\n\r\nwarning: Can't open file anon_inode:[io_uring] which was expanded to anon_inode:[io_uring] during file-backed mapping note processing\r\n\r\nwarning: Can't open file anon_inode:[io_uring] which was expanded to anon_inode:[io_uring] during file-backed mapping note processing\r\n\r\nwarning: Can't open file anon_inode:[io_uring] which was expanded to anon_inode:[io_uring] during file-backed mapping note processing\r\n\r\nwarning: Can't open file anon_inode:[io_uring] which was expanded to anon_inode:[io_uring] during file-backed mapping note processing\r\n\r\nwarning: Can't open file anon_inode:[io_uring] which was expanded to anon_inode:[io_uring] during file-backed mapping note processing\r\n[New LWP 4597]\r\n[New LWP 13134]\r\n[New LWP 4599]\r\n[New LWP 4616]\r\n[New LWP 19958]\r\n[New LWP 18796]\r\n[New LWP 4600]\r\n                                                                                                                                                                          --Type <RET> for more, q to quit, c to continue without paging--\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/usr/lib/libthread_db.so.1\".\r\nCore was generated by `nvim --embed render/src/lib.rs'.\r\nProgram terminated with signal SIGSEGV, Segmentation fault.\r\n#0  0x00007f4067ec5f74 in ts_node_end_point () from /usr/lib/libtree-sitter.so.0\r\n[Current thread is 1 (Thread 0x7f4067ccb740 (LWP 4597))]\r\n(gdb) bt\r\n#0  0x00007f4067ec5f74 in ts_node_end_point () from /usr/lib/libtree-sitter.so.0\r\n#1  0x0000556dc036fbee in node_range (L=0x7f4067cab380) at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/lua/treesitter.c:821\r\n#2  0x00007f4067e1fef6 in lj_BC_FUNCC () at buildvm_x86.dasc:857\r\n#3  0x00007f4067e32ab3 in lua_pcall (L=L@entry=0x7f4067cab380, nargs=nargs@entry=0, nresults=nresults@entry=0, errfunc=errfunc@entry=-2)\r\n    at /usr/src/debug/luajit/luajit-2.0-4611e25/src/lj_api.c:1116\r\n#4  0x0000556dc03639b1 in nlua_pcall (lstate=0x7f4067cab380, nargs=0, nresults=0) at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/lua/executor.c:159\r\n#5  0x0000556dc0373163 in nlua_typval_exec (lcmd=<optimized out>, lcmd_len=<optimized out>, name=<optimized out>, args=<optimized out>, argcount=0, special=false,\r\n    ret_tv=0x0) at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/lua/executor.c:1443\r\n#6  0x0000556dc0374638 in nlua_typval_exec (ret_tv=0x0, special=false, argcount=0, args=0x0, name=0x556dc052730d \":lua\", lcmd_len=<optimized out>,\r\n    lcmd=0x556dc283d260 \"require'nvim-treesitter.incremental_selection'.node_incremental()\") at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/memory.c:134\r\n#7  ex_lua (eap=<optimized out>) at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/lua/executor.c:1639\r\n#8  0x0000556dc0515881 in execute_cmd0.constprop.0 (retv=0x7fffeda90c68, eap=0x7fffeda90cf0, errormsg=0x7fffeda90c60, preview=false)\r\n    at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/ex_docmd.c:1620\r\n#9  0x0000556dc0309559 in do_one_cmd (cookie=0x0, fgetline=0x556dc031c830 <getexline>, cstack=0x7fffeda90eb0, flags=<optimized out>, cmdlinep=0x7fffeda90c58)\r\n    at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/ex_docmd.c:2279\r\n#10 do_cmdline (cmdline=<optimized out>, fgetline=0x556dc031c830 <getexline>, cookie=0x0, flags=0) at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/ex_docmd.c:578\r\n#11 0x0000556dc03ca777 in nv_colon (cap=0x7fffeda915d0) at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/normal.c:3247\r\n#12 0x0000556dc03c4436 in normal_execute (state=0x7fffeda91550, key=<optimized out>) at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/normal.c:1207\r\n#13 0x0000556dc04931c7 in state_enter (s=0x7fffeda91550) at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/state.c:99\r\n#14 0x0000556dc03c3309 in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/normal.c:497\r\n#15 0x0000556dc01fb777 in main (argc=<optimized out>, argv=<optimized out>) at /usr/src/debug/neovim/neovim-0.9.2/src/nvim/main.c:642\r\n```\r\n\r\n</details>\n\n### Steps to reproduce\n\nI tried both reproduction steps in https://github.com/neovim/neovim/issues/24783 and https://github.com/neovim/neovim/issues/23613, but they either did not triggered the crash or didn't work in v0.9.2 (missing treesitter parser, even though `:help treesitter-parsers` says neovim bundles them by default?).\r\n\r\nI could not create a reproduction, at least not yet.\n\n### Expected behavior\n\nnot crash\n\n### Neovim version (nvim -v)\n\nNVIM v0.9.2 Build type: Release LuaJIT 2.1.1694285958     system vimrc file: \"$VIM/sysinit.vim\"   fall-back for $VIM: \"/usr/share/nvim\"  Run :checkhealth for more info\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nArch Linux, kernel 6.5.3-zen1-1-zen\n\n### Terminal name/version\n\nalacritty 0.12.2 (9d9982df)\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\npacman -S neovim",
    "closed_at": "2025-06-06T14:35:54Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I was able to capture two coredump of the crash with a debug build of neovim, with UBSAN enabled (which is constantly reporting leaked lua objects on exit, is it normal?).\r\n\r\nBelow is the backtrace and coredump of the last crash that I capture (the other one was too big to attach here).\r\n\r\n<details>\r\n<summary>Backtrace</summary>\r\n\r\n```gdb\r\n           PID: 20731 (nvim)\r\n           UID: 1000 (rodrigodd)\r\n           GID: 1000 (rodrigodd)\r\n        Signal: 6 (ABRT)\r\n     Timestamp: Sat 2023-09-30 21:14:46 -03 (16min ago)\r\n  Command Line: nvim --embed render/src/lib.rs\r\n    Executable: /usr/local/bin/nvim\r\n Control Group: /user.slice/user-1000.slice/session-3.scope\r\n          Unit: session-3.scope\r\n         Slice: user-1000.slice\r\n       Session: 3\r\n     Owner UID: 1000 (rodrigodd)\r\n       Boot ID: 3cf08da0240a46dca9e4e750392aa9b9\r\n    Machine ID: e031b41f9df244e2b74641456973fcab\r\n      Hostname: nb-rodrigo\r\n       Storage: /var/lib/systemd/coredump/core.nvim.1000.3cf08da0240a46dca9e4e750392aa9b9.20731.1696119286000000.zst (present)\r\n  Size on Disk: 12.5M\r\n       Message: Process 20731 (nvim) of user 1000 dumped core.\r\n                \r\n                Stack trace of thread 20731:\r\n                #0  0x00007f7efde8e83c n/a (libc.so.6 + 0x8e83c)\r\n                #1  0x00007f7efde3e668 raise (libc.so.6 + 0x3e668)\r\n                #2  0x00007f7efde264b8 abort (libc.so.6 + 0x264b8)\r\n                #3  0x000055b338f000b1 _ZN11__sanitizer5AbortEv (nvim + 0xcd10b1)\r\n                #4  0x000055b338efd852 _ZN11__sanitizer3DieEv (nvim + 0xcce852)\r\n                #5  0x000055b338edefe0 _ZN6__asan19ScopedInErrorReportD1Ev (nvim + 0xcaffe0)\r\n                #6  0x000055b338edb5c1 _ZN6__asan18ReportDeadlySignalERKN11__sanitizer13SignalContextE (nvim + 0xcac5c1)\r\n                #7  0x000055b338eda379 _ZN6__asan18AsanOnDeadlySignalEiPvS0_ (nvim + 0xcab379)\r\n                #8  0x00007f7efde3e710 n/a (libc.so.6 + 0x3e710)\r\n                #9  0x000055b33a8e94cc ts_subtree_size (nvim + 0x26ba4cc)\r\n                #10 0x000055b33a8eea18 ts_node_end_point (nvim + 0x26bfa18)\r\n                #11 0x000055b339aeae2a node_range (nvim + 0x18bbe2a)\r\n                #12 0x000055b33a9337d6 lj_BC_FUNCC (nvim + 0x27047d6)\r\n                #13 0x000055b33a91fc35 lua_pcall (nvim + 0x26f0c35)\r\n                #14 0x000055b339acdcbe nlua_pcall (nvim + 0x189ecbe)\r\n                #15 0x000055b339acd428 nlua_typval_exec (nvim + 0x189e428)\r\n                #16 0x000055b339ad02ec ex_lua (nvim + 0x18a12ec)\r\n                #17 0x000055b3397be9ff execute_cmd0 (nvim + 0x158f9ff)\r\n                #18 0x000055b33979bd6d do_one_cmd (nvim + 0x156cd6d)\r\n                #19 0x000055b33978c5b5 do_cmdline (nvim + 0x155d5b5)\r\n                #20 0x000055b339e0a328 nv_colon (nvim + 0x1bdb328)\r\n                #21 0x000055b339df5dd6 normal_execute (nvim + 0x1bc6dd6)\r\n                #22 0x000055b33a40427d state_enter (nvim + 0x21d527d)\r\n                #23 0x000055b339dd9191 normal_enter (nvim + 0x1baa191)\r\n                #24 0x000055b338f212b1 main (nvim + 0xcf22b1)\r\n                #25 0x00007f7efde27cd0 n/a (libc.so.6 + 0x27cd0)\r\n                #26 0x00007f7efde27d8a __libc_start_main (libc.so.6 + 0x27d8a)\r\n                #27 0x000055b338de6db5 _start (nvim + 0xbb7db5)\r\n                \r\n                Stack trace of thread 20733:\r\n                #0  0x0000000000000000 n/a (n/a + 0x0)\r\n                #1  0x000055b33bd3f940 ins_compl_show_statusmsg.match_ref (nvim + 0x3b10940)\r\n                ELF object binary architecture: AMD x86-64\r\n```\r\n\r\n</details>\r\n\r\n[dumps.tar.gz](https://github.com/neovim/neovim/files/12775791/dumps.tar.gz)\r\n\r\nI was hoping that the UBSAN would catch the bug earlier, but it is still happening in the same place. But now it is possible to see that the crash actually happens in `ts_subtree_size`, while dereferencing `self.ptr`.\r\n\r\nI am not familiar with neither `treesitter` nor `neovim` code base, but `self` is a `Subtree`, which is a union between a `SubtreeInlineData` and a pointer to `SubtreeHeapData`. It check which variant it is by checking the bitfield `is_inline`, which appears to be one of the 8 first bits of the union.\r\n\r\nThe problem is that `is_inline` is false, but the `ptr` is a too small value (`0x2034`) to be pointing to a value memory. The other crash have a similar small value (`0x2B72`).\r\n\r\nBelow is the value of `TSNode`, which contains the `id` field, which is casted to `Subtree` immediately before passing to `ts_subtree_size`.\r\n\r\n```gdb\r\n(gdb) print (TSNode)self\r\n$15 = {context = {18686, 558, 12, 0}, id = 0x6080002e9aa0, tree = 0x6030002fb0c0}\r\n(gdb) print *(Subtree *)self.id\r\n$16 = {data = {is_inline = false, visible = false, named = true, extra = false, has_changes = true, is_missing = true, is_keyword = false, symbol = 32 ' ',\r\n    parse_state = 0, padding_columns = 0 '\\000', padding_rows = 0 '\\000', lookahead_bytes = 0 '\\000', padding_bytes = 0 '\\000', size_bytes = 0 '\\000'}, ptr = 0x2034}\r\n(gdb) print *(TSTree *)self.tree\r\n$17 = {root = {data = {is_inline = false, visible = false, named = false, extra = false, has_changes = true, is_missing = true, is_keyword = false, symbol = 1 '\\001',\r\n      parse_state = 48, padding_columns = 128 '\\200', padding_rows = 0 '\\000', lookahead_bytes = 6 '\\006', padding_bytes = 0 '\\000', size_bytes = 0 '\\000'},\r\n    ptr = 0x6080003001b0}, language = 0x7f7ef9f02d20 <language>, included_ranges = 0x6030002fb0f0, included_range_count = 1}\r\n```\r\n\r\nDoes anyone has any idea what could cause this problem? I could not even find where `id` is assigned.\r\n\r\nI would also appreciate if anyone could give me any tips on how could I debug this.\r\n\r\n## nvim -v\r\n\r\n```\r\nNVIM v0.9.2\r\nBuild type: Debug\r\nLuaJIT 2.1.1692716794\r\nCompilation: /usr/bin/clang -g -fno-sanitize-recover=all -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address -fsanitize=undefined -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wvla -Wdouble-promotion -Wmissing-noreturn -Wmissing-format-attribute -Wmissing-prototypes -Wimplicit-fallthrough -fdiagnostics-color=always -fstack-protector-strong -DNVIM_LOG_DEBUG -DUNIT_TESTING -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DEXITFREE -I/home/rodrigodd/repos/neovim/.deps/usr/include/luajit-2.1 -I/usr/include -I/home/rodrigodd/repos/neovim/.deps/usr/include -I/home/rodrigodd/repos/neovim/build/src/nvim/auto -I/home/rodrigodd/repos/neovim/build/include -I/home/rodrigodd/repos/neovim/build/cmake.config -I/home/rodrigodd/repos/neovim/src -I/usr/include -I/home/rodrigodd/repos/neovim/.deps/usr/include -I/home/rodrigodd/repos/neovim/.deps/usr/include -I/home/rodrigodd/repos/neovim/.deps/usr/include -I/home/rodrigodd/repos/neovim/.deps/usr/include -I/home/rodrigodd/repos/neovim/.deps/usr/include -I/home/rodrigodd/repos/neovim/.deps/usr/include\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/local/share/nvim\"\r\n\r\nRun :checkhealth for more info\r\n```\r\n\r\n",
            "created_at": "2023-10-01T01:40:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-1741918300",
            "id": 1741918300,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM5n05Bc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1741918300/reactions"
            },
            "updated_at": "2023-10-01T01:40:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1741918300",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
                "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Rodrigodd/followers",
                "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Rodrigodd",
                "id": 51273772,
                "login": "Rodrigodd",
                "node_id": "MDQ6VXNlcjUxMjczNzcy",
                "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
                "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
                "repos_url": "https://api.github.com/users/Rodrigodd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Rodrigodd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I made a patch to neovim to see if I could trigger the issue early (I though that maybe a invalid node tree was being pushed to the Lua stack).\r\n\r\n<details>\r\n\r\n <summary>patch</summary>\r\n\r\n```diff\r\ndiff --git a/src/nvim/lua/treesitter.c b/src/nvim/lua/treesitter.c\r\nindex 988126a4e..5aa7cfa63 100644\r\n--- a/src/nvim/lua/treesitter.c\r\n+++ b/src/nvim/lua/treesitter.c\r\n@@ -47,6 +47,23 @@ typedef struct {\r\n   TSTree *tree;\r\n } TSLuaTree;\r\n \r\n+struct SubtreeInlineData {\r\n+  bool is_inline : 1;\r\n+  bool visible : 1;\r\n+  bool named : 1;\r\n+  bool extra : 1;\r\n+  bool has_changes : 1;\r\n+  bool is_missing : 1;\r\n+  bool is_keyword : 1;\r\n+  uint8_t symbol;\r\n+  uint16_t parse_state;\r\n+  uint8_t padding_columns;\r\n+  uint8_t padding_rows : 4;\r\n+  uint8_t lookahead_bytes : 4;\r\n+  uint8_t padding_bytes;\r\n+  uint8_t size_bytes;\r\n+};\r\n+\r\n #ifdef INCLUDE_GENERATED_DECLARATIONS\r\n # include \"lua/treesitter.c.generated.h\"\r\n #endif\r\n@@ -750,6 +767,14 @@ static void push_node(lua_State *L, TSNode node, int uindex)\r\n     lua_pushnil(L);  // [nil]\r\n     return;\r\n   }\r\n+\r\n+  if (node.id != NULL) {\r\n+    struct SubtreeInlineData *subtree = (struct SubtreeInlineData *)node.id;\r\n+    if (!subtree->is_inline) {\r\n+      assert((intptr_t)subtree > 0xffff);\r\n+    }\r\n+  }\r\n+\r\n   TSNode *ud = lua_newuserdata(L, sizeof(TSNode));  // [udata]\r\n   *ud = node;\r\n   lua_getfield(L, LUA_REGISTRYINDEX, TS_META_NODE);  // [udata, meta]\r\n@@ -763,6 +788,14 @@ static bool node_check(lua_State *L, int index, TSNode *res)\r\n   TSNode *ud = luaL_checkudata(L, index, TS_META_NODE);\r\n   if (ud) {\r\n     *res = *ud;\r\n+\r\n+    if (res->id != NULL) {\r\n+      struct SubtreeInlineData *subtree = (struct SubtreeInlineData *)res->id;\r\n+      if (!subtree->is_inline) {\r\n+        assert((intptr_t)subtree > 0xffff);\r\n+      }\r\n+    }\r\n+\r\n     return true;\r\n   }\r\n   return false;\r\n```\r\n\r\n</details>\r\n\r\nThis change didn't make the crash happen as early as I was intended, but it made ASAN able detect a heap-user-after-free:\r\n\r\n<details>\r\n\r\n <summary>ASAN heap-use-after-free</summary>\r\n\r\n```gdb\r\n=================================================================\r\n==17833==ERROR: AddressSanitizer: heap-use-after-free on address 0x608000095fa0 at pc 0x557a487deddd bp 0x7ffda3cd3db0 sp 0x7ffda3cd3da8\r\nREAD of size 1 at 0x608000095fa0 thread T0\r\n    #0 0x557a487deddc in node_check /home/rodrigodd/repos/neovim/src/nvim/lua/treesitter.c:775:21\r\n    #1 0x557a487e0f04 in node_range /home/rodrigodd/repos/neovim/src/nvim/lua/treesitter.c:828:8\r\n    #2 0x557a49629b95 in lj_BC_FUNCC (/usr/local/bin/nvim+0x2704b95) (BuildId: 64279e2d8963ae255769c01ee3cd6047ed18920b)\r\n    #3 0x557a49615ff4 in lua_pcall /home/rodrigodd/repos/neovim/.deps/build/src/luajit/src/lj_api.c:1145:12\r\n    #4 0x557a487c3cbd in nlua_pcall /home/rodrigodd/repos/neovim/src/nvim/lua/executor.c:159:16\r\n    #5 0x557a487c3427 in nlua_typval_exec /home/rodrigodd/repos/neovim/src/nvim/lua/executor.c:1443:7\r\n    #6 0x557a487c62eb in ex_lua /home/rodrigodd/repos/neovim/src/nvim/lua/executor.c:1639:3\r\n    #7 0x557a484b49fe in execute_cmd0 /home/rodrigodd/repos/neovim/src/nvim/ex_docmd.c:1620:7\r\n    #8 0x557a48491d6c in do_one_cmd /home/rodrigodd/repos/neovim/src/nvim/ex_docmd.c:2279:7\r\n    #9 0x557a484825b4 in do_cmdline /home/rodrigodd/repos/neovim/src/nvim/ex_docmd.c:578:20\r\n    #10 0x557a48b006e7 in nv_colon /home/rodrigodd/repos/neovim/src/nvim/normal.c:3247:18\r\n    #11 0x557a48aec195 in normal_execute /home/rodrigodd/repos/neovim/src/nvim/normal.c:1207:3\r\n    #12 0x557a490fa63c in state_enter /home/rodrigodd/repos/neovim/src/nvim/state.c:99:26\r\n    #13 0x557a48acf550 in normal_enter /home/rodrigodd/repos/neovim/src/nvim/normal.c:497:3\r\n    #14 0x557a47c172b0 in main /home/rodrigodd/repos/neovim/src/nvim/main.c:642:3\r\n    #15 0x7f7c31c3eccf  (/usr/lib/libc.so.6+0x27ccf) (BuildId: 8bfe03f6bf9b6a6e2591babd0bbc266837d8f658)\r\n    #16 0x7f7c31c3ed89 in __libc_start_main (/usr/lib/libc.so.6+0x27d89) (BuildId: 8bfe03f6bf9b6a6e2591babd0bbc266837d8f658)\r\n    #17 0x557a47adcdb4 in _start (/usr/local/bin/nvim+0xbb7db4) (BuildId: 64279e2d8963ae255769c01ee3cd6047ed18920b)\r\n\r\n0x608000095fa0 is located 0 bytes inside of 86-byte region [0x608000095fa0,0x608000095ff6)\r\nfreed by thread T0 here:\r\n    #0 0x557a47bca5a2 in __interceptor_free.part.0 asan_malloc_linux.cpp.o\r\n    #1 0x557a489c1948 in xfree /home/rodrigodd/repos/neovim/src/nvim/memory.c:134:3\r\n    #2 0x557a489960aa in ml_flush_line /home/rodrigodd/repos/neovim/src/nvim/memline.c:2753:5\r\n    #3 0x557a4899b0c8 in ml_get_buf /home/rodrigodd/repos/neovim/src/nvim/memline.c:1842:5\r\n    #4 0x557a47c97da1 in buf_collect_lines /home/rodrigodd/repos/neovim/src/nvim/api/buffer.c:1435:20\r\n    #5 0x557a47c9733e in nvim_buf_get_lines /home/rodrigodd/repos/neovim/src/nvim/api/buffer.c:312:8\r\n    #6 0x557a47c3a3a3 in nlua_api_nvim_buf_get_lines /home/rodrigodd/repos/neovim/build/src/nvim/auto/lua_api_c_bindings.generated.c:460:31\r\n    #7 0x557a49629b95 in lj_BC_FUNCC (/usr/local/bin/nvim+0x2704b95) (BuildId: 64279e2d8963ae255769c01ee3cd6047ed18920b)\r\n\r\npreviously allocated by thread T0 here:\r\n    #0 0x557a47bcb5d9 in __interceptor_malloc (/usr/local/bin/nvim+0xca65d9) (BuildId: 64279e2d8963ae255769c01ee3cd6047ed18920b)\r\n    #1 0x557a489c16c6 in try_malloc /home/rodrigodd/repos/neovim/src/nvim/memory.c:88:15\r\n    #2 0x557a489c189c in xmalloc /home/rodrigodd/repos/neovim/src/nvim/memory.c:122:15\r\n    #3 0x557a489c1c1a in xmallocz /home/rodrigodd/repos/neovim/src/nvim/memory.c:194:15\r\n    #4 0x557a489c1d6b in xmemdupz /home/rodrigodd/repos/neovim/src/nvim/memory.c:212:17\r\n    #5 0x557a489c30bf in xstrdup /home/rodrigodd/repos/neovim/src/nvim/memory.c:431:10\r\n    #6 0x557a4899c0a9 in ml_get_buf /home/rodrigodd/repos/neovim/src/nvim/memline.c:1883:29\r\n    #7 0x557a47c97da1 in buf_collect_lines /home/rodrigodd/repos/neovim/src/nvim/api/buffer.c:1435:20\r\n    #8 0x557a47c9733e in nvim_buf_get_lines /home/rodrigodd/repos/neovim/src/nvim/api/buffer.c:312:8\r\n    #9 0x557a47c3a3a3 in nlua_api_nvim_buf_get_lines /home/rodrigodd/repos/neovim/build/src/nvim/auto/lua_api_c_bindings.generated.c:460:31\r\n    #10 0x557a49629b95 in lj_BC_FUNCC (/usr/local/bin/nvim+0x2704b95) (BuildId: 64279e2d8963ae255769c01ee3cd6047ed18920b)\r\n\r\nSUMMARY: AddressSanitizer: heap-use-after-free /home/rodrigodd/repos/neovim/src/nvim/lua/treesitter.c:775:21 in node_check\r\nShadow bytes around the buggy address:\r\n  0x608000095d00: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\r\n  0x608000095d80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x608000095e00: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x608000095e80: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fa\r\n  0x608000095f00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n=>0x608000095f80: fa fa fa fa[fd]fd fd fd fd fd fd fd fd fd fd fa\r\n  0x608000096000: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\r\n  0x608000096080: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\r\n  0x608000096100: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\r\n  0x608000096180: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fa\r\n  0x608000096200: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07 \r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n==17833==ABORTING\r\n\r\n```\r\n\r\n</details>\r\n\r\nThe coredump was too big to attach here, but the same observed problem as before happened, the value `(TSNode *)->id.ptr` is too small (`0x1470`).\r\n\r\n@nwounkn, @bfredl both of you work on fixing the double free in #24783. Do any of you have any idea on how can I debug this further? Or I will need a reproducible program first?\r\n",
            "created_at": "2023-10-14T20:44:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-1763176194",
            "id": 1763176194,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM5pF-8C",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1763176194/reactions"
            },
            "updated_at": "2023-10-14T20:44:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1763176194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
                "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Rodrigodd/followers",
                "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Rodrigodd",
                "id": 51273772,
                "login": "Rodrigodd",
                "node_id": "MDQ6VXNlcjUxMjczNzcy",
                "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
                "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
                "repos_url": "https://api.github.com/users/Rodrigodd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Rodrigodd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Another ASAN report, which points to `tree_gc` as the culprit:\r\n\r\n```\r\n=================================================================\r\n==27213==ERROR: AddressSanitizer: heap-use-after-free on address 0x6080003e6820 at pc 0x55e642940ddd bp 0x7ffc74f3b090 sp 0x7ffc74f3b088\r\nREAD of size 1 at 0x6080003e6820 thread T0\r\n    #0 0x55e642940ddc in node_check /home/rodrigodd/repos/neovim/src/nvim/lua/treesitter.c:775:21\r\n    #1 0x55e642942f04 in node_range /home/rodrigodd/repos/neovim/src/nvim/lua/treesitter.c:828:8\r\n    #2 0x55e64378bb95 in lj_BC_FUNCC (/usr/local/bin/nvim+0x2704b95) (BuildId: 64279e2d8963ae255769c01ee3cd6047ed18920b)\r\n    #3 0x55e643777ff4 in lua_pcall /home/rodrigodd/repos/neovim/.deps/build/src/luajit/src/lj_api.c:1145:12\r\n    #4 0x55e642925cbd in nlua_pcall /home/rodrigodd/repos/neovim/src/nvim/lua/executor.c:159:16\r\n    #5 0x55e642925427 in nlua_typval_exec /home/rodrigodd/repos/neovim/src/nvim/lua/executor.c:1443:7\r\n    #6 0x55e6429282eb in ex_lua /home/rodrigodd/repos/neovim/src/nvim/lua/executor.c:1639:3\r\n    #7 0x55e6426169fe in execute_cmd0 /home/rodrigodd/repos/neovim/src/nvim/ex_docmd.c:1620:7\r\n    #8 0x55e6425f3d6c in do_one_cmd /home/rodrigodd/repos/neovim/src/nvim/ex_docmd.c:2279:7\r\n    #9 0x55e6425e45b4 in do_cmdline /home/rodrigodd/repos/neovim/src/nvim/ex_docmd.c:578:20\r\n    #10 0x55e642c626e7 in nv_colon /home/rodrigodd/repos/neovim/src/nvim/normal.c:3247:18\r\n    #11 0x55e642c4e195 in normal_execute /home/rodrigodd/repos/neovim/src/nvim/normal.c:1207:3\r\n    #12 0x55e64325c63c in state_enter /home/rodrigodd/repos/neovim/src/nvim/state.c:99:26\r\n    #13 0x55e642c31550 in normal_enter /home/rodrigodd/repos/neovim/src/nvim/normal.c:497:3\r\n    #14 0x55e641d792b0 in main /home/rodrigodd/repos/neovim/src/nvim/main.c:642:3\r\n    #15 0x7f808920bccf  (/usr/lib/libc.so.6+0x27ccf) (BuildId: 8bfe03f6bf9b6a6e2591babd0bbc266837d8f658)\r\n    #16 0x7f808920bd89 in __libc_start_main (/usr/lib/libc.so.6+0x27d89) (BuildId: 8bfe03f6bf9b6a6e2591babd0bbc266837d8f658)\r\n    #17 0x55e641c3edb4 in _start (/usr/local/bin/nvim+0xbb7db4) (BuildId: 64279e2d8963ae255769c01ee3cd6047ed18920b)\r\n\r\n0x6080003e6820 is located 0 bytes inside of 88-byte region [0x6080003e6820,0x6080003e6878)\r\nfreed by thread T0 here:\r\n    #0 0x55e641d2c5a2 in __interceptor_free.part.0 asan_malloc_linux.cpp.o\r\n    #1 0x55e642b23948 in xfree /home/rodrigodd/repos/neovim/src/nvim/memory.c:134:3\r\n    #2 0x55e6437615cc in ts_subtree_release /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/./subtree.c:609:7\r\n    #3 0x55e643764a94 in ts_tree_delete /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/./tree.c:31:3\r\n    #4 0x55e642940f26 in tree_gc /home/rodrigodd/repos/neovim/src/nvim/lua/treesitter.c:715:5\r\n    #5 0x55e64378bb95 in lj_BC_FUNCC (/usr/local/bin/nvim+0x2704b95) (BuildId: 64279e2d8963ae255769c01ee3cd6047ed18920b)\r\n\r\npreviously allocated by thread T0 here:\r\n    #0 0x55e641d2d5d9 in __interceptor_malloc (/usr/local/bin/nvim+0xca65d9) (BuildId: 64279e2d8963ae255769c01ee3cd6047ed18920b)\r\n    #1 0x55e642b236c6 in try_malloc /home/rodrigodd/repos/neovim/src/nvim/memory.c:88:15\r\n    #2 0x55e642b2389c in xmalloc /home/rodrigodd/repos/neovim/src/nvim/memory.c:122:15\r\n    #3 0x55e643741282 in array__reserve /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/./././././array.h:155:24\r\n    #4 0x55e64375bb57 in stack__iter /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/./stack.c:329:5\r\n    #5 0x55e64375bb57 in ts_stack_pop_count /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/./stack.c:508:10\r\n    #6 0x55e64374b28a in ts_parser__reduce /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/./parser.c:832:25\r\n    #7 0x55e64374d779 in ts_parser__advance /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/./parser.c:1507:44\r\n    #8 0x55e64374ed8a in ts_parser_parse /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/./parser.c:1933:14\r\n    #9 0x55e64293de56 in parser_parse /home/rodrigodd/repos/neovim/src/nvim/lua/treesitter.c:450:16\r\n    #10 0x55e64378bb95 in lj_BC_FUNCC (/usr/local/bin/nvim+0x2704b95) (BuildId: 64279e2d8963ae255769c01ee3cd6047ed18920b)\r\n\r\nSUMMARY: AddressSanitizer: heap-use-after-free /home/rodrigodd/repos/neovim/src/nvim/lua/treesitter.c:775:21 in node_check\r\nShadow bytes around the buggy address:\r\n  0x6080003e6580: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fa\r\n  0x6080003e6600: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x6080003e6680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x6080003e6700: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x6080003e6780: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\r\n=>0x6080003e6800: fa fa fa fa[fd]fd fd fd fd fd fd fd fd fd fd fa\r\n  0x6080003e6880: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fa\r\n  0x6080003e6900: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x6080003e6980: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\r\n  0x6080003e6a00: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\r\n  0x6080003e6a80: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fa\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           00\r\n  Partially addressable: 01 02 03 04 05 06 07 \r\n  Heap left redzone:       fa\r\n  Freed heap region:       fd\r\n  Stack left redzone:      f1\r\n  Stack mid redzone:       f2\r\n  Stack right redzone:     f3\r\n  Stack after return:      f5\r\n  Stack use after scope:   f8\r\n  Global redzone:          f9\r\n  Global init order:       f6\r\n  Poisoned by user:        f7\r\n  Container overflow:      fc\r\n  Array cookie:            ac\r\n  Intra object redzone:    bb\r\n  ASan internal:           fe\r\n  Left alloca redzone:     ca\r\n  Right alloca redzone:    cb\r\n==27213==ABORTING\r\n```\r\n\r\n[core.nvim.27213.zst.zip](https://github.com/neovim/neovim/files/12908154/core.nvim.27213.zst.zip)\r\n",
            "created_at": "2023-10-14T23:15:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-1763204540",
            "id": 1763204540,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM5pGF28",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1763204540/reactions"
            },
            "updated_at": "2023-10-14T23:15:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1763204540",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
                "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Rodrigodd/followers",
                "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Rodrigodd",
                "id": 51273772,
                "login": "Rodrigodd",
                "node_id": "MDQ6VXNlcjUxMjczNzcy",
                "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
                "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
                "repos_url": "https://api.github.com/users/Rodrigodd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Rodrigodd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I also encounter this issue when I'm using incremental selection",
            "created_at": "2023-11-19T15:09:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-1817882625",
            "id": 1817882625,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM5sWrAB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1817882625/reactions"
            },
            "updated_at": "2023-11-19T15:13:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1817882625",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/34479567?v=4",
                "events_url": "https://api.github.com/users/xiantang/events{/privacy}",
                "followers_url": "https://api.github.com/users/xiantang/followers",
                "following_url": "https://api.github.com/users/xiantang/following{/other_user}",
                "gists_url": "https://api.github.com/users/xiantang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xiantang",
                "id": 34479567,
                "login": "xiantang",
                "node_id": "MDQ6VXNlcjM0NDc5NTY3",
                "organizations_url": "https://api.github.com/users/xiantang/orgs",
                "received_events_url": "https://api.github.com/users/xiantang/received_events",
                "repos_url": "https://api.github.com/users/xiantang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xiantang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xiantang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xiantang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I just impl incremental selection by my self. feel free to try my code snippet\r\nhttps://github.com/xiantang/nvim-conf/blob/7c0d6cbf6d9fd7b6a8960de887db1109332419bf/lua/plugins/treesitter.lua#L62-L132\r\n\r\n```lua\r\n\t\t\tlocal ts_utils = require(\"nvim-treesitter.ts_utils\")\r\n\r\n\t\t\tlocal node_list = {}\r\n\t\t\tlocal current_index = nil\r\n\r\n\t\t\tfunction start_select()\r\n\t\t\t\tnode_list = {}\r\n\t\t\t\tcurrent_index = nil\r\n\t\t\t\tcurrent_index = 1\r\n\t\t\t\tvim.cmd(\"normal! v\")\r\n\t\t\tend\r\n\r\n\t\t\tfunction find_expand_node(node)\r\n\t\t\t\tlocal start_row, start_col, end_row, end_col = node:range()\r\n\t\t\t\tlocal parent = node:parent()\r\n\t\t\t\tif parent == nil then\r\n\t\t\t\t\treturn nil\r\n\t\t\t\tend\r\n\t\t\t\tlocal parent_start_row, parent_start_col, parent_end_row, parent_end_col = parent:range()\r\n\t\t\t\tif\r\n\t\t\t\t\tstart_row == parent_start_row\r\n\t\t\t\t\tand start_col == parent_start_col\r\n\t\t\t\t\tand end_row == parent_end_row\r\n\t\t\t\t\tand end_col == parent_end_col\r\n\t\t\t\tthen\r\n\t\t\t\t\treturn find_expand_node(parent)\r\n\t\t\t\tend\r\n\t\t\t\treturn parent\r\n\t\t\tend\r\n\r\n\t\t\tfunction select_parent_node()\r\n\t\t\t\tif current_index == nil then\r\n\t\t\t\t\treturn\r\n\t\t\t\tend\r\n\r\n\t\t\t\tlocal node = node_list[current_index - 1]\r\n\t\t\t\tlocal parent = nil\r\n\t\t\t\tif node == nil then\r\n\t\t\t\t\tparent = ts_utils.get_node_at_cursor()\r\n\t\t\t\telse\r\n\t\t\t\t\tparent = find_expand_node(node)\r\n\t\t\t\tend\r\n\t\t\t\tif not parent then\r\n\t\t\t\t\tvim.cmd(\"normal! gv\")\r\n\t\t\t\t\treturn\r\n\t\t\t\tend\r\n\r\n\t\t\t\ttable.insert(node_list, parent)\r\n\t\t\t\tcurrent_index = current_index + 1\r\n\t\t\t\tlocal start_row, start_col, end_row, end_col = parent:range()\r\n\t\t\t\tvim.fn.setpos(\".\", { 0, start_row + 1, start_col + 1, 0 })\r\n\t\t\t\tvim.cmd(\"normal! v\")\r\n\t\t\t\tvim.fn.setpos(\".\", { 0, end_row + 1, end_col, 0 })\r\n\t\t\tend\r\n\r\n\t\t\tfunction restore_last_selection()\r\n\t\t\t\tif not current_index or current_index <= 1 then\r\n\t\t\t\t\treturn\r\n\t\t\t\tend\r\n\r\n\t\t\t\tcurrent_index = current_index - 1\r\n\t\t\t\tlocal node = node_list[current_index]\r\n\t\t\t\tlocal start_row, start_col, end_row, end_col = node:range()\r\n\t\t\t\tvim.fn.setpos(\".\", { 0, start_row + 1, start_col + 1, 0 })\r\n\t\t\t\tvim.cmd(\"normal! v\")\r\n\t\t\t\tvim.fn.setpos(\".\", { 0, end_row + 1, end_col, 0 })\r\n\t\t\tend\r\n\r\n\t\t\tvim.api.nvim_set_keymap(\"n\", \"v\", \":lua start_select()<CR>\", { noremap = true, silent = true })\r\n\t\t\tvim.api.nvim_set_keymap(\"v\", \"v\", \":lua select_parent_node()<CR>\", { noremap = true, silent = true })\r\n\t\t\tvim.api.nvim_set_keymap(\"v\", \"<BS>\", \":lua restore_last_selection()<CR>\", { noremap = true, silent = true })\r\n```",
            "created_at": "2024-07-11T15:24:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2223237888",
            "id": 2223237888,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6Eg-sA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223237888/reactions"
            },
            "updated_at": "2024-07-11T15:25:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223237888",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/34479567?v=4",
                "events_url": "https://api.github.com/users/xiantang/events{/privacy}",
                "followers_url": "https://api.github.com/users/xiantang/followers",
                "following_url": "https://api.github.com/users/xiantang/following{/other_user}",
                "gists_url": "https://api.github.com/users/xiantang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xiantang",
                "id": 34479567,
                "login": "xiantang",
                "node_id": "MDQ6VXNlcjM0NDc5NTY3",
                "organizations_url": "https://api.github.com/users/xiantang/orgs",
                "received_events_url": "https://api.github.com/users/xiantang/received_events",
                "repos_url": "https://api.github.com/users/xiantang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xiantang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xiantang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xiantang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@xiantang your implementation of incremental selection does not crash? Do you know any reason why, or have you being using it for a long time without crashing? Or your implementation also reproduces the crash?",
            "created_at": "2024-07-11T16:12:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2223342733",
            "id": 2223342733,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6EhYSN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223342733/reactions"
            },
            "updated_at": "2024-07-11T16:12:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223342733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
                "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Rodrigodd/followers",
                "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Rodrigodd",
                "id": 51273772,
                "login": "Rodrigodd",
                "node_id": "MDQ6VXNlcjUxMjczNzcy",
                "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
                "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
                "repos_url": "https://api.github.com/users/Rodrigodd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Rodrigodd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @xiantang your implementation of incremental selection does not crash? Do you know any reason why, or have you being using it for a long time without crashing? Or your implementation also reproduces the crash?\r\n\r\nI think because the way i impl is different with original. I use `vim.fn.setpos` to expand node. but I don't know how treesitter impl incremental selection.",
            "created_at": "2024-07-11T16:39:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2223404485",
            "id": 2223404485,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6EhnXF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223404485/reactions"
            },
            "updated_at": "2024-07-11T16:39:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223404485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/34479567?v=4",
                "events_url": "https://api.github.com/users/xiantang/events{/privacy}",
                "followers_url": "https://api.github.com/users/xiantang/followers",
                "following_url": "https://api.github.com/users/xiantang/following{/other_user}",
                "gists_url": "https://api.github.com/users/xiantang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xiantang",
                "id": 34479567,
                "login": "xiantang",
                "node_id": "MDQ6VXNlcjM0NDc5NTY3",
                "organizations_url": "https://api.github.com/users/xiantang/orgs",
                "received_events_url": "https://api.github.com/users/xiantang/received_events",
                "repos_url": "https://api.github.com/users/xiantang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xiantang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xiantang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xiantang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Here we are much more interested in a reliable reproducer for the _crash_ (ideally without nvim-treesitter) so we can find the bug in Neovim and fix it.\r\n\r\n(And note that this nvim-treesitter code -- including all ts_utils! -- will be removed in the not too distant future.)",
            "created_at": "2024-07-11T16:42:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2223409008",
            "id": 2223409008,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6Ehodw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223409008/reactions"
            },
            "updated_at": "2024-07-11T16:42:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223409008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This is still happening, in nvim and nvim-treesitter. I have found a finicky way to repoduce, but it is possible. Here are some of my findings.\n- To reproduce it, I mapped one of my keys to the following sequence : ddxxx\n   What this does is delete a line, and immediately start node_incrementing (i have `node_incremental = \"x\"`) in rapid sequence\n- There is some kind of race condition, that only happens if one calls `node_incremental` quick enough after the buffer has changed\n- On a barebones setup, this will be more difficult to reproduce, another way to induce this is to enable plugins, any plugins in fact as they will generally slow down neovim, to the point where the bug will happen more easily\n- That said, this is NOT related to any plugin, even disabling everything, this still happens, it just is slightly more difficult to achieve\n- I'm guessing that the faster the machine is the more difficult it is to reproduce (I think ?)\n- With some debugging I also found out that this was happening here : https://github.com/nvim-treesitter/nvim-treesitter/blob/066fd6505377e3fd4aa219e61ce94c2b8bdb0b79/lua/nvim-treesitter/incremental_selection.lua#L52\n  specifically, on the `node:range()` call.",
            "created_at": "2025-05-17T20:50:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2888578760",
            "id": 2888578760,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6sLDbI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2888578760/reactions"
            },
            "updated_at": "2025-05-17T20:54:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2888578760",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55576351?v=4",
                "events_url": "https://api.github.com/users/YosefBayoude/events{/privacy}",
                "followers_url": "https://api.github.com/users/YosefBayoude/followers",
                "following_url": "https://api.github.com/users/YosefBayoude/following{/other_user}",
                "gists_url": "https://api.github.com/users/YosefBayoude/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YosefBayoude",
                "id": 55576351,
                "login": "YosefBayoude",
                "node_id": "MDQ6VXNlcjU1NTc2MzUx",
                "organizations_url": "https://api.github.com/users/YosefBayoude/orgs",
                "received_events_url": "https://api.github.com/users/YosefBayoude/received_events",
                "repos_url": "https://api.github.com/users/YosefBayoude/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YosefBayoude/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YosefBayoude/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YosefBayoude",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That said, this is NOT related to any plugin, even disabling everything, this still happens, it just is slightly more difficult to achieve\n\nIf so, can you please provide a reproducer without plugins (including nvim-treesitter)? That would help fixing this.\n\n> With some debugging I also found out that this was happening here : https://github.com/nvim-treesitter/nvim-treesitter/blob/066fd6505377e3fd4aa219e61ce94c2b8bdb0b79/lua/nvim-treesitter/incremental_selection.lua#L52\nspecifically, on the node:range() call.\n\nLuckily, that code is already removed on the maintained (`main`) branch, so if that is truly where the error lies, this is fixed already.",
            "created_at": "2025-05-17T21:45:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2888597140",
            "id": 2888597140,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6sLH6U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2888597140/reactions"
            },
            "updated_at": "2025-05-17T21:45:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2888597140",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> There is some kind of race condition, that only happens if one calls node_incremental quick enough after the buffer has changed\n\nI think I sometimes reproduce the crash even when I tried to slowly expand the selection. But I don't discard the case where it happens more frequently when trying it quickly.\n\n> With some debugging I also found out that this was happening here : https://github.com/nvim-treesitter/nvim-treesitter/blob/066fd6505377e3fd4aa219e61ce94c2b8bdb0b79/lua/nvim-treesitter/incremental_selection.lua#L52\nspecifically, on the node:range() call.\n\nI think I never discover where in the lua code side the crash happens, but the line you pointed matches the backtraces I got, where it crashes in `node_range`  on the C side of neovim.\n\n> Luckily, that code is already removed on the maintained (main) branch, so if that is truly where the error lies, this is fixed already.\n\nI think the actual bug is the lua garbage collector freeing something (a `TSNode` I think?) while there are still references to it (on the lua stack? I am not familiar with the Lua C API). So changes in the lua side of things will only avoid the bug not fix it.\n\nI think one way to try to debug this is to  somehow add many logs around the lua garbage collection code (not sure how it is hooked to neovim/tressiter), reproduce the bug, and then check for inconsistencies in the logs. Or try to add some kind of debug assertions in the garbage collection to see if we can identify the bug happening early.",
            "created_at": "2025-05-17T23:43:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2888641032",
            "id": 2888641032,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6sLSoI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2888641032/reactions"
            },
            "updated_at": "2025-05-17T23:43:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2888641032",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
                "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Rodrigodd/followers",
                "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Rodrigodd",
                "id": 51273772,
                "login": "Rodrigodd",
                "node_id": "MDQ6VXNlcjUxMjczNzcy",
                "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
                "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
                "repos_url": "https://api.github.com/users/Rodrigodd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Rodrigodd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The first step is to be able to reproducibly trigger it **without plugins**, and that means without nvim-treesitter. (Nvim comes with a handful of bundled parsers and queries.)",
            "created_at": "2025-05-18T08:02:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2888842468",
            "id": 2888842468,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6sMDzk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2888842468/reactions"
            },
            "updated_at": "2025-05-18T08:02:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2888842468",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I was unable to reproduce it without tree-sitter, but it happens every time when I do `%s/a/b/gc` in my full config on python file. Other filetypes not affected (i tried md, c and lua).\n\nMaybe minimal example with tree-sitter enabled can help identify issue? If it can be useful, I'll create minimal repro.\n\n(but maybe this is another bug, it started happening after 0.11 update... and I just fund this issue with something similar)",
            "created_at": "2025-05-19T08:09:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2890054037",
            "id": 2890054037,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6sQrmV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890054037/reactions"
            },
            "updated_at": "2025-05-19T08:10:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890054037",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/301015?v=4",
                "events_url": "https://api.github.com/users/last-partizan/events{/privacy}",
                "followers_url": "https://api.github.com/users/last-partizan/followers",
                "following_url": "https://api.github.com/users/last-partizan/following{/other_user}",
                "gists_url": "https://api.github.com/users/last-partizan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/last-partizan",
                "id": 301015,
                "login": "last-partizan",
                "node_id": "MDQ6VXNlcjMwMTAxNQ==",
                "organizations_url": "https://api.github.com/users/last-partizan/orgs",
                "received_events_url": "https://api.github.com/users/last-partizan/received_events",
                "repos_url": "https://api.github.com/users/last-partizan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/last-partizan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/last-partizan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/last-partizan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, obviously you need to enable treesitter (highlighting?). But this is built-in and doesn't require nvim-treesitter. A minimal repro is not only useful but **necessary**; nothing will happen until we (you) have found one.",
            "created_at": "2025-05-19T08:12:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2890060991",
            "id": 2890060991,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6sQtS_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890060991/reactions"
            },
            "updated_at": "2025-05-19T08:12:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890060991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@clason can you give example how to enable treesitter without plugin?\n\nI'm starting with `nvim -R -u /dev/null`, and tried loading it like this:\n\n```lua\nvim.treesitter.language.add('python', { path = \"/usr/lib/libtree-sitter-python.so\" })\nvim.treesitter.language.register('python', { 'py' })\n```\n\nAs described here https://neovim.io/doc/user/treesitter.html",
            "created_at": "2025-05-19T08:19:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2890082168",
            "id": 2890082168,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6sQyd4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890082168/reactions"
            },
            "updated_at": "2025-05-19T08:19:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890082168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/301015?v=4",
                "events_url": "https://api.github.com/users/last-partizan/events{/privacy}",
                "followers_url": "https://api.github.com/users/last-partizan/followers",
                "following_url": "https://api.github.com/users/last-partizan/following{/other_user}",
                "gists_url": "https://api.github.com/users/last-partizan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/last-partizan",
                "id": 301015,
                "login": "last-partizan",
                "node_id": "MDQ6VXNlcjMwMTAxNQ==",
                "organizations_url": "https://api.github.com/users/last-partizan/orgs",
                "received_events_url": "https://api.github.com/users/last-partizan/received_events",
                "repos_url": "https://api.github.com/users/last-partizan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/last-partizan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/last-partizan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/last-partizan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Use `nvim --clean -u test.lua`; you can start treesitter highlighting with `vim.treesitter.start()` (no register or  add needed) as long as parser and queries are on `runtimepath` (use `vim.o.rtp:append(...)` for the minimal repro).\n\nIf you have to, you can use the `main` branch of nvim-treesitter, which will only install parser and queries without any interference.\n\n> vim.treesitter.language.add('python', { path = \"/usr/lib/libtree-sitter-python.so\" })\n\nDo **not** use treesitter parsers that you find installed system-wide, who knows where they come from!",
            "created_at": "2025-05-19T08:22:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2890090324",
            "id": 2890090324,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6sQ0dU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890090324/reactions"
            },
            "updated_at": "2025-05-19T08:23:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890090324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "How can I check if treesitter is enabled?\n\nAfter `:lua vim.treesitter.start()` highlighting is just gone... Or, maybe it's okay, default theme is just not adapted to tree-sitter?",
            "created_at": "2025-05-19T08:32:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2890118145",
            "id": 2890118145,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6sQ7QB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890118145/reactions"
            },
            "updated_at": "2025-05-19T08:32:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890118145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/301015?v=4",
                "events_url": "https://api.github.com/users/last-partizan/events{/privacy}",
                "followers_url": "https://api.github.com/users/last-partizan/followers",
                "following_url": "https://api.github.com/users/last-partizan/following{/other_user}",
                "gists_url": "https://api.github.com/users/last-partizan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/last-partizan",
                "id": 301015,
                "login": "last-partizan",
                "node_id": "MDQ6VXNlcjMwMTAxNQ==",
                "organizations_url": "https://api.github.com/users/last-partizan/orgs",
                "received_events_url": "https://api.github.com/users/last-partizan/received_events",
                "repos_url": "https://api.github.com/users/last-partizan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/last-partizan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/last-partizan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/last-partizan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As I wrote, you need to actually have an appropriate parser and (matching) queries on your current `rtp`. Please read `:h treesitter`.",
            "created_at": "2025-05-19T08:34:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2890125485",
            "id": 2890125485,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6sQ9Ct",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890125485/reactions"
            },
            "updated_at": "2025-05-19T08:34:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890125485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "As you mentioned, @clason, we need some reproducibility, so I've been working on that over the past few days. You can find the result [here](https://github.com/YosefBayoude/treesitter-neovim-bug). I'm not 100% confident in everything I've done, so please feel free to guide or correct me as needed.\n\nImportant to note: reproducibility is still somewhat unreliable — I suspect a race condition is at play, which makes the bug occur randomly. It usually takes between 1 to 5 tries to trigger it.\n\nSome context:\nThe goal here is to reproduce the bug I’ve been encountering, which relates to Treesitter-based selection (used by one of the plugins I use), in a minimal Lua-only config (~160 LOC). The two key factors to trigger the bug are:\n1. Editing the buffer\n2. Quickly accessing Treesitter functions\n\nIn this minimal setup, I’ve mapped `x` to trigger a Treesitter-based selection. To reproduce the bug:\n1. Edit the buffer (e.g., using `dd`)\n2. Quickly press `x` to invoke the selection\n\nThe key presses need to be quick. Personnally, I’ve automated them using QMK firmware with a 150ms delay. This is deliberately short in this case, but in a more fully-loaded config, the same issue tends to appear within a 1-second window.\n\nI’ve also included instructions in the repo.\n\nFinally, to ensure this is purely a Neovim issue, I tested everything on a fresh VM with only the minimal config — the bug still occurs.",
            "created_at": "2025-05-28T21:06:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2917614618",
            "id": 2917614618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6t50Qa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917614618/reactions"
            },
            "updated_at": "2025-05-28T21:06:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917614618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55576351?v=4",
                "events_url": "https://api.github.com/users/YosefBayoude/events{/privacy}",
                "followers_url": "https://api.github.com/users/YosefBayoude/followers",
                "following_url": "https://api.github.com/users/YosefBayoude/following{/other_user}",
                "gists_url": "https://api.github.com/users/YosefBayoude/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YosefBayoude",
                "id": 55576351,
                "login": "YosefBayoude",
                "node_id": "MDQ6VXNlcjU1NTc2MzUx",
                "organizations_url": "https://api.github.com/users/YosefBayoude/orgs",
                "received_events_url": "https://api.github.com/users/YosefBayoude/received_events",
                "repos_url": "https://api.github.com/users/YosefBayoude/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YosefBayoude/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YosefBayoude/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YosefBayoude",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@YosefBayoude I can confirm your repro works. Typing `qqddxujq@Q@Q@Q@Q@Q@Q@Q`, I could reproduce the crash very consistently, that on version \n\n```NVIM v0.11.1\nBuild type: RelWithDebInfo\nLuaJIT 2.1.1741730670\nRun \"nvim -V1 -v\" for more info\n```\n\nAtaching, gdb, the repro becomes annoyingly less consistent, but I could get a backtrace:\n\n```\n(gdb) bt\n#0  0x00007ffff7f22c99 in ts_node_end_point () from /usr/lib/libtree-sitter.so.0.25\n#1  0x0000555555755c0d in ?? ()\n#2  0x00007ffff7e25f06 in ?? () from /usr/lib/libluajit-5.1.so.2\n#3  0x00007ffff7e3a0ca in lua_pcall () from /usr/lib/libluajit-5.1.so.2\n#4  0x0000555555749564 in nlua_pcall ()\n#5  0x000055555575b611 in nlua_call_ref_ctx ()\n#6  0x000055555570477f in map_execute_lua ()\n#7  0x00005555557b547b in ?? ()\n#8  0x00005555557b246d in ?? ()\n#9  0x000055555588d0c6 in state_enter ()\n#10 0x00005555557afcfa in normal_enter ()\n#11 0x00005555555a9dcd in main (),\n```\n\nI will see if I can a debug build of nvim with asan, etc. to debug this better. I will also see if can automatize the repro, so I don't need to type by hand every time. ",
            "created_at": "2025-05-28T21:22:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2917645937",
            "id": 2917645937,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6t575x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917645937/reactions"
            },
            "updated_at": "2025-05-28T21:22:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917645937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
                "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Rodrigodd/followers",
                "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Rodrigodd",
                "id": 51273772,
                "login": "Rodrigodd",
                "node_id": "MDQ6VXNlcjUxMjczNzcy",
                "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
                "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
                "repos_url": "https://api.github.com/users/Rodrigodd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Rodrigodd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Good to hear you can reproduce. I don't think I have the skills tho to debug neovim itself, you'll have to do without me on that part 😄",
            "created_at": "2025-05-28T21:35:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2917671638",
            "id": 2917671638,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6t6CLW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917671638/reactions"
            },
            "updated_at": "2025-05-28T21:35:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917671638",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55576351?v=4",
                "events_url": "https://api.github.com/users/YosefBayoude/events{/privacy}",
                "followers_url": "https://api.github.com/users/YosefBayoude/followers",
                "following_url": "https://api.github.com/users/YosefBayoude/following{/other_user}",
                "gists_url": "https://api.github.com/users/YosefBayoude/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/YosefBayoude",
                "id": 55576351,
                "login": "YosefBayoude",
                "node_id": "MDQ6VXNlcjU1NTc2MzUx",
                "organizations_url": "https://api.github.com/users/YosefBayoude/orgs",
                "received_events_url": "https://api.github.com/users/YosefBayoude/received_events",
                "repos_url": "https://api.github.com/users/YosefBayoude/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/YosefBayoude/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/YosefBayoude/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/YosefBayoude",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So the backtrace points to a crash in the tree-sitter lib, so nothing we can do about here.\n\nI have just upgraded to a new version that fixes a crash on master; please test that.",
            "created_at": "2025-05-28T21:47:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2917691752",
            "id": 2917691752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6t6HFo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917691752/reactions"
            },
            "updated_at": "2025-05-28T21:47:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917691752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@clason  If I remember correctly, neovim is passing a invalid pointer around, and it gets this invalid pointer after doing a heap-use-after-free. So I not surprise it is crashing inside the tree-sitter library. Compiling with ASAN I can get it to error earlier, but not early enough to discover where the bug happens. See https://github.com/neovim/neovim/issues/25254#issuecomment-1763176194.",
            "created_at": "2025-05-28T21:53:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2917701038",
            "id": 2917701038,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6t6JWu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917701038/reactions"
            },
            "updated_at": "2025-05-28T21:53:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917701038",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
                "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Rodrigodd/followers",
                "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Rodrigodd",
                "id": 51273772,
                "login": "Rodrigodd",
                "node_id": "MDQ6VXNlcjUxMjczNzcy",
                "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
                "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
                "repos_url": "https://api.github.com/users/Rodrigodd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Rodrigodd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "On https://github.com/YosefBayoude/treesitter-neovim-bug/pull/1 I automate the repro.\n\nI was able to build a debug build of neovim on current master, and was able to reproduce the crash.\n\n```gdb\nThread 2.1 \"nvim\" received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 63496.63496]\nts_subtree_size (self=...) at /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/./subtree.h:291\n291\t    return self.ptr->size;\n(gdb) bt\n#0  ts_subtree_size (self=...) at /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/./subtree.h:291\n#1  0x0000555557a62070 in ts_node_end_point (self=...)\n    at /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/node.c:454\n#2  0x0000555556d6d740 in node_range (L=0x7ffff750d380) at /home/rodrigodd/repos/neovim/src/nvim/lua/treesitter.c:976\n#3  0x0000555557ab2636 in lj_BC_FUNCC ()\n#4  0x0000555557a9da91 in lua_pcall (L=0x7ffff750d380, nargs=<optimized out>, nresults=1, errfunc=<optimized out>)\n    at lj_api.c:1122\n#5  0x0000555556d4b5fe in nlua_pcall (lstate=0x7ffff750d380, nargs=0, nresults=1)\n    at /home/rodrigodd/repos/neovim/src/nvim/lua/executor.c:180\n#6  0x0000555556d52e51 in nlua_call_ref_ctx (fast=false, ref=61, name=0x0, args=..., mode=kRetNilBool, arena=0x0,\n    err=0x7ffff5d18f60) at /home/rodrigodd/repos/neovim/src/nvim/lua/executor.c:1594\n#7  0x0000555556d52851 in nlua_call_ref (ref=61, name=0x0, args=..., mode=kRetNilBool, arena=0x0, err=0x7ffff5d18f60)\n    at /home/rodrigodd/repos/neovim/src/nvim/lua/executor.c:1571\n#8  0x0000555556bd5ea9 in map_execute_lua (may_repeat=true) at /home/rodrigodd/repos/neovim/src/nvim/getchar.c:3255\n#9  0x000055555702a689 in nv_colon (cap=0x7ffff5e84290) at /home/rodrigodd/repos/neovim/src/nvim/normal.c:3188\n#10 0x0000555557017a4b in normal_execute (state=0x7ffff5e84220, key=-26621)\n    at /home/rodrigodd/repos/neovim/src/nvim/normal.c:1246\n#11 0x000055555754bc76 in state_enter (s=0x7ffff5e84220) at /home/rodrigodd/repos/neovim/src/nvim/state.c:102\n#12 0x0000555556ffa5d2 in normal_enter (cmdwin=false, noexmode=false)\n    at /home/rodrigodd/repos/neovim/src/nvim/normal.c:523\n#13 0x0000555556d7b403 in main (argc=2, argv=0x7fffffffe428) at /home/rodrigodd/repos/neovim/src/nvim/main.c:654\n(gdb) p self.ptr\n$1 = (const SubtreeHeapData *) 0x124a\n(gdb) up\n#1  0x0000555557a62070 in ts_node_end_point (self=...)\n    at /home/rodrigodd/repos/neovim/.deps/build/src/treesitter/lib/src/node.c:454\n454\t  return point_add(ts_node_start_point(self), ts_subtree_size(ts_node__subtree(self)).extent);\n(gdb) up\n#2  0x0000555556d6d740 in node_range (L=0x7ffff750d380) at /home/rodrigodd/repos/neovim/src/nvim/lua/treesitter.c:976\n976\t  TSPoint end = ts_node_end_point(node);\n```\n\nI still could not get ASAN to report a heap after use, but I can see in the debugger that neovim is getting a `TSNode` from the lua stack with a `Subtree` with a invalid `.ptr`, similar to what I have found in my investigation in the past. I suspect that the lua garbage collector have freed it too early. I don't know how neovim/lua keep track of the references to `TSNode`/`Subtree` (the bug must  be around there), but with a repro it is easier to sprinkle debug logs around to code until I figure out how things work.",
            "created_at": "2025-05-29T01:57:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2918009361",
            "id": 2918009361,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6t7UoR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2918009361/reactions"
            },
            "updated_at": "2025-05-29T01:57:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2918009361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
                "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Rodrigodd/followers",
                "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Rodrigodd",
                "id": 51273772,
                "login": "Rodrigodd",
                "node_id": "MDQ6VXNlcjUxMjczNzcy",
                "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
                "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
                "repos_url": "https://api.github.com/users/Rodrigodd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Rodrigodd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "On https://github.com/YosefBayoude/treesitter-neovim-bug/pull/2 I minimize the repro to:\n\n```lua\nlocal timer = vim.loop.new_timer()\nlocal i = 0\nlocal nodes = nil\ntimer:start(100, 30, vim.schedule_wrap(function()\n\tif i == 0 then\n\t\t-- open the test file at 912\n\t\tlocal cmd = vim.api.nvim_replace_termcodes(\":e! ~/.config/treesitter-neovim-bug/test.lua<CR>:912<CR>\", true,\n\t\t\tfalse, true)\n\t\tvim.api.nvim_feedkeys(cmd, \"m\", false)\n\t\ti = 1\n\telseif i == 1 then\n\t\t-- get a node from the tree, save it in nodes, edit the parse tree\n\t\tlocal parser = vim.treesitter.get_parser(buf)\n\t\tlocal root = parser:parse()[1]:root()\n\t\tlocal node = root:named_descendant_for_range(912, 0, 912, 0)\n\t\tnodes = { [1] = node }\n\t\tvim.api.nvim_buf_set_lines(0, 911, 912, false, {})\n\t\ti = 2\n\telse\n\t\t-- run the garbage collector, and try to access node:range()\n\t\t--\n\t\t-- the garbage collector will call tree_gc on a TSTree, which will\n\t\t-- eventually free a Subtree.\n\t\t--\n\t\t-- node:range() will call on the C-side node_range -> ts_node_end_point\n\t\t-- -> ts_node_subtree_size, where we try to access the freed Subtree, and crash.\n\t\tcollectgarbage(\"collect\")\n\t\tlocal node = nodes[#nodes]\n\t\tnode:range()\n\t\ti = 1\n\tend\nend))\n```\n\nThe key point is getting a node from the tree, mutating the tree, and then later trying to access the node. For some reason, a `TSTree` is freed while the node is still holding a reference to a `Subtree` inside the `TSTree`. So, maybe there is a bug around the use of `push_tree` and `push_node`?\n\nOne thing I find strange while debugging with GDB is that the `TSNode` holding the dangling `Subtree` has a `TSTree` pointer different from the one freed by `tree_gc`, which eventually frees the `Subtree`. But I haven't investigated it enough to reach any conclusion.",
            "created_at": "2025-05-30T01:55:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2921012267",
            "id": 2921012267,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6uGxwr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2921012267/reactions"
            },
            "updated_at": "2025-05-30T01:55:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2921012267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
                "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Rodrigodd/followers",
                "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Rodrigodd",
                "id": 51273772,
                "login": "Rodrigodd",
                "node_id": "MDQ6VXNlcjUxMjczNzcy",
                "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
                "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
                "repos_url": "https://api.github.com/users/Rodrigodd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Rodrigodd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I fully understand the crash, and I created a fix. I also futher minimize the repro on https://github.com/YosefBayoude/treesitter-neovim-bug/pull/3 to this:\n\n```lua\nvim.opt.swapfile = false\nvim.api.nvim_command(\"filetype off\")\nvim.api.nvim_command(\"filetype plugin off\")\nvim.api.nvim_command(\"e! ~/.config/treesitter-neovim-bug/test.lua\")\n\nvim.schedule(function()\n\t-- First we get a TSTree from a lua file.\n\tlocal parser = vim.treesitter.get_parser(buf)\n\tlocal tree = parser:parse()[1]\n\n\t-- Then we create a copy of the tree. This will increase the refcount of the TSTree root to 2.\n\ttree:copy()\n\n\t-- Then, we get a reference to the first child of the root of the tree. TSNode will have a\n\t-- pointer to the tree, and a pointer to the firt child of the tree root, which is in the same\n\t-- allocation as the tree root. The TSNode in the LUA-side will have a reference to the TSTree,\n\t-- which will make the TSTree only be garbage colected after the node is no longer reachable.\n\tlocal node = tree:root():child()\n\n\t-- Then we edit the the buffer, which will eventually call TSTree:edit -> ts_tree_edit.\n\t-- ts_subtree_edit will internally call ts_subtree_make_mut on the tree root, which check if\n\t-- there is only one owner for the tree. If there is one, it will cast this single Subtree to a\n\t-- mutable Subtree. Otherwise it will clone the subtree, and replace the root of the tree by\n\t-- that subtree clone, and release the previous subtree, i.e. the previous root of the tree.\n\t--\n\t-- Because we copy the tree earlier, the refcount was 2, so it does the tree clone, and\n\t-- decrement the root of subtree refcount to 1.\n\tvim.api.nvim_buf_set_lines(0, 911, 912, false, {})\n\n\t-- (wait for nvim_buf_set_lines eventually trigger a call to TSTree:edit)\n\tvim.schedule(function()\n\t\t-- Then we run the LUA garbage collector. This will collect the copy of tree we made\n\t\t-- earlier. Because the root of that tree have a refcount of 1, its allocation will be\n\t\t-- freed.\n\t\tcollectgarbage(\"collect\")\n\n\t\t-- node:range() will call on the C-side node_range -> ts_node_end_point ->\n\t\t-- ts_node_subtree_size, where we try to read the subtree, whose memory was under its parent\n\t\t-- allocation, which have being freed. We trigger a user-after-free. If the memory-page\n\t\t-- under the old allocation was also free the program crash, or we otherwise read garbage\n\t\t-- memory.\n\t\tprint(node:range())\n\tend)\nend)\n```\n\nBasically neovim is violating a memory safety condition of `TSNode`, which requires that `TSTree` is not mutated while its is alive. The solution is to copy the tree before pushing a `TSNode` to the Lua stack.",
            "created_at": "2025-06-04T23:12:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/25254#issuecomment-2941884848",
            "id": 2941884848,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25254",
            "node_id": "IC_kwDOAPphoM6vWZmw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 4,
                "laugh": 0,
                "rocket": 2,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2941884848/reactions"
            },
            "updated_at": "2025-06-04T23:13:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2941884848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
                "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Rodrigodd/followers",
                "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Rodrigodd",
                "id": 51273772,
                "login": "Rodrigodd",
                "node_id": "MDQ6VXNlcjUxMjczNzcy",
                "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
                "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
                "repos_url": "https://api.github.com/users/Rodrigodd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Rodrigodd",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 26,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25254/comments",
    "created_at": "2023-09-20T01:41:24Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25254/events",
    "html_url": "https://github.com/neovim/neovim/issues/25254",
    "id": 1903940316,
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "Needs a third-party / external change or fix",
            "id": 101945532,
            "name": "status:blocked-external",
            "node_id": "MDU6TGFiZWwxMDE5NDU1MzI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/status:blocked-external"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "We need minimal steps to reproduce the issue",
            "id": 298863445,
            "name": "needs:repro",
            "node_id": "MDU6TGFiZWwyOTg4NjM0NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:repro"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25254/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 15,
        "created_at": "2025-05-30T23:27:41Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/51",
        "id": 12988090,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/51/labels",
        "node_id": "MI_kwDOAPphoM4Axi66",
        "number": 51,
        "open_issues": 25,
        "state": "open",
        "title": "0.11.3",
        "updated_at": "2025-06-09T16:31:39Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/51"
    },
    "node_id": "I_kwDOAPphoM5xe9Lc",
    "number": 25254,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 6,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 6,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25254/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25254/timeline",
    "title": "SIGSEGV in ts_node_end_point()",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-06T16:56:14Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25254",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/51273772?v=4",
        "events_url": "https://api.github.com/users/Rodrigodd/events{/privacy}",
        "followers_url": "https://api.github.com/users/Rodrigodd/followers",
        "following_url": "https://api.github.com/users/Rodrigodd/following{/other_user}",
        "gists_url": "https://api.github.com/users/Rodrigodd/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Rodrigodd",
        "id": 51273772,
        "login": "Rodrigodd",
        "node_id": "MDQ6VXNlcjUxMjczNzcy",
        "organizations_url": "https://api.github.com/users/Rodrigodd/orgs",
        "received_events_url": "https://api.github.com/users/Rodrigodd/received_events",
        "repos_url": "https://api.github.com/users/Rodrigodd/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Rodrigodd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Rodrigodd/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Rodrigodd",
        "user_view_type": "public"
    }
}