{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\n\nNo, Vim has this same limitation.\n\n### Feature description\n\nIt would be extremely nice if tabs would render correctly in foldtext, honoring tabstop and list mode. Currently, making tabs show up correctly requires a lot of extra logic in a custom foldtext function.\r\n\r\nBelow is an example custom foldtext method (the one I wrote and use as my default). A survey of 3 or 4 other custom foldtext methods from plugins and blogs shows that most people do similar things, except they usually have more limitations than this code because they use regex substitutions that don't take into account the current display column, etc.\r\n\r\nThe algorithm I currently use is in the code paragraph that starts with the comment: \"We can't use tabs in the fold text, so visualize tabs explicitly.\" As you can see, it's not fully general, and assumes list mode (which I always use) and my specific listchars. Some of this would be fixable with significantly more code, but it would be much nicer if NeoVim would simply render tabs in foldtext the same as it would render them in any other text, without the need for hacks like this. \r\n\r\n```vim\r\nset foldtext=X_foldtext()\r\nfunction! X_foldtext() \" {{{\r\n\r\n\t\" Use the first non-blank line for our starting display text.\r\n\tlet start_text = getline(v:foldstart)\r\n\tif getline(v:foldstart) =~ '^\\s*$'\r\n\t\tlet line = nextnonblank(v:foldstart + 1)\r\n\t\tif line != 0\r\n\t\t\tlet start_text = getline(line)\r\n\t\tendif\r\n\tendif\r\n\r\n\t\" Strip trailing whitespace from the text.\r\n\tlet start_text = substitute(start_text, '\\s*$', \"\", \"\")\r\n\r\n\t\" We can't use tabs in the fold text, so visualize tabs explicitly.\r\n\tlet chars = split(start_text, '\\zs')\r\n\tlet start_text = \"\"\r\n\tfor char in chars\r\n\t\tif char != \"\\t\"\r\n\t\t\t\" Just append non-tab characters.\r\n\t\t\tlet start_text = start_text .. char\r\n\t\telse\r\n\t\t\t\" Expand tab characters into an appropriate visual form.\r\n\t\t\t\" \t* FIXME: This hard-codes the tab characters.\r\n\t\t\t\" \t  It would be better to extract this from listchars.\r\n\t\t\tlet column = strdisplaywidth(start_text)\r\n\t\t\tlet width = strdisplaywidth(\"\\t\", column)\r\n\t\t\tlet tabtext = \"┊\" . repeat(\" \", width - 1)\r\n\t\t\tlet start_text = start_text .. tabtext\r\n\t\tendif\r\n\tendfor\r\n\r\n\t\" Use the last non-blank line for our ending display text.\r\n\tlet end_text = getline(v:foldend)\r\n\tif getline(v:foldend) =~ '^\\s*$'\r\n\t\tlet line = prevnonblank(v:foldend - 1)\r\n\t\tif line != 0\r\n\t\t\tlet end_text = getline(line)\r\n\t\tendif\r\n\tendif\r\n\r\n\t\" Strip leading and trailing whitespace from the end text.\r\n\tlet end_text = substitute(end_text, '^\\s*', \"\", \"\")\r\n\tlet end_text = substitute(end_text, '\\s*$', \"\", \"\")\r\n\r\n\t\" Truncate end text somewhat arbitrarily.\r\n\t\" The goal is to just provide a little context.\r\n\tlet end_text = \" ⋯ \" .. end_text[-10:-1] .. \" \"\r\n\r\n\t\" Compute fold size information.\r\n\tlet fold_lines   = 1 + v:foldend - v:foldstart\r\n\tlet fold_percent = 100.0 * fold_lines / line(\"$\")\r\n\r\n\t\" Compute fold information field.\r\n\tlet fold_info = printf(\" +%d (%.1f%%)\", fold_lines, fold_percent)\r\n\r\n\t\" Compute the width of the editor area.\r\n\t\" FIXME: this assumes there is no fold column.\r\n\tlet fold_column_width = 0\r\n\tlet number_column_width = 1 + float2nr(ceil(log10(line(\"$\"))))\r\n\tlet editor_width = winwidth(0) - fold_column_width - number_column_width\r\n\r\n\t\" Truncate our text to make enough room for the fold info.\r\n\tlet max_width = editor_width - strwidth(fold_info) - strwidth(end_text) - 2\r\n\tlet start_text = start_text[0:max_width]\r\n\t\"while strwidth(start_text) > max_width\r\n\t\"\tlet start_text = start_text[:-2]\r\n\t\"endwhile\r\n\r\n\t\" Compute expander text.\r\n\tlet expander = repeat(\"·\", editor_width - strwidth(start_text) - strwidth(end_text) - strwidth(fold_info))\r\n\tlet expander = substitute(expander, \"··\", \"· \", \"g\")\r\n\r\n\t\" Build the final display text.\r\n\tlet fold_text = start_text .. end_text .. expander .. fold_info\r\n\treturn fold_text\r\nendf \" }}}\r\n\r\n``` ",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Related is that in list mode, it would be great if NeoVim would render the foldtext line fully honoring listchars. Although this could be consider a separate feature request, I mention this mostly because its possible that this related issue could be fixed simultaneous to this one. (In my previous example, I don't even attempt this because of the extra complexity, but if the foldtext were rendered through the normal display mechanism that wouldn't be necessary.)\r\n",
            "created_at": "2022-01-29T05:58:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/17230#issuecomment-1024843342",
            "id": 1024843342,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17230",
            "node_id": "IC_kwDOAPphoM49Fd5O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024843342/reactions"
            },
            "updated_at": "2022-01-29T05:58:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1024843342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67229?v=4",
                "events_url": "https://api.github.com/users/wjl/events{/privacy}",
                "followers_url": "https://api.github.com/users/wjl/followers",
                "following_url": "https://api.github.com/users/wjl/following{/other_user}",
                "gists_url": "https://api.github.com/users/wjl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wjl",
                "id": 67229,
                "login": "wjl",
                "node_id": "MDQ6VXNlcjY3MjI5",
                "organizations_url": "https://api.github.com/users/wjl/orgs",
                "received_events_url": "https://api.github.com/users/wjl/received_events",
                "repos_url": "https://api.github.com/users/wjl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wjl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wjl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wjl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "#25209 enables drawing TABs like in virtual lines, but does not respect list mode. E.g.\r\n```vim\r\n:set foldtext=[[getline(v:foldstart)]]\r\n```",
            "created_at": "2023-09-17T06:29:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/17230#issuecomment-1722405297",
            "id": 1722405297,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17230",
            "node_id": "IC_kwDOAPphoM5mqdGx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722405297/reactions"
            },
            "updated_at": "2023-10-26T03:31:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722405297",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17230/comments",
    "created_at": "2022-01-29T05:53:03Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/17230/events",
    "html_url": "https://github.com/neovim/neovim/issues/17230",
    "id": 1118040497,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 2598645343,
            "name": "folds",
            "node_id": "MDU6TGFiZWwyNTk4NjQ1MzQz",
            "url": "https://api.github.com/repos/neovim/neovim/labels/folds"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/17230/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM5Co_Gx",
    "number": 17230,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/17230/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/17230/timeline",
    "title": "Render tabs correctly in foldtext",
    "updated_at": "2025-01-17T15:59:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/17230",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/67229?v=4",
        "events_url": "https://api.github.com/users/wjl/events{/privacy}",
        "followers_url": "https://api.github.com/users/wjl/followers",
        "following_url": "https://api.github.com/users/wjl/following{/other_user}",
        "gists_url": "https://api.github.com/users/wjl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wjl",
        "id": 67229,
        "login": "wjl",
        "node_id": "MDQ6VXNlcjY3MjI5",
        "organizations_url": "https://api.github.com/users/wjl/orgs",
        "received_events_url": "https://api.github.com/users/wjl/received_events",
        "repos_url": "https://api.github.com/users/wjl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wjl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wjl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wjl",
        "user_view_type": "public"
    }
}