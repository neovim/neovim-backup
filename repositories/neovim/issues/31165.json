{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nNvim started freezing almost every session for me. Eventually I found that my `~/.cache/nvim/luac` directory has more than 250,000 files in it.\n\nThese appear to be cache files generated and named according to the path of the original lua file.\n\nThe problem is the `nvim.appimage` release mounts nvim at a different temporary path each time it is invoked. The naming scheme of these cache files changes, then on every invocation, making the cache pointless and creating N additional files on every launch of nvim. For me, that led to a directory that currently has 246,768 files in it.\n\nHere is an example of 2 identical files in the the `./luac/` directory that are named differently only because the temporary mounting paths generated by appimage are different:\n\n`%2ftmp%2f.mount_nvim.a65Rja0%2fusr%2fshare%2fnvim%2fruntime%2flua%2fvim%2ftreesitter.luac`\n`%2ftmp%2f.mount_nvim.aNpxXgo%2fusr%2fshare%2fnvim%2fruntime%2flua%2fvim%2ftreesitter.luac`\n\nI originally encountered this with the 0.9.5 appimage on RHEL7, but have confirmed the v0.11.0-dev-1129+gadbffff5d0 pre-release still behaves the same way.\n\n### Steps to reproduce\n\nTo reproduce:\n\n1) install `nvim.appimage`\n2) `mv ~/.cache/nvim/luac ~/.cache/nvim/luac.backup`\n3) `nvim`\n4) Observe contents of `~/.cache/nvim/luac/`\n5) Close nvim and run `nvim` again\n6) Observe contents of `~/.cache/nvim/luac/` and see that new identical files have been added with a different mount prefix\n\nEvery time `nvim` is launched, more files are added.\n\n### Expected behavior\n\nExpected behavior is not to allow unbounded growth of the number of files in `~/.cache/nvim/luac/`.\n\nWhen using `nvim.appimage`, the cache is effectively rendered moot between launches of nvim. A simple workaround to address the problem I'm experiencing would be to either not cache or remove cached luac files on close when appimage is used.\n\nA more ideal solution would allow the cached files to be used and probably involves some sort of translation of appimage mount paths to a common filename in the cache directory that can be shared among multiple instances of nvim that are compatible (same version?)\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-1129+gadbffff5d0 all the way back to v0.9.5\n\n### Vim (not Nvim) behaves the same?\n\nunlikely since these are lua cache files? Not sure how to even check this.\n\n### Operating system/version\n\nRHEL9.3, RHEL7, and RHEL8\n\n### Terminal name/version\n\nzsh 5.8\n\n### $TERM environment variable\n\nscreen\n\n### Installation\n\nappimage",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I guess this is because the app image mounts itself into a random temp directory on start. For now I would avoid enabling `vim.loader` and going forward we'll need to detect if a loaded file is in `/tmp` or not.\n\nAlso note, the repro steps are incomplete since it's missing `vim.loader.enable`. I guessing you use lazy.nvim or something.",
            "created_at": "2024-11-11T14:40:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-2468337250",
            "id": 2468337250,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM6TH9Zi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2468337250/reactions"
            },
            "updated_at": "2024-11-11T14:41:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2468337250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I guessing you use lazy.nvim or something.\n\nCorrect, lazy.nvim. I didn't realize this was a contributing factor. Thanks for clarifying.",
            "created_at": "2024-11-11T14:58:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-2468377781",
            "id": 2468377781,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM6TIHS1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2468377781/reactions"
            },
            "updated_at": "2024-11-11T14:58:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2468377781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/951660?v=4",
                "events_url": "https://api.github.com/users/drootang/events{/privacy}",
                "followers_url": "https://api.github.com/users/drootang/followers",
                "following_url": "https://api.github.com/users/drootang/following{/other_user}",
                "gists_url": "https://api.github.com/users/drootang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/drootang",
                "id": 951660,
                "login": "drootang",
                "node_id": "MDQ6VXNlcjk1MTY2MA==",
                "organizations_url": "https://api.github.com/users/drootang/orgs",
                "received_events_url": "https://api.github.com/users/drootang/received_events",
                "repos_url": "https://api.github.com/users/drootang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/drootang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/drootang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/drootang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just noticed this bug too. In my case these files keep multiplying on each run in `$HOME/.cache/nvim/luac`:\n\n```\n%2ftmp%2f.mount_nvimAf3WZr%2fusr%2fshare%2fnvim%2fruntime%2ffiletype.luac\n%2ftmp%2f.mount_nvimAf3WZr%2fusr%2fshare%2fnvim%2fruntime%2fplugin%2feditorconfig.luac\n%2ftmp%2f.mount_nvimAf3WZr%2fusr%2fshare%2fnvim%2fruntime%2fplugin%2fman.luac\n%2ftmp%2f.mount_nvimAf3WZr%2fusr%2fshare%2fnvim%2fruntime%2fplugin%2fosc52.luac\n%2ftmp%2f.mount_nvimAf3WZr%2fusr%2fshare%2fnvim%2fruntime%2fplugin%2ftohtml.luac\n\n%2ftmp%2f.mount_nvimBopsOO%2fusr%2fshare%2fnvim%2fruntime%2ffiletype.luac\n%2ftmp%2f.mount_nvimBopsOO%2fusr%2fshare%2fnvim%2fruntime%2flua%2fvim%2fdiagnostic.luac\n%2ftmp%2f.mount_nvimBopsOO%2fusr%2fshare%2fnvim%2fruntime%2flua%2fvim%2fhealth.luac\n%2ftmp%2f.mount_nvimBopsOO%2fusr%2fshare%2fnvim%2fruntime%2fplugin%2feditorconfig.luac\n%2ftmp%2f.mount_nvimBopsOO%2fusr%2fshare%2fnvim%2fruntime%2fplugin%2fman.luac\n%2ftmp%2f.mount_nvimBopsOO%2fusr%2fshare%2fnvim%2fruntime%2fplugin%2fosc52.luac\n%2ftmp%2f.mount_nvimBopsOO%2fusr%2fshare%2fnvim%2fruntime%2fplugin%2ftohtml.luac\n```\n\nI'm also using lazy.nvim.\n\nHopefully there is some fix for this.",
            "created_at": "2025-03-07T19:46:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-2707274271",
            "id": 2707274271,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM6hXbof",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2707274271/reactions"
            },
            "updated_at": "2025-03-07T19:47:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2707274271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "`lua/loader.lua` is definitely responsible. Not an issue on `NVIM v0.12.0-dev` though",
            "created_at": "2025-04-05T09:47:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-2780635937",
            "id": 2780635937,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM6lvSMh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2780635937/reactions"
            },
            "updated_at": "2025-04-07T10:53:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2780635937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8136158?v=4",
                "events_url": "https://api.github.com/users/hinell/events{/privacy}",
                "followers_url": "https://api.github.com/users/hinell/followers",
                "following_url": "https://api.github.com/users/hinell/following{/other_user}",
                "gists_url": "https://api.github.com/users/hinell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hinell",
                "id": 8136158,
                "login": "hinell",
                "node_id": "MDQ6VXNlcjgxMzYxNTg=",
                "organizations_url": "https://api.github.com/users/hinell/orgs",
                "received_events_url": "https://api.github.com/users/hinell/received_events",
                "repos_url": "https://api.github.com/users/hinell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hinell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hinell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hinell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@hinell er... can you try bisecting to see what fixed it?",
            "created_at": "2025-04-06T00:35:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-2781151744",
            "id": 2781151744,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM6lxQIA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2781151744/reactions"
            },
            "updated_at": "2025-04-07T10:53:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2781151744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "loader.lua is the same between master and 0.11.",
            "created_at": "2025-04-07T05:43:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-2782078141",
            "id": 2782078141,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM6l0yS9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2782078141/reactions"
            },
            "updated_at": "2025-04-07T05:43:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2782078141",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "What exactly is driving the location / path of those files in the cache, is it something in luajit? I.e. is there any way to control that in more fixed fashion using some configurable path even if things run in appimage?",
            "created_at": "2025-09-04T01:51:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251410655",
            "id": 3251410655,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7BzJbf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251410655/reactions"
            },
            "updated_at": "2025-09-04T01:53:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251410655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "the path is decided here: https://github.com/neovim/neovim/blob/63bcdf0842ffe58fbc68d6f87d11e02414ccd446/runtime/lua/vim/loader.lua#L51\n\nyou can try setting `vim.loader.path` , but this is not supported.\n\nor you can disable `vim.loader`:\n\n    vim.loader.enable(false)",
            "created_at": "2025-09-04T01:58:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251426027",
            "id": 3251426027,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7BzNLr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251426027/reactions"
            },
            "updated_at": "2025-09-04T01:59:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251426027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The problem is in the names of the individual files, not the directory itself. I.e.:\n\n<img width=\"795\" height=\"97\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e1b0becc-1e77-48a7-aa55-9d08a36a7111\" />\n\nWhat if there can be some way to configure generation of those paths in a way that chops off certain regex from the prefix? This way it would be able to chop off the variable part?\n\nThat can be an optionally configurable behavior. It's a weirdly specific thing to configure, but it could work around it. Let me take a look where the actual file name is generated.",
            "created_at": "2025-09-04T02:00:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251430643",
            "id": 3251430643,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7BzOTz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251430643/reactions"
            },
            "updated_at": "2025-09-04T02:05:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251430643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "```lua\nlocal function cache_filename(name)\n  local ret = ('%s/%s'):format(M.path, uri_encode(name, 'rfc2396'))\n  return ret:sub(-4) == '.lua' and (ret .. 'c') or (ret .. '.luac')\nend\n```\n\nhttps://github.com/neovim/neovim/blob/63bcdf0842ffe58fbc68d6f87d11e02414ccd446/runtime/lua/vim/loader.lua#L118\n\nWhat if this can be modified and optionally allowed to chop off let's say this prefix: \n\n`%2ftmp%2f.mount_nvimnillNK`\n\nfrom \n\n\n`%2ftmp%2f.mount_nvimnillNK%2fusr%2fshare%2...`\n\n\nThis would make all these names uniform like `%2fusr%2fshare%2....`\n\nI.e. not a simple prefix, but certain regex I mean.\n\nSomething like this?\n\n`%%2ftmp%%2f\\.mount_nvim[^%]+`\n",
            "created_at": "2025-09-04T02:15:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251476762",
            "id": 3251476762,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7BzZka",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251476762/reactions"
            },
            "updated_at": "2025-09-04T02:19:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251476762",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "So workaround idea can be like this:\n\nLet user configure some `vim.o.loader_file_prefix_cutoff = '%%2ftmp%%2f\\.mount_nvim[^%]+'`\n\nThen that function can check if it's defined and chop off what matches that regex from the beginning of the filename.\n\nOr may be do the chopping off before that URL encoding on the name part, then regex can be simpler.",
            "created_at": "2025-09-04T02:21:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251491314",
            "id": 3251491314,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7BzdHy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251491314/reactions"
            },
            "updated_at": "2025-09-04T02:23:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251491314",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No one here has confirmed if they are actually using `vim.loader`. Did you (or a plugin/distro/...) enable it? AFAIR it's not enabled by default. Does Lazy enable it by default?\n\n> Let user configure some `vim.o.loader_file_prefix_cutoff = '%%2ftmp%%2f\\.mount_nvim[^%]+'`\n\nI get that some sort of control is needed, but of course we aren't going to add a random \"prefix cutoff\" option.\n\nIt seems like the problem is, with AppImage, the ~~\"filesystem root\"~~ program image path changes randomly instead of always being `/`. I would also expect this to affect the 'undodir' and swap dir, can you confirm that? Usually they live here:\n\n    :exe 'e' stdpath('state')\n\nA related problem was discussed in https://github.com/neovim/neovim/issues/29372#issuecomment-2178660194 , though in that case the issue was the filepath length, not the numerous files.\n\n## Proposal\n\nAdding random options is not a solution. We need proposals that provide long-term solutions. Here are some ideas.\n\n- `vim.loader` should not cache more than X files. it should prune old files exceeding a maximum number\n    - this concept of \"log rotation\" is useful for logs and plugins, so probably should be provided as a util.\n- the concept of deciding a fixed/stable \"filesystem root\" applies to 'undodir', swap, and other cases. and this is also useful for plugins, but there is no standard interface. we may need an abstraction like `vim.xx.filepath_to_filename()`.",
            "created_at": "2025-09-04T02:58:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251586477",
            "id": 3251586477,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7Bz0Wt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251586477/reactions"
            },
            "updated_at": "2025-09-04T03:22:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251586477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hm, I'm using lazy.nvim and `:= vim.loader.enabled` shows true, but I didn't enable it anywhere explicitly. lazy.nvim is doing something like this:\n\nhttps://github.com/folke/lazy.nvim/blob/6c3bda4aca61a13a9c63f1c1d1b16b9d3be90d7a/lua/lazy/init.lua#L61\n\nI'm using appimage build from neovim's github.\n\nI don't see anything unusual in the state directory:\n\n`$HOME/.local/state/nvim/`\n```\n./shada\n./shada/main.shada\n./swap\n./dapui.log\n./log\n./lazy\n./lazy/readme\n./lazy/readme/doc\n./lazy/readme/doc/tags\n./lazy/pkg-cache.lua\n./nio.log\n./lsp.log\n```",
            "created_at": "2025-09-04T03:05:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251605790",
            "id": 3251605790,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7Bz5Ee",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251605790/reactions"
            },
            "updated_at": "2025-09-04T03:08:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251605790",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well, as I said above, the problem is not with the directory name, the problem is with file name generation. So in practice, directory of the cache doesn't change, what changes is the .luac file name and the variance comes from as you mentioned, appimage generating different names due to some randomness. I'm not sure what's a good long term solution where except having some control to suppress that randomness either within appimage or externally.\n\nI.e. those generated paths seems to be very consistent at least on Linux with only one tiny part being variable. So it's not really hard to build in a workaround without even any explicitly configurable regexes, that detects this condition and chops out the random part.\n\nSince appimage is only provided for Linux, may be there is no need to worry about too much variations and just focus on that small part expecting the rest to be consistent?\n\nLimiting number of files isn't a good workaround, since it actually still not providing the purpose of the cache (files will still be different duplicates in practice, just won't multiple without limit).",
            "created_at": "2025-09-04T03:13:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251627865",
            "id": 3251627865,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7Bz-dZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251627865/reactions"
            },
            "updated_at": "2025-09-04T03:17:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251627865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `:= vim.loader.enabled` shows true,\n\nSo please try disabling it, as requested...\n\n> Limiting number of files isn't a good workaround, since it actually still defeats the purpose of the cache\n\nNonsense. No cache should grow indefinitely.\n\n> I don't see anything unusual in the state directory: `$HOME/.local/state/nvim/`\n\nOk, the random part is not the \"filesystem root\" as I guessed before. It's the program image path. Probably `vim.loader` can workaround this automatically, by figuring out what the program image path is and discarding it.\n",
            "created_at": "2025-09-04T03:20:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251644263",
            "id": 3251644263,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7B0Cdn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251644263/reactions"
            },
            "updated_at": "2025-09-04T03:21:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251644263",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Nonsense. No cache should grow indefinitely.\n\nSure, I'm just saying it's not really fixing the failure of well, actual caching, because files won't match on each new load. At least it fixes infinite growth.",
            "created_at": "2025-09-04T03:28:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251665800",
            "id": 3251665800,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7B0HuI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251665800/reactions"
            },
            "updated_at": "2025-09-04T03:29:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251665800",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just to be clear. Disabling the loader / caching prevents the growth, but the downside is that it also doesn't cache luac that don't get mixed up.\n\nI.e. just to clarify, there are two groups of files there:\n\n1. Ones without randomness in the name (that comes from plugins installed with plugin manager).\n2. Ones with randomness in the name. That comes from neovim's internal Lua modules that are inside appimage.\n\nSo at least for files from group 1 there is a benefit in having that cache enabled.\n\n> Probably vim.loader can workaround this automatically, by figuring out what the program image path is and discarding it.\n\nYep, that's exactly what I was suggesting above, as a follow up to first idea. I.e. just implicit figuring out what to remove  in case it was from appimage making sure files get the same name each time.",
            "created_at": "2025-09-04T03:32:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251676193",
            "id": 3251676193,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7B0KQh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251676193/reactions"
            },
            "updated_at": "2025-09-04T03:36:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251676193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, so we have a plan. Next step is implementation. Any comments asking about status will be deleted.",
            "created_at": "2025-09-04T03:40:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251697891",
            "id": 3251697891,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7B0Pjj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251697891/reactions"
            },
            "updated_at": "2025-09-04T03:40:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251697891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just for the reference, looking at actual paths that are used by appimage. They are something like this:\n\n`/tmp/.mount_nvimAmpHPH/usr/share/nvim/runtime`\n\nWhich results in prefixes like:\n\n```\n:= vim.uri_encode('/tmp/.mount_nvimAmpHPH/usr/share/nvim/runtime', 'rfc2396')\n\"%2ftmp%2f.mount_nvimAmpHPH%2fusr%2fshare%2fnvim%2fruntime\"\n```\n\nProbably detecting `'\\/tmp\\/.mount_nvim[^/]+'` in the original (not yet encoded) file name and cutting that off if it was detected would do it.\n\nI can try to make a PR when I'll have time if this approach works.",
            "created_at": "2025-09-04T04:17:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251770581",
            "id": 3251770581,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7B0hTV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251770581/reactions"
            },
            "updated_at": "2025-09-04T04:22:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251770581",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> detecting `'\\/tmp\\/.mount_nvim[^/]+'`\n\nIf a hardcoded pattern is needed, matching `/usr/` less fragile (and only if AppImage is detected). But maybe a better approach is to look at `$VIMRUNTIME` and walk up the parent dirs until ... something.",
            "created_at": "2025-09-04T04:47:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251835744",
            "id": 3251835744,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7B0xNg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251835744/reactions"
            },
            "updated_at": "2025-09-04T04:48:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251835744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "In my case out of the box $VIMRUNTIME is this:\n\n```\n:= os.getenv(\"VIMRUNTIME\")\n\"/tmp/.mount_nvimohjJji/usr/share/nvim/runtime\"\n```\nthat  part after `.mount_nvim` is variable each time.\n\nIf someone explicitly sets it, it won't be that weird appimage path anyway. I guess we can assume that in appimage cases there will be `/usr/` there indeed and just find first occurrence and cut stuff before that.\n\nDetecting appimage scenario can be done like this:\n\n```lua\nif os.getenv(\"APPIMAGE\") ~= nil then\n  ...\n```\n",
            "created_at": "2025-09-04T05:04:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3251884905",
            "id": 3251884905,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7B09Np",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251884905/reactions"
            },
            "updated_at": "2025-09-04T05:07:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3251884905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk: Opened #35636",
            "created_at": "2025-09-05T02:03:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3256824927",
            "id": 3256824927,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7CHzRf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3256824927/reactions"
            },
            "updated_at": "2025-09-05T02:03:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3256824927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Added an annotation to make luals happy, looks like checks passed now.",
            "created_at": "2025-09-05T22:33:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3259935978",
            "id": 3259935978,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7CTqzq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3259935978/reactions"
            },
            "updated_at": "2025-09-05T22:33:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3259935978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/310927?v=4",
                "events_url": "https://api.github.com/users/shmerl/events{/privacy}",
                "followers_url": "https://api.github.com/users/shmerl/followers",
                "following_url": "https://api.github.com/users/shmerl/following{/other_user}",
                "gists_url": "https://api.github.com/users/shmerl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shmerl",
                "id": 310927,
                "login": "shmerl",
                "node_id": "MDQ6VXNlcjMxMDkyNw==",
                "organizations_url": "https://api.github.com/users/shmerl/orgs",
                "received_events_url": "https://api.github.com/users/shmerl/received_events",
                "repos_url": "https://api.github.com/users/shmerl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shmerl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shmerl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shmerl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Let's keep PR comments in the PR. This issue has enough comments.",
            "created_at": "2025-09-05T22:38:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/31165#issuecomment-3259943066",
            "id": 3259943066,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31165",
            "node_id": "IC_kwDOAPphoM7CTsia",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3259943066/reactions"
            },
            "updated_at": "2025-09-05T22:38:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3259943066",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 24,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31165/comments",
    "created_at": "2024-11-11T13:31:41Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31165/events",
    "html_url": "https://github.com/neovim/neovim/issues/31165",
    "id": 2649360575,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "performance, latency, cpu/memory usage",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is not fixed but can be circumvented until then",
            "id": 435850181,
            "name": "has:workaround",
            "node_id": "MDU6TGFiZWw0MzU4NTAxODE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:workaround"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "",
            "id": 606691254,
            "name": "has:plan",
            "node_id": "MDU6TGFiZWw2MDY2OTEyNTQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:plan"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "startup, shutdown, attach, detach",
            "id": 870629450,
            "name": "lifecycle",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lifecycle"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "file metadata/attributes, filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31165/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 290,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 353,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-09-09T00:41:01Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6d6gi_",
    "number": 31165,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31165/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31165/timeline",
    "title": "vim.loader: `.cache/nvim/luac/` contains 250k files when using AppImage",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-05T22:38:48Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31165",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/951660?v=4",
        "events_url": "https://api.github.com/users/drootang/events{/privacy}",
        "followers_url": "https://api.github.com/users/drootang/followers",
        "following_url": "https://api.github.com/users/drootang/following{/other_user}",
        "gists_url": "https://api.github.com/users/drootang/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/drootang",
        "id": 951660,
        "login": "drootang",
        "node_id": "MDQ6VXNlcjk1MTY2MA==",
        "organizations_url": "https://api.github.com/users/drootang/orgs",
        "received_events_url": "https://api.github.com/users/drootang/received_events",
        "repos_url": "https://api.github.com/users/drootang/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/drootang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/drootang/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/drootang",
        "user_view_type": "public"
    }
}