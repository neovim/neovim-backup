{
    "active_lock_reason": "resolved",
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "It'd be super cool if Neovim could keep track of whether you're in a terminal or not, and when you _are_ in a terminal change the meaning of the terminal escape sequence (`<c-\\><c-n>`) so that it exits from a terminal that you've spawned inside of a child Neovim instance. So, waste deep in Neovims, you'd always be able to escape from the current Neovim terminal with a single escape; always just `<c-\\><c-n>` instead of `<c-\\><c-\\><c-n>` or `<c-\\><c-\\><c-\\><c-n>` or `<c-\\><c-\\><c-\\><c-\\><c-n>`.\n\nThis would match perfectly with the fact that you can already `-- INSERT --` your way into child Neovims with single strokes of `i`. Navigating in _both_ directions would become extremely easy.\n\nThe workflow improvement would be massive.\n",
    "closed_at": "2025-03-10T12:08:54Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@trusktr You can already `-- INSERT --` with single `i` _only_ because `:terminal` command opens terminal and enters terminal mode. If you were using `termopen()` directly you would need two `i`.\n\nCurrent state is consistent. With your suggestion it would not be possible to escape from the outermost NeoVim instance which is needed if you e.g. use NeoVim as a tmux replacement.\n\n(And I do not see what workflow you should be using to have something greater then `<C-\\><C-\\><C-n>`.)\n",
            "created_at": "2015-07-30T20:58:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/3118#issuecomment-126485438",
            "id": 126485438,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3118",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ4NTQzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/126485438/reactions"
            },
            "updated_at": "2015-07-30T20:58:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/126485438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Maybe we can expose a `v:parent` or something like that, which reports the server name of the parent. \r\n\r\nIn addition (or maybe _instead_) should we change the behavior of `$NVIM_LISTEN_ADDRESS`? Currently, if `nvim` is invoked with an `$NVIM_LISTEN_ADDRESS` that is already in use (which happens when you nest `nvim` instances), it reports:\r\n\r\n```\r\necho serverlist() => []\r\necho v:servername = ''\r\n```\r\n\r\nWhy should serverlist ever be empty? If `$NVIM_LISTEN_ADDRESS` is in use, it should be handled as if it were empty: a new server should be created and reported as the default server (`v:servername`). \r\n\r\nRelated: https://github.com/neovim/neovim/issues/3119 \r\n",
            "created_at": "2015-07-30T21:32:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/3118#issuecomment-126496510",
            "id": 126496510,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3118",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ5NjUxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/126496510/reactions"
            },
            "updated_at": "2022-05-06T12:29:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/126496510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The original request here is best served by a plugin, but the key feature needed is the ability to walk up a chain of nvim ancestors.\n",
            "created_at": "2015-07-30T21:37:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/3118#issuecomment-126498770",
            "id": 126498770,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3118",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjQ5ODc3MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/126498770/reactions"
            },
            "updated_at": "2015-07-30T21:37:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/126498770",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@ZyX-I \n\n> if you e.g. use NeoVim as a tmux replacement.\n\nThat's exactly what I'm doing, using NeoVim as a tmux replacement. I'm not sure what you meant about `termopen()`, but if I have four levels of NeoVim terminals, I can press `i` three times to get to the leaf instance, not six times.\n\nI'd see myself going up or down the tree of NeoVim instances more often than wanting to jump to the root, so, for example, here's what my strokes would look like (if this feature existed) to go up one level, over a tab, and back down:\n\n```\n<c-\\><c-n>gti\n```\n\nSuppose I'm 3 levels deep. Now, while I'm at this level, I might need to switch in and out of terminals related to the current project (perhaps a terminal for the code repository that I'm working in so I can run git commands). The keystrokes for that (the way it currently works) is\n\n```\n<c-\\><c-\\><c-\\><c-n>gti\n```\n\nI'm more likely to want to jump in and out of terminals at the current level (my current task) than I am to want to jump to the root. So, if I'm jumping around at level 3, each time I want to switch from a terminal to a text file I'll be doing a bunch of\n\n```\n<c-\\><c-\\><c-\\><c-n>gti\n<c-c>gti\n<c-\\><c-\\><c-\\><c-n>gti\n<c-c>gti\n```\n\nAnd not only that, I have to remember what level I'm in (more brain CPU) and always have to count how many `<c-\\>` strokes I input before being able to switch out of the current workspace's terminal.\n\nThat's _slow_.\n\nIt should be the other way around. For example, if I'm at level 15 (I doubt anyone will ever have that many levels unless they come up with a _really_ **really** good session saver) I shouldn't have to count 15 strokes of `<c-\\>` just to move around between a couple terminals. It should just be\n\n```\n<c-\\><c-n>gti\n<c-c>gti\n<c-\\><c-n>gti\n<c-c>gti\n```\n\nThen, if I really want to go back to the root, it could be\n\n```\n<c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n><c-\\><c-n>\n```\n\nor, better yet\n\n```\n15<c-\\><c-n>\n```\n\nor, if I'm unsure how many levels I have but it's less than 20,\n\n```\n20<c-\\><c-n>\n```\n\nand it stops at the root. That's a ton of keystrokes saved.\n\n> And I do not see what workflow you should be using to have something greater then `<C-\\><C-\\><C-n>`\n\n`<C-\\><C-\\><C-n>` is one stroke too many, even if I only have two levels.\n",
            "created_at": "2015-07-31T20:06:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/3118#issuecomment-126800501",
            "id": 126800501,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3118",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjgwMDUwMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/126800501/reactions"
            },
            "updated_at": "2022-05-01T14:37:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/126800501",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
                "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
                "followers_url": "https://api.github.com/users/trusktr/followers",
                "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
                "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/trusktr",
                "id": 297678,
                "login": "trusktr",
                "node_id": "MDQ6VXNlcjI5NzY3OA==",
                "organizations_url": "https://api.github.com/users/trusktr/orgs",
                "received_events_url": "https://api.github.com/users/trusktr/received_events",
                "repos_url": "https://api.github.com/users/trusktr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/trusktr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think this is a good way to define the desired behavior:\n\nIf in `-- NORMAL --` mode in a child NeoVim instance, `<c-\\><c-n>` tries to go to `-- NORMAL --` of it's parent NeoVim if any, otherwise nothing happens. If in `-- TERMINAL --` mode (no child NeoVim in this terminal), then `<c-\\><c-n>` just goes back to `-- NORMAL --` of the current NeoVim.\n\nSo basically from an immediate parent NeoVim's perspective, `<c-\\><c-n>` in the child terminal (child NeoVim or not) always goes to the `-- NORMAL --` of said parent, just like currently happens in level 1.\n",
            "created_at": "2015-07-31T20:13:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/3118#issuecomment-126802722",
            "id": 126802722,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3118",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNjgwMjcyMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/126802722/reactions"
            },
            "updated_at": "2022-05-01T14:37:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/126802722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
                "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
                "followers_url": "https://api.github.com/users/trusktr/followers",
                "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
                "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/trusktr",
                "id": 297678,
                "login": "trusktr",
                "node_id": "MDQ6VXNlcjI5NzY3OA==",
                "organizations_url": "https://api.github.com/users/trusktr/orgs",
                "received_events_url": "https://api.github.com/users/trusktr/received_events",
                "repos_url": "https://api.github.com/users/trusktr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/trusktr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk \r\n\r\n> Maybe we can expose a v:parentname or something like that, which reports the server name of the parent.\r\n> \r\n> In addition (or maybe instead) should we change the behavior of $NVIM_LISTEN_ADDRESS Currently, if nvim is invoked with an $NVIM_LISTEN_ADDRESS that is already in use (which happens when you nest nvim instances), it reports:\r\n> \r\n> ```\r\n> echo serverlist() => []\r\n> echo v:servername = ''\r\n> ```\r\n> The original request here is best served by a plugin, but the key feature needed is the ability to walk up a chain of nvim ancestors.\r\n\r\nAny pointers on how to proceed with that plugin?\r\n\r\nAlso, what if the nested instance is on a server, I SSHed into the server from the `:terminal` in the outer instance, then ran `nvim` on the server.",
            "created_at": "2017-04-19T19:25:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/3118#issuecomment-295402030",
            "id": 295402030,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3118",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQwMjAzMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/295402030/reactions"
            },
            "updated_at": "2021-09-25T22:44:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/295402030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
                "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
                "followers_url": "https://api.github.com/users/trusktr/followers",
                "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
                "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/trusktr",
                "id": 297678,
                "login": "trusktr",
                "node_id": "MDQ6VXNlcjI5NzY3OA==",
                "organizations_url": "https://api.github.com/users/trusktr/orgs",
                "received_events_url": "https://api.github.com/users/trusktr/received_events",
                "repos_url": "https://api.github.com/users/trusktr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/trusktr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Note that in Nvim 0.3 (current HEAD/unreleased) `nvim_get_proc(getpid())` can be used to get the parent process id (`ppid`):\r\n\r\n    :echo nvim_get_proc(getpid())\r\n    {'ppid': 8247, 'name': 'nvim', 'pid': 9287}\r\n    :echo nvim_get_proc(8247)\r\n    ...\r\n\r\nThis could be used to walk up the process tree to find the parent Nvim of a `:terminal`.  But there's still no way to discover the server address of that parent Nvim (except `$NVIM_LISTEN_ADDRESS`).",
            "created_at": "2018-04-06T23:05:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/3118#issuecomment-379406841",
            "id": 379406841,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3118",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTQwNjg0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/379406841/reactions"
            },
            "updated_at": "2018-04-06T23:06:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/379406841",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "## Resolution\n\n- Resolved by https://github.com/neovim/neovim/pull/11009\n- The default behavior of ESC in a :terminal can still be improved, will track that separately.\n- Decided against `v:parent` because\n    1. `$NVIM` serves that purpose well enough\n    2. it's somewhat \"noisy\" for a relatively uncommon use-case\n    3. haven't seen demand for it (upvotes, comments)\n\n---\n_Locked to keep the summary visible. You can always [chat](https://neovim.io/#chat) or open an issue if you have new information/topics to discuss._",
            "created_at": "2025-03-10T12:08:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/3118#issuecomment-2710370762",
            "id": 2710370762,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3118",
            "node_id": "IC_kwDOAPphoM6hjPnK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2710370762/reactions"
            },
            "updated_at": "2025-03-10T12:08:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2710370762",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/3118/comments",
    "created_at": "2015-07-30T20:14:09Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/3118/events",
    "html_url": "https://github.com/neovim/neovim/issues/3118",
    "id": 98254006,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "channels, RPC, msgpack",
            "id": 242522707,
            "name": "channels-rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channels-rpc"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/3118/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": "2022-10-01T21:48:50Z",
        "closed_issues": 160,
        "created_at": "2022-08-18T10:21:07Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2022-09-30T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/32",
        "id": 8320818,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/32/labels",
        "node_id": "MI_kwDOAPphoM4Afvcy",
        "number": 32,
        "open_issues": 0,
        "state": "closed",
        "title": "0.8",
        "updated_at": "2025-03-10T12:08:54Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/32"
    },
    "node_id": "MDU6SXNzdWU5ODI1NDAwNg==",
    "number": 3118,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/3118/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/3118/timeline",
    "title": "$NVIM, v:parent",
    "updated_at": "2025-03-10T12:09:01Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/3118",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/297678?v=4",
        "events_url": "https://api.github.com/users/trusktr/events{/privacy}",
        "followers_url": "https://api.github.com/users/trusktr/followers",
        "following_url": "https://api.github.com/users/trusktr/following{/other_user}",
        "gists_url": "https://api.github.com/users/trusktr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/trusktr",
        "id": 297678,
        "login": "trusktr",
        "node_id": "MDQ6VXNlcjI5NzY3OA==",
        "organizations_url": "https://api.github.com/users/trusktr/orgs",
        "received_events_url": "https://api.github.com/users/trusktr/received_events",
        "repos_url": "https://api.github.com/users/trusktr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/trusktr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/trusktr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/trusktr",
        "user_view_type": "public"
    }
}