{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI am writing a plugin for neovim that aims to provide training for new users. A task I would like to implement eventually is the creation of marks. My code uses autocommands to act after the user has interacted with neovim. As far as I can tell, there is no autocommand-event that fires after a mark has been created. \n\n### Expected behavior\n\nThe solution seems straightforward from the outside: Add a autocommand-event that is triggered after mark creation. Since I am not familiar with the codebase, I have trouble deciding how much effort this actually is. If there is some positive feedback, I might attempt a pr for this use case myself. \r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Would `vim.fn.marklist` work for your use case? You could potentially check that after another auto command. I could definitely see how a dedicated auto command would be useful though",
            "created_at": "2024-03-27T11:35:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/27896#issuecomment-2022555437",
            "id": 2022555437,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27896",
            "node_id": "IC_kwDOAPphoM54jb8t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2022555437/reactions"
            },
            "updated_at": "2024-03-27T11:35:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2022555437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It seems like a good idea to have an event that triggers rendering of mark signs in the gutter for my plugin. However, to make it work properly, I’d also need a way to detect when a mark is removed — something like a “MarkUnset” event — to trigger re-renders.\n\nFor my purposes, though, a single “MarkListChanged” event would be sufficient. I could then use vim.fn.marklist to handle the updates.",
            "created_at": "2025-06-05T09:18:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/27896#issuecomment-2943401659",
            "id": 2943401659,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27896",
            "node_id": "IC_kwDOAPphoM6vcL67",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2943401659/reactions"
            },
            "updated_at": "2025-06-05T09:18:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2943401659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3514422?v=4",
                "events_url": "https://api.github.com/users/vladimir-kazan/events{/privacy}",
                "followers_url": "https://api.github.com/users/vladimir-kazan/followers",
                "following_url": "https://api.github.com/users/vladimir-kazan/following{/other_user}",
                "gists_url": "https://api.github.com/users/vladimir-kazan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vladimir-kazan",
                "id": 3514422,
                "login": "vladimir-kazan",
                "node_id": "MDQ6VXNlcjM1MTQ0MjI=",
                "organizations_url": "https://api.github.com/users/vladimir-kazan/orgs",
                "received_events_url": "https://api.github.com/users/vladimir-kazan/received_events",
                "repos_url": "https://api.github.com/users/vladimir-kazan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vladimir-kazan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vladimir-kazan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vladimir-kazan",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27896/comments",
    "created_at": "2024-03-17T09:06:55Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27896/events",
    "html_url": "https://github.com/neovim/neovim/issues/27896",
    "id": 2190559563,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27896/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6CkUlL",
    "number": 27896,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27896/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27896/timeline",
    "title": "autocommand event when a mark is created",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:58:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27896",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52529582?v=4",
        "events_url": "https://api.github.com/users/Weyaaron/events{/privacy}",
        "followers_url": "https://api.github.com/users/Weyaaron/followers",
        "following_url": "https://api.github.com/users/Weyaaron/following{/other_user}",
        "gists_url": "https://api.github.com/users/Weyaaron/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Weyaaron",
        "id": 52529582,
        "login": "Weyaaron",
        "node_id": "MDQ6VXNlcjUyNTI5NTgy",
        "organizations_url": "https://api.github.com/users/Weyaaron/orgs",
        "received_events_url": "https://api.github.com/users/Weyaaron/received_events",
        "repos_url": "https://api.github.com/users/Weyaaron/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Weyaaron/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Weyaaron/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Weyaaron",
        "user_view_type": "public"
    }
}