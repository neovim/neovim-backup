{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "- `nvim --version`: latest master\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\nIn `src/nvim/lua/treesitter.c`, add logging messages to each of the various `__gc` methods for treesitter userdata: `tree_gc, query_gc, parser_gc, treecursor_gc, querycursor_gc`.\r\nThen, run\r\n\r\n```\r\nNVIM_LOG_FILE=log build/bin/nvim src/nvim/eval.c\r\n:bw\r\n:lua collectgarbage('collect')\r\n:e log\r\n```\r\n\r\n### Actual behaviour\r\n\r\nNone of the logging messages show up, indicating that none of the treesitter machinery has been garbage collected.\r\n\r\n\r\nI believe that garbage collection is not being called because there are some dangling references to these items from C code - mostly from `nvim_buf_attach` or `set_decoration_provider`. For example, `tree_gc` and `parser_gc` were not being called because we did not free the nvim_buf_attach functions entirely: making the following modification to `buffer_updates.c` fixes this issue for those two functions:\r\n\r\n```\r\n--- a/src/nvim/buffer_updates.c\r\n+++ b/src/nvim/buffer_updates.c\r\n@@ -410,4 +410,7 @@ static void free_update_callbacks(BufUpdateCallbacks cb)\r\n {\r\n   api_free_luaref(cb.on_lines);\r\n   api_free_luaref(cb.on_changedtick);\r\n+  api_free_luaref(cb.on_bytes);\r\n+  api_free_luaref(cb.on_detach);\r\n+  api_free_luaref(cb.on_reload);\r\n }\r\n```\r\n\r\nHowever, for some reason, I can't seem to ever get `query_gc, treeecursor_gc, querycursor_gc` to be called at all, meaning that  a ton of memory allocated for lua userdata is never freed. Reloading `eval.c` several times already brings up neovim memory usage to around 10% of my system's memory.\r\n\r\nI'll need to investigate this issue further, but I would appreciate some help in this - I've been trying to fix this for a while now and I'm still stuck. Alternatively, it's possible that this isn't actually a problem at all and the leaks are coming from elsewhere.\r\n\r\n@bfredl ",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Hmm at least `tree_gc` should get called frequently. We have many tricky references to the parser itself, but the parser should only hold on to the very last tree. It is recommended that plugins only keep references to the parser, and use `parser:tree()` instead of keeping a non-local reference to the tree (or individual nodes, which is equivalent as you can \"reach\" the root from any node).",
            "created_at": "2021-03-26T15:41:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/14216#issuecomment-808319825",
            "id": 808319825,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14216",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODMxOTgyNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808319825/reactions"
            },
            "updated_at": "2021-03-26T15:41:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808319825",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "regarding lua references from c code, we can probably ad a simple counter for `lua_ref` / `lua_unref` and check it in `free_all_mem` in the ASAN/UBSAN build (and failure exit if it is non-zero).",
            "created_at": "2021-03-26T15:44:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/14216#issuecomment-808321619",
            "id": 808321619,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14216",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODMyMTYxOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808321619/reactions"
            },
            "updated_at": "2021-03-26T15:44:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808321619",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Looks like the querycursors are not freed because of some functions set using `nvim_set_decoration_provider`; freeing all of the luarefs in `decor_providers->items` seems to garbage collect most (but not all) querycursors. However, ASAN still says that there are some that remain allocated.\r\n\r\nThis is slightly problematic though; the decoration providers are meant to be active for pretty much the lifetime of Neovim, meaning that there will be a ton of querycursors that end up never being freed unless we explicitly make a call to `api_free_luaref` on buffer unload. Maybe we should rewrite the the treesitter module to use weak rather than strong references?",
            "created_at": "2021-03-27T06:02:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/14216#issuecomment-808665278",
            "id": 808665278,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14216",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODY2NTI3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808665278/reactions"
            },
            "updated_at": "2021-03-27T06:08:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808665278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36219739?v=4",
                "events_url": "https://api.github.com/users/chentoast/events{/privacy}",
                "followers_url": "https://api.github.com/users/chentoast/followers",
                "following_url": "https://api.github.com/users/chentoast/following{/other_user}",
                "gists_url": "https://api.github.com/users/chentoast/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chentoast",
                "id": 36219739,
                "login": "chentoast",
                "node_id": "MDQ6VXNlcjM2MjE5NzM5",
                "organizations_url": "https://api.github.com/users/chentoast/orgs",
                "received_events_url": "https://api.github.com/users/chentoast/received_events",
                "repos_url": "https://api.github.com/users/chentoast/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chentoast/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chentoast/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chentoast",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "the decoration_provider callbacks doesn't \"own\" anything by upvalues or otherwise, they are just global entry points that look up the actual state per bufnr. `TSHighlighter:destroy()` _should_ be called when the specific buffer gets unloaded/deleted, but perhaps this doesn't happen?",
            "created_at": "2021-03-27T08:25:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/14216#issuecomment-808689668",
            "id": 808689668,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14216",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODY4OTY2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808689668/reactions"
            },
            "updated_at": "2021-03-27T08:25:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808689668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "in addition, a _on_end callback could be added to set `self.iter` to `nil` which will free the cursor for a hidden but not unloaded buffer.",
            "created_at": "2021-03-27T08:28:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/14216#issuecomment-808690190",
            "id": 808690190,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14216",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODY5MDE5MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808690190/reactions"
            },
            "updated_at": "2021-03-27T08:28:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808690190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yeah I had also realized I was wrong re: the decor providers. I will have to think about this some more",
            "created_at": "2021-03-27T09:17:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/14216#issuecomment-808698566",
            "id": 808698566,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14216",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODY5ODU2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808698566/reactions"
            },
            "updated_at": "2021-03-27T09:17:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808698566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36219739?v=4",
                "events_url": "https://api.github.com/users/chentoast/events{/privacy}",
                "followers_url": "https://api.github.com/users/chentoast/followers",
                "following_url": "https://api.github.com/users/chentoast/following{/other_user}",
                "gists_url": "https://api.github.com/users/chentoast/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chentoast",
                "id": 36219739,
                "login": "chentoast",
                "node_id": "MDQ6VXNlcjM2MjE5NzM5",
                "organizations_url": "https://api.github.com/users/chentoast/orgs",
                "received_events_url": "https://api.github.com/users/chentoast/received_events",
                "repos_url": "https://api.github.com/users/chentoast/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chentoast/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chentoast/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chentoast",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "BTW in #14226 I will try to add check for missing `api_free_luaref` to the ASAN build (with informative tracebacks) ",
            "created_at": "2021-03-27T09:38:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/14216#issuecomment-808702658",
            "id": 808702658,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14216",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODcwMjY1OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808702658/reactions"
            },
            "updated_at": "2021-03-27T09:38:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808702658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It seems (ofc, I may be wrong again) that the source of the leaks is from the closure returned from `Query:iter_captures`. For some reason, this function doesn't ever seem to go out of scope, even when the highlighter instance is destroyed, although I can't for the life of me figure out why.\r\n\r\nCan be verified by adding the following lines  to `Query:iter_captures`:\r\n```lua\r\n@@ -383,9 +385,12 @@ function Query:iter_captures(node, source, start, stop)\r\n   start, stop = value_or_node_range(start, stop, node)\r\n \r\n   local raw_iter = node:_rawquery(self.query, true, start, stop)\r\n+  local tmp = newproxy(true) -- create a blank userdata\r\n+  getmetatable(tmp).__gc = function() print(\"HELP MEEEE\") end\r\n   local function iter()\r\n     local capture, captured_node, match = raw_iter()\r\n     local metadata = new_match_metadata()\r\n+    local a = tmp\r\n \r\n     if match ~= nil then\r\n```\r\n\r\nOpening the buffer then wiping it, and running the GC doesn't print anything, even though it should.",
            "created_at": "2021-04-01T08:01:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/14216#issuecomment-811726664",
            "id": 811726664,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14216",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTcyNjY2NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/811726664/reactions"
            },
            "updated_at": "2021-04-01T08:01:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/811726664",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36219739?v=4",
                "events_url": "https://api.github.com/users/chentoast/events{/privacy}",
                "followers_url": "https://api.github.com/users/chentoast/followers",
                "following_url": "https://api.github.com/users/chentoast/following{/other_user}",
                "gists_url": "https://api.github.com/users/chentoast/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chentoast",
                "id": 36219739,
                "login": "chentoast",
                "node_id": "MDQ6VXNlcjM2MjE5NzM5",
                "organizations_url": "https://api.github.com/users/chentoast/orgs",
                "received_events_url": "https://api.github.com/users/chentoast/received_events",
                "repos_url": "https://api.github.com/users/chentoast/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chentoast/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chentoast/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chentoast",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is this with fixing the above known problems ( i e like in #14226)?  I will try to look more into it but if we cannot root case it we can always add a few extra `local_var = nil` with a `TODO` to debug GC issues more after 0.5 release.",
            "created_at": "2021-04-01T08:32:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/14216#issuecomment-811745414",
            "id": 811745414,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14216",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTc0NTQxNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/811745414/reactions"
            },
            "updated_at": "2021-04-01T08:32:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/811745414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/14216/comments",
    "created_at": "2021-03-26T07:37:33Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/14216/events",
    "html_url": "https://github.com/neovim/neovim/issues/14216",
    "id": 841679579,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/14216/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4NDE2Nzk1Nzk=",
    "number": 14216,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/14216/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/14216/timeline",
    "title": "Treesitter: 'query_gc, tree_gc, treecursor_gc, etc' are never called (aka memory leaks)",
    "updated_at": "2025-01-19T10:57:33Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/14216",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/36219739?v=4",
        "events_url": "https://api.github.com/users/chentoast/events{/privacy}",
        "followers_url": "https://api.github.com/users/chentoast/followers",
        "following_url": "https://api.github.com/users/chentoast/following{/other_user}",
        "gists_url": "https://api.github.com/users/chentoast/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/chentoast",
        "id": 36219739,
        "login": "chentoast",
        "node_id": "MDQ6VXNlcjM2MjE5NzM5",
        "organizations_url": "https://api.github.com/users/chentoast/orgs",
        "received_events_url": "https://api.github.com/users/chentoast/received_events",
        "repos_url": "https://api.github.com/users/chentoast/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/chentoast/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chentoast/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/chentoast",
        "user_view_type": "public"
    }
}