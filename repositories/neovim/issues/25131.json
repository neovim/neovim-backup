{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhile the virtualtext does disappear, it does not affect the output of `get_namespaces`, `get`, `get_next`, `get_next_pos`, `get_prev`, `get_prev_pos`, `goto_next`, `goto_prev`, `setloclist`, `setqflist`.\r\n\r\nWhich means we have to resort to some gymnastics to manually filter per-namespace or per-diagnostic with `is_disabled`.\n\n### Steps to reproduce\n\nIn lspconfig config, I disable tsserver diagnostics for javascript files:\r\n\r\n```lua\r\nlocal on_attach = function(client, bufnr)\r\n  if client.name == 'tsserver' and (vim.bo[bufnr].filetype == 'javascript' or vim.bo[bufnr].filetype == 'javascriptreact') then\r\n    local ns = vim.lsp.diagnostic.get_namespace(client.id)\r\n    vim.diagnostic.disable(bufnr, ns)\r\n  end\r\n  local nmap = function(keys, func, desc)\r\n    if desc then\r\n      desc = 'LSP: ' .. desc\r\n    end\r\n\r\n    vim.keymap.set('n', keys, func, { buffer = bufnr, desc = desc })\r\n  end\r\nend\r\nlocal servers = {\r\n  tsserver = {},\r\n  eslint = {},\r\n}\r\n-- nvim-cmp supports additional completion capabilities, so broadcast that to servers\r\nlocal capabilities = vim.lsp.protocol.make_client_capabilities()\r\ncapabilities = require('cmp_nvim_lsp').default_capabilities(capabilities)\r\n\r\n-- Ensure the servers above are installed\r\nlocal mason_lspconfig = require 'mason-lspconfig'\r\n\r\nmason_lspconfig.setup {\r\n  ensure_installed = vim.tbl_keys(servers),\r\n}\r\n\r\nmason_lspconfig.setup_handlers {\r\n  function(server_name)\r\n    require('lspconfig')[server_name].setup {\r\n      capabilities = capabilities,\r\n      on_attach = on_attach,\r\n      settings = servers[server_name],\r\n      filetypes = (servers[server_name] or {}).filetypes,\r\n    }\r\n  end,\r\n}\r\n```\r\n\r\nBut I have to jump through hoops to get all the functions listed above to not show me disabled diagnostics.\n\n### Expected behavior\n\nThe listed functions should adjust their output according to disabled namespaces, or at least have an option to only include enabled diagnostics.\n\n### Neovim version (nvim -v)\n\n0.9.2\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nmacOS 14.0\n\n### Terminal name/version\n\nkitty\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nhomebrew",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I might be wrong here but this seems to be by design (@mfussenegger @gpanders might know better)? `vim.diagnostic.disable` just calls `vim.diagnostic.hide`, which \"only clears the decorations displayed in the buffer\" and makes sure that further calls to `vim.diagnostic.show` do not re-enable the decorations again.\r\n\r\n@sidequestboy it sounds like you want to use `vim.diagnostic.reset`, which actually removes diagnostics and not only the decorations.",
            "created_at": "2023-09-15T22:54:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/25131#issuecomment-1721976613",
            "id": 1721976613,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25131",
            "node_id": "IC_kwDOAPphoM5mo0cl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1721976613/reactions"
            },
            "updated_at": "2023-09-16T01:30:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1721976613",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`vim.diagnostic.disable()` and `vim.diagnostic.enable()` only affect the diagnostic UI elements (virtual text, signs, etc.). It does not affect the underlying diagnostic data at all.\r\n\r\n`vim.diagnostic.get()` already accepts a few options for filtering diagnostics. Adding an `enabled` key to filter out disabled diagnostics doesn't seem unreasonable, though a better approach would probably be to make all of these functions accept a generic `filter` function predicate (that way we don't need special `severity`, `enabled`, `namespace`, etc. options).",
            "created_at": "2023-09-16T01:36:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/25131#issuecomment-1722097251",
            "id": 1722097251,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25131",
            "node_id": "IC_kwDOAPphoM5mpR5j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722097251/reactions"
            },
            "updated_at": "2023-09-16T01:36:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722097251",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "thanks for the suggestion Maria, `reset` seems to get rid of the diagnostics from `goto_next`, quickfix list etc, however it's temporary: as soon as another edit is made, the diagnostics from that namespace show up again. Another side effect of `reset` is that code actions from that namespace disappear also.\r\n\r\nI suppose this could be used in combination with `disable` to hide the diagnostics and also affect the output of those other commands (e.g. call `reset` before calling `goto_next`), but even this isn't what I want in this case, since I want tsserver's code actions without its diagnostics for javascript buffers, which would disappear each time I call `reset` and before I make another edit",
            "created_at": "2023-09-16T01:39:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/25131#issuecomment-1722097956",
            "id": 1722097956,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25131",
            "node_id": "IC_kwDOAPphoM5mpSEk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722097956/reactions"
            },
            "updated_at": "2023-09-16T01:41:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722097956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538657?v=4",
                "events_url": "https://api.github.com/users/sidequestboy/events{/privacy}",
                "followers_url": "https://api.github.com/users/sidequestboy/followers",
                "following_url": "https://api.github.com/users/sidequestboy/following{/other_user}",
                "gists_url": "https://api.github.com/users/sidequestboy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sidequestboy",
                "id": 1538657,
                "login": "sidequestboy",
                "node_id": "MDQ6VXNlcjE1Mzg2NTc=",
                "organizations_url": "https://api.github.com/users/sidequestboy/orgs",
                "received_events_url": "https://api.github.com/users/sidequestboy/received_events",
                "repos_url": "https://api.github.com/users/sidequestboy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sidequestboy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sidequestboy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sidequestboy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "yes something like that would be great gpanders, although personally I would expect a \"disabled\" diagnostic to just not show up in the quickfix list, goto_next, get, etc. by default.",
            "created_at": "2023-09-16T01:44:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/25131#issuecomment-1722099286",
            "id": 1722099286,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25131",
            "node_id": "IC_kwDOAPphoM5mpSZW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722099286/reactions"
            },
            "updated_at": "2023-09-16T01:44:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722099286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538657?v=4",
                "events_url": "https://api.github.com/users/sidequestboy/events{/privacy}",
                "followers_url": "https://api.github.com/users/sidequestboy/followers",
                "following_url": "https://api.github.com/users/sidequestboy/following{/other_user}",
                "gists_url": "https://api.github.com/users/sidequestboy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sidequestboy",
                "id": 1538657,
                "login": "sidequestboy",
                "node_id": "MDQ6VXNlcjE1Mzg2NTc=",
                "organizations_url": "https://api.github.com/users/sidequestboy/orgs",
                "received_events_url": "https://api.github.com/users/sidequestboy/received_events",
                "repos_url": "https://api.github.com/users/sidequestboy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sidequestboy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sidequestboy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sidequestboy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@sidequestboy note that some code actions are tied to diagnostics (they're suggestions on how to fix the errors), so when disabling diagnostics I'm not surprised that code actions also disappear. You might still get TSServer's refactors (which are defined [here](https://github.com/microsoft/TypeScript/tree/9cbcf010ce0701a25f01a2a074000db34f80cc17/src/services/refactors)), but just a heads up.",
            "created_at": "2023-09-16T01:50:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/25131#issuecomment-1722101277",
            "id": 1722101277,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25131",
            "node_id": "IC_kwDOAPphoM5mpS4d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722101277/reactions"
            },
            "updated_at": "2023-09-16T01:50:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722101277",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "That's fair, also to be clear, they don't disappear when `disable` is called, but they do disappear temporarily when `reset` is called",
            "created_at": "2023-09-16T01:56:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/25131#issuecomment-1722102457",
            "id": 1722102457,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25131",
            "node_id": "IC_kwDOAPphoM5mpTK5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722102457/reactions"
            },
            "updated_at": "2023-09-16T01:56:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722102457",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1538657?v=4",
                "events_url": "https://api.github.com/users/sidequestboy/events{/privacy}",
                "followers_url": "https://api.github.com/users/sidequestboy/followers",
                "following_url": "https://api.github.com/users/sidequestboy/following{/other_user}",
                "gists_url": "https://api.github.com/users/sidequestboy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sidequestboy",
                "id": 1538657,
                "login": "sidequestboy",
                "node_id": "MDQ6VXNlcjE1Mzg2NTc=",
                "organizations_url": "https://api.github.com/users/sidequestboy/orgs",
                "received_events_url": "https://api.github.com/users/sidequestboy/received_events",
                "repos_url": "https://api.github.com/users/sidequestboy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sidequestboy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sidequestboy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sidequestboy",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25131/comments",
    "created_at": "2023-09-13T10:55:39Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25131/events",
    "html_url": "https://github.com/neovim/neovim/issues/25131",
    "id": 1894275475,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25131/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5w6FmT",
    "number": 25131,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25131/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25131/timeline",
    "title": "vim.diagnostic.disable doesn't fully disable the diagnostic",
    "updated_at": "2025-01-19T11:31:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25131",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1538657?v=4",
        "events_url": "https://api.github.com/users/sidequestboy/events{/privacy}",
        "followers_url": "https://api.github.com/users/sidequestboy/followers",
        "following_url": "https://api.github.com/users/sidequestboy/following{/other_user}",
        "gists_url": "https://api.github.com/users/sidequestboy/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sidequestboy",
        "id": 1538657,
        "login": "sidequestboy",
        "node_id": "MDQ6VXNlcjE1Mzg2NTc=",
        "organizations_url": "https://api.github.com/users/sidequestboy/orgs",
        "received_events_url": "https://api.github.com/users/sidequestboy/received_events",
        "repos_url": "https://api.github.com/users/sidequestboy/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sidequestboy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sidequestboy/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sidequestboy",
        "user_view_type": "public"
    }
}