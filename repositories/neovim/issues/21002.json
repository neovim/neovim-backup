{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\r\n\r\nNo\r\n\r\n### Feature description\r\n\r\nI have been using Vim/Neovim for almost a decade now, and the only use-case for which I still cannot work on Neovim is notebooks. These are quite useful for anybody working on machine learning, data science or physical/mathematical computation.\r\n\r\nOne might think that a key reason for Neovim not being able to represent well notebooks is its lack of certain graphical capabilities (i.e., drawing arbitrarily on the screen); this is also a limitation, as Neovim is confined to the terminal emulator. However, I believe that adding two new features to Neovim would already allow for an almost-optimal experience with notebooks, given a plugin which uses them:\r\n\r\n1.  Anti-concealing $\\rightarrow$ already being considered at #9496\r\n2.  Arbitrary button placement on a buffer $\\rightarrow$ the topic of this FR\r\n\r\nUsing anti-concealing, a plugin could parse notebook (e.g., `.ipynb`) nodes and replace their raw representation with a more graphical friendly representation (e.g., by displaying cells using different background colors). Using arbitrary button placement, buttons for running, removing and other actions could be placed at the top of each cell.\r\n\r\nAn example of how buttons have improved the Neovim experience is how the plugin [`nvim-dap-ui`](https://github.com/rcarriga/nvim-dap-ui) has created a button bar for its debugging UI to manage stopping, continuing, stepping over, into, etc. This is extremely useful when debugging and it was recently achieved thanks to Neovim adding the capability of adding buttons in the winbar.\r\n\r\nWhile it's true that one can implement the buttons as commands mapped to motions and that is the Vim-way, Neovim and its community of plugins have recently evolved so that now we can configure our editor to be a fully-fledged IDE. While the modal, motion-based and no-mouse soul of Neovim remains, in certain situations some interactive graphical elements can be useful and even productive when you attempt to use Neovim in more modern use-cases and in great codebase scales. In this case, it is unfeasible or at least quite hard to get to be productive by using mapped keybindings/motions for all possible actions for debugging or managing notebooks.\r\n\r\nI am not familiar enough with the Neovim codebase to know if such second feature is easy to implement, or even feasible at all. Is it? If it is, it would be great to have it implemented and cover the notebook use-case.\r\n\r\nThanks for reading!",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "What is the one-sentence description of what is actually missing in Nvim? \r\n\r\nN/Vim has `:menu` family to define things. I think what's missing is a way to easily tell a `:menu` to render as a menu with various layouts:\r\n\r\n- winbar + dropdowns\r\n- middle-of-buffer (with all buttons visible instead of dropdowns?)\r\n\r\nThis might belong somewhere in `vim.ui`, which is intended to be the \"UI widget library\" of Nvim. But given the above, I'm not sure we actually need any new interfaces or APIs. We just need a way to render a `:menu` tree of actions in various forms. Don't reinvent a new \"inner platform\".",
            "created_at": "2022-11-08T17:03:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/21002#issuecomment-1307538679",
            "id": 1307538679,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21002",
            "node_id": "IC_kwDOAPphoM5N73T3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1307538679/reactions"
            },
            "updated_at": "2022-11-08T17:09:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1307538679",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I am not familiar with `:menu`'s, but I would say arbitrary layouts at the buffer level (such as the middle-of-buffer example you give) would be necessary for a decent notebook plugin implementation, and would also be nice for other use-cases. Having it on the winbar or any other one-off element w.r.t. a single buffer (e.g., statusline or numberline) doesn't cut it, because the interesting thing would be to have a menu per notebook cell, and there may be multiple cells in a single notebook/buffer.\r\n\r\nIt would also be necessary to be able to create and remove these `:menu`'s when the content of the buffer changes, as new cells can be created and removed dynamically. I don't know if this is something already covered by `:menu`'s implementation or not. ",
            "created_at": "2022-11-09T01:07:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/21002#issuecomment-1308053772",
            "id": 1308053772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21002",
            "node_id": "IC_kwDOAPphoM5N91EM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1308053772/reactions"
            },
            "updated_at": "2022-11-09T01:10:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1308053772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18057093?v=4",
                "events_url": "https://api.github.com/users/serhez/events{/privacy}",
                "followers_url": "https://api.github.com/users/serhez/followers",
                "following_url": "https://api.github.com/users/serhez/following{/other_user}",
                "gists_url": "https://api.github.com/users/serhez/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/serhez",
                "id": 18057093,
                "login": "serhez",
                "node_id": "MDQ6VXNlcjE4MDU3MDkz",
                "organizations_url": "https://api.github.com/users/serhez/orgs",
                "received_events_url": "https://api.github.com/users/serhez/received_events",
                "repos_url": "https://api.github.com/users/serhez/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/serhez/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/serhez/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/serhez",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Shouldn't this be a feature request for a jupyter plugin like [jupyter-nvim](https://github.com/ahmedkhalf/jupyter-nvim) or [magma.nvim](https://github.com/dccsillag/magma-nvim)? It's pretty easy for any plugin to create graphical buttons. Not sure there's anything else needed on the Neovim side for this?\r\n\r\nThere's also [hydra.nvim](https://github.com/anuvyklack/hydra.nvim) if you're looking for a way to have some ui with shortcuts for some use-case\r\n\r\n",
            "created_at": "2022-11-09T13:15:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/21002#issuecomment-1308737965",
            "id": 1308737965,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21002",
            "node_id": "IC_kwDOAPphoM5OAcGt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1308737965/reactions"
            },
            "updated_at": "2022-11-09T13:24:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1308737965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/21002/comments",
    "created_at": "2022-11-08T15:22:58Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/21002/events",
    "html_url": "https://github.com/neovim/neovim/issues/21002",
    "id": 1440411177,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/21002/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM5V2u4p",
    "number": 21002,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/21002/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/21002/timeline",
    "title": ":menu layouts: winbar dropdowns, button buttons, tree",
    "updated_at": "2025-01-17T15:32:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/21002",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/18057093?v=4",
        "events_url": "https://api.github.com/users/serhez/events{/privacy}",
        "followers_url": "https://api.github.com/users/serhez/followers",
        "following_url": "https://api.github.com/users/serhez/following{/other_user}",
        "gists_url": "https://api.github.com/users/serhez/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/serhez",
        "id": 18057093,
        "login": "serhez",
        "node_id": "MDQ6VXNlcjE4MDU3MDkz",
        "organizations_url": "https://api.github.com/users/serhez/orgs",
        "received_events_url": "https://api.github.com/users/serhez/received_events",
        "repos_url": "https://api.github.com/users/serhez/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/serhez/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/serhez/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/serhez",
        "user_view_type": "public"
    }
}