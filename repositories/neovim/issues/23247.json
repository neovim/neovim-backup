{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nSuppose my leader key is `<space>` and I have a lot of multi-character mappings, like `<space>aa`, `<space>ab`, etc. When I accidentally press a \"leader sequence\" (i.e. a key sequence in normal mode with a prefix of `<space>...`) that I do not have defined, I might execute commands that I do not have intended to execute without noticing. E.g., if I press `<space>ax` but do not have that mapped, currently (neo)vim will, as I understand it, discard `<space>a` and then execute `x`, which will remove the character under the cursor (if there is any), which I might not notice.\r\n\r\nI recently tried out DOOM emacs out of curiosity and noticed that this behavior is not present there, e.g. when pressing `<space>k` (which is by default undefined) a message in the statusline is printed that this mapping is not defined, and the cursor does NOT move one line up, which it would do in neovim. (Also, a plain `k` would move the cursor one line up in DOOM emacs since it uses the vi emulation plugin evil.)\n\n### Expected behavior\n\nWhen I accidentally press a \"leader sequence\" (i.e. a key sequence in normal mode with a prefix of `<space>...`) that I do not have defined, I would like that to be a `<nop>`, or print an error or so.\r\n\r\nA cheap workaround might be to *explicitly* recursively nullify invalid mappings for a given prefix like `<space>`, but that would be brittle since it could break with later mappings: E.g., going with the example above, after explicitly doing `:nnoremap <space>ax <nop>`, when I later map that to something else, `<space>axx` will be a problem again.\r\n\r\nI'm not familiar with (neo)vim internals and I was told on IRC (on 2023-04-20 ~5PM) that it might be hard/impossible to implement, but I still wanted to bring it up, to open a discussion and in case someone has an idea how to do it.\r\n\r\nThis would only protect against typos in a \"leader sequence\" that yield an invalid mapping (that is not defined), but would obviously not protect against accidentally typing an unintended sequence that is defined. But I still think it would be useful, it just feels more natural from a UX perspective.\r\n\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Such a fundamental change would have to be made upstream (in Vim) and then backported to Neovim.",
            "created_at": "2023-04-21T11:35:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/23247#issuecomment-1517690347",
            "id": 1517690347,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23247",
            "node_id": "IC_kwDOAPphoM5adh3r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1517690347/reactions"
            },
            "updated_at": "2023-04-21T11:35:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1517690347",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This can be achieved by mapping the prefix to a function and calling `getchar()` from it.",
            "created_at": "2023-04-21T11:36:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/23247#issuecomment-1517690766",
            "id": 1517690766,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23247",
            "node_id": "IC_kwDOAPphoM5adh-O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1517690766/reactions"
            },
            "updated_at": "2023-04-21T11:36:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1517690766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@clason I see, should I close this here then and reopen in vim?\r\n\r\n@zeertzjq Thank you for the tip, that's good to know, I will read up on `getchar()` (and vimscript...) and try to implement it myself.",
            "created_at": "2023-04-21T11:59:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/23247#issuecomment-1517714497",
            "id": 1517714497,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23247",
            "node_id": "IC_kwDOAPphoM5adnxB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1517714497/reactions"
            },
            "updated_at": "2023-04-21T11:59:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1517714497",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6276613?v=4",
                "events_url": "https://api.github.com/users/camoz/events{/privacy}",
                "followers_url": "https://api.github.com/users/camoz/followers",
                "following_url": "https://api.github.com/users/camoz/following{/other_user}",
                "gists_url": "https://api.github.com/users/camoz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/camoz",
                "id": 6276613,
                "login": "camoz",
                "node_id": "MDQ6VXNlcjYyNzY2MTM=",
                "organizations_url": "https://api.github.com/users/camoz/orgs",
                "received_events_url": "https://api.github.com/users/camoz/received_events",
                "repos_url": "https://api.github.com/users/camoz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/camoz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/camoz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/camoz",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23247/comments",
    "created_at": "2023-04-21T11:28:23Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23247/events",
    "html_url": "https://github.com/neovim/neovim/issues/23247",
    "id": 1678365737,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 396626349,
            "name": "input",
            "node_id": "MDU6TGFiZWwzOTY2MjYzNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/input"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "key bindings",
            "id": 3304938718,
            "name": "mappings",
            "node_id": "MDU6TGFiZWwzMzA0OTM4NzE4",
            "url": "https://api.github.com/repos/neovim/neovim/labels/mappings"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23247/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5kCdQp",
    "number": 23247,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23247/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23247/timeline",
    "title": "handle invalid mappings with a specific prefix as NOP",
    "updated_at": "2025-01-17T15:31:21Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23247",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6276613?v=4",
        "events_url": "https://api.github.com/users/camoz/events{/privacy}",
        "followers_url": "https://api.github.com/users/camoz/followers",
        "following_url": "https://api.github.com/users/camoz/following{/other_user}",
        "gists_url": "https://api.github.com/users/camoz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/camoz",
        "id": 6276613,
        "login": "camoz",
        "node_id": "MDQ6VXNlcjYyNzY2MTM=",
        "organizations_url": "https://api.github.com/users/camoz/orgs",
        "received_events_url": "https://api.github.com/users/camoz/received_events",
        "repos_url": "https://api.github.com/users/camoz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/camoz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/camoz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/camoz",
        "user_view_type": "public"
    }
}