{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nSome Treesitter queries take a really long time to parse. For example, `vim.treesitter.query.get(\"haskell\", \"highlights\")` can take ~350ms to complete. Although `query.get(...)` [uses memoize to cache the result](https://github.com/neovim/neovim/blob/master/runtime/lua/vim/treesitter/query.lua#L274), the cache is extremely weak. The weak table is [implemented using \"kv\" mode](https://github.com/neovim/neovim/blob/master/runtime/lua/vim/func/_memoize.lua#L42) which means that the key and the value have to be kept alive or else the entry is garbage collected. But because the key is a string created by the memoize function, there's no way to keep the key alive which means the cache is largely useless and only lives for one gc cycle (if I'm understanding the implementation correctly) .\n\nCould Neovim instead pass `false` to the memoize function's `weak` parameter so that the table contains strong references? That would make the cache useful and remove tons of stuttering when plugins+Neovim constantly try to run Haskell Treesitter queries. I haven't looked into how much additional memory this would use, but for extremely slow queries like Haskell's highlighter, this would make using Neovim much more pleasant.\n\n### Steps to reproduce\n\nRun the following lua code in Neovim:\n```lua\nlocal start_time = vim.uv.hrtime()\n-- Attempt to keep the cache alive by storing the result in a global. That doesn't work though because the key can still get garbage collected.\nFirst_run = vim.treesitter.query.get('haskell', 'highlights')\nprint((vim.uv.hrtime() - start_time) / 1e6)\ncollectgarbage()\nstart_time = vim.uv.hrtime()\nvim.treesitter.query.get('haskell', 'highlights')\nprint((vim.uv.hrtime() - start_time) / 1e6)\n```\n\n### Expected behavior\n\nThe first number printed should be large, but the second number should be much smaller. That's the case if you remove the `collectgarbage` call, but with the `collectgarbage` call they both print large numbers.\n\n### Nvim version (nvim -v)\n\nNVIM v0.10.3 Build type: Release LuaJIT 2.1.1713773202\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nNixos 25.05beta732261.6df24922a140\n\n### Terminal name/version\n\nN/A, but I'm using Alacritty\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nSystem package manager",
    "closed_at": "2025-01-12T15:44:26Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
        "events_url": "https://api.github.com/users/clason/events{/privacy}",
        "followers_url": "https://api.github.com/users/clason/followers",
        "following_url": "https://api.github.com/users/clason/following{/other_user}",
        "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/clason",
        "id": 2361214,
        "login": "clason",
        "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
        "organizations_url": "https://api.github.com/users/clason/orgs",
        "received_events_url": "https://api.github.com/users/clason/received_events",
        "repos_url": "https://api.github.com/users/clason/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/clason",
        "user_view_type": "public"
    },
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31969/comments",
    "created_at": "2025-01-11T17:42:26Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31969/events",
    "html_url": "https://github.com/neovim/neovim/issues/31969",
    "id": 2782038228,
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "performance, latency, cpu/memory usage",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31969/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6l0ojU",
    "number": 31969,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31969/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31969/timeline",
    "title": "Treesitter query cache is cleared too soon",
    "updated_at": "2025-01-12T15:44:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31969",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7400280?v=4",
        "events_url": "https://api.github.com/users/jhgarner/events{/privacy}",
        "followers_url": "https://api.github.com/users/jhgarner/followers",
        "following_url": "https://api.github.com/users/jhgarner/following{/other_user}",
        "gists_url": "https://api.github.com/users/jhgarner/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jhgarner",
        "id": 7400280,
        "login": "jhgarner",
        "node_id": "MDQ6VXNlcjc0MDAyODA=",
        "organizations_url": "https://api.github.com/users/jhgarner/orgs",
        "received_events_url": "https://api.github.com/users/jhgarner/received_events",
        "repos_url": "https://api.github.com/users/jhgarner/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jhgarner/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jhgarner/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jhgarner",
        "user_view_type": "public"
    }
}