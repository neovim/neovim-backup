{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nThe command line does not have syntax highlighting, despite having a shiny new Vimscript parser at home. Also, enabling treesitter highlighting for vimscript breaks/disables the legacy parser for the command window (`q:`).\r\n\r\n### Expected behavior\r\n\r\nHook a treesitter highlighter into the command line (and window) so we can have rainbow goodness (including highlighting of embedded Lua). This requires extending the `TSHighlighter` with a new mode that parses each line independently as its own tree (or writing a custom `TSLineHighlighter`).\r\n\r\nThis will also allow us to remove the custom (unmaintained) vimscript parser used for `<c-r>=` expression highlighting (although that will require some trickery to parse the whole line as Vim expression rather than statement).",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Can we also eliminate the [\":help expr-highlight\" groups](https://github.com/neovim/neovim/blob/988b472d902e6116353fc2ae605bed32a37e6391/src/nvim/highlight_group.c#L463-L645) (`NvimPlainAssignment`, etc.)? These seem over-specific and I would think we want to use our core, generic highlight groups instead.",
            "created_at": "2023-12-03T17:32:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1837546656",
            "id": 1837546656,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5thryg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1837546656/reactions"
            },
            "updated_at": "2023-12-03T17:33:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1837546656",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, these would be obsolete when removing the legacy expressions parser from the command line.",
            "created_at": "2023-12-03T17:34:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1837547096",
            "id": 1837547096,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5thr5Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1837547096/reactions"
            },
            "updated_at": "2023-12-03T17:35:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1837547096",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Will this enhancement include the `/` and `?` mode for cmdline ?",
            "created_at": "2023-12-03T20:54:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1837597258",
            "id": 1837597258,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5th4JK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1837597258/reactions"
            },
            "updated_at": "2023-12-03T20:54:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1837597258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61395246?v=4",
                "events_url": "https://api.github.com/users/LamprosPitsillos/events{/privacy}",
                "followers_url": "https://api.github.com/users/LamprosPitsillos/followers",
                "following_url": "https://api.github.com/users/LamprosPitsillos/following{/other_user}",
                "gists_url": "https://api.github.com/users/LamprosPitsillos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LamprosPitsillos",
                "id": 61395246,
                "login": "LamprosPitsillos",
                "node_id": "MDQ6VXNlcjYxMzk1MjQ2",
                "organizations_url": "https://api.github.com/users/LamprosPitsillos/orgs",
                "received_events_url": "https://api.github.com/users/LamprosPitsillos/received_events",
                "repos_url": "https://api.github.com/users/LamprosPitsillos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LamprosPitsillos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LamprosPitsillos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LamprosPitsillos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The syntax highlight cannot be applyed in `/` or `?`.  It is for normal command line mode.\r\n\r\nNote:  Well `/` or `?` can be highlighted in Vim script treesitter parser.",
            "created_at": "2023-12-04T02:21:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1837735482",
            "id": 1837735482,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5tiZ46",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1837735482/reactions"
            },
            "updated_at": "2023-12-04T02:22:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1837735482",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've been poking around with this a little bit today, and I found that if you set `syntax=vim` in the cmdwin, you get what looks like Treesitter syntax highlighting. This seems like a similar issue to https://github.com/folke/noice.nvim/blob/92433164e2f7118d4122c7674c3834d9511722ba/lua/noice/text/syntax.lua#L12.   I made an autocommand for my config:\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd('CmdwinEnter', {\r\n  pattern = '[:>]',\r\n  desc = 'If the treesitter vim parser is installed, set the syntax again to get highlighting in the command window',\r\n  group = vim.api.nvim_create_augroup('cmdwin_syntax', {}),\r\n  callback = function ()\r\n    local is_loadable, _ = pcall(vim.treesitter.language.add, 'vim')\r\n    if is_loadable then\r\n      vim.cmd('set syntax=vim')\r\n    end\r\n  end\r\n})\r\n```\r\n\r\nI'm going to keep digging into a less hacky patch for both of these \r\n\r\n",
            "created_at": "2023-12-30T01:30:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1872418636",
            "id": 1872418636,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5vmtdM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872418636/reactions"
            },
            "updated_at": "2023-12-30T01:30:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872418636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "How can treesitter be used in the c code?",
            "created_at": "2024-01-13T14:05:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1890467409",
            "id": 1890467409,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5wrj5R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890467409/reactions"
            },
            "updated_at": "2024-01-13T14:05:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890467409",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/130783534?v=4",
                "events_url": "https://api.github.com/users/Sam-programs/events{/privacy}",
                "followers_url": "https://api.github.com/users/Sam-programs/followers",
                "following_url": "https://api.github.com/users/Sam-programs/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sam-programs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Sam-programs",
                "id": 130783534,
                "login": "Sam-programs",
                "node_id": "U_kgDOB8uZLg",
                "organizations_url": "https://api.github.com/users/Sam-programs/orgs",
                "received_events_url": "https://api.github.com/users/Sam-programs/received_events",
                "repos_url": "https://api.github.com/users/Sam-programs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Sam-programs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sam-programs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Sam-programs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@Sam-programs my idea was to turn the cmdline into a buffer, expose that buffer to lua, then start treesitter in the lua code. I haven't gotten very far with it though ",
            "created_at": "2024-01-13T14:10:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1890468600",
            "id": 1890468600,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5wrkL4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890468600/reactions"
            },
            "updated_at": "2024-01-13T14:10:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890468600",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@rudiejd I made a [plugin](https://github.com/Sam-programs/cmdline-hl.nvim) for it, I used the string parser not a buffer thought it was too hard to refresh the buffer's highlights.\r\n>  start treesitter in the lua code\r\n\r\nI have to call treesitter from lua?\r\nLike this ?\r\n```c\r\n  NLUA_EXEC_STATIC(\"return vim.something()\", args, &err);\r\n```",
            "created_at": "2024-01-13T14:19:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1890471375",
            "id": 1890471375,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5wrk3P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890471375/reactions"
            },
            "updated_at": "2024-01-13T14:20:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890471375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/130783534?v=4",
                "events_url": "https://api.github.com/users/Sam-programs/events{/privacy}",
                "followers_url": "https://api.github.com/users/Sam-programs/followers",
                "following_url": "https://api.github.com/users/Sam-programs/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sam-programs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Sam-programs",
                "id": 130783534,
                "login": "Sam-programs",
                "node_id": "U_kgDOB8uZLg",
                "organizations_url": "https://api.github.com/users/Sam-programs/orgs",
                "received_events_url": "https://api.github.com/users/Sam-programs/received_events",
                "repos_url": "https://api.github.com/users/Sam-programs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Sam-programs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sam-programs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Sam-programs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think the best approach here would be to use `nvim_ui_attach()` (or `vim.ui.attach` from Lua) to hook into `ext_cmdline` so you can have a (floating window) buffer as the actual commandline. Obviously, this would require adding support for that.",
            "created_at": "2024-01-13T14:36:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1890474936",
            "id": 1890474936,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5wrlu4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890474936/reactions"
            },
            "updated_at": "2024-01-13T14:36:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890474936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think the best approach here would be to use `nvim_ui_attach()` (or `vim.ui.attach` from Lua) to hook into `ext_cmdline` so you can have a (floating window) buffer as the actual commandline. Obviously, this would require adding support for that.\r\n\r\nSo in the end the cmdline bar will become a floating window?\r\n\r\nThis could provide alot of customisation if implemented, having the cmdline as any other buffer/window ( sort off)",
            "created_at": "2024-01-13T14:41:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1890476207",
            "id": 1890476207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5wrmCv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890476207/reactions"
            },
            "updated_at": "2024-01-13T14:42:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890476207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61395246?v=4",
                "events_url": "https://api.github.com/users/LamprosPitsillos/events{/privacy}",
                "followers_url": "https://api.github.com/users/LamprosPitsillos/followers",
                "following_url": "https://api.github.com/users/LamprosPitsillos/following{/other_user}",
                "gists_url": "https://api.github.com/users/LamprosPitsillos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LamprosPitsillos",
                "id": 61395246,
                "login": "LamprosPitsillos",
                "node_id": "MDQ6VXNlcjYxMzk1MjQ2",
                "organizations_url": "https://api.github.com/users/LamprosPitsillos/orgs",
                "received_events_url": "https://api.github.com/users/LamprosPitsillos/received_events",
                "repos_url": "https://api.github.com/users/LamprosPitsillos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LamprosPitsillos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LamprosPitsillos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LamprosPitsillos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That's exactly what noice.nvim is already doing; it just needs to be a lot more robust (and less fancy) to be acceptable in core.",
            "created_at": "2024-01-13T14:44:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1890476859",
            "id": 1890476859,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5wrmM7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890476859/reactions"
            },
            "updated_at": "2024-01-13T14:44:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890476859",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Note: Well `/` or `?` can be highlighted in Vim script treesitter parser.\r\n\r\nMore like the `regex` parser. That would require bundling it, though, and I'm not 100% convinced that's a good idea.",
            "created_at": "2024-01-13T14:45:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1890477345",
            "id": 1890477345,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5wrmUh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890477345/reactions"
            },
            "updated_at": "2024-01-13T14:45:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890477345",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > Note: Well `/` or `?` can be highlighted in Vim script treesitter parser.\r\n> \r\n> More like the `regex` parser. That would require bundling it, though, and I'm not 100% convinced that's a good idea.\r\n\r\nI mean regex has been in vim since the beginning, I don't see it as that bad improving it's parsing and highlighting in core.\r\n\r\n>That's exactly what noice.nvim is already doing; it just needs to be a lot more robust (and less fancy) to be acceptable in core.\r\n\r\nWhat will become of the `cmdheight` and other cmdline specific options and functions?",
            "created_at": "2024-01-13T14:48:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1890478038",
            "id": 1890478038,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5wrmfW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890478038/reactions"
            },
            "updated_at": "2024-01-13T14:48:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890478038",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61395246?v=4",
                "events_url": "https://api.github.com/users/LamprosPitsillos/events{/privacy}",
                "followers_url": "https://api.github.com/users/LamprosPitsillos/followers",
                "following_url": "https://api.github.com/users/LamprosPitsillos/following{/other_user}",
                "gists_url": "https://api.github.com/users/LamprosPitsillos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LamprosPitsillos",
                "id": 61395246,
                "login": "LamprosPitsillos",
                "node_id": "MDQ6VXNlcjYxMzk1MjQ2",
                "organizations_url": "https://api.github.com/users/LamprosPitsillos/orgs",
                "received_events_url": "https://api.github.com/users/LamprosPitsillos/received_events",
                "repos_url": "https://api.github.com/users/LamprosPitsillos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LamprosPitsillos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LamprosPitsillos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LamprosPitsillos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I mean regex has been in vim since the beginning, I don't see it as that bad improving it's parsing and highlighting in core.\r\n\r\nI mean the regex treesitter parser.\r\n\r\n> What will become of the cmdheight and other cmdline specific options and functions?\r\n\r\nI don't know; hopefully they'll become obsolete.\r\n\r\nBut these are minor details and not relevant to the core of this issue; please keep comments focused to avoid yet another \"80 hidden comments\" issue where valuable comments get lost. If you have idle questions, better ask on https://matrix.to/#/#neovim-dev:matrix.org.",
            "created_at": "2024-01-13T14:50:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1890478633",
            "id": 1890478633,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5wrmop",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890478633/reactions"
            },
            "updated_at": "2024-01-13T14:50:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890478633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think the best approach here would be to use `nvim_ui_attach()` (or `vim.ui.attach` from Lua) to hook into `ext_cmdline` so you can have a (floating window) buffer as the actual commandline. Obviously, this would require adding support for that.\r\n\r\nWould we not rather keep this in C? ext_cmdline seems kind of roundabout when internally we can just open a floating window and set the cmdline text in a buffer. I made a quick mock-up that works quite well already. \r\n\r\n<details><summary>Not much more than the following is required:</summary>\r\n\r\n```c\r\n// Init in command_line_enter()\r\nFloatConfig fconfig = FLOAT_CONFIG_INIT;\r\nfconfig.height = 1;\r\nfconfig.width = Columns;\r\nfconfig.row = Rows;\r\nfconfig.zindex = kZIndexCmdlinePopupMenu;\r\nfconfig.style = kWinStyleMinimal;\r\ncmdline_win = win_new_float(NULL, false, fconfig, NULL);\r\ncmdline_buf = buflist_new(NULL, NULL, 1, BLN_NOOPT | BLN_DUMMY);\r\nwin_enter(cmdline_win, true);\r\nset_curbuf(cmdline_buf, DOBUF_SPLIT);\r\nset_option_value(kOptFiletype, STATIC_CSTR_AS_OPTVAL(\"vim\"), OPT_LOCAL);\r\nset_option_value(kOptWinhighlight, STATIC_CSTR_AS_OPTVAL(\"NormalFloat:Normal\"), OPT_LOCAL);\r\n\r\n...\r\n\r\n// Replacement redrawcmd()\r\nchar buf[MAXPATHL];\r\nbuf[0] = (char)ccline.cmdfirstc;\r\nxstrlcpy(buf + 1, ccline.cmdbuff, MAXPATHL);\r\nml_replace_buf(cmdline_buf, 1, buf, true);\r\nchanged_lines(cmdline_buf, 1, 0, 1, 0, false);\r\nccline.cmdspos = cmd_screencol(ccline.cmdpos);\r\ncmdline_win->w_cursor.col = ccline.cmdspos;\r\nupdate_screen();\r\n```\r\n\r\n</details>\r\n\r\nObviously a lot of dead code would need to be removed and probably edge cases considered.",
            "created_at": "2024-01-29T05:58:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1914013040",
            "id": 1914013040,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yFYVw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 6,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914013040/reactions"
            },
            "updated_at": "2024-01-30T14:05:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914013040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "\r\n> Obviously a lot of dead code would need to be removed and probably edge cases considered.\r\n\r\nPlus the cmdwindow that needs a special implementation, something like `TSHighlightLine` as mentioned above \r\n\r\nI guess that could be a later PR ",
            "created_at": "2024-01-29T06:45:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1914060626",
            "id": 1914060626,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yFj9S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914060626/reactions"
            },
            "updated_at": "2024-01-29T06:45:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914060626",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61395246?v=4",
                "events_url": "https://api.github.com/users/LamprosPitsillos/events{/privacy}",
                "followers_url": "https://api.github.com/users/LamprosPitsillos/followers",
                "following_url": "https://api.github.com/users/LamprosPitsillos/following{/other_user}",
                "gists_url": "https://api.github.com/users/LamprosPitsillos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LamprosPitsillos",
                "id": 61395246,
                "login": "LamprosPitsillos",
                "node_id": "MDQ6VXNlcjYxMzk1MjQ2",
                "organizations_url": "https://api.github.com/users/LamprosPitsillos/orgs",
                "received_events_url": "https://api.github.com/users/LamprosPitsillos/received_events",
                "repos_url": "https://api.github.com/users/LamprosPitsillos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LamprosPitsillos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LamprosPitsillos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LamprosPitsillos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@luukvbaal thank you for the starter code!! I had similar settings in C (dummy buffer, new window) but was missing all of the float config. I was also way overthinking starting treesitter. I'll try this out and see how it goes. ",
            "created_at": "2024-01-29T12:41:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1914618791",
            "id": 1914618791,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yHsOn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914618791/reactions"
            },
            "updated_at": "2024-01-29T12:41:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914618791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@rudiejd I didn't post the snippet because I'm not willing to continue working on it, but merely to align on whether we actually prefer a C implementation over ext_cmdline. So unless you insist on taking it over I can continue working on it.",
            "created_at": "2024-01-29T14:05:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1914763598",
            "id": 1914763598,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yIPlO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914763598/reactions"
            },
            "updated_at": "2024-01-29T14:05:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914763598",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@luukvbaal oh nice! I interpreted it as the former. feel free, I won't have much time to make progress on this. I expect this will require a sizable change ",
            "created_at": "2024-01-29T14:15:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1914782939",
            "id": 1914782939,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yIUTb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914782939/reactions"
            },
            "updated_at": "2024-01-29T14:18:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914782939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> to align on whether we actually prefer a C implementation over ext_cmdline.\r\n\r\nNo objection to a C impl if these are true (seems like \"yes\" based on your code snippet):\r\n\r\n- it's more straightforward in the near-term (not tons of complicated code)\r\n- it isn't a \"one-way door\" (shifting to a different approach in the future won't require disentangling fragile special-cases spread around the C codebase, or unwinding a public interface).",
            "created_at": "2024-01-29T18:56:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1915364552",
            "id": 1915364552,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yKiTI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1915364552/reactions"
            },
            "updated_at": "2024-01-29T18:58:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1915364552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> it's more straightforward in the near-term (not tons of complicated code)\r\n\r\nHard to say, beyond the snippets posted, some more trickery is needed to e.g. set the cursor position and expand the cmdline when it goes beyond the available Columns. Replacing(deleting) this in case we end up moving to a lua based cmdline in the future will require some work. So if that seems likely, I don't think having this as an intermediate solution makes sense.\r\n\r\n> it isn't a \"one-way door\" (shifting to a different approach in the future won't require disentangling fragile special-cases spread around the C codebase, or unwinding a public interface).\r\n\r\nI don't think it would be more spread out than it already is. The implementation just requires minor adjustments, I don't foresee the call sites changing. \r\n\r\nI had no intention of exposing a public interface, at least at first. My goal would be to make this a drop in replacement for the current cmdline, i.e. indistinguishable from what we have now except for highlighting. At least at first, the floating window config could always be exposed later (and would likely be compatible with a lua based impl as well).\r\n\r\nBut I don't think it's wort the effort if ext_cmdline is seen as the way forward, also for the TUI.",
            "created_at": "2024-01-29T22:47:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1915709454",
            "id": 1915709454,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yL2gO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1915709454/reactions"
            },
            "updated_at": "2024-01-29T22:47:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1915709454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But I don't think it's wort the effort if ext_cmdline is seen as the way forward\r\n\r\nNo preference. If this feature gets delivered in C we wouldn't spend time rewriting it as a `ext_cmdline` handler unless there was a strong reason to do so.",
            "created_at": "2024-01-30T01:10:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1915872447",
            "id": 1915872447,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yMeS_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1915872447/reactions"
            },
            "updated_at": "2024-01-30T01:10:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1915872447",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm replacing the cmdline with a floating window is doable but quite cumbersome. The interactions with the current cmdline and the message grid (on which it is drawn) are quite involved and identifying/replacing all of them requires some work.\r\n\r\nI wasn't aware before but while working on this I found out that we already have a way to color the command line lol. I now wonder if it will be more straightforward to just use a scratch buffer with the cmdline contents, attach treesitter (that part I have finished), extract the applied highlights, and still draw them on the message grid through `color_cmdline()`.\r\n\r\nThough it seems the only way to do that is through the experimental `g:Nvim_color_cmdline`. If we can deprecate this color callback, along with the VimL/expression parser by replacing the cmdline with a colored floating window, and if that would be preferred, I can continue with resolving display issues. Any thoughts? ",
            "created_at": "2024-02-03T02:00:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1925017954",
            "id": 1925017954,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yvXFi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925017954/reactions"
            },
            "updated_at": "2024-02-03T02:00:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925017954",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I believe in the long run it would be more beneficial for the bar ( or even the whole message grid )  to become a float which from what i understand would imply that it would also be a buffer , thus allowing anything that you can do in a buffer ( like snippets, treesitter etc ).\r\n\r\nOr maybe even natively move the bar around, since it's a float i can see that happening.",
            "created_at": "2024-02-03T05:32:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1925128763",
            "id": 1925128763,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yvyI7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925128763/reactions"
            },
            "updated_at": "2024-02-03T05:32:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925128763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61395246?v=4",
                "events_url": "https://api.github.com/users/LamprosPitsillos/events{/privacy}",
                "followers_url": "https://api.github.com/users/LamprosPitsillos/followers",
                "following_url": "https://api.github.com/users/LamprosPitsillos/following{/other_user}",
                "gists_url": "https://api.github.com/users/LamprosPitsillos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LamprosPitsillos",
                "id": 61395246,
                "login": "LamprosPitsillos",
                "node_id": "MDQ6VXNlcjYxMzk1MjQ2",
                "organizations_url": "https://api.github.com/users/LamprosPitsillos/orgs",
                "received_events_url": "https://api.github.com/users/LamprosPitsillos/received_events",
                "repos_url": "https://api.github.com/users/LamprosPitsillos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LamprosPitsillos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LamprosPitsillos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LamprosPitsillos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, the floating window approach brings possibilities for further niceties (matchparen?)/floating window customizations. \n\nA floating position completely unattached from the message grid might actually make things easier, but I doubt we want that by default.",
            "created_at": "2024-02-03T07:00:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1925180724",
            "id": 1925180724,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5yv-00",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925180724/reactions"
            },
            "updated_at": "2024-02-03T07:00:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925180724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> hough it seems the only way to do that is through the experimental g:Nvim_color_cmdline.\r\n\r\nThis has to go. The point of this issue is to _replace_ this adhoc parser with treesitter.",
            "created_at": "2024-02-03T09:07:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1925232773",
            "id": 1925232773,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5ywLiF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925232773/reactions"
            },
            "updated_at": "2024-02-03T09:07:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925232773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This has to go. The point of this issue is to _replace_ this adhoc parser with treesitter.\n\nSure, but the highlight callback mechanism is a separate component to the parser. One which I thought might be used to apply treesitter highlighting if keeping the cmdline on the message grid would be desirable. \n\nBut I think decoupling it from the message grid is doable and worthwhile, so I continued working on it. Just need to make sure things are displayed as expected, which gets quite complicated with a moving cmdline row and scrolled messages etc.\n\nHere is my progress so far: https://github.com/luukvbaal/neovim/commit/d92b0570f42d850af10f454247a270f4d790de3e (won't be working on it for a while, currently on the road on vacation).\n",
            "created_at": "2024-02-03T09:22:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1925240092",
            "id": 1925240092,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5ywNUc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 4,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925240092/reactions"
            },
            "updated_at": "2024-02-03T10:33:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925240092",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, the less special treatment, the better. (This is why I originally suggested `ext_cmdline`, which noice has successfully made use of -- albeit with hacks on top of hacks.)\r\n\r\nThis is also an opportunity for revisiting `cmdheight=0`, which has been a constant source of issues.",
            "created_at": "2024-02-03T09:24:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1925240743",
            "id": 1925240743,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5ywNen",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925240743/reactions"
            },
            "updated_at": "2024-02-03T09:24:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925240743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah completely eliminating the `!ui_has(kUICmdline)` path by implementing a more minimal version of noice in core, also seems quite attractive. My (uneducated) understanding was that noice requires quite some hacks currently. That and the fact that **ext**_cmdline seems inappropriate for a core component prompted me to explore a C implementation instead.",
            "created_at": "2024-02-03T09:34:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1925245234",
            "id": 1925245234,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5ywOky",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925245234/reactions"
            },
            "updated_at": "2024-02-03T16:35:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925245234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm not against that, mind you; especially if it's easier or more robust. We'll also have to consider that GUIs may still want to hijack `ext_cmdline`.\r\n\r\nBut we _do_ want to make `vim.ui_attach()` a first-class consumer of `ext_foo`, so if we can get rid of the need for hacks (in C), so much the better. This is not a trivial change and thus not part of the 0.10 milestone.",
            "created_at": "2024-02-03T09:37:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-1925245924",
            "id": 1925245924,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM5ywOvk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925245924/reactions"
            },
            "updated_at": "2024-02-03T09:37:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925245924",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> [@rudiejd](https://github.com/rudiejd) I made a [plugin](https://github.com/Sam-programs/cmdline-hl.nvim) for it, I used the string parser not a buffer thought it was too hard to refresh the buffer's highlights.\n> \n> > start treesitter in the lua code\n> \n> I have to call treesitter from lua? Like this ?\n> \n>   NLUA_EXEC_STATIC(\"return vim.something()\", args, &err);\n\nLOVE  YOU! Was able to root out noice for the one feature I liked it which custom cmdline rendering, plus I can configure syntax hl in one place? Shut up and take my  my  github star! How is this not a popular plugin?",
            "created_at": "2025-04-05T18:11:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/26346#issuecomment-2781024929",
            "id": 2781024929,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26346",
            "node_id": "IC_kwDOAPphoM6lwxKh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2781024929/reactions"
            },
            "updated_at": "2025-04-05T18:24:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2781024929",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/109661595?v=4",
                "events_url": "https://api.github.com/users/tom-gora/events{/privacy}",
                "followers_url": "https://api.github.com/users/tom-gora/followers",
                "following_url": "https://api.github.com/users/tom-gora/following{/other_user}",
                "gists_url": "https://api.github.com/users/tom-gora/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tom-gora",
                "id": 109661595,
                "login": "tom-gora",
                "node_id": "U_kgDOBolNmw",
                "organizations_url": "https://api.github.com/users/tom-gora/orgs",
                "received_events_url": "https://api.github.com/users/tom-gora/received_events",
                "repos_url": "https://api.github.com/users/tom-gora/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tom-gora/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tom-gora/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tom-gora",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 31,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26346/comments",
    "created_at": "2023-12-01T10:58:13Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26346/events",
    "html_url": "https://github.com/neovim/neovim/issues/26346",
    "id": 2020633035,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1786207367,
            "name": "highlight",
            "node_id": "MDU6TGFiZWwxNzg2MjA3MzY3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/highlight"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "command line, also cmdwin",
            "id": 5826989442,
            "name": "cmdline-mode",
            "node_id": "LA_kwDOAPphoM8AAAABW1DNgg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/cmdline-mode"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26346/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 708,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 636,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-04-07T10:13:12Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM54cGnL",
    "number": 26346,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 28,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 28,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26346/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26346/timeline",
    "title": "Treesitter: syntax highlighting for command line, window",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-05T18:24:54Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26346",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
        "events_url": "https://api.github.com/users/clason/events{/privacy}",
        "followers_url": "https://api.github.com/users/clason/followers",
        "following_url": "https://api.github.com/users/clason/following{/other_user}",
        "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/clason",
        "id": 2361214,
        "login": "clason",
        "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
        "organizations_url": "https://api.github.com/users/clason/orgs",
        "received_events_url": "https://api.github.com/users/clason/received_events",
        "repos_url": "https://api.github.com/users/clason/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/clason",
        "user_view_type": "public"
    }
}