{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen using `vim.lsp.enable` with `vim.lsp.config` and `root_markers`, some servers crash when opening an \"artificial\" buffer (e.g., a buffer with a previous version of a file for diffing). Personally, I've observed this behaviour using [fugitive](https://github.com/tpope/vim-fugitive) and [diffview](https://github.com/sindrets/diffview.nvim). The servers weren't crashing when using nvim-lspconfig with equivalent configurations.\n\nI believe it could be related to obtaining a dubious root directory and passing the information to the LSP server. Moreover, I believe that when using nvim-lspconfig the servers weren't attaching to these \"artificial\" buffers.\n\nI was able to solve the issue in my configuration using logic similar to nvim-lspconfig. Specifically, the logic in the function `bufname_valid` [here](https://github.com/neovim/nvim-lspconfig/blob/200280dab91a7df2ca42fd2ab3cb4c5fab056666/lua/lspconfig/util.lua#L23).\n\nI didn't find information on whether this is by design for `vim.lsp.enable`. My understanding is that `vim.lsp.enable` doesn't aim to cover all use cases.\n\nThis is my first time opening an issue here, thus please do let me know if I can provide any other information which would help to resolve this issue.\n\n### Steps to reproduce\n\n1. Install [diffview](https://github.com/sindrets/diffview.nvim).\n2. Configure `marksman` (see below).\n3. Call `vim.lsp.enable({\"marksman\"})`.\n4. Create a minimal markdown file (see below) in a git repository and commit the file.\n5. Modify the minimal markdown file, and open a diff with `:DiffviewOpen`.\n6. You should have obtained an error, if not keep the diff open and stage and unstage the file until an error occurs.\n\n\nConfiguration for `marksman`:\n\n```lua\nreturn {\n    cmd = { \"marksman\", \"server\" },\n    filetypes = { \"markdown\" },\n    root_markers = { \".git\" },\n}\n```\n\nMinimal markdown file:\n\n```markdown\n# Title\n\nContent.\n```\n\n### Expected behavior\n\nI would have expected that clients don't attach to \"artificial\" buffers.\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-2080+gc1ac55ba45\n\n### Vim (not Nvim) behaves the same?\n\nNo\n\n### Operating system/version\n\nUbuntu 24.04.2\n\n### Terminal name/version\n\nGhostty 1.1.3\n\n### $TERM environment variable\n\nxterm-ghostty\n\n### Installation\n\nDownloaded from pre-release",
    "closed_at": "2025-03-26T13:14:53Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "We do need the LSP client to have the ability to attach to non-file buffers. Specifically, it's the only way to adding completion sources to the built in completion.\n\nWe might need to check what URI got sent and double check it follows the [lsp uri spec]( https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#uri)\n\nIt could also be that marksman doesn't properly handle non-file URIs.",
            "created_at": "2025-03-26T11:43:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/33061#issuecomment-2754121513",
            "id": 2754121513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33061",
            "node_id": "IC_kwDOAPphoM6kKI8p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2754121513/reactions"
            },
            "updated_at": "2025-03-26T11:44:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2754121513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51029315?v=4",
                "events_url": "https://api.github.com/users/crwebb85/events{/privacy}",
                "followers_url": "https://api.github.com/users/crwebb85/followers",
                "following_url": "https://api.github.com/users/crwebb85/following{/other_user}",
                "gists_url": "https://api.github.com/users/crwebb85/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/crwebb85",
                "id": 51029315,
                "login": "crwebb85",
                "node_id": "MDQ6VXNlcjUxMDI5MzE1",
                "organizations_url": "https://api.github.com/users/crwebb85/orgs",
                "received_events_url": "https://api.github.com/users/crwebb85/received_events",
                "repos_url": "https://api.github.com/users/crwebb85/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/crwebb85/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/crwebb85/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/crwebb85",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Tracked in https://github.com/neovim/neovim/issues/32074 and was also touched on in the discussions of https://github.com/neovim/neovim/issues/32037\n\nIn the meantime: Instead of using `lsp.enable` you can retrieve the config using `vim.lsp.config[name]` and use it with `lsp.start()` in a `FileType` event where you guard with buftype conditions as needed.",
            "created_at": "2025-03-26T13:14:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/33061#issuecomment-2754364821",
            "id": 2754364821,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33061",
            "node_id": "IC_kwDOAPphoM6kLEWV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2754364821/reactions"
            },
            "updated_at": "2025-03-26T13:15:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2754364821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "NOTE: I was in the process of writing this before the issue was closed. Therefore, I'll still include it in case it could be helpful to others.\n\n> We do need the LSP client to have the ability to attach to non-file buffers. Specifically, it's the only way to adding completion sources to the built in completion.\n\n~In light of this, maybe a potential solution could be to prevent attaching to non-file buffers which aren't modifiable?~\n\nI would also say that, in the specific context of diffing, attaching to the left window yields a different root directory from the right window. Therefore, the diagnostics can be different if the LSP retrieve configuration from the file-system.\n\n> We might need to check what URI got sent and double check it follows the [lsp uri spec](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#uri)\n\nSo far, I've observed crashes with `pyright` and `ruff` in addition to `marksman`. I believe the log from `ruff` is specifically interesting when it comes to the URI sent. However, I'll include those from `marksman` and `pyright` too for the sake of completeness.\n\n_ruff_:\n\n```\n[ERROR][2025-03-25 20:32:29] ...p/_transport.lua:36\t\"rpc\"\t\"ruff\"\t\"stderr\"\t\"2025-03-25 20:32:29.045099961  INFO No workspace settings found for file://./, using default settings\\nruff failed\\n  Cause: Failed to convert workspace URL to file path: file://./\\n\"\n[ERROR][2025-03-25 20:34:27] ...p/_transport.lua:36\t\"rpc\"\t\"ruff\"\t\"stderr\"\t\"2025-03-25 20:34:27.807806257  INFO No workspace settings found for file://./, using default settings\\nruff failed\\n  Cause: Failed to convert workspace URL to file path: file://./\\n\"\n[ERROR][2025-03-25 20:35:37] ...p/_transport.lua:36\t\"rpc\"\t\"ruff\"\t\"stderr\"\t\"2025-03-25 20:35:37.304616965  INFO No workspace settings found for file://./, using default settings\\nruff failed\\n  Cause: Failed to convert workspace URL to file path: file://./\\n\"\n```\n\n_Pyright_:\n\n```\n[ERROR][2025-03-25 20:36:17] ...p/_transport.lua:36\t\"rpc\"\t\"pyright-langserver\"\t\"stderr\"\t\"\\n<--- Last few GCs --->\\n\\n[35098:0xd6d7320]   227406 ms: Mark-Compact 4034.9 (4129.0) -> 4019.4 (4129.5) MB, 432.48 / 0.00 ms  (average mu = 0.173, current mu = 0.079) allocation failure; scavenge might not succeed\\n[35098:0xd6d7320]   227915 ms: Mark-Compact 4035.5 (4129.5) -> 4020.1 (4130.3) MB, 473.91 / 0.00 ms  (average mu = 0.123, current mu = 0.069) allocation failure; scavenge might not succeed\\n\\n\\n<--- JS stacktrace --->\\n\\nFATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory\\n----- Native stack trace -----\\n\\n\"\n[ERROR][2025-03-25 20:36:17] ...p/_transport.lua:36\t\"rpc\"\t\"pyright-langserver\"\t\"stderr\"\t\" 1: 0xcd8bd6 node::OOMErrorHandler(char const*, v8::OOMDetails const&) [node]\\n\"\n[ERROR][2025-03-25 20:36:17] ...p/_transport.lua:36\t\"rpc\"\t\"pyright-langserver\"\t\"stderr\"\t\" 2: 0x10aed20 v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, v8::OOMDetails const&) [node]\\n\"\n[ERROR][2025-03-25 20:36:17] ...p/_transport.lua:36\t\"rpc\"\t\"pyright-langserver\"\t\"stderr\"\t\" 3: 0x10af007 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, v8::OOMDetails const&) [node]\\n\"\n[ERROR][2025-03-25 20:36:17] ...p/_transport.lua:36\t\"rpc\"\t\"pyright-langserver\"\t\"stderr\"\t\" 4: 0x12cdfe5  [node]\\n\"\n[ERROR][2025-03-25 20:36:17] ...p/_transport.lua:36\t\"rpc\"\t\"pyright-langserver\"\t\"stderr\"\t\" 5: 0x12ce4be  [node]\\n\"\n[ERROR][2025-03-25 20:36:17] ...p/_transport.lua:36\t\"rpc\"\t\"pyright-langserver\"\t\"stderr\"\t\" 6: 0x12e36e6 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::internal::GarbageCollectionReason, char const*) [node]\\n\"\n[ERROR][2025-03-25 20:36:17] ...p/_transport.lua:36\t\"rpc\"\t\"pyright-langserver\"\t\"stderr\"\t\" 7: 0x12e4209  [node]\\n\"\n[ERROR][2025-03-25 20:36:17] ...p/_transport.lua:36\t\"rpc\"\t\"pyright-langserver\"\t\"stderr\"\t\" 8: 0x12e4818  [node]\\n\"\n[ERROR][2025-03-25 20:36:17] ...p/_transport.lua:36\t\"rpc\"\t\"pyright-langserver\"\t\"stderr\"\t\" 9: 0x1a34081  [node]\\n\"\n```\n\n_marksman_:\n\n```\n[ERROR][2025-03-25 21:09:26] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"Marksman encountered a fatal error\\nPlease, report the error at https://github.com/artempyanykh/marksman/issues\\n---------------------------------------------------------------------------\"\n[ERROR][2025-03-25 21:09:26] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"\\n\"\n[ERROR][2025-03-25 21:09:26] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"Marksman version: \"\n[ERROR][2025-03-25 21:09:26] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"1.0.0.0\\n\"\n[ERROR][2025-03-25 21:09:26] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"OS: Ubuntu 24.04.2 LTS\\nArch: \"\n[ERROR][2025-03-25 21:09:26] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"X64\\n---------------------------------------------------------------------------\\n\"\n[ERROR][2025-03-25 21:09:26] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"Invalid URI: The hostname could not be parsed.\\n\"\n[ERROR][2025-03-25 21:09:26] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"   at System.Uri.CreateThis(String, Boolean, UriKind, UriCreationOptions& )\\n   at System.Uri..ctor(String uriString)\\n   at Marksman.Paths.uriToSystemPath(String uri) in /home/runner/work/marksman/marksman/Marksman/Paths.fs:line 47\\n   at Marksman.Paths.UriWith.mkRoot(String uri) in /home/runner/work/marksman/marksman/Marksman/Paths.fs:line 364\\n   at Marksman.Server.ServerUtil.extractWorkspaceFolders(InitializeParams par) in /home/runner/work/marksman/marksman/Marksman/Server.fs:line 34\\n   at Marksman.Server.MarksmanServer.Initialize(InitializeParams par) in /home/runner/work/marksman/marksman/Marksman/Server.fs:line 510\\n\"\n[ERROR][2025-03-25 21:09:27] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"[21:09:26 INF] <LSP Entry> Starting Marksman LSP server: {}\\n\"\n[ERROR][2025-03-25 21:09:27] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"---------------------------------------------------------------------------\\nMarksman encountered a fatal error\\nPlease, report the error at https://github.com/artempyanykh/marksman/issues\\n---------------------------------------------------------------------------\\n\"\n[ERROR][2025-03-25 21:09:27] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"Marksman version: \"\n[ERROR][2025-03-25 21:09:27] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"1.0.0.0\\nOS: Ubuntu 24.04.2 LTS\\nArch: \"\n[ERROR][2025-03-25 21:09:27] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"X64\\n---------------------------------------------------------------------------\\n\"\n[ERROR][2025-03-25 21:09:27] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"Invalid URI: The hostname could not be parsed.\\n\"\n[ERROR][2025-03-25 21:09:27] ...p/_transport.lua:36\t\"rpc\"\t\"marksman\"\t\"stderr\"\t\"   at System.Uri.CreateThis(String, Boolean, UriKind, UriCreationOptions& )\\n   at System.Uri..ctor(String uriString)\\n   at Marksman.Paths.uriToSystemPath(String uri) in /home/runner/work/marksman/marksman/Marksman/Paths.fs:line 47\\n   at Marksman.Paths.UriWith.mkRoot(String uri) in /home/runner/work/marksman/marksman/Marksman/Paths.fs:line 364\\n   at Marksman.Server.ServerUtil.extractWorkspaceFolders(InitializeParams par) in /home/runner/work/marksman/marksman/Marksman/Server.fs:line 34\\n   at Marksman.Server.MarksmanServer.Initialize(InitializeParams par) in /home/runner/work/marksman/marksman/Marksman/Server.fs:line 510\\n\"\n```",
            "created_at": "2025-03-26T13:23:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/33061#issuecomment-2754389826",
            "id": 2754389826,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33061",
            "node_id": "IC_kwDOAPphoM6kLKdC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2754389826/reactions"
            },
            "updated_at": "2025-03-26T13:37:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2754389826",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40727826?v=4",
                "events_url": "https://api.github.com/users/vincentlabelle/events{/privacy}",
                "followers_url": "https://api.github.com/users/vincentlabelle/followers",
                "following_url": "https://api.github.com/users/vincentlabelle/following{/other_user}",
                "gists_url": "https://api.github.com/users/vincentlabelle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vincentlabelle",
                "id": 40727826,
                "login": "vincentlabelle",
                "node_id": "MDQ6VXNlcjQwNzI3ODI2",
                "organizations_url": "https://api.github.com/users/vincentlabelle/orgs",
                "received_events_url": "https://api.github.com/users/vincentlabelle/received_events",
                "repos_url": "https://api.github.com/users/vincentlabelle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vincentlabelle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vincentlabelle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vincentlabelle",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33061/comments",
    "created_at": "2025-03-26T03:13:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33061/events",
    "html_url": "https://github.com/neovim/neovim/issues/33061",
    "id": 2948279730,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33061/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 16,
        "created_at": "2025-03-14T12:12:07Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-04-18T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/49",
        "id": 12520861,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/49/labels",
        "node_id": "MI_kwDOAPphoM4Avw2d",
        "number": 49,
        "open_issues": 26,
        "state": "open",
        "title": "0.11.1",
        "updated_at": "2025-03-31T13:59:38Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/49"
    },
    "node_id": "I_kwDOAPphoM6vuy2y",
    "number": 33061,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33061/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "duplicate",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33061/timeline",
    "title": "`vim.lsp.enable` attemps to attach to artificial buffers",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-03-26T13:37:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33061",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/40727826?v=4",
        "events_url": "https://api.github.com/users/vincentlabelle/events{/privacy}",
        "followers_url": "https://api.github.com/users/vincentlabelle/followers",
        "following_url": "https://api.github.com/users/vincentlabelle/following{/other_user}",
        "gists_url": "https://api.github.com/users/vincentlabelle/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vincentlabelle",
        "id": 40727826,
        "login": "vincentlabelle",
        "node_id": "MDQ6VXNlcjQwNzI3ODI2",
        "organizations_url": "https://api.github.com/users/vincentlabelle/orgs",
        "received_events_url": "https://api.github.com/users/vincentlabelle/received_events",
        "repos_url": "https://api.github.com/users/vincentlabelle/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vincentlabelle/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vincentlabelle/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vincentlabelle",
        "user_view_type": "public"
    }
}