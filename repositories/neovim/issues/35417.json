{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nAssume we have attached two language servers both providing completion with single trigger characters `-` and `>` respectively. \n\nThen map `vim.keymap.set('i', '<A-.>', '->')`. \n\nWhen `->` is inserted from that keymap, then `>` doesn't act as a trigger character because `completion_timer` started for `-` is still alive. As the result, we get completion items from `ls1` only.\n\nhttps://github.com/neovim/neovim/blob/30dae87de4c6d6c8bda9657e22e187634cfa12a8/runtime/lua/vim/lsp/completion.lua#L572-L587\n\n\n### Steps to reproduce\n\n`init.lua`:\n````lua\nlocal function createServer(opts)\n  opts = opts or {}\n  local server = {}\n  server.messages = {}\n\n  function server.cmd(dispatchers)\n    local closing = false\n    local handlers = opts.handlers or {}\n    local srv = {}\n\n    function srv.request(method, params, callback)\n      table.insert(server.messages, {\n        method = method,\n        params = params,\n      })\n      local handler = handlers[method]\n      if handler then\n        handler(method, params, callback)\n      elseif method == 'initialize' then\n        callback(nil, {\n          capabilities = opts.capabilities or {},\n        })\n      elseif method == 'shutdown' then\n        callback(nil, nil)\n      end\n      local request_id = #server.messages\n      return true, request_id\n    end\n\n    function srv.notify(method, params)\n      table.insert(server.messages, {\n        method = method,\n        params = params,\n      })\n      if method == 'exit' then\n        dispatchers.on_exit(0, 15)\n      end\n    end\n\n    function srv.is_closing()\n      return closing\n    end\n\n    function srv.terminate()\n      closing = true\n    end\n\n    return srv\n  end\n\n  return server\nend\n\nlocal completionResultPhpactor = {\n  isIncomplete = false,\n  items = {\n    {\n      additionalTextEdits = {{\n        newText = 'use ReturnTypeWillChange;\\n',\n        range = {\n          ['end'] = {\n            character = 0,\n            line = 1\n          },\n          start = {\n            character = 0,\n            line = 1\n          }\n        },\n      }},\n      label = 'return',\n      insertText = 'return $1;$0',\n      kind = vim.lsp.protocol.CompletionItemKind.Keyword,\n      insertTextFormat = vim.lsp.protocol.InsertTextFormat.Snippet,\n      detail = 'Result from Phpactor',\n      sortText = '-255-return ',\n    },\n  },\n}\n\nlocal completionResultNullLs = {\n  isIncomplete = false,\n  items = {\n    {\n      label = '/**',\n      insertText = '/** ${1:hello} */',\n      insertTextFormat = 2,\n      kind = 15,\n      detail = 'Result from null-ls',\n    },\n  },\n}\n\nlocal function createServerWithCompletionProvider(completionResult, triggerCharacters)\n  return createServer({\n    capabilities = {\n      completionProvider = {\n        triggerCharacters = triggerCharacters\n      },\n    },\n    handlers = {\n      ['textDocument/completion'] = function (_, _, callback)\n        callback(nil, completionResult)\n      end,\n    },\n  })\nend\n\nlocal function startClient(name, completionResult, triggerCharacters)\n  vim.lsp.start({\n    name = name,\n    cmd = createServerWithCompletionProvider(completionResult, triggerCharacters).cmd,\n    on_attach = function (client, bufnr0)\n      vim.lsp.completion.enable(true, client.id, bufnr0, {autotrigger = true})\n      vim.keymap.set('i', '<A-.>', '->', {buffer = bufnr0})\n    end,\n  })\nend\n\nvim.o.completeopt = 'popup,menuone,noinsert,fuzzy'\nvim.fn.complete = vim.schedule_wrap(vim.fn.complete)\n\nvim.api.nvim_create_autocmd('UIEnter', {\n  callback = function ()\n    startClient('fake-null-ls', completionResultNullLs, {'-'})\n    startClient('fake-phpactor', completionResultPhpactor, {'>'})\n  end\n})\n````\n- `nvim -u init.lua`\n- in Insert mode see effects of typing `-`, `>`, `->` (manually) and `<A-.>`.\n\n### Expected behavior\n\nIn the repro: if `->` is typed from `<A-.>` mapping, only call to `fake-phpactor` should be triggered.\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-1050+g9467731865\n\n### Vim (not Nvim) behaves the same?\n\nn/a\n\n### Operating system/version\n\nDebian Sid\n\n### Terminal name/version\n\nalacritty\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nfrom repo",
    "closed_at": "2025-09-17T16:07:47Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think this is a duplicate of https://github.com/neovim/neovim/issues/32428 ?\nSee also the discussion in https://github.com/neovim/neovim/pull/32266",
            "created_at": "2025-08-22T06:22:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/35417#issuecomment-3213184464",
            "id": 3213184464,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35417",
            "node_id": "IC_kwDOAPphoM6_hU3Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3213184464/reactions"
            },
            "updated_at": "2025-08-22T06:22:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3213184464",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "#32428 looks similar but it's not necessary duplicate: switching `isIncomplete` to `true` from the server queried first does not cause querying the second one. \n\nI have read both the merged code and the discussion on #32266 and don't see how `isIncomplete` value can be related there.\n\nIntuition tells me that `completion_timer` worked probably correctly before that change (all servers was triggered but not too frequently) but prevents from expected completion in some cases afterwards. What about starting the timer after typing the first (first after expiration of the previous timer?) character, but trigger completion when it expired, but for the last character? I have not tried it yet and so not aware of possible side effect, ~except constant 25 ms delay~ (I realized that this is already the case).\n\n",
            "created_at": "2025-08-22T13:05:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/35417#issuecomment-3214316411",
            "id": 3214316411,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35417",
            "node_id": "IC_kwDOAPphoM6_lpN7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214316411/reactions"
            },
            "updated_at": "2025-08-22T13:43:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214316411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "In details\n```diff\ndiff --git a/runtime/lua/vim/lsp/completion.lua b/runtime/lua/vim/lsp/completion.lua\nindex 79a0bb950b..f16e5c28ec 100644\n--- a/runtime/lua/vim/lsp/completion.lua\n+++ b/runtime/lua/vim/lsp/completion.lua\n@@ -571,7 +571,10 @@ local function on_insert_char_pre(handle)\n\n   local char = api.nvim_get_vvar('char')\n   local matched_clients = handle.triggers[char]\n-  if not completion_timer and matched_clients then\n+  if completion_timer then\n+    reset_timer()\n+  end\n+  if matched_clients then\n     completion_timer = assert(vim.uv.new_timer())\n     completion_timer:start(25, 0, function()\n       reset_timer()\n```\n\nIn other words, cancel triggering completion for the first character if it didn't run 25 ms before the next character was typed. Tried also on long rhs `vim.keymap.set('i', '<A-,>', '$v1234567890123456789012345678901234567890eryLongName->')` (delays do not summarize in this mapping).",
            "created_at": "2025-08-22T13:44:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/35417#issuecomment-3214433055",
            "id": 3214433055,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35417",
            "node_id": "IC_kwDOAPphoM6_mFsf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214433055/reactions"
            },
            "updated_at": "2025-08-22T13:59:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214433055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35417/comments",
    "created_at": "2025-08-21T13:25:35Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35417/events",
    "html_url": "https://github.com/neovim/neovim/issues/35417",
    "id": 3341755960,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35417/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 21,
        "created_at": "2025-09-02T15:27:06Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/53",
        "id": 13605541,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/53/labels",
        "node_id": "MI_kwDOAPphoM4Az5ql",
        "number": 53,
        "open_issues": 18,
        "state": "open",
        "title": "0.11.5",
        "updated_at": "2025-09-22T00:59:21Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/53"
    },
    "node_id": "I_kwDOAPphoM7HLyY4",
    "number": 35417,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35417/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35417/timeline",
    "title": "LSP: sequence of trigger characters typed \"at once\" from imap may not work properly",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-17T16:09:21Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35417",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia",
        "user_view_type": "public"
    }
}