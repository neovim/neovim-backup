{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
            "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
            "followers_url": "https://api.github.com/users/echasnovski/followers",
            "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
            "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/echasnovski",
            "id": 24854248,
            "login": "echasnovski",
            "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
            "organizations_url": "https://api.github.com/users/echasnovski/orgs",
            "received_events_url": "https://api.github.com/users/echasnovski/received_events",
            "repos_url": "https://api.github.com/users/echasnovski/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/echasnovski",
            "user_view_type": "public"
        }
    ],
    "author_association": "MEMBER",
    "body": "### Problem\n\nThe current recommended approach for adding plugin management hooks (\"on install\", \"on update\", etc.) is to create an autocommand for `PackChanged` or `PackChangedPre`. It is low maintenance and is enough to do the job.\n\nHowever, during real life testing there is a peculiar issue. If hook relies on plugin's exported commands/functions, it can error if the plugin is not (yet) active. Common situations of this are:\n\n1. `PackChanged` with `kind=install` because the event is triggered before the plugin is loaded. One example is `:Copilot setup` after installing [copilot.vim](https://github.com/github/copilot.vim).\n\n    This might have a straightforward solution of \"just trigger after loading\", but this makes it impossible to act on install *before* loading plugin. This is useful to ensure that various non-Nvim dependencies are installed, as they might be needed during plugin load. I personally heard about this use case and the fact that `PackChanged` is triggered before loading was very important.\n\n    The #26427 might make it possible (`PackChangedPre kind=install` autocommand that creates a `PackAddPre` autocommand), but not sure about the other implications.\n\n2. `PackChanged[Pre]` with `kind=update` if plugin is lazy loaded and is not yet active. One example is `:TSUpdate` on every 'nvim-treesitter' update.\n\nThe solution to both of these in 'mini.deps' is to use `vim.schedule`. This doesn't seem to work in `vim.pack` because it uses fancy new `vim.async`.\n\nSo my suggestion is to explicitly call `vim.cmd.packadd` (if plugin is not active) inside autocommand that relies on plugin's exported functionality.\n\n---\n\nTo add to point 2: events with `kind=update` is currently also triggered during install. This was a deliberate decision to allow writing only a single `update` hook to act as a dedicated \"build\" entry point (like execute `make` or `cargo build —release`). This mimics how other plugin managers have a single \"build\" command.\n\nThis was a result of 'mini.deps' experience with the different approach: \"update\" hooks are not run during install. This proved to be confusing: requires to write two hooks which might be too verbose and not intuitive. Examples: nvim-mini/mini.nvim#1563, [this comment](https://github.com/nvim-mini/mini.nvim/issues/689#issuecomment-1953915566).\n\nHowever, the event approach makes it lower cost to handle separate \"update\" and \"install\" events. Something like `if ev.data.kind == 'install' or ev.data.kind == 'update' then` instead of two autocommands. So decided to bring this up for the discussion: should \"update\" event be triggered during installation or not?\n\n\n### Expected behavior\n\nThis issue is mostly to discuss the best course of action before I'll make a PR. My proposed solution:\n\n- Add `data.active` field to `PackChanged[Pre]` event data. This makes it easier to detect if the plugin is active.\n\n- Add examples of custom hooks via autocommands. They will also mention the need for an explicit `if not ev.data.active then vim.cmd.packadd('plugin-name') end` if the hook relies on the plugin's functionality.\n\n- Discuss not triggering `kind=update` during install. I am honestly not sure about the best approach here. But at least it needs to be more documented.\n\n---\n\ncc @justinmk ",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Add `data.active` field to `PackChanged[Pre]` event data\n\n👍 \n\n\n\n\n> the event approach makes it lower cost to handle separate \"update\" and \"install\" events. Something like `if ev.data.kind == 'install' or ev.data.kind == 'update' then` instead of two autocommands\n>\n> Discuss not triggering `kind=update` during install\n\nThat seems fine to me. In the current situation, are we firing *both* kind=update and kind=install at install-time?",
            "created_at": "2025-10-04T21:05:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/36024#issuecomment-3368539533",
            "id": 3368539533,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36024",
            "node_id": "IC_kwDOAPphoM7Ix9WN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368539533/reactions"
            },
            "updated_at": "2025-10-04T21:05:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368539533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That seems fine to me. In the current situation, are we firing _both_ kind=update and kind=install at install-time?\n\nYes. The reason is for `kind=update` to be an entry point similar to \"build\", i.e. necessary both after initial install and every update.\n\nTo elaborate, the birds eye view during install is like this:\n- For every plugin without particular order across plugins:\n    - `PackChangedPre kind=install`\n    - `git clone`\n    - `PackChangedPre kind=update`\n    - `git stash` + `git checkout` (even if to the same commit as already checked out)\n    - `PackChanged kind=update`. This allows running `make` or custom build, since code is already on disk. But it doesn't allow right away using plugin's commands or Lua functions, because plugin is not loaded.\n\n        If this step is removed, then users have to build behind `if ev.data.kind == 'update' or ev.data.kind == 'install'`. Which might or not be small price to pay for a more cleanly separated events.\n\n    - `PackChanged kind=install`\n- Wait for all plugins to finish installing.\n- Load all plugins in order they are mentioned.",
            "created_at": "2025-10-05T08:15:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/36024#issuecomment-3368851990",
            "id": 3368851990,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36024",
            "node_id": "IC_kwDOAPphoM7IzJoW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368851990/reactions"
            },
            "updated_at": "2025-10-05T08:15:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368851990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If this step is removed, then users have to build behind `if ev.data.kind == 'update' or ev.data.kind == 'install'`. Which might or not be small price to pay for a more cleanly separated events.\n\nThat is the price if we want the separation. Can't have it both ways.",
            "created_at": "2025-10-05T15:25:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/36024#issuecomment-3369130934",
            "id": 3369130934,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36024",
            "node_id": "IC_kwDOAPphoM7I0Nu2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3369130934/reactions"
            },
            "updated_at": "2025-10-05T15:25:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3369130934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/36024/comments",
    "created_at": "2025-10-04T15:52:48Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/36024/events",
    "html_url": "https://github.com/neovim/neovim/issues/36024",
    "id": 3483899216,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/36024/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 128,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-12-25T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 75,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-10-04T16:48:30Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM7PqBVQ",
    "number": 36024,
    "parent_issue_url": "https://api.github.com/repos/neovim/neovim/issues/34763",
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 2,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/36024/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/36024/timeline",
    "title": "`PackChanged` and not active plugins",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-05T15:25:50Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/36024",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}