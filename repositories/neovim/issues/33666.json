{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nFrom `:h undo-persistence`\n\n> Vim will detect if an undo file is no longer synchronized with the file it was written\nfor (with a hash of the file contents) and ignore it when the file was changed\nafter the undo file was written, to prevent corruption.\n\nBut in reality commands like `git reset` will make the undo file unsynchronized, result in \nempty undo history when later open the file in vim.\n\n\n### Expected behavior\n\nCan we add an option that instead of discarding undo history, when encounter unsynchronized file content,\nwe add an undo history on top that maps current file content to the last version which vim remembers in backup file.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "This plugin [nvim-fundo](https://github.com/kevinhwang91/nvim-fundo) takes care of this. It saves a copy of the file at ~/.cache/nvim/fundo to bypass the hash check. Pretty clever. An implementation in C could expose an 'undokeep' option, and 'undokeepdir' for choosing where to store these copies.",
            "created_at": "2025-10-15T20:05:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/33666#issuecomment-3408064543",
            "id": 3408064543,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33666",
            "node_id": "IC_kwDOAPphoM7LIvAf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3408064543/reactions"
            },
            "updated_at": "2025-10-15T20:05:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3408064543",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/200692511?v=4",
                "events_url": "https://api.github.com/users/yilisharcs/events{/privacy}",
                "followers_url": "https://api.github.com/users/yilisharcs/followers",
                "following_url": "https://api.github.com/users/yilisharcs/following{/other_user}",
                "gists_url": "https://api.github.com/users/yilisharcs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yilisharcs",
                "id": 200692511,
                "login": "yilisharcs",
                "node_id": "U_kgDOC_ZTHw",
                "organizations_url": "https://api.github.com/users/yilisharcs/orgs",
                "received_events_url": "https://api.github.com/users/yilisharcs/received_events",
                "repos_url": "https://api.github.com/users/yilisharcs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yilisharcs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yilisharcs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yilisharcs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Tried my hand at this. I don't think it's a good implementation. With `undokeep`, if `backup` were also enabled, you'd be using 3x the disk space for no good reason.\n\nMaybe a better solution could leverage backup files, walk forward one redo, and then do the replacement? Then these options could be scrapped and have the whole logic depend on `backup` being enabled.",
            "created_at": "2025-10-17T18:47:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/33666#issuecomment-3416700668",
            "id": 3416700668,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33666",
            "node_id": "IC_kwDOAPphoM7Lprb8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3416700668/reactions"
            },
            "updated_at": "2025-10-17T18:49:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3416700668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/200692511?v=4",
                "events_url": "https://api.github.com/users/yilisharcs/events{/privacy}",
                "followers_url": "https://api.github.com/users/yilisharcs/followers",
                "following_url": "https://api.github.com/users/yilisharcs/following{/other_user}",
                "gists_url": "https://api.github.com/users/yilisharcs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yilisharcs",
                "id": 200692511,
                "login": "yilisharcs",
                "node_id": "U_kgDOC_ZTHw",
                "organizations_url": "https://api.github.com/users/yilisharcs/orgs",
                "received_events_url": "https://api.github.com/users/yilisharcs/received_events",
                "repos_url": "https://api.github.com/users/yilisharcs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yilisharcs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yilisharcs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yilisharcs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I experimented some more and concluded that backup files wouldn't work as they are. I assumed that they were one undo behind the original; I assumed wrong. This would work if the backup were an exact copy of the original though. Some people probably have a need for backups being the previous versions and changing it would break their workflow, therefore I propose an option to call write twice: instead of 'undodir' and 'undokeep', we have 'undosync', reliant on 'backup'.\n\n```diff\ndiff --git a/src/nvim/ex_cmds.c b/src/nvim/ex_cmds.c\nindex 8211b59063..af22c149ea 100644\n--- a/src/nvim/ex_cmds.c\n+++ b/src/nvim/ex_cmds.c\n@@ -1961,6 +1961,12 @@ int do_write(exarg_T *eap)\n     retval = buf_write(curbuf, ffname, fname, eap->line1, eap->line2,\n                        eap, eap->append, eap->forceit, true, false);\n\n+    // Ensures backup is a copy of the buffer.\n+    if (retval == OK && p_bk && p_uds) {\n+      buf_write(curbuf, ffname, fname, eap->line1, eap->line2,\n+                eap, eap->append, eap->forceit, true, false);\n+    }\n+\n     // After \":saveas fname\" reset 'readonly'.\n     if (eap->cmdidx == CMD_saveas) {\n       if (retval == OK) {\n```\n\nAnother solution could maybe be to write a new undo file format to keep track of both the original and the backup, but that's beyond me.\n\n<br>\n\n... should I talk about this here or on my PR?\n",
            "created_at": "2025-10-20T08:38:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/33666#issuecomment-3421076934",
            "id": 3421076934,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33666",
            "node_id": "IC_kwDOAPphoM7L6X3G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3421076934/reactions"
            },
            "updated_at": "2025-10-20T08:38:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3421076934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/200692511?v=4",
                "events_url": "https://api.github.com/users/yilisharcs/events{/privacy}",
                "followers_url": "https://api.github.com/users/yilisharcs/followers",
                "following_url": "https://api.github.com/users/yilisharcs/following{/other_user}",
                "gists_url": "https://api.github.com/users/yilisharcs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yilisharcs",
                "id": 200692511,
                "login": "yilisharcs",
                "node_id": "U_kgDOC_ZTHw",
                "organizations_url": "https://api.github.com/users/yilisharcs/orgs",
                "received_events_url": "https://api.github.com/users/yilisharcs/received_events",
                "repos_url": "https://api.github.com/users/yilisharcs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yilisharcs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yilisharcs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yilisharcs",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33666/comments",
    "created_at": "2025-04-27T07:00:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33666/events",
    "html_url": "https://github.com/neovim/neovim/issues/33666",
    "id": 3022859277,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "file metadata/attributes, filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "save/restore editor state: shada, context, ctx, sessions, mksession, undo, swap",
            "id": 4449264023,
            "name": "editor-state",
            "node_id": "LA_kwDOAPphoM8AAAABCTJhlw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/editor-state"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 7421978602,
            "name": "editor",
            "node_id": "LA_kwDOAPphoM8AAAABumJn6g",
            "url": "https://api.github.com/repos/neovim/neovim/labels/editor"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33666/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 297,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 354,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-10-17T21:03:49Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM60LSwN",
    "number": 33666,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 4,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33666/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33666/timeline",
    "title": "allow unsynchronized undo file hash",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-20T08:38:54Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33666",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/97848247?v=4",
        "events_url": "https://api.github.com/users/xzbdmw/events{/privacy}",
        "followers_url": "https://api.github.com/users/xzbdmw/followers",
        "following_url": "https://api.github.com/users/xzbdmw/following{/other_user}",
        "gists_url": "https://api.github.com/users/xzbdmw/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/xzbdmw",
        "id": 97848247,
        "login": "xzbdmw",
        "node_id": "U_kgDOBdULtw",
        "organizations_url": "https://api.github.com/users/xzbdmw/orgs",
        "received_events_url": "https://api.github.com/users/xzbdmw/received_events",
        "repos_url": "https://api.github.com/users/xzbdmw/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/xzbdmw/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xzbdmw/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/xzbdmw",
        "user_view_type": "public"
    }
}