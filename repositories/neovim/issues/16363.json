{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Neovim version (nvim -v)\r\n\r\nNVIM v0.6.0-dev+600-gf71be1f87\r\n\r\n### Language server name/version\r\n\r\nNA\r\n\r\n### Operating system/version\r\n\r\nlinux debian\r\n\r\n### :checkhealth\r\n\r\n_No response_\r\n\r\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\r\n\r\nenable 2 clients both capable of handling `textDocument/signatureHelp` or `textDocument/hover` for example\r\n```lua\r\nlocal lsp = require 'lspconfig'\r\nlsp.jedi_language_server.setup {}\r\nlsp.pyright.setup {}\r\n```\r\n\r\nuse one of:\r\n```lua\r\nvim.lsp.buf.hover()\r\nvim.lsp.buf.signature_help()\r\n```\r\n\r\n### Expected behavior\r\n\r\nOnly single client should be requested. It should be possible to configure which client have priority to handle actions like `textDocument/signatureHelp` or `textDocument/hover`.\r\n\r\n### Actual behavior\r\n\r\nAll available clients are requested and results are passed to handler. In case of `hover`  or `signatureHelp` this causes unexpected focusing of floating window (handler does not support multiple results, it populates float with results form first client, then it overrides them with results from second client and it assumes that `hover` was triggered twice).\r\n\r\nThere are other issues, for example with`'textDocument/rename' (current implementation prompts for new name multiple times than applies multiple renames showing `Buffer  file:///xxx.py  newer than edits.`). \r\n\r\nIt is possible to define noop handler as a workaround for example:\r\n```lua\r\nlocal noop = function() return {} end\r\nlsp.jedi_language_server.setup {\r\n    handlers = {\r\n        ['textDocument/documentSymbol'] = noop,\r\n    }\r\n}\r\nlsp.pyright.setup {\r\n    handlers = {\r\n        ['textDocument/hover'] = noop,\r\n        ['textDocument/signatureHelp'] = noop,\r\n    },\r\n}\r\n```\r\nbut this still requests all clients which is not necessary.\r\n\r\nSide note: IMO the function `vim.lsp.buf_request_all` shoul be renamed (`buf_request_and_apply`?) as current name is misleading. Then `buf_request` could be renamed to `buf_request_all` (as doc describes, it is \"used for requesting all active clients\") and `buf_request` or `buf_request_single` could be implemented for requesting  first available client (according to some configurable ordering).\r\n\r\n### Log file\r\n\r\n_No response_",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think rather than renaming/expanding the buf_request style functions, we should do away with the middleware and directly call client.request. \r\n\r\nRegarding multiclient support. I think most requests *could* in theory support multiple clients. I'm happy to go through and discuss each one. I think the only two that *explicitly* do not make sense to offer multi-client support are rename/formatting.\r\n\r\n### try/fallback to second client\r\n* declaration\r\n* definition\r\n* type_definition\r\n* implementation\r\n* call_hierarchy\r\n* incoming_calls\r\n* outgoing_calls\r\n* document_highlight\r\n\r\n### join the results of multiple clients or try/fallback to second client\r\n* signature_help\r\n* hover\r\n\r\n### join the results of multiple clients\r\n* document_symbol\r\n* code_actions\r\n\r\n### prefer a single client (specified in on_attach likely)\r\n* formatting/range_formatting et. al\r\n* rename\r\n\r\nSince you brought up hover, a good example would be tailwindcss-language-server + x (I don't know what the web people use), where TLS only provides hover for tailwind elements. It might be the case that the two language servers provide hover for distinct symbols in the document, so we should send the request for all servers.\r\n\r\nIf there was hypothetically a second symbol, we could change the hover provider to then join the descriptions (maybe with a toggle? Maybe just expanding the document).",
            "created_at": "2021-11-22T02:09:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/16363#issuecomment-975006792",
            "id": 975006792,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16363",
            "node_id": "IC_kwDOAPphoM46HWxI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/975006792/reactions"
            },
            "updated_at": "2021-11-22T02:09:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/975006792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Regarding multiclient support. I think most requests could in theory support multiple clients.\r\n\r\n:+1: \r\n\r\n> If there was hypothetically a second symbol, we could change the hover provider to then join the descriptions (maybe with a toggle? Maybe just expanding the document).\r\n\r\nIMO the main point is that default handlers should 1) not cause unexpected bugs in case of multiple servers, 2) be easy to override. For hover, querying first available server seems to be the simplest working solution so I would start with this and later consider more sparkling features (toggle is a nice idea). The problem I see with current multiple server support is that `lsp-handlers` are 1:1 to clients, so to customize merging/displying results from multiple servers, user must override the whole request.\r\n\r\n> I think rather than renaming/expanding the buf_request style functions, we should do away with the middleware and directly call client.request.\r\n\r\nYou just mean something like moving [this code](https://github.com/neovim/neovim/blob/master/runtime/lua/vim/lsp.lua#L1333-L1366) directly [here](https://github.com/neovim/neovim/blob/master/runtime/lua/vim/lsp/buf.lua#L46) and removing buf_request style functions? If so what is the motivation?",
            "created_at": "2021-11-22T13:31:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/16363#issuecomment-975524685",
            "id": 975524685,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16363",
            "node_id": "IC_kwDOAPphoM46JVNN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/975524685/reactions"
            },
            "updated_at": "2021-11-22T14:02:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/975524685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2602750?v=4",
                "events_url": "https://api.github.com/users/doubleloop/events{/privacy}",
                "followers_url": "https://api.github.com/users/doubleloop/followers",
                "following_url": "https://api.github.com/users/doubleloop/following{/other_user}",
                "gists_url": "https://api.github.com/users/doubleloop/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/doubleloop",
                "id": 2602750,
                "login": "doubleloop",
                "node_id": "MDQ6VXNlcjI2MDI3NTA=",
                "organizations_url": "https://api.github.com/users/doubleloop/orgs",
                "received_events_url": "https://api.github.com/users/doubleloop/received_events",
                "repos_url": "https://api.github.com/users/doubleloop/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/doubleloop/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/doubleloop/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/doubleloop",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I managed to work around this issue by using `lewis6991/hover.nvim` with a custom provider. Details on https://github.com/neovim/nvim-lspconfig/issues/3282#issuecomment-2307786225.\r\n\r\nHowever, I would prefer to have this on `neovim` core, instead.",
            "created_at": "2024-08-23T20:50:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/16363#issuecomment-2307793098",
            "id": 2307793098,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16363",
            "node_id": "IC_kwDOAPphoM6JjiDK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2307793098/reactions"
            },
            "updated_at": "2024-08-23T20:50:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2307793098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1295197?v=4",
                "events_url": "https://api.github.com/users/paulodiovani/events{/privacy}",
                "followers_url": "https://api.github.com/users/paulodiovani/followers",
                "following_url": "https://api.github.com/users/paulodiovani/following{/other_user}",
                "gists_url": "https://api.github.com/users/paulodiovani/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/paulodiovani",
                "id": 1295197,
                "login": "paulodiovani",
                "node_id": "MDQ6VXNlcjEyOTUxOTc=",
                "organizations_url": "https://api.github.com/users/paulodiovani/orgs",
                "received_events_url": "https://api.github.com/users/paulodiovani/received_events",
                "repos_url": "https://api.github.com/users/paulodiovani/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/paulodiovani/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/paulodiovani/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/paulodiovani",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hover is fixed in #30935",
            "created_at": "2024-10-31T10:20:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/16363#issuecomment-2449511916",
            "id": 2449511916,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16363",
            "node_id": "IC_kwDOAPphoM6SAJXs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449511916/reactions"
            },
            "updated_at": "2024-10-31T10:20:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449511916",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "How would one prefer one server over another for formatting? I tried with\n\n`lsp/ts_ls.lua`:\n```lua\nlocal noop = function() return {} end\n\nreturn {\n\thandlers = {\n\t\t['textDocument/formatting'] = noop,\n\t\t['textDocument/rangeFormatting'] = noop,\n\t},\n}\n```\n\nto disable formatting for one lsp, but it didn't work. I couldn't find how to edit the capabilities to remove formatting either.\n\nRight now the two lsp tries to format, and it makes a small flash due to the conflicting formats.",
            "created_at": "2025-08-04T11:21:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/16363#issuecomment-3150206207",
            "id": 3150206207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16363",
            "node_id": "IC_kwDOAPphoM67xFT_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3150206207/reactions"
            },
            "updated_at": "2025-08-04T11:21:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3150206207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32224410?v=4",
                "events_url": "https://api.github.com/users/zoriya/events{/privacy}",
                "followers_url": "https://api.github.com/users/zoriya/followers",
                "following_url": "https://api.github.com/users/zoriya/following{/other_user}",
                "gists_url": "https://api.github.com/users/zoriya/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zoriya",
                "id": 32224410,
                "login": "zoriya",
                "node_id": "MDQ6VXNlcjMyMjI0NDEw",
                "organizations_url": "https://api.github.com/users/zoriya/orgs",
                "received_events_url": "https://api.github.com/users/zoriya/received_events",
                "repos_url": "https://api.github.com/users/zoriya/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zoriya/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zoriya/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zoriya",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> to disable formatting for one lsp, but it didn't work. I couldn't find how to edit the capabilities to remove formatting either.\n\nThe way I did it for luals, is by disabling the capability.\n```\n  ---@param client vim.lsp.Client\n  on_init = function(client, _)\n    if client.server_capabilities then\n      local disabled_capabilities = {\n        \"renameProvider\",\n        \"documentRangeFormattingProvider\",\n        \"referencesProvider\",\n        \"semanticTokensProvider\",\n        \"codeActionProvider\",\n        \"colorProvider\",\n        -- \"completionProvider\",\n        \"inlayHintProvider\",\n        \"documentHighlightProvider\",\n        \"foldingRangeProvider\",\n        \"documentFormattingProvider\",\n        \"codeLensProvider\",\n        \"documentOnTypeFormattingProvider\",\n        \"executeCommandProvider\",\n        \"workspaceSymbolProvider\",\n        \"implementationProvider\",\n        \"definitionProvider\",\n        \"typeDefinitionProvider\",\n        \"documentSymbolProvider\",\n        \"signatureHelpProvider\",\n      }\n      for _, capability in pairs(disabled_capabilities) do\n        client.server_capabilities[capability] = false\n      end\n    end\n  end,\n\n```",
            "created_at": "2025-08-04T12:06:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/16363#issuecomment-3150345060",
            "id": 3150345060,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16363",
            "node_id": "IC_kwDOAPphoM67xnNk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3150345060/reactions"
            },
            "updated_at": "2025-08-04T12:09:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3150345060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/110101204?v=4",
                "events_url": "https://api.github.com/users/GreatGatsby102/events{/privacy}",
                "followers_url": "https://api.github.com/users/GreatGatsby102/followers",
                "following_url": "https://api.github.com/users/GreatGatsby102/following{/other_user}",
                "gists_url": "https://api.github.com/users/GreatGatsby102/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GreatGatsby102",
                "id": 110101204,
                "login": "GreatGatsby102",
                "node_id": "U_kgDOBpAC1A",
                "organizations_url": "https://api.github.com/users/GreatGatsby102/orgs",
                "received_events_url": "https://api.github.com/users/GreatGatsby102/received_events",
                "repos_url": "https://api.github.com/users/GreatGatsby102/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GreatGatsby102/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GreatGatsby102/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GreatGatsby102",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16363/comments",
    "created_at": "2021-11-19T01:07:15Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/16363/events",
    "html_url": "https://github.com/neovim/neovim/issues/16363",
    "id": 1058021761,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/16363/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 734,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-08-03T21:37:35Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM4_ECGB",
    "number": 16363,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 5,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 5,
        "url": "https://api.github.com/repos/neovim/neovim/issues/16363/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/16363/timeline",
    "title": "LSP: Some methods should request only single client, not all.",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-04T12:09:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/16363",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2602750?v=4",
        "events_url": "https://api.github.com/users/doubleloop/events{/privacy}",
        "followers_url": "https://api.github.com/users/doubleloop/followers",
        "following_url": "https://api.github.com/users/doubleloop/following{/other_user}",
        "gists_url": "https://api.github.com/users/doubleloop/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/doubleloop",
        "id": 2602750,
        "login": "doubleloop",
        "node_id": "MDQ6VXNlcjI2MDI3NTA=",
        "organizations_url": "https://api.github.com/users/doubleloop/orgs",
        "received_events_url": "https://api.github.com/users/doubleloop/received_events",
        "repos_url": "https://api.github.com/users/doubleloop/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/doubleloop/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/doubleloop/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/doubleloop",
        "user_view_type": "public"
    }
}