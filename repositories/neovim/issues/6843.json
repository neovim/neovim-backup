{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "It is not unknown that `:python` and other languages startup is being slow now due to having to check and start external programs. E.g. with `init.vim` as simple as\r\n\r\n```VimL\r\n\" let g:powerline_old_vim = 1\r\nset laststatus=2\r\npython import vim\r\npython from powerline.vim import setup as powerline_setup\r\npython powerline_setup(gvars=globals())\r\npython del powerline_setup\r\n\r\nset guicursor=\r\n```\r\n\r\n(using `editors-refactor` branch of powerline, powerline/powerline#1507) Vim takes 54 ms to source that, Neovim takes 325 ms, all with system FS caches up, worse without. The problem is that each Neovim has to start Python by itself.\r\n\r\nI have a suggestion thus: instead of having architecture with which one Neovim has one Python which it directly communicates with add a “language daemon”. The idea is that “language daemon” starts once and creates a socket in a set location used to communicate with Neovim, when Neovim needs `:python` it starts a daemon if it was not already started (decreased performance, but only at startup, and “starting a daemon” may be a per-user systemd service), then on `:python` it just tells daemon that Neovim client with ID X (Neovim socket, but generally just any unique ID) needs to run `:python` command Y. If such ID is unknown to a language server then it spawns a new Python child process and relay requested command there, if it is known it either relays requested command or gives some details regarding the fate of the child (better error reporting if Python crashed).\r\n\r\nAdditionally if relaying does not work well in term of performance it should be possible to use language server to communicate direct interaction, then in “channel is broken” cases it should also be possible to get some details from the language server.\r\n\r\nThe main ideas here are\r\n\r\n1. `fork()` is much cheaper then `fork()+exec()`.\r\n2. Need not run checks regarding the availability and version of `neovim` packages more then once.\r\n\r\nMain problems:\r\n\r\n1. To update `neovim` package one will need to restart daemon.\r\n2. Handling virtualenvs is going to be complicated.\r\n3. Actually Neovim can’t just “request daemon to run command Y”, need to transfer environment variables at first command.\r\n\r\nBoth problems may be solved by another complication: make daemon a daemon manager: daemon manager is communicating with Neovim like daemon in the suggestion, but instead it spawns daemons  (key used to determine whether new daemon is needed: periodically checked `neovim` package version plus significant environment variables like where virtualenv is defined, or path to Python executable (`$PATH`, but only if it really changes executable file location), or Python package location (`$PYTHONPATH`); insignificant may just be changed on language process startup) using `fork()+exec()` (i.e. `subprocess`), daemons themselves only `fork()` to provide language processes.\r\n\r\nNote that while my suggestion may bring down startup times significantly and provide better error reporting, this complicates code a lot and there are different solutions possible for error reporting in case of crashed language process.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Some addition: if using “language daemon manager” it may and should be written in VimL+lua, this will also speed up failing `has('language')` checks.",
            "created_at": "2017-06-04T12:07:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/6843#issuecomment-306036147",
            "id": 306036147,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6843",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjAzNjE0Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/306036147/reactions"
            },
            "updated_at": "2017-06-04T12:07:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/306036147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There are still some simple things we haven't done, that we should try, before doing something complicated.\r\n\r\n- `has('foo')` can be near-instantaneous by just caching the result. The _worst_ thing that can happen is `:python` fails, and user has to restart because some plugin used the outdated cached value. \r\n    - User confusion in this case can be mitigated by a clear error message.\r\n- We can save ~50ms in startup cost via \"eager\" checks using `jobstart()`\r\n\r\nOther notes:\r\n\r\n- Even with daemons, milliseconds-obsessed users will notice a discrepancy vs Vim, in some cases, because of RPC vs FFI. So there will still be complaints, despite having an elaborate daemon backend. Was it worth it?\r\n- Users that care about _any_ of this should switch to Lua plugins. We should not spin our wheels worrying about a 200ms one-time cost that is avoidable to people who really care that much.\r\n- In general I think multi-tenancy is a very bad idea. Right now we have a simple model: one thing per Nvim instance. It would be a shame if we lose simplicity for very little gain.",
            "created_at": "2017-06-05T14:14:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/6843#issuecomment-306198179",
            "id": 306198179,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6843",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjE5ODE3OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/306198179/reactions"
            },
            "updated_at": "2017-06-05T21:44:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/306198179",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We can save ~50ms in startup cost via \"eager\" checks using jobstart()\r\n\r\nYes, it would be good to be able to hide the latency in init.vim by requesting the hosts early (say if one knows one needs legacy py2 and rplugin py3), but leave code that actually interacts with the hosts until later in init.vim. The initialization of hosts need to be made more async, hopefully ChannelInfo (rather than blocking \"poll\" request) will help with that. Ideally even a MyPluginAsyncCommand will be made async with loading of the host.\r\n",
            "created_at": "2017-06-05T15:33:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/6843#issuecomment-306219815",
            "id": 306219815,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6843",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjIxOTgxNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/306219815/reactions"
            },
            "updated_at": "2017-06-05T15:33:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/306219815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The lua plugins are not always an option. Additionally it is a question whether you could make checks async: starting async checks from the vimrc is *too late* to make any sense (in my example powerline needs `:python` right there), starting it before means loosing some user settings (like `g:python_host_prog`) thus forcing them to move to environment variables.\r\n\r\nOne good thing with my variant is that no changes to C code are needed, you can even create a third-party plugin with the implementation of my idea. Though after I imagined the idea I also had a feeling that it is overly complicated (and I have a few seconds *Vim* startup time now, so when I switch to Neovim additional half a second will not bother me much), but still posted it here in case somebody will think my idea is actually good enough to implement.",
            "created_at": "2017-06-05T21:13:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/6843#issuecomment-306312006",
            "id": 306312006,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6843",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjMxMjAwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/306312006/reactions"
            },
            "updated_at": "2017-06-05T21:13:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/306312006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Actually with my complicated setup it takes one or two seconds for Vim to start assuming FS caches (or whatever caches, but I have no idea what “whatever” is) are up (most of time they are not for unknown reason). Fourteen to twenty seconds in both (Vim and Neovim) cases if they are not, would never notice provider startup under these conditions.",
            "created_at": "2017-06-05T21:44:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/6843#issuecomment-306319319",
            "id": 306319319,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6843",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjMxOTMxOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/306319319/reactions"
            },
            "updated_at": "2017-06-05T21:44:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/306319319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "An alternative is autocommands that fire whenever the host is ready. This will likely fall out naturally from the host initialization / UpdateRemotePlugins refactor, which aims to make everything event driven rather than doing such things as `rpcrequest()` to different hosts in a loop...",
            "created_at": "2017-06-12T08:21:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/6843#issuecomment-307721688",
            "id": 307721688,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6843",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzcyMTY4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/307721688/reactions"
            },
            "updated_at": "2017-06-12T08:22:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/307721688",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "How about specifying a way for plugins to declare what they need and only start them once it's available.\r\nThat would even allow plugins that don't depend on each other to start simultaneously.\r\n\r\nPlugins that dont support this mechanism could be loaded before or after that.\r\n\r\nThat could speed up startup times dramatically especially when combined with on demand loading.\r\n\r\nWhen most of your plugins are only needed when editing prolog code they and all there dependencies would not be needed when doing something else",
            "created_at": "2017-06-17T08:16:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/6843#issuecomment-309201274",
            "id": 309201274,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6843",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTIwMTI3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/309201274/reactions"
            },
            "updated_at": "2017-06-17T08:16:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/309201274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/448137?v=4",
                "events_url": "https://api.github.com/users/torpak/events{/privacy}",
                "followers_url": "https://api.github.com/users/torpak/followers",
                "following_url": "https://api.github.com/users/torpak/following{/other_user}",
                "gists_url": "https://api.github.com/users/torpak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/torpak",
                "id": 448137,
                "login": "torpak",
                "node_id": "MDQ6VXNlcjQ0ODEzNw==",
                "organizations_url": "https://api.github.com/users/torpak/orgs",
                "received_events_url": "https://api.github.com/users/torpak/received_events",
                "repos_url": "https://api.github.com/users/torpak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/torpak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/torpak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/torpak",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/6843/comments",
    "created_at": "2017-06-04T11:21:24Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/6843/events",
    "html_url": "https://github.com/neovim/neovim/issues/6843",
    "id": 233427403,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "needs a clear design proposal",
            "id": 124510010,
            "name": "needs:design",
            "node_id": "MDU6TGFiZWwxMjQ1MTAwMTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:design"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/6843/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWUyMzM0Mjc0MDM=",
    "number": 6843,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/6843/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/6843/timeline",
    "title": "Use language daemons for language providers",
    "updated_at": "2025-01-19T10:46:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/6843",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
        "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
        "followers_url": "https://api.github.com/users/ZyX-I/followers",
        "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
        "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ZyX-I",
        "id": 322097,
        "login": "ZyX-I",
        "node_id": "MDQ6VXNlcjMyMjA5Nw==",
        "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
        "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
        "repos_url": "https://api.github.com/users/ZyX-I/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ZyX-I",
        "user_view_type": "public"
    }
}