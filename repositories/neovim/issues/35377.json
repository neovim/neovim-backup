{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\n# I want to become contributor\n\nAnd here is the domain I want to help with. I saw builtin thing called `exrc` but it doesn't quite work for me. I want be able to dynamically execute some code when I open some project. So I decided to go with my own approach. It's pretty similar to `exrc` except I am sourcing those files manually. Not a big deal, since for me it's just:\n\n```\n:so ~/project/.nvim.lua\n```\n\nI primarily use those custom configs to make small, but annoying-to-do-everytime tweaks to my config. Like setting up `makeprg` and `errorformat` (can't be done via `compiler` because it's project-specific). Or redefining tabwidth without `.editorconfig` (since everyone in the team doesn't use `.editorconfig`). Or, finally, some tweaks to LSP.\n\nMy usual workflow is opening a tab per project and never leave nvim. I do not use multiplexers. So it is very important for such scripts to not pollute global namespace. I already know about `nvim_buf_create_user_command`, but this only works for buffers. I would like to see `nvim_tab_create_user_command` and I would like to contribute if that's something you see as a good idea. I do believe it will be useful for many people to be able to customize tab without polluting global namespace.\n\nAlso I don't know if there is a way to support tab-local options (like vim.opt_local). Addition of `tcd` for me a huge quality of life feature. I want to help with further extension of tab-local configurations.\n\n# Video Demo\n\nIt explains my workflow visually, so you have better idea:\n\nhttps://github.com/user-attachments/assets/deac0dc7-c0b2-40ff-b2b5-abeecd4d1f35",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> I don't know if there is a way to support tab-local options (like vim.opt_local)\n\nThere are tab-local variables (`vim.t`).\n\nNot clear what solution / expected outcome you are proposing.",
            "created_at": "2025-08-18T15:00:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/35377#issuecomment-3197292893",
            "id": 3197292893,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35377",
            "node_id": "IC_kwDOAPphoM6-ktFd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3197292893/reactions"
            },
            "updated_at": "2025-08-18T15:00:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3197292893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > I don't know if there is a way to support tab-local options (like vim.opt_local)\n> \n> There are tab-local variables (`vim.t`).\n> \n> Not clear what solution / expected outcome you are proposing.\n\nOh, yeah, you are right. I completely forgot about that. But what about tab-local user commands? Is there a way to define one?",
            "created_at": "2025-08-18T15:10:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/35377#issuecomment-3197329769",
            "id": 3197329769,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35377",
            "node_id": "IC_kwDOAPphoM6-k2Fp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3197329769/reactions"
            },
            "updated_at": "2025-08-18T15:10:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3197329769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46930374?v=4",
                "events_url": "https://api.github.com/users/y9san9/events{/privacy}",
                "followers_url": "https://api.github.com/users/y9san9/followers",
                "following_url": "https://api.github.com/users/y9san9/following{/other_user}",
                "gists_url": "https://api.github.com/users/y9san9/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/y9san9",
                "id": 46930374,
                "login": "y9san9",
                "node_id": "MDQ6VXNlcjQ2OTMwMzc0",
                "organizations_url": "https://api.github.com/users/y9san9/orgs",
                "received_events_url": "https://api.github.com/users/y9san9/received_events",
                "repos_url": "https://api.github.com/users/y9san9/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/y9san9/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/y9san9/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/y9san9",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35377/comments",
    "created_at": "2025-08-18T06:49:10Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35377/events",
    "html_url": "https://github.com/neovim/neovim/issues/35377",
    "id": 3329411164,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "workspace/project concept, 'exrc'",
            "id": 8313009301,
            "name": "workspace-project",
            "node_id": "LA_kwDOAPphoM8AAAAB7350lQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/workspace-project"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35377/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7Gcshc",
    "number": 35377,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35377/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35377/timeline",
    "title": "Better tab locality",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-18T15:10:45Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35377",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/46930374?v=4",
        "events_url": "https://api.github.com/users/y9san9/events{/privacy}",
        "followers_url": "https://api.github.com/users/y9san9/followers",
        "following_url": "https://api.github.com/users/y9san9/following{/other_user}",
        "gists_url": "https://api.github.com/users/y9san9/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/y9san9",
        "id": 46930374,
        "login": "y9san9",
        "node_id": "MDQ6VXNlcjQ2OTMwMzc0",
        "organizations_url": "https://api.github.com/users/y9san9/orgs",
        "received_events_url": "https://api.github.com/users/y9san9/received_events",
        "repos_url": "https://api.github.com/users/y9san9/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/y9san9/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/y9san9/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/y9san9",
        "user_view_type": "public"
    }
}