{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI'm migrating from `lspconfig.sourcekit.setup` to `vim.lsp.config` but I'm having a small annoying issue.\n\nWhen using `vim.lsp.config` and I open a new buffer, the syntax highlight is not normal until I actively change the buffer. This does not happen on the buffer I opened `nvim` on, only on the buffers I try to open later.\n\nFor example this is what I see when I open a new file without editing it (wrong):\n\n<img width=\"567\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7d8ee506-c671-4d7a-978d-f53b0b7ff929\" />\n\nThis is the same buffer after I try to edit it (correct):\n\n<img width=\"567\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/61ddbbfe-0b67-4f1a-9ffc-700bedbdc057\" />\n\nThe only change I did was moving from:\n```lua\nlocal lspconfig = require('lspconfig')\nlspconfig.sourcekit.setup {\n  capabilities = capabilities,\n}\n```\nto:\n```lua\nvim.lsp.config(\"sourcekit\", {\n  capabilities = capabilities,\n})\n```\n\n### Steps to reproduce\n\nMove from `lspconfig.sourcekit.setup` to `vim.lsp.config`\n\n### Expected behavior\n\nThe new opened buffer should have the correct syntax highlighting from the beginning, not only when I actively edit it.\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nmacOS 15.4.1\n\n### Terminal name/version\n\niTerm2\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nbrew",
    "closed_at": "2025-04-26T17:11:48Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "What does `:Inspect` say on the \"wrong\" highlight (before and after)? What is the output of `:checkhealth lsp`?\n\nYou also need to show a full config; the snippet you show would do absolutely nothing by itself. (Note that Neovim itself does not come with any configs, so if you want to move to `vim.lsp.config`, you need to provide your own. If you don't want to do that, keep using nvim-lspconfig.)",
            "created_at": "2025-04-26T10:19:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/33645#issuecomment-2832015768",
            "id": 2832015768,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33645",
            "node_id": "IC_kwDOAPphoM6ozSGY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832015768/reactions"
            },
            "updated_at": "2025-04-26T10:21:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832015768",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The only change I did was moving from:\n> \n> local lspconfig = require('lspconfig')\n> lspconfig.sourcekit.setup {\n>   capabilities = capabilities,\n> }\n> to:\n> \n> vim.lsp.config(\"sourcekit\", {\n>   capabilities = capabilities,\n> })\n\nWell, you are missing `vim.lsp.enable('sourcekit')`. I'm guessing that the \"normal\" highlight is driven by lsp semantic highlights.",
            "created_at": "2025-04-26T11:31:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/33645#issuecomment-2832049403",
            "id": 2832049403,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33645",
            "node_id": "IC_kwDOAPphoM6ozaT7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832049403/reactions"
            },
            "updated_at": "2025-04-26T11:31:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832049403",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk @clason this is the full config for the LSP part (there is indeed `vim.lps.enable()`:\n\n```lua\nreturn {\n  {\n    \"neovim/nvim-lspconfig\", -- LSP configuration utility\n    config = function()\n      vim.lsp.inlay_hint.enable(false)\n\n      local capabilities = require('cmp_nvim_lsp').default_capabilities()\n\n      vim.api.nvim_create_autocmd(\"LspAttach\", {\n        callback = function(args)\n          local client = vim.lsp.get_client_by_id(args.data.client_id)\n          local bufnr = args.buf\n\n          vim.keymap.set(\"n\", \"<leader>h\", function() vim.lsp.inlay_hint.enable(not vim.lsp.inlay_hint.is_enabled()) end, { buffer = bufnr, noremap = true, silent = true, desc = \"Toggle Inlay Hints\"})\n          vim.keymap.set(\"n\", \"<leader>rn\", vim.lsp.buf.rename, { buffer = bufnr, noremap = true, silent = true, desc = \"Rename Symbol\" })\n          vim.keymap.set({ \"n\", \"v\" }, \"<leader>ca\", vim.lsp.buf.code_action, { buffer = bufnr, noremap = true, silent = true, desc = \"Code Actions\" })\n\n          if client.supports_method and client.supports_method(\"textDocument/codeLens\") then\n            vim.lsp.codelens.refresh()\n            vim.keymap.set(\"n\", \"<leader>cl\", vim.lsp.codelens.refresh, { buffer = bufnr, noremap = true, silent = true, desc = \"Refresh CodeLens\" })\n            vim.keymap.set(\"n\", \"<leader>cr\", vim.lsp.codelens.run, { buffer = bufnr, noremap = true, silent = true, desc = \"Run CodeLens Action\" })\n          end\n        end,\n      })\n\n      vim.lsp.config(\"sourcekit\", {\n        capabilities = capabilities,\n      })\n\n      vim.lsp.config(\"bashls\", {\n        capabilities = capabilities,\n      })\n\n      vim.lsp.config(\"clangd\", {\n        capabilities = capabilities,\n      })\n\n      vim.lsp.enable(\"sourcekit\")\n      vim.lsp.enable(\"bashls\")\n      vim.lsp.enable(\"clangd\")\n\n    end,\n  },\n}\n```\n\n> What does :Inspect say on the \"wrong\" highlight (before and after)? \n\nWrong (before):\n```\nTreesitter\n  - @type.swift links to Type   priority: 100   language: swift\n  - @attribute.swift links to PreProc   priority: 100   language: swift\n\nSemantic Tokens\n  - @lsp.type.modifier.swift links to @lsp.type.modifier   priority: 125\n ```\n\nCorrect (after):\n```\nTreesitter\n  - @type.swift links to Type   priority: 100   language: swift\n  - @attribute.swift links to PreProc   priority: 100   language: swift\n\nSemantic Tokens\n  - @lsp.type.modifier.swift links to @lsp.type.modifier   priority: 125\n  - @lsp.type.struct.swift links to Type   priority: 125\n  - @lsp.mod.defaultLibrary.swift links to @lsp   priority: 126\n  - @lsp.typemod.struct.defaultLibrary.swift links to @lsp   priority: 127\n```\n\n```\n\n\n==============================================================================\nvim.lsp:                                     require(\"vim.lsp.health\").check()\n\n- LSP log level : WARN\n- Log path: /Users/carlo/.local/state/nvim/lsp.log\n- Log size: 5361 KB\n\nvim.lsp: Active Clients ~\n- sourcekit (id: 1)\n  - Version: ? (no serverInfo.version response)\n  - Root directory: /Volumes/work/swift/ConfigVault\n  - Command: { \"sourcekit-lsp\" }\n  - Settings: {}\n  - Attached buffers: 1, 12\n\nvim.lsp: Enabled Configurations ~\n- bashls:\n  - capabilities: {\n      textDocument = {\n        completion = {\n          completionItem = {\n            commitCharactersSupport = true,\n            deprecatedSupport = true,\n            insertReplaceSupport = true,\n            insertTextModeSupport = {\n              valueSet = { 1, 2 }\n            },\n            labelDetailsSupport = true,\n            preselectSupport = true,\n            resolveSupport = {\n              properties = { \"documentation\", \"additionalTextEdits\", \"insertTextFormat\", \"insertTextMode\", \"command\" }\n            },\n            snippetSupport = true,\n            tagSupport = {\n              valueSet = { 1 }\n            }\n          },\n          completionList = {\n            itemDefaults = { \"commitCharacters\", \"editRange\", \"insertTextFormat\", \"insertTextMode\", \"data\" }\n          },\n          contextSupport = true,\n          dynamicRegistration = false,\n          insertTextMode = 1\n        }\n      }\n    }\n  - cmd: { \"bash-language-server\", \"start\" }\n  - filetypes: bash, sh\n  - root_markers: .git\n  - settings: {\n      bashIde = {\n        globPattern = \"*@(.sh|.inc|.bash|.command)\"\n      }\n    }\n\n- clangd:\n  - capabilities: {\n      offsetEncoding = { \"utf-8\", \"utf-16\" },\n      textDocument = {\n        completion = {\n          completionItem = {\n            commitCharactersSupport = true,\n            deprecatedSupport = true,\n            insertReplaceSupport = true,\n            insertTextModeSupport = {\n              valueSet = { 1, 2 }\n            },\n            labelDetailsSupport = true,\n            preselectSupport = true,\n            resolveSupport = {\n              properties = { \"documentation\", \"additionalTextEdits\", \"insertTextFormat\", \"insertTextMode\", \"command\" }\n            },\n            snippetSupport = true,\n            tagSupport = {\n              valueSet = { 1 }\n            }\n          },\n          completionList = {\n            itemDefaults = { \"commitCharacters\", \"editRange\", \"insertTextFormat\", \"insertTextMode\", \"data\" }\n          },\n          contextSupport = true,\n          dynamicRegistration = false,\n          editsNearCursor = true,\n          insertTextMode = 1\n        }\n      }\n    }\n  - cmd: { \"clangd\" }\n  - filetypes: c, cpp, objc, objcpp, cuda, proto\n  - on_attach: <function @/Users/carlo/.local/share/nvim/lazy/nvim-lspconfig/lsp/clangd.lua:80>\n  - root_markers: .clangd, .clang-tidy, .clang-format, compile_commands.json, compile_flags.txt, configure.ac, .git\n\n- sourcekit:\n  - capabilities: {\n      textDocument = {\n        completion = {\n          completionItem = {\n            commitCharactersSupport = true,\n            deprecatedSupport = true,\n            insertReplaceSupport = true,\n            insertTextModeSupport = {\n              valueSet = { 1, 2 }\n            },\n            labelDetailsSupport = true,\n            preselectSupport = true,\n            resolveSupport = {\n              properties = { \"documentation\", \"additionalTextEdits\", \"insertTextFormat\", \"insertTextMode\", \"command\" }\n            },\n            snippetSupport = true,\n            tagSupport = {\n              valueSet = { 1 }\n            }\n          },\n          completionList = {\n            itemDefaults = { \"commitCharacters\", \"editRange\", \"insertTextFormat\", \"insertTextMode\", \"data\" }\n          },\n          contextSupport = true,\n          dynamicRegistration = false,\n          insertTextMode = 1\n        },\n        diagnostic = {\n          dynamicRegistration = true,\n          relatedDocumentSupport = true\n        }\n      },\n      workspace = {\n        didChangeWatchedFiles = {\n          dynamicRegistration = true\n        }\n      }\n    }\n  - cmd: { \"sourcekit-lsp\" }\n  - filetypes: swift, objc, objcpp, c, cpp\n  - get_language_id: <function @/Users/carlo/.local/share/nvim/lazy/nvim-lspconfig/lsp/sourcekit.lua:22>\n  - root_dir: <function @/Users/carlo/.local/share/nvim/lazy/nvim-lspconfig/lsp/sourcekit.lua:12>\n\n\nvim.lsp: File Watcher ~\n- File watch backend: libuv-watch\n\nvim.lsp: Position Encodings ~\n- No buffers contain mixed position encodings\n```\n\n> Note that Neovim itself does not come with any configs, so if you want to move to vim.lsp.config, you need to provide your own. If you don't want to do that, keep using nvim-lspconfig.\n\nNow, I'm confused. My reading of https://github.com/neovim/nvim-lspconfig?tab=readme-ov-file#vimlspconfig  is that we can indeed use `vim.lsp.config` and somehow that would pick up the configuration provided by `nvim-lspconfig`.",
            "created_at": "2025-04-26T16:55:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/33645#issuecomment-2832434521",
            "id": 2832434521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33645",
            "node_id": "IC_kwDOAPphoM6o04VZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832434521/reactions"
            },
            "updated_at": "2025-04-26T16:59:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832434521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/357758?v=4",
                "events_url": "https://api.github.com/users/carlocaione/events{/privacy}",
                "followers_url": "https://api.github.com/users/carlocaione/followers",
                "following_url": "https://api.github.com/users/carlocaione/following{/other_user}",
                "gists_url": "https://api.github.com/users/carlocaione/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/carlocaione",
                "id": 357758,
                "login": "carlocaione",
                "node_id": "MDQ6VXNlcjM1Nzc1OA==",
                "organizations_url": "https://api.github.com/users/carlocaione/orgs",
                "received_events_url": "https://api.github.com/users/carlocaione/received_events",
                "repos_url": "https://api.github.com/users/carlocaione/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/carlocaione/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/carlocaione/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/carlocaione",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm guessing that the \"normal\" highlight is driven by lsp semantic highlights.\n\nSeems like that guess was correct, because your `:Inspect` sample shows more `Semantic Tokens` for the \"correct\" example vs the \"wrong\" example.\n\nSince you didn't provide steps with `nvim --clean`, I'm going to auto-close this. Not going to spend time on \"debug my plugins\" questions.",
            "created_at": "2025-04-26T17:11:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/33645#issuecomment-2832446095",
            "id": 2832446095,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33645",
            "node_id": "IC_kwDOAPphoM6o07KP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832446095/reactions"
            },
            "updated_at": "2025-04-26T17:11:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832446095",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "well, that was harsh. It would have been nice from you to have at least an hint of what the problem given that not everyone is a neovim expert. But it's probably too much to ask.",
            "created_at": "2025-04-26T17:46:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/33645#issuecomment-2832476086",
            "id": 2832476086,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33645",
            "node_id": "IC_kwDOAPphoM6o1Ce2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832476086/reactions"
            },
            "updated_at": "2025-04-26T17:46:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832476086",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/357758?v=4",
                "events_url": "https://api.github.com/users/carlocaione/events{/privacy}",
                "followers_url": "https://api.github.com/users/carlocaione/followers",
                "following_url": "https://api.github.com/users/carlocaione/following{/other_user}",
                "gists_url": "https://api.github.com/users/carlocaione/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/carlocaione",
                "id": 357758,
                "login": "carlocaione",
                "node_id": "MDQ6VXNlcjM1Nzc1OA==",
                "organizations_url": "https://api.github.com/users/carlocaione/orgs",
                "received_events_url": "https://api.github.com/users/carlocaione/received_events",
                "repos_url": "https://api.github.com/users/carlocaione/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/carlocaione/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/carlocaione/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/carlocaione",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33645/comments",
    "created_at": "2025-04-26T10:17:55Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33645/events",
    "html_url": "https://github.com/neovim/neovim/issues/33645",
    "id": 3021695148,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33645/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM60G2is",
    "number": 33645,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33645/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33645/timeline",
    "title": "Odd syntax highlighting on new buffers when using `vim.lsp.config`",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-26T17:46:51Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33645",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/357758?v=4",
        "events_url": "https://api.github.com/users/carlocaione/events{/privacy}",
        "followers_url": "https://api.github.com/users/carlocaione/followers",
        "following_url": "https://api.github.com/users/carlocaione/following{/other_user}",
        "gists_url": "https://api.github.com/users/carlocaione/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/carlocaione",
        "id": 357758,
        "login": "carlocaione",
        "node_id": "MDQ6VXNlcjM1Nzc1OA==",
        "organizations_url": "https://api.github.com/users/carlocaione/orgs",
        "received_events_url": "https://api.github.com/users/carlocaione/received_events",
        "repos_url": "https://api.github.com/users/carlocaione/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/carlocaione/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/carlocaione/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/carlocaione",
        "user_view_type": "public"
    }
}