{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen setting `cmdheight` to a higher value and then resetting it to a lower value after a 'hit-enter' prompt, the old status bar remains dangling (see screenshots). It can be cleared with `:mode` or with CTRL-L, but that's not very useful when scripting, because using `:mode` later in a function also obliterates the output displayed before the hit-enter prompt.\r\n\r\n<img width=\"2240\" alt=\"Screenshot 2024-07-14 at 4 42 51 PM\" src=\"https://github.com/user-attachments/assets/bd6819bc-3e49-42e0-b3a0-988b303593be\">\r\n<img width=\"2240\" alt=\"Screenshot 2024-07-14 at 4 44 46 PM\" src=\"https://github.com/user-attachments/assets/4adbe858-a2f8-4f6a-bc3c-907e86f524a1\">\r\n\n\n### Steps to reproduce\n\n`nvim --clean minimal.vim`\r\n(no `init.vim` or `init.lua` is required to reproduce the problem)\r\n\r\nHere's `minimal.vim`:\r\n\r\n```\r\nset cmdheight=1\r\n\r\nlet s:stdout = []\r\nfunction! s:on_stdout(data)\r\n    call extend(s:stdout, a:data)\r\n    let &cmdheight = len(s:stdout)\r\n    echo join(s:stdout, \"\\n\")\r\n    redraw\r\nendfunction\r\n\r\nfunction! s:on_exit()\r\n    echo s:stdout[-1] .. \"\\n\"\r\nendfunction\r\n\r\ncall s:on_stdout(['do', 're'])\r\ncall s:on_stdout(['mi'])\r\ncall s:on_stdout(['fa', 'so', 'la'])\r\ncall s:on_stdout(['ti', 'do'])\r\ncall s:on_exit()\r\n\r\nset cmdheight=1\r\n```\r\n\r\nJust run `execute 'source ' .. expand('%')` to run the script.\r\n\r\n(A note on the MWE, which might seem a bit bizarre: it's meant to mirror my use-case, which is using `jobstart` to capture and print stderr or stdout. So `on_stdout` is called multiple times, and it gathers and echoes the job's output (I have it echo all of the job's output so far each time, since, as far as I can tell, there's no way to append echoed messages to previous echoed messages – the new echoed messages just clobber the old ones). I expand `cmdheight` so that each successive `echo` message doesn't clobber the last, and then of course I want to reset to my normal `cmdheight` setting at the end. The overall effect is similar to if you use `:make`, but without some of the extraneous parts of the message that I find annoying.)\n\n### Expected behavior\n\nI would expect there to be no dangling status line (as is the case after e.g. running `:make`).\n\n### Neovim version (nvim -v)\n\n0.10.0\n\n### Vim (not Nvim) behaves the same?\n\nNo, 9.0\n\n### Operating system/version\n\nmacOS 14.5\n\n### Terminal name/version\n\nkitty (0.35.1)\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nhomebrew",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "It's actually the msgsep, not the statusline.",
            "created_at": "2024-07-15T00:15:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/29715#issuecomment-2227533221",
            "id": 2227533221,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29715",
            "node_id": "IC_kwDOAPphoM6ExXWl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227533221/reactions"
            },
            "updated_at": "2024-07-15T00:15:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227533221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Without the `:redraw` there also seems to be another problem: the first and the last `do` are duplicated.\r\n\r\nAnd there is also invalid redraw. With the following:\r\n```vim\r\nset redrawdebug+=invalid\r\nset cmdheight=1\r\n\r\nlet s:stdout = []\r\nfunction! s:on_stdout(data)\r\n    call extend(s:stdout, a:data)\r\n    let &cmdheight = len(s:stdout)\r\n    echo join(s:stdout, \"\\n\")\r\nendfunction\r\n\r\nfunction! s:on_exit()\r\n    echo s:stdout[-1] .. \"\\n\"\r\nendfunction\r\n\r\ncall s:on_stdout(['do', 're'])\r\ncall s:on_stdout(['mi'])\r\ncall s:on_stdout(['fa', 'so', 'la'])\r\ncall s:on_stdout(['ti', 'do'])\r\ncall s:on_exit()\r\n\r\nset cmdheight=1\r\n```\r\nIt crashes with the backtrace:\r\n```\r\n=================================================================\r\n==72406==ERROR: AddressSanitizer: ABRT on unknown address 0x03e800011ad6 (pc 0x70db2e0c3e44 bp 0x7fff51df9e50 sp 0x7fff51df9e10 T0)\r\n    #0 0x70db2e0c3e44  (/usr/lib/libc.so.6+0x94e44) (BuildId: 32a656aa5562eece8c59a585f5eacd6cf5e2307b)\r\n    #1 0x70db2e06ba2f in raise (/usr/lib/libc.so.6+0x3ca2f) (BuildId: 32a656aa5562eece8c59a585f5eacd6cf5e2307b)\r\n    #2 0x70db2e0534c2 in abort (/usr/lib/libc.so.6+0x244c2) (BuildId: 32a656aa5562eece8c59a585f5eacd6cf5e2307b)\r\n    #3 0x5e81df84cd2d in grid_line_flush_if_valid_row **/src/nvim/grid.c:583:7\r\n    #4 0x5e81dfbf4b0d in msg_line_flush **/src/nvim/message.c:2313:3\r\n    #5 0x5e81dfbf461f in msg_puts_display **/src/nvim/message.c:2297:5\r\n    #6 0x5e81dfbe9af7 in msg_puts_len **/src/nvim/message.c:2106:5\r\n    #7 0x5e81dfbd0072 in msg_outtrans_len **/src/nvim/message.c:1627:5\r\n    #8 0x5e81dfbcf068 in msg_multiline **/src/nvim/message.c:264:7\r\n    #9 0x5e81df4087d7 in ex_echo **/src/nvim/eval.c:8176:9\r\n    #10 0x5e81df6afd68 in execute_cmd0 **/src/nvim/ex_docmd.c:1716:7\r\n    #11 0x5e81df68d25e in do_one_cmd **/src/nvim/ex_docmd.c:2360:7\r\n    #12 0x5e81df6812e5 in do_cmdline **/src/nvim/ex_docmd.c:666:20\r\n    #13 0x5e81df5a40d5 in call_user_func **/src/nvim/eval/userfunc.c:1227:5\r\n    #14 0x5e81df5aea2a in call_user_func_check **/src/nvim/eval/userfunc.c:1381:5\r\n    #15 0x5e81df59b4ab in call_func **/src/nvim/eval/userfunc.c:1739:17\r\n    #16 0x5e81df5985c5 in get_func_tv **/src/nvim/eval/userfunc.c:558:11\r\n    #17 0x5e81df5cdc99 in ex_call_inner **/src/nvim/eval/userfunc.c:3179:9\r\n    #18 0x5e81df5cc10d in ex_call **/src/nvim/eval/userfunc.c:3421:14\r\n    #19 0x5e81df6afd68 in execute_cmd0 **/src/nvim/ex_docmd.c:1716:7\r\n    #20 0x5e81df68d25e in do_one_cmd **/src/nvim/ex_docmd.c:2360:7\r\n    #21 0x5e81df6812e5 in do_cmdline **/src/nvim/ex_docmd.c:666:20\r\n    #22 0x5e81e005618b in source_using_linegetter **/src/nvim/runtime.c:1981:16\r\n    #23 0x5e81e00559ca in cmd_source_buffer **/src/nvim/runtime.c:2017:5\r\n    #24 0x5e81e0053f65 in cmd_source **/src/nvim/runtime.c:1784:5\r\n    #25 0x5e81e0053ea5 in ex_source **/src/nvim/runtime.c:1805:3\r\n    #26 0x5e81df6afd68 in execute_cmd0 **/src/nvim/ex_docmd.c:1716:7\r\n    #27 0x5e81df68d25e in do_one_cmd **/src/nvim/ex_docmd.c:2360:7\r\n    #28 0x5e81df6812e5 in do_cmdline **/src/nvim/ex_docmd.c:666:20\r\n    #29 0x5e81dfcc4407 in nv_colon **/src/nvim/normal.c:3181:18\r\n    #30 0x5e81dfcb0045 in normal_execute **/src/nvim/normal.c:1230:3\r\n    #31 0x5e81e025f8ca in state_enter **/src/nvim/state.c:101:26\r\n    #32 0x5e81dfc90a8f in normal_enter **/src/nvim/normal.c:519:3\r\n    #33 0x5e81df9ea752 in main **/src/nvim/main.c:662:3\r\n    #34 0x70db2e054c87  (/usr/lib/libc.so.6+0x25c87) (BuildId: 32a656aa5562eece8c59a585f5eacd6cf5e2307b)\r\n    #35 0x70db2e054d4b in __libc_start_main (/usr/lib/libc.so.6+0x25d4b) (BuildId: 32a656aa5562eece8c59a585f5eacd6cf5e2307b)\r\n    #36 0x5e81dedced34 in _start (**/build/bin/nvim+0xbfbd34) (BuildId: ce1c13871621b560e57a01c84d975324d7edc2f9)\r\n\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: ABRT (/usr/lib/libc.so.6+0x94e44) (BuildId: 32a656aa5562eece8c59a585f5eacd6cf5e2307b) \r\n==72406==ABORTING\r\n```",
            "created_at": "2024-07-15T00:23:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/29715#issuecomment-2227537858",
            "id": 2227537858,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29715",
            "node_id": "IC_kwDOAPphoM6ExYfC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227537858/reactions"
            },
            "updated_at": "2024-07-15T01:49:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227537858",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29715/comments",
    "created_at": "2024-07-15T00:03:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29715/events",
    "html_url": "https://github.com/neovim/neovim/issues/29715",
    "id": 2407651360,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "redraw, layout, presentation",
            "id": 718084050,
            "name": "display",
            "node_id": "MDU6TGFiZWw3MTgwODQwNTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/display"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "UI messages, log messages, errors, warnings, feedback",
            "id": 5637083595,
            "name": "messages",
            "node_id": "LA_kwDOAPphoM8AAAABT_8Ryw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/messages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29715/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6Pgdgg",
    "number": 29715,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29715/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29715/timeline",
    "title": "Display artifacts after changing `cmdheight`",
    "updated_at": "2025-01-19T11:20:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29715",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/137958251?v=4",
        "events_url": "https://api.github.com/users/rhelder/events{/privacy}",
        "followers_url": "https://api.github.com/users/rhelder/followers",
        "following_url": "https://api.github.com/users/rhelder/following{/other_user}",
        "gists_url": "https://api.github.com/users/rhelder/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rhelder",
        "id": 137958251,
        "login": "rhelder",
        "node_id": "U_kgDOCDkTaw",
        "organizations_url": "https://api.github.com/users/rhelder/orgs",
        "received_events_url": "https://api.github.com/users/rhelder/received_events",
        "repos_url": "https://api.github.com/users/rhelder/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rhelder/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rhelder/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rhelder",
        "user_view_type": "public"
    }
}