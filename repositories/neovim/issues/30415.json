{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "# Problem\n\nNvim is a pretty good pager for \"man\", but can't easily replace `less -R` for other (non-manpage) terminal output containing ANSI color codes.\n\nPrograms like kitty terminal, allow configuring any program such as `less -R` or `nvim` for displaying terminal \"scrollback\". `less -R` colorizes ANSI color codes, but Nvim doesn't.\n\nCurrently, this is the `kitty.config` setting I use:\n\n    scrollback_pager nvim --clean --cmd 'set eventignore=FileType' +'%s/\\e\\[[0-9;]*m//g' +'set nomodified readonly' +'$' -\n\nbut that removes the escape codes instead of colorizing them.\n\n\n\n# Expected behavior\n\n- âœ… document `nvim_open_term` snippet\n- provide a `nvim_open_term` wrapper as command/function that makes it easy to colorize a buffer containing ANSI escape codes.\n    - https://github.com/folke/dot/blob/39602b7edc7222213bce762080d8f46352167434/nvim/lua/util/init.lua#L68-L93\n    - https://github.com/neovim/neovim/issues/30415#issuecomment-2368519968\n- expose `:terminal highlights` as highlight groups. https://github.com/neovim/neovim/pull/7406#issuecomment-337363444\n- Can handle [streamed input](https://github.com/neovim/neovim/issues/30415#issuecomment-2750312295) (and more than 100k lines)\n\n## Reference\n\nprevious implementations:\n\n- https://github.com/neovim/neovim/issues/5054 and other posts mention ye olde AnsiEsc.vim \n- https://github.com/lucc/nvimpager\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "You might also want to take a look at: https://github.com/mikesmithgh/kitty-scrollback.nvim",
            "created_at": "2024-09-18T13:35:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2358493348",
            "id": 2358493348,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6Mk8Ck",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2358493348/reactions"
            },
            "updated_at": "2024-09-18T13:35:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2358493348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1308621?v=4",
                "events_url": "https://api.github.com/users/kovidgoyal/events{/privacy}",
                "followers_url": "https://api.github.com/users/kovidgoyal/followers",
                "following_url": "https://api.github.com/users/kovidgoyal/following{/other_user}",
                "gists_url": "https://api.github.com/users/kovidgoyal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kovidgoyal",
                "id": 1308621,
                "login": "kovidgoyal",
                "node_id": "MDQ6VXNlcjEzMDg2MjE=",
                "organizations_url": "https://api.github.com/users/kovidgoyal/orgs",
                "received_events_url": "https://api.github.com/users/kovidgoyal/received_events",
                "repos_url": "https://api.github.com/users/kovidgoyal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kovidgoyal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kovidgoyal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kovidgoyal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I tried to do it with `:term` a long while ago but was not successful. My experiments are documented here: https://vi.stackexchange.com/questions/16624/use-terminal-to-display-file-with-ansi-escape-codes\r\n\r\nThe two problems I had were:\r\n1. I can not remove the `[Process exited]` text from the buffer\r\n2. the buffer contains extra empty lines to fill the window\r\n\r\nI re-implemented the logic of the old [AnsiEsc.vim](http://www.drchip.org/astronaut/vim/index.html#ANSIESC) plugin in nvimpager. The code is here https://github.com/lucc/nvimpager/blob/main/lua/nvimpager/ansi2highlight.lua\r\nIt is a state machine that walks over the buffer text and dynamically creates highlight groups and applies them to the relevant parts of the buffer. If the decision is to implement something like this in neovim I can send a PR or help people implement it. (AnsiEsc.vim uses regexes to define a fixed list of highlight groups up front whereas nvimpager parses the buffer with a custom state machine and only creates the required highlight groups on the fly and applies them by buffer position)\r\n\r\n\r\nI did not investigate if treesitter can be used to parse ansi escape sequences. Mainly because the were not present in neovim when I started nvimpager.",
            "created_at": "2024-09-22T08:07:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2365939396",
            "id": 2365939396,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6NBV7E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2365939396/reactions"
            },
            "updated_at": "2024-09-22T08:07:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2365939396",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1104419?v=4",
                "events_url": "https://api.github.com/users/lucc/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucc/followers",
                "following_url": "https://api.github.com/users/lucc/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucc",
                "id": 1104419,
                "login": "lucc",
                "node_id": "MDQ6VXNlcjExMDQ0MTk=",
                "organizations_url": "https://api.github.com/users/lucc/orgs",
                "received_events_url": "https://api.github.com/users/lucc/received_events",
                "repos_url": "https://api.github.com/users/lucc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I can not remove the [Process exited] text from the buffer\r\n\r\nissue track https://github.com/neovim/neovim/issues/14986",
            "created_at": "2024-09-22T08:22:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2366012615",
            "id": 2366012615,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6NBnzH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366012615/reactions"
            },
            "updated_at": "2024-09-22T08:22:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366012615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If the decision is to implement something like this in neovim I can send a PR\r\n\r\nYes! It looks like more code than I was expecting, so it can live in its own module which won't be loaded unless something require()'s it. I assume we will expose it as a single function on `vim.highlight` , unless there are better ideas (do we need a `vim.term` module? cc @gpanders). ",
            "created_at": "2024-09-23T14:19:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2368424593",
            "id": 2368424593,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6NK0qR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2368424593/reactions"
            },
            "updated_at": "2024-10-01T10:29:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2368424593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We shouldn't need to parse escape sequences ourselves, we can use `nvim_open_term()` and copy/pipe data from stdin into the terminal channel.\r\n\r\nHere's a rudimentary example (probably missing a lot of edge cases):\r\n\r\n```lua\r\nvim.api.nvim_create_user_command(\"Term\", function(args)\r\n    local buf = vim.api.nvim_get_current_buf()\r\n    local b = vim.api.nvim_create_buf(false, true)\r\n    local chan = vim.api.nvim_open_term(b, {})\r\n    vim.api.nvim_chan_send(chan, table.concat(vim.api.nvim_buf_get_lines(buf, 0, -1, false), \"\\n\"))\r\n    vim.api.nvim_win_set_buf(0, b)\r\nend, {})\r\n```\r\n\r\nThis creates a `:Term` user command, which you can use like this:\r\n\r\n```\r\ngit grep --color=always foo | nvim +Term\r\n```\r\n\r\nAnd now Nvim acts as a pager with correct colored output.",
            "created_at": "2024-09-23T14:50:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2368519968",
            "id": 2368519968,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6NLL8g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2368519968/reactions"
            },
            "updated_at": "2024-09-23T14:50:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2368519968",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> we can use `nvim_open_term()` and copy/pipe data from stdin into the terminal channel.\r\n\r\nThanks. Yes, that's an option... is there a benefit to supporting this for \"normal\" buffers though? Would be cool if we could extract/copy the `:terminal` result (including highlight groups) into a normal buffer.\r\n\r\nMaybe that should be the focus instead of reinventing termcode parsing in a plugin.",
            "created_at": "2024-09-23T15:28:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2368642122",
            "id": 2368642122,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6NLpxK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2368642122/reactions"
            },
            "updated_at": "2024-09-23T15:28:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2368642122",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yes, that's an option... is there a benefit to supporting this for \"normal\" buffers though\r\n\r\nJust to add as data point:\r\nFor plugins like nvim-dap it would be convenient to have that capability because they added [ANSI styling for variables to the spec](https://github.com/microsoft/debug-adapter-protocol/pull/501). \r\n\r\n",
            "created_at": "2024-09-23T18:06:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2369007407",
            "id": 2369007407,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6NNC8v",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2369007407/reactions"
            },
            "updated_at": "2024-09-23T19:03:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2369007407",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > we can use `nvim_open_term()` and copy/pipe data from stdin into the terminal channel.\r\n> \r\n> Thanks. Yes, that's an option... is there a benefit to supporting this for \"normal\" buffers though? Would be cool if we could extract/copy the `:terminal` result (including highlight groups) into a normal buffer.\r\n> \r\n> Maybe that should be the focus instead of reinventing termcode parsing in a plugin.\r\n\r\nI think supporting normal buffers could be handy for non-pipe scenarios. Sometimes for any number of reasons you can end up with ANSI escapes in a regular file (log files, or colorized viewings of things like saved grep/ip/diff/etc outputs.)",
            "created_at": "2024-10-01T10:04:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2385363653",
            "id": 2385363653,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6OLcLF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2385363653/reactions"
            },
            "updated_at": "2024-10-01T10:04:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2385363653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It definitely makes sense to leverage Nvim's builtin PTY features instead of reinventing that in Lua.\r\n\r\nThe code snippet in https://github.com/neovim/neovim/issues/30415#issuecomment-2368519968 works nicely and perhaps we should provide it by default so that it's easy for users to use Nvim as a pager.\r\n\r\n\r\n\r\n> supporting normal buffers could be handy for non-pipe scenarios\r\n\r\nTo support that, the next step would be for `:terminal` colors to be exposed as syntax groups. Partially implemented here: https://github.com/neovim/neovim/pull/7406#issuecomment-337363444\r\n\r\nSo, it seems clear that `nvim_open_term` is the right approach. I updated the proposal for this issue.",
            "created_at": "2024-10-01T10:28:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2385414788",
            "id": 2385414788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6OLoqE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2385414788/reactions"
            },
            "updated_at": "2024-10-01T10:45:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2385414788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Linux-only one-line solution steal from  https://github.com/rydesun/dotfiles/blob/0e1cc9ec0dc4e0df991441c434c1ecd69f187f2f/.config/kitty/kitty.conf#L24.\n```sh\nfd --color=always | nvim 63<&0 </dev/null --cmd \"au VimEnter * term cat /dev/fd/63 && sleep 10000\"\n```",
            "created_at": "2025-01-22T14:49:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2607450818",
            "id": 2607450818,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6baorC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607450818/reactions"
            },
            "updated_at": "2025-01-22T14:51:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607450818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/91544758?v=4",
                "events_url": "https://api.github.com/users/phanen/events{/privacy}",
                "followers_url": "https://api.github.com/users/phanen/followers",
                "following_url": "https://api.github.com/users/phanen/following{/other_user}",
                "gists_url": "https://api.github.com/users/phanen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phanen",
                "id": 91544758,
                "login": "phanen",
                "node_id": "U_kgDOBXTctg",
                "organizations_url": "https://api.github.com/users/phanen/orgs",
                "received_events_url": "https://api.github.com/users/phanen/received_events",
                "repos_url": "https://api.github.com/users/phanen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phanen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phanen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phanen",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There are several limitations to the code snippet in https://github.com/neovim/neovim/issues/30415#issuecomment-2368519968\n\n1. the terminal mode has a hard limit of 100K lines. That is usually more than enough. But it is frustrating when  you run into it (which I have, with very long log outputs). \n2. It has to load the entire file into a buffer then copy the entire thing, rather than streaming the content into the pseudo terminal in batches . I've tried to work around this but it is surprisingly difficult. \n    - There isn't a way to intercept stdin and send it to a terminal instead of a new buffer (see https://github.com/neovim/neovim/issues/9462)\n    - This is again primarily an issue with large inputs\n    - Loading the buffer and then changing it can cause a visual stutter, especially if the input is large\n4. It creates an additional buffer, leaving behind the old one. When reading from stdin, this means that attempting to close nvim warns you that you have unsaved changes in the original buffer. This one is easy to remedy though.",
            "created_at": "2025-03-25T07:17:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2750312295",
            "id": 2750312295,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6j7m9n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2750312295/reactions"
            },
            "updated_at": "2025-03-25T07:17:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2750312295",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Currently `nvim_open_term` expects the buffer it is given to be empty. What if that was changed so that if it is given a buffer that is non-empty it starts by processing the contents of that buffer as if it had been passed over the channel?",
            "created_at": "2025-03-26T07:07:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/30415#issuecomment-2753425864",
            "id": 2753425864,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30415",
            "node_id": "IC_kwDOAPphoM6kHfHI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2753425864/reactions"
            },
            "updated_at": "2025-03-26T07:07:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2753425864",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30415/comments",
    "created_at": "2024-09-18T12:22:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30415/events",
    "html_url": "https://github.com/neovim/neovim/issues/30415",
    "id": 2533593224,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim defaults for options, colorscheme/theme, autocmds/events, etc.",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 396626349,
            "name": "input",
            "node_id": "MDU6TGFiZWwzOTY2MjYzNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/input"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk, self-contained. Do NOT ask \"can I work on this\", just read CONTRIBUTING.md",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1786207367,
            "name": "highlight",
            "node_id": "MDU6TGFiZWwxNzg2MjA3MzY3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/highlight"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 2699293736,
            "name": "pager",
            "node_id": "MDU6TGFiZWwyNjk5MjkzNzM2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/pager"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30415/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 707,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 637,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-03-31T13:15:01Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6XA5CI",
    "number": 30415,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 5,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 5,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30415/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30415/timeline",
    "title": "ansi color code highlight util",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-03-26T07:07:41Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30415",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}