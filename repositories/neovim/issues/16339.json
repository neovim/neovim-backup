{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Feature already in Vim?\r\n\r\nYes, Vim 7.4.2111\r\n\r\n### Feature description\r\n\r\nWhat it says on the tin. Vim uses an autocommand in `defaults.vim` for this: https://github.com/vim/vim/blob/728104da6cd561b8cb2c7142769f7526d725958e/runtime/defaults.vim#L103-L110\r\n\r\n(Note: This is the last open item transferred from #6289 so that that issue could be put out of its misery.)",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Drive by note: this is complicated by the fact that Neovim enables filetype autocommands later than Vim does in defaults.vim. The \"restore cursor position\" autocommand needs to be defined *after* the FileType autocommands to allow blacklisting specific filetypes (e.g. `gitcommit`).",
            "created_at": "2021-11-16T18:59:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-970576843",
            "id": 970576843,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM452dPL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/970576843/reactions"
            },
            "updated_at": "2021-11-16T18:59:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/970576843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I personally don't think this should be a default, I think the segmentation for default statefulness should end at undo/jumplist/command history (but that is ofc just my opinion :) )",
            "created_at": "2021-11-16T19:31:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-970609853",
            "id": 970609853,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM452lS9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 8,
                "-1": 16,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 24,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/970609853/reactions"
            },
            "updated_at": "2021-11-16T19:31:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/970609853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Agree with @mjlbach .\n\nAlso I've always used https://github.com/farmergreg/vim-lastplace to achieve this which handles more edge cases.",
            "created_at": "2021-11-24T14:19:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-977921392",
            "id": 977921392,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM46SeVw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/977921392/reactions"
            },
            "updated_at": "2021-11-24T14:22:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/977921392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Dropping this here for anybody looking for this functionality: https://github.com/ethanholz/nvim-lastplace",
            "created_at": "2022-12-12T19:49:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-1347197321",
            "id": 1347197321,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM5QTJmJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 11,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 11,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1347197321/reactions"
            },
            "updated_at": "2022-12-12T19:49:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1347197321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68909555?v=4",
                "events_url": "https://api.github.com/users/hermitmaster/events{/privacy}",
                "followers_url": "https://api.github.com/users/hermitmaster/followers",
                "following_url": "https://api.github.com/users/hermitmaster/following{/other_user}",
                "gists_url": "https://api.github.com/users/hermitmaster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hermitmaster",
                "id": 68909555,
                "login": "hermitmaster",
                "node_id": "MDQ6VXNlcjY4OTA5NTU1",
                "organizations_url": "https://api.github.com/users/hermitmaster/orgs",
                "received_events_url": "https://api.github.com/users/hermitmaster/received_events",
                "repos_url": "https://api.github.com/users/hermitmaster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hermitmaster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hermitmaster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hermitmaster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@hermitmaster cool! Wasn't aware someone ported this to Lua. I've taken a look and been able to reduce it down <50LOC which people can drop into the `$XDG_CONFIG/nvim/plugin/*`:\r\n\r\n```lua\r\n-- adapted from https://github.com/ethanholz/nvim-lastplace/blob/main/lua/nvim-lastplace/init.lua\r\nlocal ignore_buftype = { \"quickfix\", \"nofile\", \"help\" }\r\nlocal ignore_filetype = { \"gitcommit\", \"gitrebase\", \"svn\", \"hgcommit\" }\r\n\r\nlocal function run()\r\n  if vim.tbl_contains(ignore_buftype, vim.bo.buftype) then\r\n    return\r\n  end\r\n\r\n  if vim.tbl_contains(ignore_filetype, vim.bo.filetype) then\r\n    -- reset cursor to first line\r\n    vim.cmd[[normal! gg]]\r\n    return\r\n  end\r\n\r\n  -- If a line has already been specified on the command line, we are done\r\n  --   nvim file +num\r\n  if vim.fn.line(\".\") > 1 then\r\n    return\r\n  end\r\n\r\n  local last_line = vim.fn.line([['\"]])\r\n  local buff_last_line = vim.fn.line(\"$\")\r\n\r\n  -- If the last line is set and the less than the last line in the buffer\r\n  if last_line > 0 and last_line <= buff_last_line then\r\n    local win_last_line = vim.fn.line(\"w$\")\r\n    local win_first_line = vim.fn.line(\"w0\")\r\n    -- Check if the last line of the buffer is the same as the win\r\n    if win_last_line == buff_last_line then\r\n      -- Set line to last line edited\r\n      vim.cmd[[normal! g`\"]]\r\n      -- Try to center\r\n    elseif buff_last_line - last_line > ((win_last_line - win_first_line) / 2) - 1 then\r\n      vim.cmd[[normal! g`\"zz]]\r\n    else\r\n      vim.cmd[[normal! G'\"<c-e>]]\r\n    end\r\n  end\r\nend\r\n\r\nvim.api.nvim_create_autocmd({'BufWinEnter', 'FileType'}, {\r\n  group    = vim.api.nvim_create_augroup('nvim-lastplace', {}),\r\n  callback = run\r\n})\r\n```\r\n\r\nNote: by using `BufWinEnter`, `'foldopen'` is respected (unlike `BufReadPost`).",
            "created_at": "2022-12-13T10:18:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-1348133829",
            "id": 1348133829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM5QWuPF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 23,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 8,
                "hooray": 0,
                "laugh": 0,
                "rocket": 8,
                "total_count": 39,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1348133829/reactions"
            },
            "updated_at": "2022-12-13T10:22:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1348133829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Small re-implementation of the suggested autocmd in `:h restore-cursor`:\r\n```lua\r\nvim.api.nvim_create_autocmd('BufRead', {\r\n  callback = function(opts)\r\n    vim.api.nvim_create_autocmd('BufWinEnter', {\r\n      once = true,\r\n      buffer = opts.buf,\r\n      callback = function()\r\n        local ft = vim.bo[opts.buf].filetype\r\n        local last_known_line = vim.api.nvim_buf_get_mark(opts.buf, '\"')[1]\r\n        if\r\n          not (ft:match('commit') and ft:match('rebase'))\r\n          and last_known_line > 1\r\n          and last_known_line <= vim.api.nvim_buf_line_count(opts.buf)\r\n        then\r\n          vim.api.nvim_feedkeys([[g`\"]], 'nx', false)\r\n        end\r\n      end,\r\n    })\r\n  end,\r\n})\r\n```\r\n_Copied from https://github.com/farmergreg/vim-lastplace/issues/28#issuecomment-1336129506 by @musjj, but using `BufWinEnter` instead of `FileType`_\r\n_Updated as per https://github.com/neovim/neovim/issues/16339#issuecomment-1519107163 to feed keys through the builtin key meaning, never through user mappings_",
            "created_at": "2023-03-07T02:15:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-1457394370",
            "id": 1457394370,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM5W3hLC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 27,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 10,
                "hooray": 4,
                "laugh": 0,
                "rocket": 0,
                "total_count": 41,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1457394370/reactions"
            },
            "updated_at": "2023-05-03T23:59:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1457394370",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Testing that snippet a bit more, something isn't working as I'd expect:\r\nStarting nvim using the same file in multiple splits/tabs will restore cursor ONLY in the first window, not the others.\r\n(and annoyingly, an immediate `:qa` will loose the last known position as the other (non-restored) windows are closed last)\r\n\r\nSo doing:\r\n```sh\r\nnvim foo.txt foo.txt -p\r\n```\r\nWill open the file `foo.txt` in 2 tabs, but only the first tab will have its cursor restored to last known position :/\r\n_(note: removing `once = true` in the 'nested' autocmd to test this doesn't help)_\r\n\r\nThis seems to be because `BufWinEnter` is purposefully not triggered if the buffer is already displayed in another window (as per its documentation).\r\n\r\nI'd expect `BufWinEnter` with `once=true` to trigger once for each `(buf, win)` tuple. (WDYT?)\r\n\r\n:point_right: Any idea what we could do to make this work?\r\n\r\nAside: I'm not fond of the name `BufWinEnter` for that kind of specific use case, I think I'd like to suggest to rename it to something like `BufFirstWinEnter`. WDYT?\r\n\r\n---\r\nSuggested a new autocmd idea at #22597",
            "created_at": "2023-03-09T22:30:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-1462917655",
            "id": 1462917655,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM5XMloX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1462917655/reactions"
            },
            "updated_at": "2023-03-09T23:03:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1462917655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'd expect BufWinEnter with once=true to trigger once for each (buf, win) tuple. (WDYT?)\n\n`once=true` means the autocmd will run exactly once. If you want to run it more than once then you need to handle that specifically.",
            "created_at": "2023-03-10T00:37:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-1463037081",
            "id": 1463037081,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM5XNCyZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1463037081/reactions"
            },
            "updated_at": "2023-03-10T00:48:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1463037081",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> `once=true` means the autocmd will run exactly once. If you want to run it more than once then you need to handle that specifically.\r\n\r\nI think you missed the part where I mention that I also tested without `once=true` without success.\r\n\r\nEDIT: Actually you are right @lewis6991, `BufWinEnter` is triggered for each win where the buffer is first displayed (and also when doing `:b some-file` in a window)..\r\n:x: BUT something still seems to be wrong with the mark or the window context it seems.. I'm investigating",
            "created_at": "2023-03-10T00:46:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-1463042790",
            "id": 1463042790,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM5XNELm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1463042790/reactions"
            },
            "updated_at": "2023-03-12T21:02:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1463042790",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Update to the autocommand in https://github.com/neovim/neovim/issues/16339#issuecomment-1457394370:\r\n\r\nI think you'll generally get better results if you replace\r\n\r\n```lua\r\nvim.api.nvim_feedkeys([[g`\"]], 'x', false)\r\n```\r\n\r\nwith\r\n\r\n```lua\r\nvim.api.nvim_feedkeys([[g`\"]], 'nx', false)\r\n```\r\n\r\nThe `n` means don't use user mappings (see `:h feedkeys`). In my case, after installing `which-key` (which I suppose has some default handling of either `` g` `` or `` ` ``), I found that 50% of the time I opened a new buffer, the autocommand ended up _inserting_ the literal `` g`\" `` characters at the top of the file. How the editor got itself into insert mode, I'll never know.",
            "created_at": "2023-04-23T16:40:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-1519107163",
            "id": 1519107163,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM5ai7xb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1519107163/reactions"
            },
            "updated_at": "2023-05-04T07:25:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1519107163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1074598?v=4",
                "events_url": "https://api.github.com/users/mitchellwrosen/events{/privacy}",
                "followers_url": "https://api.github.com/users/mitchellwrosen/followers",
                "following_url": "https://api.github.com/users/mitchellwrosen/following{/other_user}",
                "gists_url": "https://api.github.com/users/mitchellwrosen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mitchellwrosen",
                "id": 1074598,
                "login": "mitchellwrosen",
                "node_id": "MDQ6VXNlcjEwNzQ1OTg=",
                "organizations_url": "https://api.github.com/users/mitchellwrosen/orgs",
                "received_events_url": "https://api.github.com/users/mitchellwrosen/received_events",
                "repos_url": "https://api.github.com/users/mitchellwrosen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mitchellwrosen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mitchellwrosen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mitchellwrosen",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mitchellwrosen thanks I updated the autocmd in my comment",
            "created_at": "2023-05-04T00:00:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-1533895777",
            "id": 1533895777,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM5bbWRh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1533895777/reactions"
            },
            "updated_at": "2023-05-04T07:25:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1533895777",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Small re-implementation of the suggested autocmd in `:h restore-cursor`:\n\nThanks @bew, this works great. There's a small bug in the commit/rebase line: there should be an `or` instead of `and`, making it recall the last position in commit messages where it's not wanted.",
            "created_at": "2025-07-17T11:00:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/16339#issuecomment-3083610052",
            "id": 3083610052,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16339",
            "node_id": "IC_kwDOAPphoM63zCfE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3083610052/reactions"
            },
            "updated_at": "2025-07-17T11:00:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3083610052",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/419104?v=4",
                "events_url": "https://api.github.com/users/minus7/events{/privacy}",
                "followers_url": "https://api.github.com/users/minus7/followers",
                "following_url": "https://api.github.com/users/minus7/following{/other_user}",
                "gists_url": "https://api.github.com/users/minus7/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/minus7",
                "id": 419104,
                "login": "minus7",
                "node_id": "MDQ6VXNlcjQxOTEwNA==",
                "organizations_url": "https://api.github.com/users/minus7/orgs",
                "received_events_url": "https://api.github.com/users/minus7/received_events",
                "repos_url": "https://api.github.com/users/minus7/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/minus7/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/minus7/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/minus7",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16339/comments",
    "created_at": "2021-11-16T18:56:57Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/16339/events",
    "html_url": "https://github.com/neovim/neovim/issues/16339",
    "id": 1055216828,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim defaults for options, colorscheme/theme, autocmds/events, etc.",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "compatibility with Vim or older Neovim",
            "id": 109899712,
            "name": "compatibility",
            "node_id": "MDU6TGFiZWwxMDk4OTk3MTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/compatibility"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/16339/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM4-5VS8",
    "number": 16339,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 50,
        "-1": 4,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 54,
        "url": "https://api.github.com/repos/neovim/neovim/issues/16339/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/16339/timeline",
    "title": "defaults: restore cursor position when opening a file",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-17T11:00:39Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/16339",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
        "events_url": "https://api.github.com/users/clason/events{/privacy}",
        "followers_url": "https://api.github.com/users/clason/followers",
        "following_url": "https://api.github.com/users/clason/following{/other_user}",
        "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/clason",
        "id": 2361214,
        "login": "clason",
        "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
        "organizations_url": "https://api.github.com/users/clason/orgs",
        "received_events_url": "https://api.github.com/users/clason/received_events",
        "repos_url": "https://api.github.com/users/clason/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/clason",
        "user_view_type": "public"
    }
}