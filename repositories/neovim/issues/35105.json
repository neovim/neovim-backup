{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen installing packages with `vim.pack.add` from a lua file, I get the following error message immediately following package installation and after startup when the package has been installed:\n```\nE5113: Lua chunk: /usr/local/share/nvim/runtime/lua/vim/pack.lua:694: vim.pack:\n\n`mini.surround`:\n/usr/local/share/nvim/runtime/lua/vim/pack.lua:617: Vim:E919: Directory not found in 'packpath': \"pack/*/opt/mini.surround\"\nstack traceback:\n\t[C]: in function 'error'\n\t/usr/local/share/nvim/runtime/lua/vim/pack.lua:694: in function 'add'\n```\n\nHowever, if I install the package from the command, `vim.pack.add{\"https://github.com/echasnovski/mini.surround\"}` directly, I don't get an error message after the package is installed or when I start vim up again.\n\n### Steps to reproduce\n\nMinimal lua config for the error:\n```lua\n-- Run this file as `nvim --clean -u minimal.lua`\nvim.pack.add{\n\t\"https://github.com/echasnovski/mini.surround\"\n}\n```\n\n*Make sure to delete the package before testing the correct behavior method*\nTo see the correct behavior run:\n`nvim --clean`\n`:lua vim.pack.add{\"https://github.com/echasnovski/mini.surround\"}`\n\n### Expected behavior\n\nI would expect that there is no difference betwen installing a package via a sourced lua file and installing a package via the `vim.pack.add` command directly.\n\n### Nvim version (nvim -v)\n\nNVIM v0.12.0-dev-910+g029b7a149f\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nmacOS 15.5\n\n### Terminal name/version\n\nghostty v1.1.3\n\n### $TERM environment variable\n\nxterm-ghostty\n\n### Installation\n\nbuild from repo",
    "closed_at": "2025-08-22T18:35:43Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I can reproduce. The issue here is that this runs with `nvim --clean` which:\n- Has `vim.fn.stdpath('data')` point to user's home subdirectory ('~/.local/share/nvim').\n- Doesn't have this directory as part of 'packpath'. This leads to an error when `:packadd` is run during startup, but no error after startup. In both instances the plugin is installed into '~/.local/share/nvim/site/pack/core/opt', but it can't be used because both 'packpath' and 'runtimepath' don't contain the necessary entry.\n\nI am not sure what would be the most canonical behavior here.\n\nOn one hand, it is documented that `--clean` `excludes user directories from 'runtimepath'` (which also includes 'packpath') and `vim.pack` installs into user directory. So it might be an expected behavior for users to manually adjust both 'packpath' and 'runtimepath' if they want to use `vim.pack` with `nvim --clean`.\n\nOn the other hand, `vim.pack` *might* auto-add necessary user directory to 'packpath' and 'runtimepath'. My worry is that this might affect performance, since the check needs to be done on every `vim.pack.add()` call even during \"normal\" startup (i.e. not `--clean`).\n\n@justinmk, do you have opinions here? Should `nvim --clean -u minimal.lua` work out of the box with `vim.pack.add()` or is only `nvim -u minimal.lua` enough here? Or maybe should `nvim --clean` case fail before even installing with an informative error about 'packpath' and 'runtimepath'?\n\n**Edit**: for what it's worth, this was a [similar issue](https://github.com/neovim/neovim/issues/34766#issuecomment-3038495866) reported.",
            "created_at": "2025-08-02T12:25:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3146473161",
            "id": 3146473161,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67i17J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3146473161/reactions"
            },
            "updated_at": "2025-08-02T13:03:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3146473161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `vim.pack` _might_ auto-add necessary user directory to 'packpath' and 'runtimepath'.\n\nCan we do that only for `--clean` ? ",
            "created_at": "2025-08-02T23:08:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3146832479",
            "id": 3146832479,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67kNpf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3146832479/reactions"
            },
            "updated_at": "2025-08-02T23:08:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3146832479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Can we do that only for `--clean` ?\n\nSure, but I feel if there already is a precedent of adjusting path options, it might be reasonable to do it always. Just make it as optimized as possible and might not affect startup *that* much.\n\nAnd by the way, I don't think I know how to detect that `--clean` flag is passed without actually checking various options (like 'runtimepath'). Is there a way?",
            "created_at": "2025-08-03T07:39:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3148109160",
            "id": 3148109160,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67pFVo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148109160/reactions"
            },
            "updated_at": "2025-08-03T07:53:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148109160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> how to detect that `--clean` flag is passed without actually checking various options\n\nChecking the options is the way",
            "created_at": "2025-08-03T13:40:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3148431841",
            "id": 3148431841,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67qUHh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148431841/reactions"
            },
            "updated_at": "2025-08-03T13:40:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148431841",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Checking the options is the way\n\nThen there doesn't seem to be a significant gain in only supporting it in `--clean`. Either ensure that a dedicated directory is in 'packpath' always or never.\n\nI'll take a look next week about how performant always ensuring can be. The problem/issue is to have a performant way to work with list options: check if present and prepend. There is `vim.opt`, but not sure how good it is to use in `vim.pack`.",
            "created_at": "2025-08-03T13:43:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3148433238",
            "id": 3148433238,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67qUdW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148433238/reactions"
            },
            "updated_at": "2025-08-03T13:44:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148433238",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Do we really need to work around this? `--clean` is a debug option meant for maximally reproducible bug reports, and adding \"magic\" to this will go against that goal. If this requires setting an option in `minimal.lua`, we should just document that (in our new template) and move on with our lives.\n\n(And, yes, `vim.opt` is perfectly fine to use until we have native table options -- if ever.)",
            "created_at": "2025-08-03T13:46:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3148434870",
            "id": 3148434870,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67qU22",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148434870/reactions"
            },
            "updated_at": "2025-08-03T13:48:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148434870",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `--clean` is a debug option meant for maximally reproducible bug reports\n\nUnless I misunderstood, I thought the problem is that `vim.pack` doesn't work with `--clean`. But we want it to work with `--clean`, for bug reports purposes.\n\n~~Maybe for bug reports we could provide `$NVIM_APPNAME` instructions instead of `--clean` ?~~",
            "created_at": "2025-08-03T13:50:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3148436664",
            "id": 3148436664,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67qVS4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148436664/reactions"
            },
            "updated_at": "2025-08-03T13:51:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148436664",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It doesn't work without adding the custom _user_ path to `packpath`, which I would argue is the desired behavior.\n\nIf adding a `vim.opt.packpath:prepend` step in the minimal config is unacceptable, then `vim.pack.add` should ensure that the directory is on `packpath` unconditionally (and in a documented way).\n\n(`$NVIM_APPNAME` is orthogonal -- and recommended in addition to make sure the environment is clean.)",
            "created_at": "2025-08-03T13:52:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3148438076",
            "id": 3148438076,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67qVo8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148438076/reactions"
            },
            "updated_at": "2025-08-03T13:53:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148438076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Alternatively, we can just add the custom directory to packpath unconditionally (and document that at `:h --clean` for good measure). As `vim.pack` uses `opt`, this shouldn't change the behavior for \"normal\" `--clean` debugging. (Should test that first to make sure, of course.)",
            "created_at": "2025-08-03T13:57:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3148441161",
            "id": 3148441161,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67qWZJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148441161/reactions"
            },
            "updated_at": "2025-08-03T13:57:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148441161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It doesn't work without adding the custom _user_ path to `packpath`, which I would argue is the desired behavior.\n> \n> If adding a `vim.opt.packpath:prepend` step in the minimal config is unacceptable, then `vim.pack.add` should ensure that the directory is on `packpath` unconditionally (and in a documented way).\n> \n> (`$NVIM_APPNAME` is orthogonal -- and recommended in addition to make sure the environment is clean.)\n\nHmm... I just realized that using solely `vim.pack.add` with `nvim --clean` will not work for clean reproduction. The reason is that both `nvim --clean` and `nvim` will use the same directory to install plugins. Which is not pure reproduction. For example:\n- If person doing reproduction has target plugin installed via `vim.pack.add()`, running `nvim --clean` with `vim.pack.add()` (and ensuring target directory in 'packpath') will just reuse already installed plugin.\n- If plugin is not installed, it will pollute installed plugins of person doing reproduction.\n\nAs there indeed is no direct way to check `--clean` flag, some of the options for clean reproductions are:\n- Document setting `XDG_DATA_HOME` environment variable to be used where plugins will be installed. Should be done before `vim.pack.add`. Something like this:\n\n    ```lua\n    vim.env.XDG_DATA_HOME = vim.fs.joinpath(vim.uv.cwd(), '.repro')\n    ```\n\n- Indeed recommending `$NVIM_APPNAME` approach for reproduction, as it modifies all necessary `XDG_***` variables.\n\n*If* there were a direct way of checking `--clean`, another (somewhat esoteric) solution would be to use different target directory. Like mentioned above '.repro' in current directory, for example.",
            "created_at": "2025-08-03T14:08:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3148448317",
            "id": 3148448317,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67qYI9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148448317/reactions"
            },
            "updated_at": "2025-08-03T14:08:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148448317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, that is orthogonal and already solved by `$NVIM_APPNAME` (unless we want to make the plugin location configurable).",
            "created_at": "2025-08-03T14:12:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3148450136",
            "id": 3148450136,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67qYlY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148450136/reactions"
            },
            "updated_at": "2025-08-03T14:12:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148450136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If adding a `vim.opt.packpath:prepend` step in the minimal config is unacceptable,\n\nNo problem with that.",
            "created_at": "2025-08-03T14:39:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3148468405",
            "id": 3148468405,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM67qdC1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148468405/reactions"
            },
            "updated_at": "2025-08-03T14:39:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148468405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think another way could be just making `vim.pack` use the old `'runtimepath'` directly instead of `:packadd`",
            "created_at": "2025-08-06T08:02:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3157987895",
            "id": 3157987895,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM68OxI3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3157987895/reactions"
            },
            "updated_at": "2025-08-06T08:02:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3157987895",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think another way could be just making `vim.pack` use the old `'runtimepath'` directly instead of `:packadd`\n\nThe `:packadd` approach *is* the way to properly adjust 'runtimepath' plus execute (almost) all necessary scripts. Doing it manually will be more work for virtually no benefit.\n\nEfficiently adjusting 'packpath' (ideally once) should be good enough. I plan to address this in the upcoming days.",
            "created_at": "2025-08-06T08:17:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/35105#issuecomment-3158106237",
            "id": 3158106237,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35105",
            "node_id": "IC_kwDOAPphoM68POB9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3158106237/reactions"
            },
            "updated_at": "2025-08-06T08:17:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3158106237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35105/comments",
    "created_at": "2025-07-29T13:10:39Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35105/events",
    "html_url": "https://github.com/neovim/neovim/issues/35105",
    "id": 3273600781,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35105/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7DHy8N",
    "number": 35105,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35105/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35105/timeline",
    "title": "Error after installing packages with vim.pack.add from lua file",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-22T18:35:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35105",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/19915504?v=4",
        "events_url": "https://api.github.com/users/jamestthompson3/events{/privacy}",
        "followers_url": "https://api.github.com/users/jamestthompson3/followers",
        "following_url": "https://api.github.com/users/jamestthompson3/following{/other_user}",
        "gists_url": "https://api.github.com/users/jamestthompson3/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jamestthompson3",
        "id": 19915504,
        "login": "jamestthompson3",
        "node_id": "MDQ6VXNlcjE5OTE1NTA0",
        "organizations_url": "https://api.github.com/users/jamestthompson3/orgs",
        "received_events_url": "https://api.github.com/users/jamestthompson3/received_events",
        "repos_url": "https://api.github.com/users/jamestthompson3/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jamestthompson3/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jamestthompson3/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jamestthompson3",
        "user_view_type": "public"
    }
}