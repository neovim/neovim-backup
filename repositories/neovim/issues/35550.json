{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\n```lua\nvim.api.nvim_exec_autocmds(\"User\", { pattern = \"TestEvent\",\n  data = {\n    values = { \"a\", \"b\", c = \"d\", },\n  }\n})\n```\n\nWill give\n\n```\nError in /home/birdee/.config/nvim/init.lua:\nE5113: Lua chunk: /home/birdee/.config/nvim/init.lua:1: Invalid 'data': Cannot convert given Lua table\nstack traceback:\n        [C]: in function 'nvim_exec_autocmds'\n        /home/birdee/.config/nvim/init.lua:1: in main chunk\n```\n\n### Steps to reproduce\n\nin any nvim instance, but I tested with an init.lua containing ONLY that:\n\n```lua\nvim.api.nvim_exec_autocmds(\"User\", { pattern = \"TestEvent\",\n  data = {\n    values = { \"a\", \"b\", c = \"d\", },\n  }\n})\n```\n\nhttps://github.com/neovim/neovim/blob/4edeaaa6e2c1454a6e2ceeca515727954333c2a6/src/nvim/api/autocmd.c#L674-L687\n\n### Expected behavior\n\nIt should pass whatever is in data through `callback = function(e) print(vim.inspect(e.data)) end` but instead it throws an error\n\n### How did we find out?\n\n```lua\nvim.pack.add {\n    {\n      src = \"https://github.com/Wansmer/treesj\",\n      data = {\n        keys = { { \"<leader>Tt\", \":TSJToggle<CR>\", mode = { \"n\" }, desc = \"treesj split/join\" }, },\n      }\n    }\n}\n```\n\n### Nvim version (nvim -v)\n\ntested on master, fresh build, `make nvim && VIMRUNTIME=runtime ./build/bin/nvim`\n\n### Vim (not Nvim) behaves the same?\n\nN/A lua api src/nvim/api\n\n### Operating system/version\n\nlinux, someone reported it to me and it happens for me too, so 2 different distros\n\n### Terminal name/version\n\nN/A\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nbuild from source `make nvim && VIMRUNTIME=runtime ./build/bin/nvim`",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`:h api-types`",
            "created_at": "2025-08-30T01:59:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/35550#issuecomment-3238853551",
            "id": 3238853551,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35550",
            "node_id": "IC_kwDOAPphoM7BDPuv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3238853551/reactions"
            },
            "updated_at": "2025-08-30T01:59:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3238853551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The docs should stay, the behavior should be fixed lol",
            "created_at": "2025-08-30T02:00:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/35550#issuecomment-3238854293",
            "id": 3238854293,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35550",
            "node_id": "IC_kwDOAPphoM7BDP6V",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3238854293/reactions"
            },
            "updated_at": "2025-08-30T02:00:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3238854293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85372418?v=4",
                "events_url": "https://api.github.com/users/BirdeeHub/events{/privacy}",
                "followers_url": "https://api.github.com/users/BirdeeHub/followers",
                "following_url": "https://api.github.com/users/BirdeeHub/following{/other_user}",
                "gists_url": "https://api.github.com/users/BirdeeHub/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BirdeeHub",
                "id": 85372418,
                "login": "BirdeeHub",
                "node_id": "MDQ6VXNlcjg1MzcyNDE4",
                "organizations_url": "https://api.github.com/users/BirdeeHub/orgs",
                "received_events_url": "https://api.github.com/users/BirdeeHub/received_events",
                "repos_url": "https://api.github.com/users/BirdeeHub/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BirdeeHub/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BirdeeHub/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BirdeeHub",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related https://github.com/neovim/neovim/issues/26319#issuecomment-1834108117",
            "created_at": "2025-08-30T02:12:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/35550#issuecomment-3238863843",
            "id": 3238863843,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35550",
            "node_id": "IC_kwDOAPphoM7BDSPj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3238863843/reactions"
            },
            "updated_at": "2025-08-30T02:12:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3238863843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for that reference @zeertzjq !\n\nI guess we could add a `rpc-dict` help tag and link to it from... everywhere? Not sure what you expect. LuaLS/emmylua types can't really express this.\n\nWe could link to a help tag in the error message, that should be enough.\n\nImproving the [flexibility of the API](https://github.com/neovim/neovim/issues/26319#issuecomment-1834108117) is also an option, though there will always be limitations.",
            "created_at": "2025-08-30T03:34:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/35550#issuecomment-3238907818",
            "id": 3238907818,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35550",
            "node_id": "IC_kwDOAPphoM7BDc-q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3238907818/reactions"
            },
            "updated_at": "2025-08-30T03:37:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3238907818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If I am understanding correctly, this is because vimscript does not accept mixed table/array things\n\nfor formats which do not accept numeric dict keys, we could make it just give stringified int keys if it is a mixed table?\n\nVimscript automatically converts numbers used as keys into strings, so it seems to me we should just do the same in the case of a mixed table if it gets passed off to vimscript, without changing the value within lua?\n\nIts a bit complex though. I was having trouble following all the source, a lot of functions I do not know well yet, I don't see any lua pushing and popping, just an Object type so Im having trouble figuring out where these values come from.",
            "created_at": "2025-08-30T03:47:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/35550#issuecomment-3238913807",
            "id": 3238913807,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35550",
            "node_id": "IC_kwDOAPphoM7BDecP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3238913807/reactions"
            },
            "updated_at": "2025-08-30T03:57:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3238913807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85372418?v=4",
                "events_url": "https://api.github.com/users/BirdeeHub/events{/privacy}",
                "followers_url": "https://api.github.com/users/BirdeeHub/followers",
                "following_url": "https://api.github.com/users/BirdeeHub/following{/other_user}",
                "gists_url": "https://api.github.com/users/BirdeeHub/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BirdeeHub",
                "id": 85372418,
                "login": "BirdeeHub",
                "node_id": "MDQ6VXNlcjg1MzcyNDE4",
                "organizations_url": "https://api.github.com/users/BirdeeHub/orgs",
                "received_events_url": "https://api.github.com/users/BirdeeHub/received_events",
                "repos_url": "https://api.github.com/users/BirdeeHub/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BirdeeHub/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BirdeeHub/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BirdeeHub",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "NixVim faces a similar issue when mapping between Lua tables and Nix attribute sets (equivalent to json objects).\nThey solve it by mapping integer keys to `\"__unkeyed-<integer>\"` string keys on the nix side (e.g. `\"__unkeyed-1\"`, `\"__unkeyed-2\"`, ...).\n\nPerhaps Neovim could do something like that when converting between Lua tables and Vimscript dictionaries.",
            "created_at": "2025-08-30T06:59:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/35550#issuecomment-3239013970",
            "id": 3239013970,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35550",
            "node_id": "IC_kwDOAPphoM7BD25S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239013970/reactions"
            },
            "updated_at": "2025-08-30T07:41:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239013970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sure, anyone that wants to work on that is welcome. It will involve the conversion layer:\n\n```\nsrc/nvim/lua/converter.c\nsrc/nvim/api/private/converter.c\n```\n\nFor converting to vimscript dict, could just throw an (informative) error for now. For converting to msgpack, could use numeric keys since [msgpack supports that](https://github.com/neovim/neovim/issues/26319#issuecomment-1834108117).",
            "created_at": "2025-08-30T14:23:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/35550#issuecomment-3239300936",
            "id": 3239300936,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35550",
            "node_id": "IC_kwDOAPphoM7BE89I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239300936/reactions"
            },
            "updated_at": "2025-08-30T14:23:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239300936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I would recommend just converting `[1]` to `\"1\"` because Im pretty sure thats what vimscript does with integer keys?\n\nBut yes, would love to see that. Most people are going to be using lua anyway probably haha\n\nThanks for the info, with the new info of where to look I can see if I can get further next time I investigate it.",
            "created_at": "2025-08-30T14:45:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/35550#issuecomment-3239313401",
            "id": 3239313401,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35550",
            "node_id": "IC_kwDOAPphoM7BE__5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239313401/reactions"
            },
            "updated_at": "2025-08-30T14:45:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239313401",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85372418?v=4",
                "events_url": "https://api.github.com/users/BirdeeHub/events{/privacy}",
                "followers_url": "https://api.github.com/users/BirdeeHub/followers",
                "following_url": "https://api.github.com/users/BirdeeHub/following{/other_user}",
                "gists_url": "https://api.github.com/users/BirdeeHub/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BirdeeHub",
                "id": 85372418,
                "login": "BirdeeHub",
                "node_id": "MDQ6VXNlcjg1MzcyNDE4",
                "organizations_url": "https://api.github.com/users/BirdeeHub/orgs",
                "received_events_url": "https://api.github.com/users/BirdeeHub/received_events",
                "repos_url": "https://api.github.com/users/BirdeeHub/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BirdeeHub/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BirdeeHub/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BirdeeHub",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I would recommend just converting [1] to \"1\" because Im pretty sure thats what vimscript does with integer keys?\n\nLua tables can distinguish between `1` (an integer key) and `\"1\"` (a string key):\n\n```\n:lua ={[\"1\"] = \"string\", [1] = \"integer\"}\n{ \"integer\",\n  [\"1\"] = \"string\",\n}\n```\n\nUsing something like `__unkeyed-<integer>` as a synthetic integer key is very unlikely to collide with other string keys.",
            "created_at": "2025-08-31T16:12:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/35550#issuecomment-3240247847",
            "id": 3240247847,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35550",
            "node_id": "IC_kwDOAPphoM7BIkIn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240247847/reactions"
            },
            "updated_at": "2025-08-31T16:12:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3240247847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35550/comments",
    "created_at": "2025-08-30T01:55:14Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35550/events",
    "html_url": "https://github.com/neovim/neovim/issues/35550",
    "id": 3368639709,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35550/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 741,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 631,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-09-01T20:43:39Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM7IyVzd",
    "number": 35550,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35550/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35550/timeline",
    "title": "event options field `data` type is `any` but it does not accept mixed tables",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-31T16:12:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35550",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/85372418?v=4",
        "events_url": "https://api.github.com/users/BirdeeHub/events{/privacy}",
        "followers_url": "https://api.github.com/users/BirdeeHub/followers",
        "following_url": "https://api.github.com/users/BirdeeHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/BirdeeHub/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/BirdeeHub",
        "id": 85372418,
        "login": "BirdeeHub",
        "node_id": "MDQ6VXNlcjg1MzcyNDE4",
        "organizations_url": "https://api.github.com/users/BirdeeHub/orgs",
        "received_events_url": "https://api.github.com/users/BirdeeHub/received_events",
        "repos_url": "https://api.github.com/users/BirdeeHub/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/BirdeeHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BirdeeHub/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/BirdeeHub",
        "user_view_type": "public"
    }
}