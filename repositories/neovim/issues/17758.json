{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\r\n\r\nNo\r\n\r\n### Feature description\r\n\r\nI found this new API amazing, specially the possibility to use a lua callback instead of a vim command, but by using this it restricts the ability to call it silently. I would like to be able to make the callback be called silently instead of having to define the vim command instead. \r\n\r\nInstead of doing this:\r\n\r\n```lua\r\nautocmd(\"BufEnter,InsertLeave\", {\r\n            description = \"Auto show code lens\",\r\n            pattern = \"<buffer>\",\r\n            command = \"silent! lua vim.lsp.codelens.refresh()\"\r\n})\r\n```\r\n\r\nI'd like something like this for example\r\n\r\n```lua\r\nautocmd(\"BufEnter,InsertLeave\", {\r\n            description = \"Auto show code lens\",\r\n            pattern = \"<buffer>\",\r\n            callback = vim.lsp.codelens.refresh,\r\n            silent = true\r\n})\r\n```\r\n\r\nIf this is already supported, I'm sorry, but I couldn't find it in the docs.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "As you noticed, there is no \"silent\" option for autocommands in Vim, period -- the `silent!` is part of the command. If you want to do the same with a callback, wrap it in a `function()` that suppresses output.\r\n\r\n(To be clear, this may be a valid feature request, but it's a much bigger request than you possibly intended...)",
            "created_at": "2022-03-18T09:09:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1072216164",
            "id": 1072216164,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM4_6Lhk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072216164/reactions"
            },
            "updated_at": "2022-03-18T09:16:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072216164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@clason I understand. Is there a way to call `silent!` through the lua api?",
            "created_at": "2022-03-18T09:21:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1072224909",
            "id": 1072224909,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM4_6NqN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072224909/reactions"
            },
            "updated_at": "2022-03-18T09:21:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072224909",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1080789?v=4",
                "events_url": "https://api.github.com/users/augustocdias/events{/privacy}",
                "followers_url": "https://api.github.com/users/augustocdias/followers",
                "following_url": "https://api.github.com/users/augustocdias/following{/other_user}",
                "gists_url": "https://api.github.com/users/augustocdias/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/augustocdias",
                "id": 1080789,
                "login": "augustocdias",
                "node_id": "MDQ6VXNlcjEwODA3ODk=",
                "organizations_url": "https://api.github.com/users/augustocdias/orgs",
                "received_events_url": "https://api.github.com/users/augustocdias/received_events",
                "repos_url": "https://api.github.com/users/augustocdias/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/augustocdias/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/augustocdias/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/augustocdias",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`vim.cmd(\"silent! ...\")`",
            "created_at": "2022-03-18T09:25:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1072228004",
            "id": 1072228004,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM4_6Oak",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072228004/reactions"
            },
            "updated_at": "2022-03-18T09:25:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072228004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> To be clear, this may be a valid feature request, but it's a much bigger request than you possibly intended...\r\n\r\nMappings and commands can be silented, silenting autocommands doesn't sound too far fetched . It's indeed asking for introducing a new option in autocommands but should be quite easy to add. IIRC silent state is managed entirely by a global flag .\r\n\r\nEdit: Now thinking about it lua function commads \r\ncreated by `nvim_add_user_command` probably can't be silented either .",
            "created_at": "2022-03-18T12:24:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1072361756",
            "id": 1072361756,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM4_6vEc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072361756/reactions"
            },
            "updated_at": "2022-03-18T13:21:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072361756",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Luckily, the API contract allows extending the opts dictionary :)\r\n\r\n(I would propose adding this only to the API and not touching the Vimscript commands.)",
            "created_at": "2022-03-18T12:36:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1072370071",
            "id": 1072370071,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM4_6xGX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072370071/reactions"
            },
            "updated_at": "2022-03-18T12:36:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072370071",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, I was wanting to do the same thing. I've started to convert my `autocmds` to the new syntax starting with `highlight_yank`.\r\n\r\nFor example, here is the old code that I had that did the `highlight_yank`…\r\n\r\n```vim\r\nvim.cmd([[\r\n  augroup highlight_yank\r\n    autocmd!\r\n    autocmd TextYankPost * silent! lua vim.highlight.on_yank{higroup=\"IncSearch\", timeout=700}\r\n  augroup END\r\n]])\r\n```\r\n\r\nAnd here is the new code I'm trying to switch to, but I'm unsure how to keep it silent. As mentioned before, it would be nice if there was a silent option.\r\n\r\n```lua\r\nlocal group = vim.api.nvim_create_augroup(\"highlight_yank\", { clear = true })\r\nvim.api.nvim_create_autocmd(\"TextYankPost\", { callback = function()\r\n  vim.highlight.on_yank({ higroup = \"IncSearch\", timeout = 700 })\r\nend, group = group })\r\n```",
            "created_at": "2022-03-18T17:48:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1072650270",
            "id": 1072650270,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM4_71ge",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072650270/reactions"
            },
            "updated_at": "2023-03-06T09:07:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1072650270",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86454?v=4",
                "events_url": "https://api.github.com/users/elijahmanor/events{/privacy}",
                "followers_url": "https://api.github.com/users/elijahmanor/followers",
                "following_url": "https://api.github.com/users/elijahmanor/following{/other_user}",
                "gists_url": "https://api.github.com/users/elijahmanor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elijahmanor",
                "id": 86454,
                "login": "elijahmanor",
                "node_id": "MDQ6VXNlcjg2NDU0",
                "organizations_url": "https://api.github.com/users/elijahmanor/orgs",
                "received_events_url": "https://api.github.com/users/elijahmanor/received_events",
                "repos_url": "https://api.github.com/users/elijahmanor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elijahmanor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elijahmanor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elijahmanor",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What about the lua way is not silent at the moment? Can you show what the behavior is that is happening currently?",
            "created_at": "2022-03-25T15:06:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1079120326",
            "id": 1079120326,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5AUhHG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1079120326/reactions"
            },
            "updated_at": "2022-03-25T15:06:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1079120326",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I believe if the callback poduces an error, that should be suppressed (just like any command that is run with `silent!`)",
            "created_at": "2022-03-25T15:08:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1079122409",
            "id": 1079122409,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5AUhnp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1079122409/reactions"
            },
            "updated_at": "2022-03-25T15:08:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1079122409",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is `pcall` a good enough solution?",
            "created_at": "2022-03-31T04:08:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1084051848",
            "id": 1084051848,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5AnVGI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1084051848/reactions"
            },
            "updated_at": "2022-03-31T04:08:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1084051848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@tjdevries oh, in my cause \"3 lines yanked\" was being output regardless (in either version... with `autocmd` or `nvim_create_autocmd`). I just assumed it was being silenced. I just switched back to confirm.",
            "created_at": "2022-03-31T04:14:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1084055111",
            "id": 1084055111,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5AnV5H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1084055111/reactions"
            },
            "updated_at": "2022-03-31T04:14:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1084055111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86454?v=4",
                "events_url": "https://api.github.com/users/elijahmanor/events{/privacy}",
                "followers_url": "https://api.github.com/users/elijahmanor/followers",
                "following_url": "https://api.github.com/users/elijahmanor/following{/other_user}",
                "gists_url": "https://api.github.com/users/elijahmanor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elijahmanor",
                "id": 86454,
                "login": "elijahmanor",
                "node_id": "MDQ6VXNlcjg2NDU0",
                "organizations_url": "https://api.github.com/users/elijahmanor/orgs",
                "received_events_url": "https://api.github.com/users/elijahmanor/received_events",
                "repos_url": "https://api.github.com/users/elijahmanor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elijahmanor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elijahmanor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elijahmanor",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "_That_ you need to disable via a `shortmess` setting.",
            "created_at": "2022-03-31T07:20:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1084191500",
            "id": 1084191500,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5An3MM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1084191500/reactions"
            },
            "updated_at": "2022-03-31T07:45:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1084191500",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, that's controlled by `'report'` option.",
            "created_at": "2022-03-31T07:37:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1084207623",
            "id": 1084207623,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5An7IH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1084207623/reactions"
            },
            "updated_at": "2022-03-31T07:37:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1084207623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Should be able to use the same approach as `execute()` , while executing the callback. https://github.com/neovim/neovim/blob/f876a0eeb5af6f41acb187eb9442062c3984b26d/src/nvim/eval/funcs.c#L2031\r\n\r\n",
            "created_at": "2022-04-26T03:36:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1109279277",
            "id": 1109279277,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5CHkIt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1109279277/reactions"
            },
            "updated_at": "2022-04-26T03:36:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1109279277",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This function works to swallow the output in my case:\r\n\r\n```lua\r\nfunction swallow_output(callback, ...) \r\n  local old_print = print\r\n  print = function(...) end\r\n\r\n  pcall(callback, arg)\r\n\r\n  print = old_print\r\nend\r\n```\r\n\r\nExample usage\r\n```lua\r\nfunction organize_imports(bufnr)\r\n  if not bufnr then bufnr = vim.api.nvim_get_current_buf() end\r\n\r\n  swallow_output(function()\r\n      vim.lsp.buf_request_sync(\r\n      bufnr,\r\n      \"workspace/executeCommand\",\r\n      {\r\n        command = \"edit.organizeImports\",\r\n        arguments = {{ path = vim.fn.expand(\"%:p\") }},\r\n      },\r\n      2000 -- ms timeout\r\n    )\r\n  end)\r\n  print = old_print\r\nend\r\n```",
            "created_at": "2023-03-06T08:12:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1455673649",
            "id": 1455673649,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5Ww9Ex",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1455673649/reactions"
            },
            "updated_at": "2024-09-09T08:34:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1455673649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3683599?v=4",
                "events_url": "https://api.github.com/users/rorystephenson/events{/privacy}",
                "followers_url": "https://api.github.com/users/rorystephenson/followers",
                "following_url": "https://api.github.com/users/rorystephenson/following{/other_user}",
                "gists_url": "https://api.github.com/users/rorystephenson/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rorystephenson",
                "id": 3683599,
                "login": "rorystephenson",
                "node_id": "MDQ6VXNlcjM2ODM1OTk=",
                "organizations_url": "https://api.github.com/users/rorystephenson/orgs",
                "received_events_url": "https://api.github.com/users/rorystephenson/received_events",
                "repos_url": "https://api.github.com/users/rorystephenson/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rorystephenson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rorystephenson/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rorystephenson",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "`gopls` also has a similar problem after this modification(https://github.com/golang/tools/pull/418), and will prompt `No code actions available`. minimum configuration:\r\n\r\n``` lua\r\nif client.server_capabilities.documentHighlightProvider then\r\n    local ext = vim.fn.expand(\"%:e\")\r\n    vim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n\t    pattern = \"*.\" .. ext,\r\n\t    callback = function()\r\n\t\t    vim.lsp.buf.format(nil, 1000)\r\n\t    end\r\n    })\r\n    \r\n    -- https://github.com/golang/tools/blob/master/gopls/doc/vim.md#imports\r\n    if ext == \"go\" then\r\n\t    vim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n\t\t    pattern = \"*.go\",\r\n\t\t    callback = function()\r\n\t\t\t    vim.lsp.buf.code_action({ context = { only = { \"source.organizeImports\" } }, apply = true })\r\n\t\t    end\r\n\t    })\r\n    end\r\nend\r\n\r\n```",
            "created_at": "2023-03-13T05:34:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1465542227",
            "id": 1465542227,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5XWmZT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1465542227/reactions"
            },
            "updated_at": "2023-09-12T10:04:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1465542227",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15027259?v=4",
                "events_url": "https://api.github.com/users/champly/events{/privacy}",
                "followers_url": "https://api.github.com/users/champly/followers",
                "following_url": "https://api.github.com/users/champly/following{/other_user}",
                "gists_url": "https://api.github.com/users/champly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/champly",
                "id": 15027259,
                "login": "champly",
                "node_id": "MDQ6VXNlcjE1MDI3MjU5",
                "organizations_url": "https://api.github.com/users/champly/orgs",
                "received_events_url": "https://api.github.com/users/champly/received_events",
                "repos_url": "https://api.github.com/users/champly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/champly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/champly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/champly",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Has anyone been able to silence the `No code actions available` message that @champly mentioned? I tried wrapping it using (something like) @rorystephenson's suggestion, but no joy. (Either `goimports` wasn't called or if it was, then the message is still output.)  ",
            "created_at": "2023-09-03T11:45:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1704257803",
            "id": 1704257803,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5llOkL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704257803/reactions"
            },
            "updated_at": "2023-09-03T14:18:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704257803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@brunsgaard Thanks for weighing in. I'm glad to know that I'm not alone. After talking with someone on the Go slack and looking at [the diff of the issue that champly linked](https://github.com/golang/tools/pull/418/files), I went back to a version of an older recommendation from `gopls`:\r\n\r\n```lua\r\nlocal goimports = function(wait_ms)\r\n    wait_ms = wait_ms or 1000\r\n    local params = vim.lsp.util.make_range_params()\r\n    params.context = { only = { 'source.organizeImports' } }\r\n    local result = vim.lsp.buf_request_sync(0, 'textDocument/codeAction', params, wait_ms)\r\n    for _, res in pairs(result or {}) do\r\n        for _, r in pairs(res.result or {}) do\r\n            if r.edit then\r\n                vim.lsp.util.apply_workspace_edit(r.edit, 'UTF-8')\r\n            else\r\n                vim.lsp.buf.execute_command(r.command)\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nautocmd('BufWritePre', {\r\n    pattern = '*.go',\r\n    callback = function()\r\n        goimports()\r\n        lsp.buf.format()\r\n    end,\r\n    group = telemachus_augroup,\r\n})\r\n```\r\n\r\nThis works, and there's no message about code actions. I'm not sure if there's an advantage to the new suggestion from `gopls`, but for now I'll stick with the old method and stay subscribed to this issue.",
            "created_at": "2023-09-03T16:12:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1704344182",
            "id": 1704344182,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5lljp2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704344182/reactions"
            },
            "updated_at": "2023-09-12T10:05:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704344182",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "you could just ovrwrite `vim.notify` for disable show `no code action`. \r\n\r\n```lua\r\nvim.api.nvim_create_autocmd('BufWritePre', {\r\n  pattern = '*.go',\r\n  callback = function()\r\n    local orignal = vim.notify\r\n    vim.notify = function(msg, level, opts)\r\n      if msg == 'No code actions available' then\r\n        return\r\n      end\r\n      orignal(msg, level, opts)\r\n    end\r\n    vim.lsp.buf.code_action({ context = { only = { 'source.organizeImports' } }, apply = true })\r\n  end,\r\n})\r\n```\r\nsome discuss on #22651",
            "created_at": "2023-09-04T06:37:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1704694075",
            "id": 1704694075,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5lm5E7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704694075/reactions"
            },
            "updated_at": "2023-09-04T06:55:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704694075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> you could just ovrwrite vim.notify for disable show no code action.\r\n\r\nThanks for the suggestion, but that led to other issues for me—maybe because I also call `vim.lsp.buf.format` in the same autocommand? (The other issues for anyone who cares: (1) after the autocommand, the changes were sometimes left unwritten (i.e., I'd have to do `:w` twice to get everything saved), and (2) when reformatting, the LSP sometimes removes the first character of imports (e.g., `import \"fmt\"` became `mport \"fmt\"`). I have no idea where (2) is coming from, but it only began after I messed with `vim.notify`, and it stops if I use the other method.)\r\n\r\nIn any case, for the moment, I'm sticking with the old method as I showed above.",
            "created_at": "2023-09-04T11:59:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1705144470",
            "id": 1705144470,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5lonCW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1705144470/reactions"
            },
            "updated_at": "2023-09-04T11:59:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1705144470",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I suggest you try a min config for these. I can't reproduce. ",
            "created_at": "2023-09-04T12:14:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1705165021",
            "id": 1705165021,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5losDd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1705165021/reactions"
            },
            "updated_at": "2023-09-04T12:14:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1705165021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@glepnir Here's a gist with a minimal init.lua and a minimal file to edit that shows the problem.\r\n\r\nhttps://gist.github.com/telemachus/4d19dfb2cb32633342adeb4e5e61bb7e\r\n\r\n**Edit**: Someone brought up the issue in the Go slack (on the vim channel), so I know I'm not the only person seeing chopped off characters. Here's a quote: \"Has anybody (got) format/imports on save working with the recommended method yet? I can get it sort of working with the below but it has some weirdness (like chopping off random characters).\"\r\n\r\nAlso during the discussion someone mentioned [this issue from another board](https://neovim.discourse.group/t/lsp-formatting-deletes-characters-when-set-expandtab/2465).\r\n\r\nI'll open a separate issue because this is now off topic here.",
            "created_at": "2023-09-04T13:00:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-1705233679",
            "id": 1705233679,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM5lo80P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1705233679/reactions"
            },
            "updated_at": "2023-09-12T12:45:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1705233679",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I found a decent solution for my work, which doesn't require modifying vim.notify or print or silencing potential errors: https://github.com/JohnStarich/dotfiles/commit/0ec1eaa718caa20a1c2e2cee2c9afa1f1b370887\r\n```lua\r\nvim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n    pattern = { \"*.go\" },\r\n    callback = function()\r\n        vim.lsp.buf.format()\r\n\r\n        local params = vim.lsp.util.make_range_params()\r\n        params.context = {only = {\"source.organizeImports\"}}\r\n        vim.lsp.buf_request_all(0, \"textDocument/codeAction\", params, function(responses)\r\n            for client_id, response in pairs(responses) do\r\n                if response.result then\r\n                    for _, result in pairs(response.result) do\r\n                        if result.edit then\r\n                            vim.lsp.util.apply_workspace_edit(result.edit, vim.lsp.get_client_by_id(client_id).offset_encoding)\r\n                        else\r\n                            vim.lsp.buf.execute_command(result.command)\r\n                        end\r\n                    end\r\n                    -- This routine is async, which I like because it doesn't lock up.\r\n                    -- However, it doesn't complete before the write, so it needs another write.\r\n                    -- The below write() *can* trigger an infinite loop of BufWritePre if the language server acts up.\r\n                    -- See the nvim-lspconfig issue for alternatives: https://github.com/neovim/nvim-lspconfig/issues/115\r\n                    vim.cmd.write()\r\n                end\r\n            end\r\n        end)\r\n    end,\r\n})\r\n```\r\nI took some inspiration from the discussion in nvim-lspconfig: https://github.com/neovim/nvim-lspconfig/issues/115\r\n\r\n(Commented here since https://github.com/neovim/neovim/pull/22651 is closed)",
            "created_at": "2024-09-09T04:50:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-2337109283",
            "id": 2337109283,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM6LTXUj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337109283/reactions"
            },
            "updated_at": "2024-09-09T04:50:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337109283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009441?v=4",
                "events_url": "https://api.github.com/users/JohnStarich/events{/privacy}",
                "followers_url": "https://api.github.com/users/JohnStarich/followers",
                "following_url": "https://api.github.com/users/JohnStarich/following{/other_user}",
                "gists_url": "https://api.github.com/users/JohnStarich/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JohnStarich",
                "id": 1009441,
                "login": "JohnStarich",
                "node_id": "MDQ6VXNlcjEwMDk0NDE=",
                "organizations_url": "https://api.github.com/users/JohnStarich/orgs",
                "received_events_url": "https://api.github.com/users/JohnStarich/received_events",
                "repos_url": "https://api.github.com/users/JohnStarich/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JohnStarich/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JohnStarich/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JohnStarich",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Use case motivation here https://github.com/stevearc/conform.nvim/issues/586 for chaining different commands.\n\nUnderlying problem with approach by @JohnStarich https://github.com/neovim/neovim/issues/17758#issuecomment-2337109283:\n\n1. before fmt\n```zig\npub fn some_fn(unused1: u8) {\n}\n```\n2. after fmt\n```zig\npub fn some_fn(unused1: u8) {}\n```\n3. after lsp source.fixAll (here only 1 entry for simplicity)\n```zig\npub fn some_fn(unused1: u8) {}\n_ = unused1; // autofix\n```\n\n@JohnStarich I was playing with buf_request_sync. Where can I find reasonable examples how to correctly apply for example all source.fixAll fixes? \n`vim.lsp.buf.code_action` only has `apply` which only works for 1 change at a time, but it would be nice to do the changes myself, if the lsp offers suggestions for non-overlapping text ranges.\n\nBtw, the `vim.notify` overwrite just works, so no need to go fancy.",
            "created_at": "2024-11-25T23:19:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-2499231922",
            "id": 2499231922,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM6U90Cy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2499231922/reactions"
            },
            "updated_at": "2024-11-25T23:22:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2499231922",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13089667?v=4",
                "events_url": "https://api.github.com/users/matu3ba/events{/privacy}",
                "followers_url": "https://api.github.com/users/matu3ba/followers",
                "following_url": "https://api.github.com/users/matu3ba/following{/other_user}",
                "gists_url": "https://api.github.com/users/matu3ba/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matu3ba",
                "id": 13089667,
                "login": "matu3ba",
                "node_id": "MDQ6VXNlcjEzMDg5NjY3",
                "organizations_url": "https://api.github.com/users/matu3ba/orgs",
                "received_events_url": "https://api.github.com/users/matu3ba/received_events",
                "repos_url": "https://api.github.com/users/matu3ba/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matu3ba/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matu3ba/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matu3ba",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "My solution for chained events (here with conform.lua):\n```lua\nlocal user_fmts_by_ft = {\n  markdown = function() end, -- stub\n  supermd = function() end, -- stub\n  zig = function(args)\n    local original = vim.notify\n    ---@diagnostic disable-next-line: duplicate-set-field\n    vim.notify = function(msg, level, opts)\n      if msg == 'No code actions available' then return end\n      original(msg, level, opts)\n    end\n    vim.lsp.buf.code_action {\n      ---@diagnostic disable-next-line: missing-fields\n      context = { only = { 'source.fixAll' } },\n      apply = true,\n    }\n    conform.format { bufnr = args.buf, formatters = fmts_by_ft['zig'] }\n  end,\n  zon = function(args) conform.format { bufnr = args.buf, formatters = fmts_by_ft['zig'] } end,\n}\n\nvim.api.nvim_create_autocmd('BufWritePre', {\n  group = aucmds_conform_fmt,\n  pattern = '*',\n  callback = function(args)\n    local ft = vim.bo[args.buf].filetype\n    if user_fmts_by_ft[ft] ~= nil then\n      user_fmts_by_ft[ft](args)\n    else\n      if fmts_by_ft[ft] == nil then\n        conform.format { bufnr = args.buf, formatters = { 'trim_whitespace' } }\n      else\n        conform.format { bufnr = args.buf, formatters = fmts_by_ft[ft] }\n      end\n    end\n  end,\n})\n```\nI'd appreciate the silent mode to just work.",
            "created_at": "2024-11-25T23:21:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/17758#issuecomment-2499233765",
            "id": 2499233765,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17758",
            "node_id": "IC_kwDOAPphoM6U90fl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2499233765/reactions"
            },
            "updated_at": "2024-11-25T23:21:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2499233765",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13089667?v=4",
                "events_url": "https://api.github.com/users/matu3ba/events{/privacy}",
                "followers_url": "https://api.github.com/users/matu3ba/followers",
                "following_url": "https://api.github.com/users/matu3ba/following{/other_user}",
                "gists_url": "https://api.github.com/users/matu3ba/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matu3ba",
                "id": 13089667,
                "login": "matu3ba",
                "node_id": "MDQ6VXNlcjEzMDg5NjY3",
                "organizations_url": "https://api.github.com/users/matu3ba/orgs",
                "received_events_url": "https://api.github.com/users/matu3ba/received_events",
                "repos_url": "https://api.github.com/users/matu3ba/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matu3ba/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matu3ba/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matu3ba",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 24,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17758/comments",
    "created_at": "2022-03-18T09:00:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/17758/events",
    "html_url": "https://github.com/neovim/neovim/issues/17758",
    "id": 1173353550,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is not fixed but can be circumvented until then",
            "id": 435850181,
            "name": "has:workaround",
            "node_id": "MDU6TGFiZWw0MzU4NTAxODE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:workaround"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/17758/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5F7_RO",
    "number": 17758,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 8,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 8,
        "url": "https://api.github.com/repos/neovim/neovim/issues/17758/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/17758/timeline",
    "title": "nvim_create_autocmd: silent! Lua callback (silence errors)",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:57:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/17758",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1080789?v=4",
        "events_url": "https://api.github.com/users/augustocdias/events{/privacy}",
        "followers_url": "https://api.github.com/users/augustocdias/followers",
        "following_url": "https://api.github.com/users/augustocdias/following{/other_user}",
        "gists_url": "https://api.github.com/users/augustocdias/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/augustocdias",
        "id": 1080789,
        "login": "augustocdias",
        "node_id": "MDQ6VXNlcjEwODA3ODk=",
        "organizations_url": "https://api.github.com/users/augustocdias/orgs",
        "received_events_url": "https://api.github.com/users/augustocdias/received_events",
        "repos_url": "https://api.github.com/users/augustocdias/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/augustocdias/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/augustocdias/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/augustocdias",
        "user_view_type": "public"
    }
}