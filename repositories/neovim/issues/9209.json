{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I think a pretty nice feature of the terminal mode (`:terminal`) would be the possibility to jump between prompts, when being in normal mode in the terminal buffer.\r\n\r\nE.g. my window looks like so:\r\n```\r\n+-------------------------------------------------------------------------+\r\n|$ ls                                                                     |\r\n|decode.c  encode.c  executor.c  gc.c  typval.c           typval_encode.h |\r\n|decode.h  encode.h  executor.h  gc.h  typval_encode.c.h  typval.h        |\r\n|$ █                                                                      |\r\n|                                                                         |\r\n|--TERMINAL--                                                             |\r\n+-------------------------------------------------------------------------+\r\n```\r\nand I am in normal mode and type e.g. `:PrevPrompt` and get:\r\n```\r\n+-------------------------------------------------------------------------+\r\n|$ █s                                                                     |\r\n|decode.c  encode.c  executor.c  gc.c  typval.c           typval_encode.h |\r\n|decode.h  encode.h  executor.h  gc.h  typval_encode.c.h  typval.h        |\r\n|$                                                                        |\r\n|                                                                         |\r\n|--TERMINAL--                                                             |\r\n+-------------------------------------------------------------------------+\r\n```\r\nThen I type e.g. `:NextPrompt` and would be at first position again:\r\n```\r\n+-------------------------------------------------------------------------+\r\n|$ ls                                                                     |\r\n|decode.c  encode.c  executor.c  gc.c  typval.c           typval_encode.h |\r\n|decode.h  encode.h  executor.h  gc.h  typval_encode.c.h  typval.h        |\r\n|$ █                                                                      |\r\n|                                                                         |\r\n|--TERMINAL--                                                             |\r\n+-------------------------------------------------------------------------+\r\n```\r\n\r\nOf course some can search `$` and jump between prompts but not in a clean way since the output of terminal commands could contain the prompt string (or parts of it).",
    "closed_at": "2025-03-07T14:58:36Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Could be a reasonable default behavior of `[[` and `]]` in `buftype=terminal` buffers.  Can be implemented as a plugin.\r\n\r\nVery low-priority unless someone sends a PR.",
            "created_at": "2018-11-06T16:26:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-436315629",
            "id": 436315629,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjMxNTYyOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436315629/reactions"
            },
            "updated_at": "2018-11-06T16:28:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436315629",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm curious, why do you want such a feature?",
            "created_at": "2018-11-06T17:29:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-436338221",
            "id": 436338221,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjMzODIyMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436338221/reactions"
            },
            "updated_at": "2018-11-06T17:29:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436338221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I'm curious, why do you want such a feature?\r\n\r\nAll use cases where you want the output of the last command invocation or the output of an arbitrary command invocation. To search for a specific phrase maybe (that should be in the new dmesg but not in the old). Or you want a fast way to get all your shell commands etc.",
            "created_at": "2018-11-07T16:58:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-436696904",
            "id": 436696904,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjY5NjkwNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436696904/reactions"
            },
            "updated_at": "2018-11-07T16:58:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436696904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32870336?v=4",
                "events_url": "https://api.github.com/users/gerion0/events{/privacy}",
                "followers_url": "https://api.github.com/users/gerion0/followers",
                "following_url": "https://api.github.com/users/gerion0/following{/other_user}",
                "gists_url": "https://api.github.com/users/gerion0/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gerion0",
                "id": 32870336,
                "login": "gerion0",
                "node_id": "MDQ6VXNlcjMyODcwMzM2",
                "organizations_url": "https://api.github.com/users/gerion0/orgs",
                "received_events_url": "https://api.github.com/users/gerion0/received_events",
                "repos_url": "https://api.github.com/users/gerion0/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gerion0/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gerion0/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gerion0",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@gerion0 Do you know of a reliable way for a plugin to know what the user's prompt actually looks like? I am guessing this will involve `$PS1`.",
            "created_at": "2018-11-07T17:26:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-436706916",
            "id": 436706916,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjcwNjkxNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436706916/reactions"
            },
            "updated_at": "2018-11-07T17:26:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436706916",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@gerion0 :+1: I've been thinking about something like that too some time ago (but not specifically inside neovim)\r\n\r\n@justinmk good luck with that, `$PS1`s can be very complex, and change dynamically.. It'll never work with my prompt ^^\r\nAlso, this would depend based on the used shell (sh/fish/zsh/..)\r\n\r\nI think this could be implemented as a shell plugin (one for each shell), that would tell the terminal (in this case, the vterm inside neovim) `something` everytime the shell accepts a line (execute a command), then neovim could use this `something` to store the position of the cursor, and offer a way to navigate through those positions..\r\nSo a `something`-protocol could be designed, and then implemented by neovim to be able to navigate between prompts.\r\n\r\n(just some thoughts :smiley:  )",
            "created_at": "2018-11-07T18:09:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-436721707",
            "id": 436721707,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjcyMTcwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436721707/reactions"
            },
            "updated_at": "2018-11-07T18:09:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436721707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Unfortunately not. I guess, `$PS1` will not work. E.g. my `$PS1` contains a full Python script, color codes and is very specific to zsh.\r\n\r\nI hoped that libvterm provides a way to get the positions, but I don't know if (other) terminals can recognize the prompt.\r\n\r\nHowever, traditional terminal emulators can show the current running program. Maybe something like this would be a valid way:\r\n```\r\nif current_running_program == '$SHELL':\r\n    prompt = current_line_of_cursor()\r\n```\r\nand a list to store all prompts.",
            "created_at": "2018-11-07T18:10:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-436721875",
            "id": 436721875,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjcyMTg3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436721875/reactions"
            },
            "updated_at": "2018-11-07T18:10:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/436721875",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32870336?v=4",
                "events_url": "https://api.github.com/users/gerion0/events{/privacy}",
                "followers_url": "https://api.github.com/users/gerion0/followers",
                "following_url": "https://api.github.com/users/gerion0/following{/other_user}",
                "gists_url": "https://api.github.com/users/gerion0/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gerion0",
                "id": 32870336,
                "login": "gerion0",
                "node_id": "MDQ6VXNlcjMyODcwMzM2",
                "organizations_url": "https://api.github.com/users/gerion0/orgs",
                "received_events_url": "https://api.github.com/users/gerion0/received_events",
                "repos_url": "https://api.github.com/users/gerion0/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gerion0/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gerion0/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gerion0",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Some of this was already discussed in #8805.\r\n\r\n@gerion0 I would suggest testing out emacs' terminal mode to see how it works with your prompt, since it is [supposed](https://github.com/neovim/neovim/issues/8805#issuecomment-410110967) to handle navigating between shell prompts.",
            "created_at": "2018-11-08T13:56:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-437001789",
            "id": 437001789,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzAwMTc4OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/437001789/reactions"
            },
            "updated_at": "2018-11-08T13:56:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/437001789",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hi, if you're using zsh I implemented something that does exactly this! You can find it [here](https://github.com/glacambre/shelley).\r\n\r\nIt suffers from a bug where your prompt history will be messed up once neovim start dropping lines from your terminal buffer (be sure to `:set scrollback=-1` in order to make it take as long as possible before the bug kicks in) but otherwise I've been using it for more than a year and it's been working fine.\r\nI have no idea how to write plugins and nobody used it besides me so feel free to open issues in my repo if you encounter problems :).",
            "created_at": "2018-11-11T06:09:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-437646381",
            "id": 437646381,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzY0NjM4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/437646381/reactions"
            },
            "updated_at": "2018-11-11T06:12:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/437646381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It would potentially be possible to integrate with `$PROMPT_COMMAND`, which runs on every prompt - if there was a hook in there that set a mark somehow we could tell where the prompts were even if $PS1 was dynamic.",
            "created_at": "2019-09-05T14:52:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-528409167",
            "id": 528409167,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyODQwOTE2Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/528409167/reactions"
            },
            "updated_at": "2019-09-05T14:52:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/528409167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/225017?v=4",
                "events_url": "https://api.github.com/users/jneen/events{/privacy}",
                "followers_url": "https://api.github.com/users/jneen/followers",
                "following_url": "https://api.github.com/users/jneen/following{/other_user}",
                "gists_url": "https://api.github.com/users/jneen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jneen",
                "id": 225017,
                "login": "jneen",
                "node_id": "MDQ6VXNlcjIyNTAxNw==",
                "organizations_url": "https://api.github.com/users/jneen/orgs",
                "received_events_url": "https://api.github.com/users/jneen/received_events",
                "repos_url": "https://api.github.com/users/jneen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jneen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jneen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jneen",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@jneen Indeed, that should be trivial once we have `$NVIM` available in `:terminal`. I'm going to work on that today. https://github.com/neovim/neovim/pull/11009",
            "created_at": "2019-09-05T15:05:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-528414972",
            "id": 528414972,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyODQxNDk3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/528414972/reactions"
            },
            "updated_at": "2019-09-13T06:28:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/528414972",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just to link it here: Kitty has gained a [really similar feature](https://sw.kovidgoyal.net/kitty/shell-integration/) since quite some time. Kitty recognizes shell prompts with that automagically and allows for example:\r\n- jumping between prompts\r\n- open the last command's output in less\r\n- move the shell cursor with the mouse\r\n\r\nMaybe neovim can use the [same scripts](https://github.com/kovidgoyal/kitty/tree/master/shell-integration) to provide similar features or take them as reference.",
            "created_at": "2023-04-19T13:46:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-1514766699",
            "id": 1514766699,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "IC_kwDOAPphoM5aSYFr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1514766699/reactions"
            },
            "updated_at": "2023-04-19T13:46:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1514766699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32870336?v=4",
                "events_url": "https://api.github.com/users/gerion0/events{/privacy}",
                "followers_url": "https://api.github.com/users/gerion0/followers",
                "following_url": "https://api.github.com/users/gerion0/following{/other_user}",
                "gists_url": "https://api.github.com/users/gerion0/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gerion0",
                "id": 32870336,
                "login": "gerion0",
                "node_id": "MDQ6VXNlcjMyODcwMzM2",
                "organizations_url": "https://api.github.com/users/gerion0/orgs",
                "received_events_url": "https://api.github.com/users/gerion0/received_events",
                "repos_url": "https://api.github.com/users/gerion0/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gerion0/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gerion0/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gerion0",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Note that it's not just a script, the terminal must support the [semantic prompt escapes sequences (OSC 133)](https://gitlab.freedesktop.org/Per_Bothner/specifications/blob/master/proposals/semantic-prompts.md)\r\n\r\nThe script in question is simply setting up the shell to send these sequences to the terminal before/after each prompt to mark various zones of the terminal session (prompt, input, output)",
            "created_at": "2023-04-19T17:34:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-1515115931",
            "id": 1515115931,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "IC_kwDOAPphoM5aTtWb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1515115931/reactions"
            },
            "updated_at": "2024-02-19T23:26:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1515115931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related: https://github.com/neovim/neovim/pull/22159 (support for allowing plugins to create terminal OSC handlers).",
            "created_at": "2023-04-19T18:42:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-1515201198",
            "id": 1515201198,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "IC_kwDOAPphoM5aUCKu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1515201198/reactions"
            },
            "updated_at": "2023-04-19T18:42:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1515201198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@glacambre could you expand on how one might use https://github.com/neovim/neovim/pull/22159 to solve this issue? I'm not sure how one would check if a terminal supports OSC 133 but I did try the latest Alacritty and Wezterm and hoped/expected TermRequest / TermResponse to fire while making new prompt lines but that didn't happen. I don't know much about terminal handling / OSC standards so please forgive the question if it's simple.",
            "created_at": "2024-02-19T23:02:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-1953254968",
            "id": 1953254968,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "IC_kwDOAPphoM50bE44",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1953254968/reactions"
            },
            "updated_at": "2024-02-19T23:02:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1953254968",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I noticed that VS Code has this functionality when using the integrated shell. It uses [OSC commands to detect the prompt in the scrollback](https://code.visualstudio.com/docs/terminal/shell-integration#_vs-code-custom-sequences-osc-633-st). I would like to get the terminal in Neovim to work with this behavior in VS Code. Anyone knows how I can send these OSC commands from Neovim?",
            "created_at": "2024-02-20T13:19:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-1954202486",
            "id": 1954202486,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "IC_kwDOAPphoM50esN2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1954202486/reactions"
            },
            "updated_at": "2024-02-20T13:19:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1954202486",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/946327?v=4",
                "events_url": "https://api.github.com/users/JohnEricson/events{/privacy}",
                "followers_url": "https://api.github.com/users/JohnEricson/followers",
                "following_url": "https://api.github.com/users/JohnEricson/following{/other_user}",
                "gists_url": "https://api.github.com/users/JohnEricson/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JohnEricson",
                "id": 946327,
                "login": "JohnEricson",
                "node_id": "MDQ6VXNlcjk0NjMyNw==",
                "organizations_url": "https://api.github.com/users/JohnEricson/orgs",
                "received_events_url": "https://api.github.com/users/JohnEricson/received_events",
                "repos_url": "https://api.github.com/users/JohnEricson/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JohnEricson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JohnEricson/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JohnEricson",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ColinKennedy @JohnEricson Here's a proof of concept:\r\n```vim\r\nfunction! OnTermRequest()\r\n  let kind = v:termrequest[6]\r\n  \" 'B' marks the end of a prompt, that's what we want to know about\r\n  if kind != 'B'\r\n    return\r\n  endif\r\n  if !exists(\"b:prompts\")\r\n    let b:prompts = []\r\n  endif\r\n  \" We now need to find the position of the prompt in the buffer. We do this\r\n  \" by finding the last line of the buffer that isn't empty. The reason we\r\n  \" have to do this instead of just using nvim_buf_line_count() is that when\r\n  \" the height of a terminal buffer is smaller that the height of a window,\r\n  \" the terminal buffer gets filled with empty lines until it matches the\r\n  \" height of the window.\r\n  let lines = nvim_buf_get_lines(0, 0, -1, 0)\r\n  let last_non_empty_line = 0\r\n  for linenr in reverse(range(0, len(lines) - 1))\r\n    if lines[linenr] != \"\"\r\n      let last_non_empty_line = linenr\r\n      break\r\n    endif\r\n  endfor\r\n  call add(b:prompts, last_non_empty_line)\r\nendfunction\r\nau! TermRequest * call OnTermRequest()\r\nfunction! JumpToPrompt(n)\r\n  let l = len(b:prompts)\r\n  call cursor(b:prompts[(l + a:n) % l] + 1, 1)\r\nendfunction\r\n```\r\nIt's not proper OSC 133 support - it's lacking support for multiple OSC commands, will break with fancy prompts and very fast input. But `call JumpToPrompt(n)` should take you to the right prompt assuming you set your PS1 to something simple like `PS1=$'%{\\e]133;P;k=i\\a%}'>$'%{\\e]133;B\\a%}'` (zsh) or `PS1='\\[\\e]133;P;k=i\\a\\]'>'\\[\\e]133;B\\a\\]'` (bash) and do not have a PS2.\r\n\r\nIt can be made more robust with some effort but cannot be made rock-solid with the current implementation of TermRequest autocommands in Neovim - these autocommands are currently executed asynchronously, meaning that the contents of the buffer might have changed between the moment the TermRequest was emitted by the shell and the moment the autocommand actually gets executed.",
            "created_at": "2024-02-21T07:06:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-1956018035",
            "id": 1956018035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "IC_kwDOAPphoM50lndz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1956018035/reactions"
            },
            "updated_at": "2024-02-21T07:07:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1956018035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/32736",
            "created_at": "2025-03-07T14:58:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-2706664232",
            "id": 2706664232,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "IC_kwDOAPphoM6hVGso",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 2,
                "laugh": 1,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706664232/reactions"
            },
            "updated_at": "2025-03-07T14:58:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706664232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> [#32736](https://github.com/neovim/neovim/pull/32736)\n\nI'm so glad this has landed, much appreciated @justinmk. ",
            "created_at": "2025-03-07T15:03:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/9209#issuecomment-2706675830",
            "id": 2706675830,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9209",
            "node_id": "IC_kwDOAPphoM6hVJh2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706675830/reactions"
            },
            "updated_at": "2025-03-07T15:03:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706675830",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1010796?v=4",
                "events_url": "https://api.github.com/users/viniarck/events{/privacy}",
                "followers_url": "https://api.github.com/users/viniarck/followers",
                "following_url": "https://api.github.com/users/viniarck/following{/other_user}",
                "gists_url": "https://api.github.com/users/viniarck/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/viniarck",
                "id": 1010796,
                "login": "viniarck",
                "node_id": "MDQ6VXNlcjEwMTA3OTY=",
                "organizations_url": "https://api.github.com/users/viniarck/orgs",
                "received_events_url": "https://api.github.com/users/viniarck/received_events",
                "repos_url": "https://api.github.com/users/viniarck/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/viniarck/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/viniarck/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/viniarck",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 18,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/9209/comments",
    "created_at": "2018-11-06T15:51:13Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/9209/events",
    "html_url": "https://github.com/neovim/neovim/issues/9209",
    "id": 377909268,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/9209/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 226,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 30,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-03-10T21:49:00Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "MDU6SXNzdWUzNzc5MDkyNjg=",
    "number": 9209,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/9209/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/9209/timeline",
    "title": ":terminal command to jump between prompts",
    "updated_at": "2025-03-07T15:03:41Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/9209",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/32870336?v=4",
        "events_url": "https://api.github.com/users/gerion0/events{/privacy}",
        "followers_url": "https://api.github.com/users/gerion0/followers",
        "following_url": "https://api.github.com/users/gerion0/following{/other_user}",
        "gists_url": "https://api.github.com/users/gerion0/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gerion0",
        "id": 32870336,
        "login": "gerion0",
        "node_id": "MDQ6VXNlcjMyODcwMzM2",
        "organizations_url": "https://api.github.com/users/gerion0/orgs",
        "received_events_url": "https://api.github.com/users/gerion0/received_events",
        "repos_url": "https://api.github.com/users/gerion0/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gerion0/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gerion0/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gerion0",
        "user_view_type": "public"
    }
}