{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI created `~/.config/nvim/queries/typescript/folds.scm` with the following content to override \"folds\" query for TypeScript:\r\n\r\n```\r\n[\r\n  (arrow_function)\r\n  (class_declaration)\r\n  (enum_declaration)\r\n  (function_declaration)\r\n  (function_expression)\r\n  (generator_function)\r\n  (generator_function_declaration)\r\n  (interface_declaration)\r\n  (internal_module)\r\n  (method_definition)\r\n  (type_alias_declaration)\r\n] @fold\r\n```\r\n\r\nI expected to overwrite queries provided by other plugins with my query, but that is s not the case when there is \"inherits:\" modeline present. In `nvim-treesitter` I have installed, `queries/typescript/folds.scm` is defined as follows:\r\n\r\n```\r\n; inherits: ecma\r\n\r\n[\r\n  (interface_declaration)\r\n  (internal_module)\r\n  (type_alias_declaration)\r\n  (enum_declaration)\r\n] @fold\r\n```\r\n\r\nIn this case, my query was being merged with `queries/ecma/folds.scm`. I understood this from the result of `vim.treesitter.query.get_files(\"typescript\", \"folds\")`. The problem with this function is that it does not break loading queries when a non-extension query is found.\r\n\r\nhttps://github.com/neovim/neovim/blob/61aabe0730b547b733faaf74ff181ec8c33f8b92/runtime/lua/vim/treesitter/query.lua#L115-L162\r\n\r\nIs this behavior intended? I believed that if \"extends\" modeline is not specified in the query, subsequent queries will not be loaded.\r\n\r\nfrom `:help treesitter-query`:\r\n\r\n> Nvim looks for queries as `*.scm` files in a `queries` directory under `runtimepath`, where each file contains queries for a specific language and purpose, e.g., `queries/lua/highlights.scm` for highlighting Lua files. By default, the first query on `runtimepath` is used (which usually implies that user config takes precedence over plugins, which take precedence over queries bundled with Nvim). If a query should extend other queries instead of replacing them, use |treesitter-query-modeline-extends|.\r\n\r\nRelated PR: https://github.com/neovim/neovim/pull/20117\n\n### Steps to reproduce\n\n```shell\r\nmkdir -p rp1/queries/typescript rp2/queries/{ecma,typescript}\r\ntouch rp1/queries/typescript/folds.scm\r\ntouch rp2/queries/ecma/folds.scm\r\necho ';inherits: ecma' > rp2/queries/typescript/folds.scm\r\ntree --noreport rp1 rp2\r\nnvim --clean -e -s \\\r\n  --cmd 'set runtimepath+=rp1,rp2' \\\r\n  --cmd 'verbose lua vim.print(vim.treesitter.query.get_files(\"typescript\", \"folds\"))'\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nrp1\r\n└── queries\r\n    └── typescript\r\n        └── folds.scm\r\nrp2\r\n└── queries\r\n    ├── ecma\r\n    │   └── folds.scm\r\n    └── typescript\r\n        └── folds.scm\r\n{ \"rp2/queries/ecma/folds.scm\", \"rp1/queries/typescript/folds.scm\" }\r\n```\n\n### Expected behavior\n\nExpected:\r\n\r\n```\r\nrp1\r\n└── queries\r\n    └── typescript\r\n        └── folds.scm\r\nrp2\r\n└── queries\r\n    ├── ecma\r\n    │   └── folds.scm\r\n    └── typescript\r\n        └── folds.scm\r\n{ \"rp1/queries/typescript/folds.scm\" }\r\n```\n\n### Neovim version (nvim -v)\n\nNVIM v0.11.0-dev-249+g199d852d9\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nGentoo Linux\n\n### Terminal name/version\n\nalacritty 0.13.2\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nbuild from repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29348/comments",
    "created_at": "2024-06-15T05:26:08Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29348/events",
    "html_url": "https://github.com/neovim/neovim/issues/29348",
    "id": 2354560888,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "issue needs attention from an expert, or PR proposes significant changes to architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29348/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6MV794",
    "number": 29348,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29348/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29348/timeline",
    "title": "Treesitter queries specified in the \"inherits:\" modeline are always merged, even if there is an overridden query",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:37:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29348",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/188621?v=4",
        "events_url": "https://api.github.com/users/emonkak/events{/privacy}",
        "followers_url": "https://api.github.com/users/emonkak/followers",
        "following_url": "https://api.github.com/users/emonkak/following{/other_user}",
        "gists_url": "https://api.github.com/users/emonkak/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/emonkak",
        "id": 188621,
        "login": "emonkak",
        "node_id": "MDQ6VXNlcjE4ODYyMQ==",
        "organizations_url": "https://api.github.com/users/emonkak/orgs",
        "received_events_url": "https://api.github.com/users/emonkak/received_events",
        "repos_url": "https://api.github.com/users/emonkak/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/emonkak/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/emonkak/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/emonkak",
        "user_view_type": "public"
    }
}