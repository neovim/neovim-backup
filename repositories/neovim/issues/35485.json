{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nLLM completion often produces garbage suggestion (that is often big as well), however a part of such garbage could still be useful. So currently if I want to only accept a part of LLM suggestion, I have to either\n- Manually type that part\n- Accept the whole suggestion from LLM, then manually delete the parts I don't need\n\nBoth ways are troublesome, especially if the both the part I want and part I don't want are big\n\n### Expected behavior\n\nProbably extend the current `vim.lsp.inline_completion.get()` with an option `text`. `text` would be a function that receives a string as a parameter and returns a string. With it, I can implement [copilot.vim](https://github.com/github/copilot.vim)'s `<Plug>(copilot-accept-word)` and `<Plug>(copilot-accept-line)` something like this\n\n```lua\nvim.keymap.set(\"i\", \"<Plug>(copilot-accept-word)\", function()\n    vim.lsp.inline_completion.get {\n        text = function(s)\n            return vim.fn.matchstr(s, [[\\k\\+]])\n        end\n    }\nend)\nvim.keymap.set(\"i\", \"<Plug>(copilot-accept-line)\", function()\n    vim.lsp.inline_completion.get {\n        text = function(s)\n            return vim.fn.matchstr(s, [[^.*$]])\n        end\n    }\nend)\n```",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> I can implement [copilot.vim](https://github.com/github/copilot.vim)'s `<Plug>(copilot-accept-word)` and `<Plug>(copilot-accept-line)` something like this\n\nDidn't we decide against this in https://github.com/neovim/neovim/issues/35476 and https://github.com/neovim/neovim/pull/33972#issuecomment-3220174190 ?",
            "created_at": "2025-08-26T19:16:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/35485#issuecomment-3225426804",
            "id": 3225426804,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35485",
            "node_id": "IC_kwDOAPphoM7AQBt0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225426804/reactions"
            },
            "updated_at": "2025-08-26T19:17:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225426804",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think it would make sense to copy/move this issue to the [LSP repo](https://github.com/microsoft/language-server-protocol), since this feels like something that we want to formalize in the protocol itself.",
            "created_at": "2025-08-26T23:02:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/35485#issuecomment-3225999822",
            "id": 3225999822,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35485",
            "node_id": "IC_kwDOAPphoM7ASNnO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225999822/reactions"
            },
            "updated_at": "2025-08-26T23:02:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225999822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It might make sense to provide some extensibility outside of LSP, by adding an `on_...` callback to `get(opts)`, similar to `on_list` for `vim.lsp.buf.*` or `on_jump` for `vim.diagnostic.jump()`.",
            "created_at": "2025-08-27T02:25:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/35485#issuecomment-3226528506",
            "id": 3226528506,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35485",
            "node_id": "IC_kwDOAPphoM7AUOr6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3226528506/reactions"
            },
            "updated_at": "2025-08-27T04:26:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3226528506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Related: https://github.com/neovim/neovim/issues/35476#issuecomment-3245265729",
            "created_at": "2025-09-02T13:11:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/35485#issuecomment-3245282140",
            "id": 3245282140,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35485",
            "node_id": "IC_kwDOAPphoM7BbxNc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3245282140/reactions"
            },
            "updated_at": "2025-09-02T13:11:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3245282140",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1270688?v=4",
                "events_url": "https://api.github.com/users/sassanh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sassanh/followers",
                "following_url": "https://api.github.com/users/sassanh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sassanh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sassanh",
                "id": 1270688,
                "login": "sassanh",
                "node_id": "MDQ6VXNlcjEyNzA2ODg=",
                "organizations_url": "https://api.github.com/users/sassanh/orgs",
                "received_events_url": "https://api.github.com/users/sassanh/received_events",
                "repos_url": "https://api.github.com/users/sassanh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sassanh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sassanh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sassanh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ofseed maybe I'm missing something but it isn't immediately clear to me how https://github.com/neovim/neovim/pull/35507 is meant to be used to accept a single word/line of the inline completion. \n\nShouldn't we make [the `accept` handler](https://github.com/ofseed/neovim/blob/e56469087b6436e73bceb8ef3ab11a1825e590d6/runtime/lua/vim/lsp/inline_completion.lua#L288) public so that users can invoke it after changing the item itself?\n\nAlternatively we can make the function return the modified item and then accept that. `copilot.lua` seems to do [something like that](https://github.com/zbirenbaum/copilot.lua/blob/81d289a8ce5d4ee1dea9b1c8ee4ac376b2e27a5f/lua/copilot/suggestion/init.lua#L682-L717). That matches how we use `format` in diagnostic options for changing the diagnostic message and filtering diagnostics.",
            "created_at": "2025-09-06T23:24:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/35485#issuecomment-3263281222",
            "id": 3263281222,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35485",
            "node_id": "IC_kwDOAPphoM7CgbhG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263281222/reactions"
            },
            "updated_at": "2025-09-06T23:24:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263281222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@MariaSolOs I wrote this snippet: https://github.com/neovim/neovim/issues/35476#issuecomment-3245265729\n\nEdit: I just noticed I've already mentioned it above, so I hide it",
            "created_at": "2025-09-06T23:49:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/35485#issuecomment-3263290831",
            "id": 3263290831,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35485",
            "node_id": "IC_kwDOAPphoM7Cgd3P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263290831/reactions"
            },
            "updated_at": "2025-09-07T20:56:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263290831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1270688?v=4",
                "events_url": "https://api.github.com/users/sassanh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sassanh/followers",
                "following_url": "https://api.github.com/users/sassanh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sassanh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sassanh",
                "id": 1270688,
                "login": "sassanh",
                "node_id": "MDQ6VXNlcjEyNzA2ODg=",
                "organizations_url": "https://api.github.com/users/sassanh/orgs",
                "received_events_url": "https://api.github.com/users/sassanh/received_events",
                "repos_url": "https://api.github.com/users/sassanh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sassanh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sassanh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sassanh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @ofseed maybe I'm missing something but it isn't immediately clear to me how https://github.com/neovim/neovim/pull/35507 is meant to be used to accept a single word/line of the inline completion. \n\nAn example was provided by @sassanh, see the comment above.\n\n> Alternatively we can make the function return the modified item and then accept that. `copilot.lua` seems to do [something like that](https://github.com/zbirenbaum/copilot.lua/blob/81d289a8ce5d4ee1dea9b1c8ee4ac376b2e27a5f/lua/copilot/suggestion/init.lua#L682-L717). That matches how we use `format` in diagnostic options for changing the diagnostic message and filtering diagnostics.\n\nI once considered directly returning the modified item instead of leaving the operation fully to the user too, but:  \n1. When the insert text is modified, the corresponding range also needs to be updated, so this may not actually simplify things much.  \n2. The current range interface is still experimental. For example, we previously mentioned the need to flatten it. Therefore, it’s better not to require it as a return type, otherwise silent errors may occur unless we always add logic to indicate that this type has been modified.  \n\n> Shouldn't we make [the `accept` handler](https://github.com/ofseed/neovim/blob/e56469087b6436e73bceb8ef3ab11a1825e590d6/runtime/lua/vim/lsp/inline_completion.lua#L288) public so that users can invoke it after changing the item itself?\n\nPersonally, I support this approach. In fact, I had an even more detailed idea earlier. \n\nPreviously, we exposed the specific behavior of LSP requests to user customization through `vim.lsp.handler`. However, this method is not suitable for features that need to be enabled. As an alternative, we could add another table, for example `vim.lsp.callback` (just a placeholder name), to store the default table—here it would be `vim.lsp.callback.inline_completion.on_accept`.\n\nThis kind of interface design can also address the need for more customization. For instance, there was a previous request for customize inlay hints, such as showing them at the end of a line or truncating overly long hints. We could expose the inlay hint display logic as `vim.lsp.callbacks.inlay_hint.on_decorate`, allowing users to override `on_decorate` to modify the default behavior.",
            "created_at": "2025-09-07T00:09:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/35485#issuecomment-3263300377",
            "id": 3263300377,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35485",
            "node_id": "IC_kwDOAPphoM7CggMZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263300377/reactions"
            },
            "updated_at": "2025-09-07T00:09:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263300377",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> An example was provided by [@sassanh](https://github.com/sassanh), see the comment above.\n\nYeah but that doesn't feel quite ergonomic. It feels clunky to force users to replicate the logic that the default accept handler needs to implement anyway.\n\n> 1. When the insert text is modified, the corresponding range also needs to be updated, so this may not actually simplify things much.\n\nYeah but that's why I link the `copilot.lua` example. It can serve as reference and we can also document it.\n\n> 2. The current range interface is still experimental. For example, we previously mentioned the need to flatten it. Therefore, it’s better not to require it as a return type, otherwise silent errors may occur unless we always add logic to indicate that this type has been modified.\n\nI mean, this entire interface is still experimental. I don't think that we need to be extremely cautious about future API changes while discussing different design alternatives, but perhaps I'm too careless on that regard.\n\n> Personally, I support this approach. In fact, I had an even more detailed idea earlier.\n> \n> Previously, we exposed the specific behavior of LSP requests to user customization through `vim.lsp.handler`. However, this method is not suitable for features that need to be enabled. As an alternative, we could add another table, for example `vim.lsp.callback` (just a placeholder name), to store the default table—here it would be `vim.lsp.callback.inline_completion.on_accept`.\n> \n> This kind of interface design can also address the need for more customization. For instance, there was a previous request for customize inlay hints, such as showing them at the end of a line or truncating overly long hints. We could expose the inlay hint display logic as `vim.lsp.callbacks.inlay_hint.on_decorate`, allowing users to override `on_decorate` to modify the default behavior.\n\nThat sounds reasonable, but I insist that these customization entrypoints should still be ergonomic enough.",
            "created_at": "2025-09-07T00:24:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/35485#issuecomment-3263308834",
            "id": 3263308834,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35485",
            "node_id": "IC_kwDOAPphoM7CgiQi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263308834/reactions"
            },
            "updated_at": "2025-09-07T00:24:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263308834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Okay sorry but I'm going to re-open this issue. Although https://github.com/neovim/neovim/pull/35507 did get us closer to having a solution, I don't think that https://github.com/neovim/neovim/issues/35476#issuecomment-3245265729 is an acceptable way of using `on_accept` to implemented the requested behavior.",
            "created_at": "2025-09-07T20:48:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/35485#issuecomment-3264032533",
            "id": 3264032533,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35485",
            "node_id": "IC_kwDOAPphoM7CjS8V",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3264032533/reactions"
            },
            "updated_at": "2025-09-07T20:48:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3264032533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35485/comments",
    "created_at": "2025-08-26T04:37:59Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35485/events",
    "html_url": "https://github.com/neovim/neovim/issues/35485",
    "id": 3354055393,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "artificial magnificence",
            "id": 9164253471,
            "name": "ai-llm-mcp",
            "node_id": "LA_kwDOAPphoM8AAAACIjtpHw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ai-llm-mcp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35485/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7H6tLh",
    "number": 35485,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 4,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35485/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35485/timeline",
    "title": "inlineCompletion allows users to only apply a part of suggested text",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-07T20:56:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35485",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
        "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
        "followers_url": "https://api.github.com/users/brianhuster/followers",
        "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
        "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/brianhuster",
        "id": 111893501,
        "login": "brianhuster",
        "node_id": "U_kgDOBqtb_Q",
        "organizations_url": "https://api.github.com/users/brianhuster/orgs",
        "received_events_url": "https://api.github.com/users/brianhuster/received_events",
        "repos_url": "https://api.github.com/users/brianhuster/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/brianhuster",
        "user_view_type": "public"
    }
}