{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Neovim version (nvim -v)\r\n\r\nNVIM v0.7.0-dev+1048-gdba1df635\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nNo, Vim doesn't have Lua functions\r\n\r\n### Operating system/version\r\n\r\nUbuntu 20.04\r\n\r\n### Terminal name/version\r\n\r\nkitty 0.23.1\r\n\r\n### $TERM environment variable\r\n\r\nxterm-kitty\r\n\r\n### Installation\r\n\r\nnvim.appimage\r\n\r\n### How to reproduce the issue\r\n\r\n1. `nvim --clean -u NONE`.\r\n2. Type `abc`.\r\n3. `:lua vim.highlight.range(0, 1, 'Comment', {0, 0}, {0, -1})` (whole line should be highlighted as comment)\r\n4. `:lua vim.highlight.range(0, 1, 'Delimiter', {0, 0}, {0, -1})` (whole line should be highlighted as delimiter)\r\n5. `:lua vim.highlight.range(0, 1, 'Comment', {0, 0}, {0, -1})`\r\n\r\n### Expected behavior\r\n\r\nWhole line again should be highlighted as comment.\r\n\r\n### Actual behavior\r\n\r\nHighlighting doesn't change.\r\n\r\nNotes:\r\n- If last highlighting is done with bigger priority ( `:lua vim.highlight.range(0, 1, 'Comment', {0, 0}, {0, -1}, 'v', false, 51)`), everything is as expected.\r\n- Everything works as expected in 0.6.0.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Bisected to <https://github.com/neovim/neovim/commit/95ab979fde66d8f9f97fceb943bfe9422739a0f8>.",
            "created_at": "2022-02-10T11:15:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/17358#issuecomment-1034795461",
            "id": 1034795461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17358",
            "node_id": "IC_kwDOAPphoM49rbnF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1034795461/reactions"
            },
            "updated_at": "2022-02-10T11:15:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1034795461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The default priority is too low [here](https://github.com/neovim/neovim/blob/046950f6309070d98ab5a3deeff9d00e079ccdd4/runtime/lua/vim/highlight.lua#L32) . Treesitter uses 100 for priority. Set the default one to 200 or something",
            "created_at": "2022-02-14T11:35:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/17358#issuecomment-1038980197",
            "id": 1038980197,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17358",
            "node_id": "IC_kwDOAPphoM497ZRl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1038980197/reactions"
            },
            "updated_at": "2022-02-19T02:14:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1038980197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, I don't think that's it; I can reproduce this without any tree-sitter highlighting. The problem is that a second _identical_ highlight is not applied again (and hence doesn't overwrite a _different_ highlight applied in the mean time).",
            "created_at": "2022-02-14T11:42:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/17358#issuecomment-1038986600",
            "id": 1038986600,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17358",
            "node_id": "IC_kwDOAPphoM497a1o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1038986600/reactions"
            },
            "updated_at": "2022-02-14T11:42:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1038986600",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The problem is that a second identical highlight is not applied again (and hence doesn't overwrite a different highlight applied in the mean time)\r\n\r\nYou're right . It should overright older marks with same or lower priority . But the priority level should be increased too  otherwise this is not expected to work at all right as ts has higher priority . \r\n",
            "created_at": "2022-02-14T11:48:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/17358#issuecomment-1038991113",
            "id": 1038991113,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17358",
            "node_id": "IC_kwDOAPphoM497b8J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1038991113/reactions"
            },
            "updated_at": "2022-02-14T11:48:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1038991113",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It should overright older marks with same or lower priority . \r\n\r\nIt already does _except when it's the exactly same as an existing extmark_. This is likely an intentional optimization which `vim.highlight` needs to work around.\r\n\r\n>  But the priority level should be increased too otherwise this is not expected to work at all right as ts has higher priority .\r\n\r\nThat is very much by design. Setting the right priority is the responsibility of whoever calls this function, depending on the exact use case. You will get the described behavior with _any_ priority value (as long as you keep it fixed for all three calls).",
            "created_at": "2022-02-14T11:50:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/17358#issuecomment-1038993160",
            "id": 1038993160,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17358",
            "node_id": "IC_kwDOAPphoM497ccI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1038993160/reactions"
            },
            "updated_at": "2022-02-14T11:56:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1038993160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Reverting change to this [line](https://github.com/neovim/neovim/blob/046950f6309070d98ab5a3deeff9d00e079ccdd4/src/nvim/marktree.c#L116) seems to fix it . Still trying to figure out why . @bfredl any idea ?\r\n```diff\r\n diff --git a/src/nvim/marktree.c b/src/nvim/marktree.c\r\nindex 918db8b76..f8365f7c1 100644\r\n--- a/src/nvim/marktree.c\r\n+++ b/src/nvim/marktree.c\r\n@@ -113,7 +113,7 @@ static int key_cmp(mtkey_t a, mtkey_t b)\r\n   }\r\n   // NB: keeping the events at the same pos sorted by id is actually not\r\n   // necessary only make sure that START is before END etc.\r\n-  return mt_generic_cmp(a.flags, b.flags);\r\n+  return mt_generic_cmp(a.id, b.id);\r\n }\r\n \r\n static inline int marktree_getp_aux(const mtnode_t *x, mtkey_t k, int *r)\r\n```\r\n\r\nEdit:\r\nPossibly better fix\r\n```diff\r\ndiff --git a/src/nvim/marktree.c b/src/nvim/marktree.c\r\nindex 918db8b76..95e15a14a 100644\r\n--- a/src/nvim/marktree.c\r\n+++ b/src/nvim/marktree.c\r\n@@ -125,7 +125,7 @@ static inline int marktree_getp_aux(const mtnode_t *x, mtkey_t k, int *r)\r\n   rr = r? r : &tr;\r\n   while (begin < end) {\r\n     int mid = (begin + end) >> 1;\r\n-    if (key_cmp(x->key[mid], k) < 0) {\r\n+    if (key_cmp(x->key[mid], k) <= 0) {\r\n       begin = mid + 1;\r\n     } else {\r\n       end = mid;\r\n```\r\n\r\nI think it comes down to whether latest mark is placed before or after identical mark so renderer picks up the latest one instead of the older one.",
            "created_at": "2022-02-14T15:04:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/17358#issuecomment-1039193107",
            "id": 1039193107,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17358",
            "node_id": "IC_kwDOAPphoM498NQT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1039193107/reactions"
            },
            "updated_at": "2022-02-14T15:26:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1039193107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The correct fix for this is to add more book-keeping to `vim.highlight.range` to clean up outdated extmarks before applying new ones. There is no guaranteed ordering of extmarks by order of application, and relying on that assumption is wrong.",
            "created_at": "2022-02-17T11:26:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/17358#issuecomment-1042850302",
            "id": 1042850302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17358",
            "node_id": "IC_kwDOAPphoM4-KKH-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1042850302/reactions"
            },
            "updated_at": "2022-02-17T11:26:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1042850302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The correct fix for this is to add more book-keeping to `vim.highlight.range` to clean up outdated extmarks before applying new ones. There is no guaranteed ordering of extmarks by order of application, and relying on that assumption is wrong.\n\nIs this the way to go here?\n\nI could try to implement it but, since there is `opts.priority`, I think should be user responsibility to correctly place the highlight order.",
            "created_at": "2025-01-10T15:02:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/17358#issuecomment-2582907933",
            "id": 2582907933,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17358",
            "node_id": "IC_kwDOAPphoM6Z9Awd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2582907933/reactions"
            },
            "updated_at": "2025-01-10T15:08:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2582907933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17358/comments",
    "created_at": "2022-02-10T10:54:07Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/17358/events",
    "html_url": "https://github.com/neovim/neovim/issues/17358",
    "id": 1129832526,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": "wrong behavior that was introduced in a previous commit (please bisect)",
            "id": 619474658,
            "name": "bug-regression",
            "node_id": "MDU6TGFiZWw2MTk0NzQ2NTg=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-regression"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue has been tracked to a specific commit",
            "id": 1481421490,
            "name": "has:bisected",
            "node_id": "MDU6TGFiZWwxNDgxNDIxNDkw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:bisected"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "marks, extmarks, decorations, virtual text, namespaces",
            "id": 1680119719,
            "name": "marks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/marks"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/17358/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5DV-BO",
    "number": 17358,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/17358/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/17358/timeline",
    "title": "`vim.highlight.range` doesn't result into latest added highlight",
    "updated_at": "2025-01-19T11:51:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/17358",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}