{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nIn HiPhish/rainbow-delimiters.nvim#73 we noticed that `vim.api.nvim_buf_call` errors when returning a table with function values.\r\n\r\nThis showed up while using `nvim_buf_call` to make sure that buffer updates were done in the correct buffer, and it doesn't cause problems when we return e.g. strings or tables with no function values, but when returning a table with function values we get an error. (This code will be changed, but this still seems to be a neovim issue.)\r\n\r\n### Steps to reproduce\r\n\r\n`nvim --clean`\r\n\r\n`:lua vim.api.nvim_buf_call(0, function() return {a = function() return 'x' end} end)`\r\n\r\ngives the error:\r\n\r\n```\r\nE5108: Error executing lua [string \":lua\"]:1: Cannot convert given lua type\r\nstack traceback:\r\n\t[C]: in function 'nvim_buf_call'\r\n\t[string \":lua\"]:1: in main chunk\r\n```\r\n\r\n### Expected behavior\r\n\r\nWe should be able to return a table containing function values, so it should behave more like the following, which doesn't cause an error:\r\n\r\n`nvim --clean`\r\n\r\n`:lua vim.api.nvim_buf_call(0, function() return {a = 'x'} end)`\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-1721+g01b91deec-Homebrew\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nmacOS 14.1.1\r\n\r\n### Terminal name/version\r\n\r\nwezterm 20231030-074559-75909682\r\n\r\n### $TERM environment variable\r\n\r\nwezterm\r\n\r\n### Installation\r\n\r\nhomebrew",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`nvim_buf_call` is within the general Nvim API which adheres to msgpack and thus cannot return function values.\r\n\r\nArguably `nvim_buf_call` and `nvim_win_call` shouldn't really be apart of the API for this reason. See #20669\r\n\r\nAs a workaround you can use a closure:\r\n\r\n```lua\r\nlocal x\r\nvim.api.nvim_buf_call(0, function()\r\n  x = {a = function() return 'x' end}\r\nend)",
            "created_at": "2023-12-12T14:46:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/26531#issuecomment-1852179283",
            "id": 1852179283,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26531",
            "node_id": "IC_kwDOAPphoM5uZgNT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1852179283/reactions"
            },
            "updated_at": "2023-12-12T14:46:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1852179283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> `nvim_buf_call` is within the general Nvim API which adheres to msgpack and thus cannot return function values.\r\n\r\nAh, I was not aware of this limitation. Looking through the documentation I don't see any mention of this either (unless I am maybe misunderstanding the meaning of \"will deepcopy Lua values currently, use upvalues to send Lua references in and out\"? Does this implicitly say that we can't return functions?). \r\n\r\nIf this is a limitation because of msgpack, maybe an update to the docs would be helpful to clarify the use here. But other than that, I guess there isn't too much we can do. \r\n\r\n> Arguably `nvim_buf_call` and `nvim_win_call` shouldn't really be apart of the API for this reason. See #20669\r\n> \r\n> As a workaround you can use a closure:\r\n> \r\n> ```lua\r\n> local x\r\n> vim.api.nvim_buf_call(0, function()\r\n>   x = {a = function() return 'x' end}\r\n> end)\r\n> ```\r\n\r\nIn the actual use case in `rainbow-delimiters`, I think a rewrite from functions without input to functions with input of type `bufnr: integer?` will be easier, but thank you for the workaround. \r\n",
            "created_at": "2023-12-12T15:06:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/26531#issuecomment-1852222448",
            "id": 1852222448,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26531",
            "node_id": "IC_kwDOAPphoM5uZqvw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1852222448/reactions"
            },
            "updated_at": "2023-12-12T15:06:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1852222448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Ah, I was not aware of this limitation. Looking through the documentation I don't see any mention of this either (unless I am maybe misunderstanding the meaning of \"will deepcopy Lua values currently, use upvalues to send Lua references in and out\"? Does this implicitly say that we can't return functions?).\r\n\r\nIt might not be documented but it is sort of implied from `:help api-types` since you cannot transport function values over RPC.\r\n\r\n> If this is a limitation because of msgpack, maybe an update to the docs would be helpful to clarify the use here. But other than that, I guess there isn't too much we can do.\r\n\r\nYes, a fundamental limitation.\r\n\r\nThe API can either be used:\r\n- Directly from Lua natively within Nvim\r\n- Over RPC for remote plugins which can be written in any language. This requires encoding the values into a text format. Such format cannot encode function values.\r\n\r\nNote when used from Lua in Nvim, msgpack isn't actually used, but the underlying framework around the API is built around msgpack compatible types. The only exception is that we allow inputs to be function values in some cases.",
            "created_at": "2023-12-12T15:17:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/26531#issuecomment-1852242170",
            "id": 1852242170,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26531",
            "node_id": "IC_kwDOAPphoM5uZvj6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1852242170/reactions"
            },
            "updated_at": "2023-12-12T15:17:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1852242170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26531/comments",
    "created_at": "2023-12-12T14:26:13Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26531/events",
    "html_url": "https://github.com/neovim/neovim/issues/26531",
    "id": 2037868550,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is not fixed but can be circumvented until then",
            "id": 435850181,
            "name": "has:workaround",
            "node_id": "MDU6TGFiZWw0MzU4NTAxODE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:workaround"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26531/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM55d2gG",
    "number": 26531,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26531/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26531/timeline",
    "title": "`nvim_buf_call` errors when returning a table with function values",
    "updated_at": "2025-01-19T11:32:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26531",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
        "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
        "followers_url": "https://api.github.com/users/Danielkonge/followers",
        "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
        "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Danielkonge",
        "id": 7075380,
        "login": "Danielkonge",
        "node_id": "MDQ6VXNlcjcwNzUzODA=",
        "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
        "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
        "repos_url": "https://api.github.com/users/Danielkonge/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Danielkonge",
        "user_view_type": "public"
    }
}