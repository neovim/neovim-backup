{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Given t-oom.vim:\r\n```vim\r\nfunction! F(...) abort\r\nendfunction\r\n\r\nlet j = jobstart(\r\n      \\ 'rg -H --no-heading --vimgrep --sort-files .', {\r\n      \\ 'on_stdout': function('F'),\r\n      \\ })\r\nechom j\r\nechom string(jobwait([j]))\r\n```\r\n\r\nRun it using `nvim -u t-oom.vim` in Neovim's source directory.\r\n\r\nAfter ~15s it gets killed by the OOM killer for me.\r\n\r\n> Out of memory: Killed process 2782 (nvim) total-vm:16207288kB, anon-rss:13903108kB, file-rss:2544kB, shmem-rss:0kB\r\n\r\nThis basically gets triggered through ripgrep's `--vimgrep` option repeating\r\nlines for every match (\".\" in this case).\r\n\r\nThis produces a lot of output, but it seems like it gets not freed internally,\r\nafter being passed to the output handler?\r\n\r\nUsing `stdout_buffered` results in a quicker OOM.\r\n\r\n(I have noticed this with vim-grepper initially, where it was triggered by a\r\nlegit query, but which got found multiple times in JSON fixtures with very long\r\nlines seemingly.  In this case it gets added to the quickfix list a lot, but\r\nthere it is limited to 1024 bytes/chars)\r\n\r\nThis is on master (e56f62e9a).  Neovim 0.3.8 shows the same behavior.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Without `--sort-files` it does not get killed (and the output handler gets called 4526 times).  nvim uses 1.5g of RES memory then still.\r\n\r\nWith `--sort-files` and `'stdout_buffered': 1` I am getting a \"E41: Out of memory!\" error, and \"Vim: Finished.\", but an unusable (truncated) core dump.",
            "created_at": "2019-08-17T02:17:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/10795#issuecomment-522196308",
            "id": 522196308,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10795",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjE5NjMwOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522196308/reactions"
            },
            "updated_at": "2019-08-17T02:17:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522196308",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> After ~15s it gets killed by the OOM killer for me.\r\n\r\nif you kill the job with ctrl-c (or SIGTERM) does the memory get freed? ",
            "created_at": "2019-08-17T07:02:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/10795#issuecomment-522211706",
            "id": 522211706,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10795",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjIxMTcwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522211706/reactions"
            },
            "updated_at": "2019-08-17T07:02:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522211706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Haven't checked yet - but at least when it manages to finish it uses 1.5g of memory.  (Also after calling `garbagecollect()`.)",
            "created_at": "2019-08-17T17:58:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/10795#issuecomment-522258504",
            "id": 522258504,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10795",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI1ODUwNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522258504/reactions"
            },
            "updated_at": "2019-08-17T17:58:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522258504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What is the actual size of `rg -H --no-heading --vimgrep --sort-files .` output  ? `stdout_buffered` will not work unless at least 2.5X of the output size fits in memory momentarily (probably more due to further inefficiencies).\r\n\r\nThough even without `stdout_buffered` and non-storing handler nvim can get into trouble if the garbage collector is inhibited, i e events are not processed at the top-level loop. On internal `malloc()` failure it could try the gc anyway, but this doesn't work if the kernel overprovides without end (so we never receive a failing `malloc()`, only OOM SIGKILL signal).",
            "created_at": "2019-08-17T20:48:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/10795#issuecomment-522269542",
            "id": 522269542,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10795",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI2OTU0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522269542/reactions"
            },
            "updated_at": "2019-08-17T20:48:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522269542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What is the actual size\r\n\r\nIt's enormously big I assume.. `rg -H --no-heading --vimgrep --sort-files . | wc -c` runs for 10 minutes by now.\r\n\r\nI was hoping for someone more experiences / in the know of Neovim's memory management to reproduce it / debug it from there.",
            "created_at": "2019-08-17T21:02:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/10795#issuecomment-522270346",
            "id": 522270346,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10795",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI3MDM0Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522270346/reactions"
            },
            "updated_at": "2019-08-17T21:02:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522270346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Output after ~25min: `2756489033431`, i.e. 2567gb.",
            "created_at": "2019-08-17T21:24:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/10795#issuecomment-522271616",
            "id": 522271616,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10795",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjI3MTYxNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522271616/reactions"
            },
            "updated_at": "2019-08-17T21:24:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522271616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Output after ~25min: `2756489033431`, i.e. 2567gb.\r\n\r\nSo after 15s it generates ~6 GB? This suggests the \"excessive\" memory usage is inherent to the task, no? What behavior are you expecting? \r\n\r\nI suppose `jobstart()` could do some sanity check like:\r\n\r\n1. keep a counter of memory used by a job thus far\r\n2. compare `uv_get_total_memory()`\r\n3. if memory used by a job is big compared to total system memory... stop the job?\r\n4. add an optional flag to `jobstart()` that disables this sanity-check\r\n\r\nThis heuristic might be useful in general for various things, then we should restore the removed Vim option `maxmem` and apply it to \"everything\" (after all, a register, string variable, etc. may contain GB of data). OTOH, this raises the question \"are we reinventing memory management system, isn't the OS supposed to deal with this?\"",
            "created_at": "2019-08-18T12:07:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/10795#issuecomment-522316044",
            "id": 522316044,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10795",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjMxNjA0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522316044/reactions"
            },
            "updated_at": "2019-08-18T12:08:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522316044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk It is an extreme case, but ideally it should work as long as you use a stdout handler that doesn't store the `a:data` anywhere ( i e process it \"in place\", and quickly enough). I wonder if the issue here is that `stdout.buffer` gets filled before it is consumed or rather that `a:data` strings do not get GC:d quickly enough. \r\n\r\nFor the first possible cause, it might be enough to put a cap on `channel->stdout.buffer` , perhaps relative `uv_get_total_memory()`. If it gets full I think we should close the stdout pipe, this is a signal to the process that we cannot handle the flow of data anymore, and it can still shut down itself gracefully. (In theory we should be able to tell uv to pause the reading, which should cause a well-behaved job to block until we can start reading again, but this might be too rare to justify make the basic RStream interface more complicated).",
            "created_at": "2019-08-18T12:24:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/10795#issuecomment-522317514",
            "id": 522317514,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10795",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjMxNzUxNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522317514/reactions"
            },
            "updated_at": "2019-08-18T12:24:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522317514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/10795/comments",
    "created_at": "2019-08-17T01:58:09Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/10795/events",
    "html_url": "https://github.com/neovim/neovim/issues/10795",
    "id": 481835570,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "needs a clear design proposal",
            "id": 124510010,
            "name": "needs:design",
            "node_id": "MDU6TGFiZWwxMjQ1MTAwMTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:design"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "issue needs attention from an expert, or PR proposes significant changes to architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/10795/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU0ODE4MzU1NzA=",
    "number": 10795,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/10795/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/10795/timeline",
    "title": "Excessive memory usage with large job output (OOM)",
    "updated_at": "2025-01-19T11:41:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/10795",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
        "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
        "followers_url": "https://api.github.com/users/blueyed/followers",
        "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
        "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/blueyed",
        "id": 9766,
        "login": "blueyed",
        "node_id": "MDQ6VXNlcjk3NjY=",
        "organizations_url": "https://api.github.com/users/blueyed/orgs",
        "received_events_url": "https://api.github.com/users/blueyed/received_events",
        "repos_url": "https://api.github.com/users/blueyed/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/blueyed",
        "user_view_type": "public"
    }
}