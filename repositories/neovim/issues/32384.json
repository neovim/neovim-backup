{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nCannot override default lsp definition handler by overriding `vim.lsp.handlers['textDocument/definition']` on nightly.\n\n### Steps to reproduce\n\n1. Install lua language server and latest neovim nightly\n2. Create the test lua file `test.lua`:\n    ```lua\n    local function impl1() end\n    local function impl2() end\n\n    local f = impl1\n    f = impl2\n    ```\n3. Create minimal config: `minimal.lua`\n    ```lua\n    vim.lsp.handlers['textDocument/definition'] = function()\n      print('custom hander called')\n    end\n\n    vim.api.nvim_create_autocmd('FileType', {\n      pattern = 'lua',\n      callback = function()\n        vim.lsp.start({\n          cmd = { 'lua-language-server' },\n        })\n      end,\n    })\n\n    vim.keymap.set('n', 'gd', '<Cmd>lua vim.lsp.buf.definition()<CR>')\n    ```\n4. `nvim --clean -u minimal.lua test.lua`\n5. Place cursor over `f` on the last line\n6. Press `gd`\n7. Default loclist opened without the \"custom handler called\" message, indicating `vim.lsp.buf.defition()` is not picking the handler from `vim.lsp.handlers['textDocument/definition']`\n\n### Expected behavior\n\nAccording `:h news` this should be expected:\n\n```\nâ€¢ |vim.lsp.buf.references()|, |vim.lsp.buf.declaration()|, |vim.lsp.buf.definition()|,\n  |vim.lsp.buf.type_definition()|, |vim.lsp.buf.implementation()| and\n  |vim.lsp.buf.hover()| now support merging the results of multiple clients\n  but no longer trigger the global handlers from `vim.lsp.handlers`\n```\n\nbut it does not provide an alternative way to change the goto-definition behavior. In a real case, I override many lsp handlers with fzf-lua pickers which works fine on 0.10 but no longer takes effect on nightly.\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0-dev-1720+gac207c3ac2\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nLinux\n\n### Terminal name/version\n\nalacritty, tmux\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nAUR",
    "closed_at": "2025-02-10T19:35:59Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> According `:h news` this should be expected ... but it does not provide an alternative way to change the goto-definition behavior. \n\n`:help lsp-handler` mentions:\n\n```\n- Passing a {handlers} parameter to |vim.lsp.start()|. This sets the default\n  |lsp-handler| for a specific server. (Note: only for server-to-client\n  requests/notifications, not client-to-server.)\n```\n\nIs there a technical reason why we couldn't allow defining custom client-to-server handlers in `vim.lsp.start()`? @mfussenegger @lewis6991 ?",
            "created_at": "2025-02-09T21:19:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/32384#issuecomment-2646605806",
            "id": 2646605806,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32384",
            "node_id": "IC_kwDOAPphoM6dv__u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646605806/reactions"
            },
            "updated_at": "2025-02-09T21:19:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646605806",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The handler model was a mistake for client to server, mainly due to handling of multiple clients. The handler method also doesn't give you much when you can just do `lsp:request()` manually and supply your own handler that way. If you look at https://github.com/neovim/neovim/blob/master/runtime%2Flua%2Fvim%2Flsp%2Fbuf.lua#L160 you'll see a majority of our implementation is just the handler.\n\nIf we want to supply configuration for goto-definition for `vim.lsp.buf.definition` then we can do that by adding new options.",
            "created_at": "2025-02-09T21:22:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/32384#issuecomment-2646606764",
            "id": 2646606764,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32384",
            "node_id": "IC_kwDOAPphoM6dwAOs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646606764/reactions"
            },
            "updated_at": "2025-02-09T21:26:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646606764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The handler model was a mistake for client to server, mainly due to handling of multiple clients.\n\nYes, but `vim.lsp.start()` gives an opportunity to provide a client-specific handler override. So the \"multiple clients\" case doesn't seem relevant there.\n\n\n> The handler method also doesn't give you much when you can just do `lsp:request()` manually and supply your own handler that way.\n\nOk, I'll mention that in the docs.\n\n",
            "created_at": "2025-02-09T21:26:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/32384#issuecomment-2646608061",
            "id": 2646608061,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32384",
            "node_id": "IC_kwDOAPphoM6dwAi9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646608061/reactions"
            },
            "updated_at": "2025-02-09T21:26:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646608061",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yes, but vim.lsp.start() gives an opportunity to provide a client-specific handler override. So the \"multiple clients\" case doesn't seem relevant there.\n\nIt does matter because the handler code is about processing multiple results and presenting it to the UI. It should make more sense if you look at our goto-definition implementation.",
            "created_at": "2025-02-09T21:29:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/32384#issuecomment-2646609181",
            "id": 2646609181,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32384",
            "node_id": "IC_kwDOAPphoM6dwA0d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646609181/reactions"
            },
            "updated_at": "2025-02-09T21:29:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646609181",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> the handler code is about processing multiple results and presenting it to the UI.\n\nAh, that means a client-specific handler doesn't really make sense, *unless* the user invokes a method explicitly on a specific client.\n\n@Bekaboo can you try `Client:request_sync()` (or `Client:request()`) and confirm if it gives you what you need?",
            "created_at": "2025-02-09T23:30:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/32384#issuecomment-2646653263",
            "id": 2646653263,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32384",
            "node_id": "IC_kwDOAPphoM6dwLlP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646653263/reactions"
            },
            "updated_at": "2025-02-09T23:30:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646653263",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk I tried with the following minimal config as suggested\n\n```\n- Passing a {handlers} parameter to |vim.lsp.start()|. This sets the default\n  |lsp-handler| for a specific server. (Note: only for server-to-client\n  requests/notifications, not client-to-server.)\n```\n\n```lua\nvim.lsp.handlers['textDocument/definition'] = function()\n  print('custom hander called')\nend\n\nvim.api.nvim_create_autocmd('FileType', {\n  pattern = 'lua',\n  callback = function()\n    vim.lsp.start({\n      cmd = { 'lua-language-server' },\n      handlers = {\n        ['textDocument/definition'] = function()\n          print('custom hander 2 called')\n        end,\n      },\n    })\n  end,\n})\n\nvim.keymap.set('n', 'gd', '<Cmd>lua vim.lsp.buf.definition()<CR>')\n```\n\nbut nvim still use the default handler when I press `gd`. I guess the reason is `'textDocument/definition'` being a client-to-server method? Not sure what does \"server-to-client\" or \"client-to-server\" means in the doc.\n\nI also tried with config\n\n```lua\nvim.lsp.handlers['textDocument/definition'] = function()\n  print('custom hander called')\nend\n\nlocal id ---@type integer?\n\nvim.api.nvim_create_autocmd('FileType', {\n  pattern = 'lua',\n  callback = function()\n    id = vim.lsp.start({\n      cmd = { 'lua-language-server' },\n      handlers = {\n        ['textDocument/definition'] = function()\n          print('custom hander 2 called')\n        end,\n      },\n    })\n  end,\n})\n\nvim.keymap.set('n', 'gd', function()\n  local client = id and vim.lsp.get_client_by_id(id)\n  if not client then\n    return\n  end\n  client:request('textDocument/definition')\nend)\n```\n\nThis time I get \"custom handler 2 called\" successfully.",
            "created_at": "2025-02-10T00:34:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/32384#issuecomment-2646689471",
            "id": 2646689471,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32384",
            "node_id": "IC_kwDOAPphoM6dwUa_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646689471/reactions"
            },
            "updated_at": "2025-02-10T00:40:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646689471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/76579810?v=4",
                "events_url": "https://api.github.com/users/Bekaboo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Bekaboo/followers",
                "following_url": "https://api.github.com/users/Bekaboo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Bekaboo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Bekaboo",
                "id": 76579810,
                "login": "Bekaboo",
                "node_id": "MDQ6VXNlcjc2NTc5ODEw",
                "organizations_url": "https://api.github.com/users/Bekaboo/orgs",
                "received_events_url": "https://api.github.com/users/Bekaboo/received_events",
                "repos_url": "https://api.github.com/users/Bekaboo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Bekaboo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Bekaboo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Bekaboo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It is expected that `vim.lsp.buf.definition()` no longer uses the handler - it needs to merge the results from all clients and the handler interface is not suited for that.\n\nYou can either use the `on_list` callback (See `:help vim.lsp.ListOpts`), or make your own requests.\n",
            "created_at": "2025-02-10T19:35:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/32384#issuecomment-2649053024",
            "id": 2649053024,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32384",
            "node_id": "IC_kwDOAPphoM6d5Vdg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2649053024/reactions"
            },
            "updated_at": "2025-02-10T19:35:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2649053024",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32384/comments",
    "created_at": "2025-02-09T20:35:00Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32384/events",
    "html_url": "https://github.com/neovim/neovim/issues/32384",
    "id": 2840938144,
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32384/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6pVUag",
    "number": 32384,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32384/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32384/timeline",
    "title": "LSP: cannot override default client-to-server handlers",
    "updated_at": "2025-02-10T19:36:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32384",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/76579810?v=4",
        "events_url": "https://api.github.com/users/Bekaboo/events{/privacy}",
        "followers_url": "https://api.github.com/users/Bekaboo/followers",
        "following_url": "https://api.github.com/users/Bekaboo/following{/other_user}",
        "gists_url": "https://api.github.com/users/Bekaboo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Bekaboo",
        "id": 76579810,
        "login": "Bekaboo",
        "node_id": "MDQ6VXNlcjc2NTc5ODEw",
        "organizations_url": "https://api.github.com/users/Bekaboo/orgs",
        "received_events_url": "https://api.github.com/users/Bekaboo/received_events",
        "repos_url": "https://api.github.com/users/Bekaboo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Bekaboo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Bekaboo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Bekaboo",
        "user_view_type": "public"
    }
}