{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nRight now, `gf` in Lua file doesn't work at all (it cannot even jump to module in the same project). I can use `go-to-definition` provided by LuaLS, but it is slow and sometime doesn't work at all\n\nBut since Lua is always builtin in Neovim, I think it makes sense to make it possible to go to other module in `package.path` and `rtp`\n\n### Expected behavior\n\n`gf` should be able to go to module in `package.path` and `rtp`. Possible implementation here https://github.com/brianhuster/dotfiles/blob/main/nvim/lua/an/lua.lua#L32. I can send a PR",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "For lazy.nvim, module name may not exist in `package.path`, `rtp`, here is a hack:\nhttps://github.com/mrjones2014/lua-gf.nvim/blob/acd0d043cab6a118a069979e8081651f2ecf6637/plugin/lua-gf.lua#L46\n",
            "created_at": "2025-02-17T02:41:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/32490#issuecomment-2661829768",
            "id": 2661829768,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32490",
            "node_id": "IC_kwDOAPphoM6eqEyI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661829768/reactions"
            },
            "updated_at": "2025-02-17T02:41:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661829768",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/154880267?v=4",
                "events_url": "https://api.github.com/users/nenahp/events{/privacy}",
                "followers_url": "https://api.github.com/users/nenahp/followers",
                "following_url": "https://api.github.com/users/nenahp/following{/other_user}",
                "gists_url": "https://api.github.com/users/nenahp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nenahp",
                "id": 154880267,
                "login": "nenahp",
                "node_id": "U_kgDOCTtJCw",
                "organizations_url": "https://api.github.com/users/nenahp/orgs",
                "received_events_url": "https://api.github.com/users/nenahp/received_events",
                "repos_url": "https://api.github.com/users/nenahp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nenahp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nenahp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nenahp",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm just not sure if that's desired behaviour, because some modules take a really long time to load, like `avante` (because when loading that module, it also loads tones of modules it require, directly and indirectly, as well as its dependencies). \n\nIt can also lead to some unexpected behaviors because the code in the module will be executed.\n\nAlso if we want to support \"lazy-loading\" by lazy.nvim, we may also need to support built-in `packadd`",
            "created_at": "2025-02-17T03:50:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/32490#issuecomment-2661905982",
            "id": 2661905982,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32490",
            "node_id": "IC_kwDOAPphoM6eqXY-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661905982/reactions"
            },
            "updated_at": "2025-02-17T04:28:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661905982",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I'm just not sure if that's desired behaviour, because some modules take a really long time to load, like avante (because when loading that module, it also loads tones of modules it require, directly and indirectly, as well as its dependencies).\n\nI think it's negligible when enable byte code cache (`vim.loader.enable`). And this only happen on your first `gF`, won't take much time.\n\n> Also if we want to support \"lazy-loading\" by lazy.nvim, we may also need to support built-in packadd\n\nlazy.nvim should be able load the module correctly as long as you `require` it/its submodule?",
            "created_at": "2025-02-17T04:27:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/32490#issuecomment-2661959172",
            "id": 2661959172,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32490",
            "node_id": "IC_kwDOAPphoM6eqkYE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661959172/reactions"
            },
            "updated_at": "2025-02-23T16:42:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661959172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/154880267?v=4",
                "events_url": "https://api.github.com/users/nenahp/events{/privacy}",
                "followers_url": "https://api.github.com/users/nenahp/followers",
                "following_url": "https://api.github.com/users/nenahp/following{/other_user}",
                "gists_url": "https://api.github.com/users/nenahp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nenahp",
                "id": 154880267,
                "login": "nenahp",
                "node_id": "U_kgDOCTtJCw",
                "organizations_url": "https://api.github.com/users/nenahp/orgs",
                "received_events_url": "https://api.github.com/users/nenahp/received_events",
                "repos_url": "https://api.github.com/users/nenahp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nenahp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nenahp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nenahp",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> lazy.nvim should be able load the module correctly as long as you require it/its submodule?\n\nI'm talking about _built-in_ `packadd`. Also, `lazy.nvim` is not the only package manager, there is also `mini.deps` which also supports lazy-loading (though I'm not clear about its mechanism, other than that it is based on `'packpath'`).\n\nAnyway, I don't think a built-in functionality should add some specific code just to support an _external_ plugin",
            "created_at": "2025-02-17T04:29:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/32490#issuecomment-2661966980",
            "id": 2661966980,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32490",
            "node_id": "IC_kwDOAPphoM6eqmSE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661966980/reactions"
            },
            "updated_at": "2025-02-17T10:49:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661966980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure where the includeexpr should live. Maybe `vim.lua.includeexpr`? Or `vim.lua_includeexpr`? Do I need to make the function private?\n\nPossibly I should enable that function by default if the opened file is in `stdpath('config')` or `runtimepath`",
            "created_at": "2025-02-18T02:00:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/32490#issuecomment-2664438047",
            "id": 2664438047,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32490",
            "node_id": "IC_kwDOAPphoM6e0Bkf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2664438047/reactions"
            },
            "updated_at": "2025-02-21T08:52:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2664438047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> where the includeexpr should live. Maybe `vim.lua.includeexpr`? Or `vim.lua_includeexpr`? Do I need to make the function private?\n\nMaybe somewhere on `vim.filetype`. But really, filetype-specific things should live in a ftplugin. `runtime/ftplugin/lua.lua` in this case.\n\nAnd probably `vim.lua_omnifunc()` should live there too.",
            "created_at": "2025-02-23T16:46:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/32490#issuecomment-2676981414",
            "id": 2676981414,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32490",
            "node_id": "IC_kwDOAPphoM6fj36m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2676981414/reactions"
            },
            "updated_at": "2025-02-23T16:46:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2676981414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32490/comments",
    "created_at": "2025-02-17T02:20:12Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32490/events",
    "html_url": "https://github.com/neovim/neovim/issues/32490",
    "id": 2856545823,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32490/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 699,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 637,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-02-23T16:48:10Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6qQ24f",
    "number": 32490,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32490/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32490/timeline",
    "title": "`gf` in Lua file can jump to Lua module in `package.path` and `'rtp'`",
    "updated_at": "2025-02-23T16:47:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32490",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
        "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
        "followers_url": "https://api.github.com/users/brianhuster/followers",
        "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
        "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/brianhuster",
        "id": 111893501,
        "login": "brianhuster",
        "node_id": "U_kgDOBqtb_Q",
        "organizations_url": "https://api.github.com/users/brianhuster/orgs",
        "received_events_url": "https://api.github.com/users/brianhuster/received_events",
        "repos_url": "https://api.github.com/users/brianhuster/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/brianhuster",
        "user_view_type": "public"
    }
}