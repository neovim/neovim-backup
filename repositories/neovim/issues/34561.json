{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "followup work after https://github.com/neovim/neovim/pull/33371\n\n\n- [x] add a test for `nvim_paste` explicitly\n- [x] this test should also check that the callback gets the full multiline input: https://github.com/neovim/neovim/blob/5cf135f9a0ac472621d133bb4a03780a7bff6640/test/functional/legacy/prompt_buffer_spec.lua#L250\n- [x] with `formatoptions+=r`, `<s-enter>` prefixes the prompt to each line.\n  ```\n  set formatoptions+=r\n  set buftype=prompt\n  ```\n- [x] `':` mark is not adjusted if a plugin modifies the text of the prompt buf ([repro](https://github.com/neovim/neovim/issues/34561#issuecomment-2993530641)) fix: [#34671](https://github.com/neovim/neovim/pull/34671)\n- [ ] If cursor is a line above, `a` will jump to the end, but if the cursor is within the prompt text, it won't. [ref](https://github.com/neovim/neovim/pull/33371#issuecomment-2983545388)\n- [ ] `:edit` in a prompt buffer clears the buffer, this is very annoying\n- [ ] editing a prompt marks the buffer as \"modified\", this is usually just unwanted and annoying\n\n## highlight\n\nthe current prompt should be highlighted somehow. add a `MsgSeparator` line just above it, by default?\n\n```\nreadonly area\n--------------------------------------------------------------------------------\n% foo\n```",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "> add a test for nvim_paste explicitly\n\nThe functionality works in master. I'll add a test in a followup pr.\n\n> this test should also check that the callback gets the full multiline input: \n\nTechnically, it already checks. Since the result lines contain the multiline input we provided earlier. Result lines are set but `prompt_callback`\nhttps://github.com/neovim/neovim/blob/5cf135f9a0ac472621d133bb4a03780a7bff6640/test/functional/legacy/prompt_buffer_spec.lua#L267-L269\n\n> with formatoptions+=r, <s-enter> prefixes the prompt to each line. \n\n```\nr\tAutomatically insert the current comment leader after hitting\n\t<Enter> in Insert mode.\n```\nWhat does comment leader mean in the docs? I'm actually not very familiar with this option. Probably always had the defaults set.\n\n> If cursor is a line above, a will jump to the end, but if the cursor is within the prompt text, it won't. https://github.com/neovim/neovim/pull/33371#issuecomment-2983545388\n\nI assumed if you are already on the prompt line, you want to edit that line. So I'm placing the cursor close editable point. Kind of like if you pressed a right at end of the prompt. Is it a bad assumption?\n@mfussenegger \n\nThere are actually few more special cases like that when operating on prompt. Particularly o/O, p/P work on the prompt too. But editing is basically done after the prompt.\n\n> the current prompt should be highlighted somehow. add a MsgSeparator line just above it, by default?\n\nI'm not sure about it. That kind of makes the UI rigid. It can be done on plugin side already from the prompt_callback. Or by tracking the ':' mark. Or plugins can apply different highlights or any other way they want to make it seem different. Adding an ASCII line from core feels unnecessary.",
            "created_at": "2025-06-18T14:30:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2984458281",
            "id": 2984458281,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6x4zgp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984458281/reactions"
            },
            "updated_at": "2025-06-18T14:30:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984458281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Adding an ASCII line from core feels unnecessary.\n\nNot an ascii line, a highlight (which might be underline or a solid bar, idk).",
            "created_at": "2025-06-18T14:53:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2984543089",
            "id": 2984543089,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6x5INx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984543089/reactions"
            },
            "updated_at": "2025-06-18T14:53:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984543089",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I assumed if you are already on the prompt line, you want to edit that line. So I'm placing the cursor close editable point. Kind of like if you pressed a right at end of the prompt. Is it a bad assumption?\n\nI think the prompt itself shouldn't be editable. What's a bit odd is that initially that is the case. Only after the first `<CR>` does it become editable\n\nhttps://github.com/user-attachments/assets/5421fb6e-454d-4793-9332-1d4a95297f58\n\nMaybe related to how nvim-dap inserts the text via nvim_buf_set_lines?",
            "created_at": "2025-06-18T15:13:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2984640042",
            "id": 2984640042,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6x5f4q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984640042/reactions"
            },
            "updated_at": "2025-06-18T15:13:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984640042",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think the prompt itself shouldn't be editable. What's a bit odd is that initially that is the case. Only after the first <CR> does it become editable\n\nThat's a bug.\n> Maybe related to how nvim-dap inserts the text via nvim_buf_set_lines?\n\nIt could be the reason. Can you check where the `:` mark is at? Maybe it's related to the `:` issue justin mentioned above. Also, how are you inserting the lines. Inside `pormpt_callback` or outside of it? Are you replacing the line or adding a newline?",
            "created_at": "2025-06-18T16:18:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2984894387",
            "id": 2984894387,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6x6d-z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984894387/reactions"
            },
            "updated_at": "2025-06-18T16:18:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984894387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "What about implementing extmarks that mark editable regions of a nomodifiable buffer?\nThat was already suggested [(here)](https://github.com/neovim/neovim/issues/17061), and I want to bring it up again.\nWith this feature, each plugin author could make their own whatever-they-want kind of prompt.\n\nSo with this feature, I imagine implementing a debug REPL like this:\n\n```txt\nLocals  \n  argc: 1  \n  argv: 0x00007ffed8ce59c8  \nRepl input:  \n\nConfirm  \n```\n\n1. You create a buffer and make it nomodifiable.\n2. Then you set an extmarks with a special property that makes the region between the `Repl input` line  and the `Confirm` line modifiable.\n3. Then the user can edit text only inside this marked area (not including `Repl input` and `Confirm`). It also covers the multiline input use case because extmark end shifts when you insert a new line (with end_right_gravity = true).\n4. Then on a buffer write event, you get the content inside this marked area and evaluate it (perform some actions on it).\n5. Also, you can make it so if you press `CR` on the \"Confirm\" line, it also evaluates it.\n\n@mfussenegger, what do you think about implementing REPL input this way? \n\n",
            "created_at": "2025-06-18T16:51:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2985026961",
            "id": 2985026961,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6x6-WR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2985026961/reactions"
            },
            "updated_at": "2025-06-18T17:16:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2985026961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/80050619?v=4",
                "events_url": "https://api.github.com/users/miroshQa/events{/privacy}",
                "followers_url": "https://api.github.com/users/miroshQa/followers",
                "following_url": "https://api.github.com/users/miroshQa/following{/other_user}",
                "gists_url": "https://api.github.com/users/miroshQa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/miroshQa",
                "id": 80050619,
                "login": "miroshQa",
                "node_id": "MDQ6VXNlcjgwMDUwNjE5",
                "organizations_url": "https://api.github.com/users/miroshQa/orgs",
                "received_events_url": "https://api.github.com/users/miroshQa/received_events",
                "repos_url": "https://api.github.com/users/miroshQa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/miroshQa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miroshQa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/miroshQa",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@miroshQa if you have new info then comment at https://github.com/neovim/neovim/issues/17061 . \n\nWe need to constrain the scope here so that this first phase can be delivered.",
            "created_at": "2025-06-18T17:15:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2985107359",
            "id": 2985107359,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6x7R-f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2985107359/reactions"
            },
            "updated_at": "2025-06-18T17:15:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2985107359",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It could be the reason. Can you check where the : mark is at? \n\nThe `:` mark is in the line with the `1` in the video I posted.\n\n> Also, how are you inserting the lines. Inside pormpt_callback or outside of it? Are you replacing the line or adding a newline?\n\nTypically the flow is:\n\n- User enters some expression -> enter -> triggers the prompt callback\n- nvim-dap sends the expression to the debug adapter within the prompt callback.\n- nvim-dap gets the result (async, after prompt callback exits) and writes the result to the prompt buffer using nvim_buf_set_lines or nvim_buf_set_text to display the result/value of the expression.\n\nUsually that is an append operation, but users can also expand previously written content, in which case it changes existing lines.\nThere are also some cases where it writes to the prompt within the callback but these are rarer.\n\nCurrently the nvim-dap repl is completely broken as it continues interpreting the result of the previous expression as a multi-line expression.\n\nEasiest reproduction would be to:\n\n- clone https://codeberg.org/mfussenegger/nvim-dap to ~/.config/nvim/pack/plugins/start\n- clone https://codeberg.org/mfussenegger/nluarepl to ~/.config/nvim/pack/plugins/start\n- Start nvim, run `:DapNew nluarepl`\n- Run `:DapToggleRepl`\n- Type `1 + 1<CR>` followed by `2`. Before the commit you'd get:\n\n```\ndap> 1 + 1\n2\ndap> 2\n2\n```\n\nWith the change it results in:\n\n```\ndap> 1 + 1\n2\n2dap> \n[string \"return 2...\"]:2: malformed number near '2dap'\ndap> \n```\n",
            "created_at": "2025-06-18T17:28:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2985138563",
            "id": 2985138563,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6x7ZmD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2985138563/reactions"
            },
            "updated_at": "2025-06-18T17:28:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2985138563",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mfussenegger, how are you displaying the lines actually? In gist, it should be something like this, right?\n\n```lua\nvim.opt.buftype = 'prompt'\nlocal buf = vim.api.nvim_get_current_buf()\nvim.fn.prompt_setprompt(buf, \"> \")\nvim.fn.prompt_setcallback(buf, function(txt)\n  vim.defer_fn(vim.schedule_wrap(function ()\n    local cur_prompt = vim.api.nvim_buf_get_mark(buf, ':')[1]\n    vim.api.nvim_buf_set_lines(buf, cur_prompt-1, cur_prompt-1, true, vim.split(txt, '\\n'))\n  end), 400)\nend)\n```\n\nOn this, it does keep track of prompt location correctly. Maybe I'm missing some special case somewhere. A minimal reproduction would really help.",
            "created_at": "2025-06-19T11:51:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2987812300",
            "id": 2987812300,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6yFmXM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2987812300/reactions"
            },
            "updated_at": "2025-06-19T11:51:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2987812300",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> with formatoptions+=r, <s-enter> prefixes the prompt to each line.\n\n```\nset formatoptions+=r\nset buftype=prompt\n```\n\n@justinmk this is basically an odd interaction between defaults. By default prompt is set to '%' . '%' is also part of default value of  `comments` option. When `+r` is added to `formatoptions` on `<CR>` it checks if previous string was a comment. Becuase defualt comments option has % it thinks the prompt line is actually a comment and so it copies over the comment start string '%' at start of line. This basically goes away if user sets a different prompt other the default `%` or doesn't add `r` to format options. I can block this behavior in prompt buffer but adding an exception to this here is also a bit odd.\n\nIt occurs on a regular buffer too. Just create a regular new buffer then,\n```\nset formatoptions+=r\ncall nvim_input('i% asdf<cr>')\n```\n\nresults in\n```\n% asdf\n% \n```\n\nSame for any other format specified in `comments` option.",
            "created_at": "2025-06-19T15:51:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2988560357",
            "id": 2988560357,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6yIc_l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2988560357/reactions"
            },
            "updated_at": "2025-06-19T15:51:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2988560357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In prompt buffers we should probably disable 'formatoptions', 'copyindent', etc., by default. The main purpose of multiline support is to be able to enter multiline text, not to have an \"editor\" UX. ",
            "created_at": "2025-06-19T17:01:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2988705738",
            "id": 2988705738,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6yJAfK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2988705738/reactions"
            },
            "updated_at": "2025-06-19T17:01:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2988705738",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  A minimal reproduction would really help.\n\nSomething like this reproduces it:\n\n```lua\napi = vim.api\napi.nvim_create_user_command(\"Repl\", function(args)\n  vim.cmd(\"new\")\n  local buf = api.nvim_get_current_buf()\n  vim.bo[buf].buftype = \"prompt\"\n  local prompt = \"lua> \"\n\n  local function execute(text)\n    if not vim.startswith(text, \"return \") then\n      text = \"return \" .. text\n    end\n    local fn, err = loadstring(text)\n    if err then\n    else\n      local env = getfenv(fn)\n      local newenv = {}\n      setmetatable(newenv, {\n        __index = env,\n        __newindex = function(_, k, v)\n          env[k] = v\n        end,\n      })\n      setfenv(fn, newenv)\n\n      local ok, value = pcall(fn)\n      if ok then\n        local lines = vim.split(tostring(value), \"\\n\")\n        local lnum = api.nvim_buf_line_count(buf) - 1\n        local last_line = api.nvim_buf_get_lines(buf, -2, -1, true)[1]\n        local insert_pos = #last_line\n        if last_line == prompt then\n          -- insert right in front of the empty prompt\n          insert_pos = 0\n          if lines[#lines] ~= '' then\n            table.insert(lines, #lines + 1, '')\n          end\n        elseif vim.startswith(last_line, prompt) then\n          table.insert(lines, 1, '')\n        end\n        api.nvim_buf_set_text(buf, lnum, insert_pos, lnum, insert_pos, lines)\n      end\n    end\n  end\n\n  vim.fn.prompt_setprompt(buf, prompt)\n  vim.fn.prompt_setcallback(buf, execute)\nend, {})\n```\n\nSee also https://github.com/mfussenegger/nvim-dap/pull/1063 for context about why it is like that.\n",
            "created_at": "2025-06-21T11:23:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2993530641",
            "id": 2993530641,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6ybacR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2993530641/reactions"
            },
            "updated_at": "2025-06-21T11:23:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2993530641",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It looks like the mark doesn't get properly adjusted whn `buf_set_text` is used. But works for `buf_set_lines`. I assumed they used the same logic. I'll look into it.\n\nBasically this works\n```diff\n--- test.lua\t2025-06-22 21:32:25.393949501 +0600\n+++ test.lua\t2025-06-22 21:32:36.802005272 +0600\n@@ -38,7 +38,7 @@\n         elseif vim.startswith(last_line, prompt) then\n           table.insert(lines, 1, '')\n         end\n-        api.nvim_buf_set_text(buf, lnum, insert_pos, lnum, insert_pos, lines)\n+        api.nvim_buf_set_lines(buf, lnum, lnum, true, lines)\n       end\n     end\n   end\n```\n\nWhen do you make partial line edits?\n\nAlso, using `buf_line_count` to determine the line above prompt is no longer correct with multiline input being possible. You should use ':' mark, like the example I gave earlier. \n",
            "created_at": "2025-06-22T15:39:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-2994282037",
            "id": 2994282037,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6yeR41",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2994282037/reactions"
            },
            "updated_at": "2025-06-22T15:40:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2994282037",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "With the `:` mark should we track start of user input or the prompt?\n\nlike \"cmd: \" being the prompt\nhere?\n```\ncmd: \n^\n```\nor here?\n```\ncmd: \n    ^\n```\n\n",
            "created_at": "2025-06-26T00:59:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-3006653529",
            "id": 3006653529,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6zNeRZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3006653529/reactions"
            },
            "updated_at": "2025-06-26T00:59:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3006653529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is another case where it no longer works as it did before:\n\n```lua\n  vim.bo[buf].buftype = \"prompt\"\n  local prompt = \"> \"\n\n  local function execute(text)\n    api.nvim_buf_set_lines(buf, -1, -1, true, {\"Hello\"})\n    api.nvim_buf_set_lines(buf, -1, -1, true, vim.split(text, \"\\n\"))\n  end\n\n  vim.fn.prompt_setprompt(buf, prompt)\n  vim.fn.prompt_setcallback(buf, execute)\n```\n\nTyping `foo` followed by `bar` results in:\n\n```\n> foo\n\nHello\nfoo\n> bar\n\nHello\no\n> bar\n```",
            "created_at": "2025-06-26T09:03:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-3007749608",
            "id": 3007749608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6zRp3o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3007749608/reactions"
            },
            "updated_at": "2025-06-26T09:03:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3007749608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> With the `:` mark should we track start of user input or the prompt?\n\nIts semantics are \"the editable\" area, so wouldn't include the prompt. Internally, we could just offset the the mark by the prompt length.",
            "created_at": "2025-06-26T09:22:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-3007803439",
            "id": 3007803439,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6zR3Av",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3007803439/reactions"
            },
            "updated_at": "2025-06-26T09:22:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3007803439",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mfussenegger can you check if #34671 fixes the issues you were facing or if you found any else.",
            "created_at": "2025-06-27T07:10:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-3011949722",
            "id": 3011949722,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6zhrSa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3011949722/reactions"
            },
            "updated_at": "2025-06-27T07:10:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3011949722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> this test should also check that the callback gets the full multiline input: \n\nThis ones is already covered by the screen asserts and prompt_gettext I believe.\nhttps://github.com/neovim/neovim/blob/5cf135f9a0ac472621d133bb4a03780a7bff6640/test/functional/legacy/prompt_buffer_spec.lua#L267-L269\n\n\n> If cursor is a line above, a will jump to the end, but if the cursor is within the prompt text, it won't. https://github.com/neovim/neovim/pull/33371#issuecomment-2983545388\n\nWhat should we do about this one? make insert-start on prompt also move the curson to end of prompt-text?\n\n\n>  :edit in a prompt buffer clears the buffer, this is very annoying\n\nCan you elaborate on this one? With `:edit` I'm only getting error thrown saying prompt-buffer not being saved. Buftype prompt can't be written either. If you're running `:edit!` to ignore that behavior. What are you expecting the desired result to be?\n\n> editing a prompt marks the buffer as \"modified\", this is usually just unwanted and annoying\n\nI guess we can ignore the modified status when buftype is prompt",
            "created_at": "2025-06-27T12:49:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-3012975835",
            "id": 3012975835,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6zllzb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3012975835/reactions"
            },
            "updated_at": "2025-06-27T12:50:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3012975835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> With `:edit` I'm only getting error thrown saying prompt-buffer not being saved.\n\nset 'nomodified' then try :edit\n\n> If you're running `:edit!` to ignore that behavior. What are you expecting the desired result to be?\n\ni don't think clearing the entire buffer is useful, so probably a no-op until we know better.",
            "created_at": "2025-06-27T13:42:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/34561#issuecomment-3013136156",
            "id": 3013136156,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34561",
            "node_id": "IC_kwDOAPphoM6zmM8c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3013136156/reactions"
            },
            "updated_at": "2025-06-27T13:42:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3013136156",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 18,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34561/comments",
    "created_at": "2025-06-18T13:05:33Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34561/events",
    "html_url": "https://github.com/neovim/neovim/issues/34561",
    "id": 3156808206,
    "labels": [
        {
            "color": "F3A62E",
            "default": false,
            "description": "community: Google Summer of Code project",
            "id": 834483397,
            "name": "gsoc",
            "node_id": "MDU6TGFiZWw4MzQ0ODMzOTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gsoc"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "buftype=prompt",
            "id": 8140369188,
            "name": "prompt-buffer",
            "node_id": "LA_kwDOAPphoM8AAAAB5TQtJA",
            "url": "https://api.github.com/repos/neovim/neovim/labels/prompt-buffer"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34561/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 79,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 71,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-06-30T09:49:58Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM68KRIO",
    "number": 34561,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34561/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34561/timeline",
    "title": "prompt buffer followup work",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-30T10:20:35Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34561",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}