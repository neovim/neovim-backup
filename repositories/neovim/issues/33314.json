{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nThe `nvim_buf_delete` lua function is very confusingly named, as by default it mimics `:bwipeout`, rather than `:bdelete`. This is despite a warning in the docs for `:bwipeout` which clearly states `Don't use this unless you know what you are doing`, so I don't really know why this choice was made.\n\nAs is, this command will drop marks in the deleted buffer, which would otherwise be stored in shada and persist even to the next time the editor is opened (maybe there's more lost, not sure), causing unexpected data loss for any user who expects their document marks to be stored. Sometimes this is what is wanted of course, `:bwipeout` exists for a reason, but it seems very strange to make this the default, even more so to call it delete which will definitely cause confusion. If a plugin needs to close a user's document and does this, a user will likely have no idea what caused the loss, and will probably assume nvim dropped the marks, making that shada feature seem unreliable and useless to them.\n\nWorse, there seems no option to directly replicate :bdelete. A user must at the very least trigger `BufDelete` autocmds and find some other way to manipulate the buffer list, then I'm not sure even that would be equivalent. We have only the unload option to recreate `:bunload`, but seemingly no option to delete from the buffer list without the extra and likely unwanted destruction of `:bwipeout`.\n\n### Expected behavior\n\nThere should still be an lua equivalent of `:bwipeout`, but it really doesn't seem like this should be the default, and almost certainly not for the only buffer delete command.\n\nIt's probably bad to change the `nvim_buf_delete` function as it would break stuff, but at least some further documentation to reflect the `:bwipeout` warning and an option to mimic `:bdelete` would be nice, or even a new replacement function to discourage `:bwipeout` from being the default.\n\nI wouldn't be surprised if it's possible for a user to combine a few functions to replicate `:bdelete` functionality by the lua api, but this seems like unnecessary work, and clearly pushes users to either accept the data loss or resort to `vim.cmd.bdelete` from vimscript (then why even have the lua api?). Otherwise, if `:bwipeout` really is the recommended choice now, surely the documentation is wrong, and the failure to save mark data seems like a bug?\n\nThe current design seems off, but there's of course a design decision to make here, and I'm not the one to make that.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I am not sure about the intricacies, but `vim.bo[buf_id].buflisted = false` followed by `vim.api.nvim_buf_delete(buf_id, { unload = true })` seems to be what `:bdelete` is described to be. Yes, the naming is unfortunate, but there is still a Lua way to do `:bdelete`.",
            "created_at": "2025-04-05T15:09:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2780814695",
            "id": 2780814695,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6lv91n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2780814695/reactions"
            },
            "updated_at": "2025-04-05T15:09:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2780814695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "ref https://github.com/neovim/neovim/pull/13077\n\n\n> but `vim.bo[buf_id].buflisted = false` followed by `vim.api.nvim_buf_delete(buf_id, { unload = true })` seems to be what `:bdelete` is described to be.\n\nI'll make a docs update for that, as a short-term fix. https://github.com/neovim/neovim/pull/33330\n\nWe can also add more `opts` flags if needed.\n\nSince `nvim_buf_delete` doesn't follow `:help dev-name-common`, I'd be in favor if introducing `nvim_buf_del` which has the \"preferred\" behavior if that is really wanted (and deprecate `nvim_buf_delete`). (Edit: [proposal](https://github.com/neovim/neovim/pull/33345#issuecomment-2781451069))",
            "created_at": "2025-04-05T15:16:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2780817619",
            "id": 2780817619,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6lv-jT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2780817619/reactions"
            },
            "updated_at": "2025-04-07T09:58:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2780817619",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For completeness, I'll duplicate [this comment](https://github.com/neovim/neovim/pull/33330#issuecomment-2781440361) here:\n\n> After actually trying it out, [this comment](https://github.com/neovim/neovim/issues/33314#issuecomment-2780814695) describes redundant steps. The `vim.api.nvim_buf_delete(buf_id, { unload = true })` already both unloads the buffer *and* makes it unlisted (while triggering `BufDelete` command). So I'd say this documentation is not needed. More like `unload` name is misleading and it actually does `:bdelete`.",
            "created_at": "2025-04-06T14:05:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2781441018",
            "id": 2781441018,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6lyWv6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2781441018/reactions"
            },
            "updated_at": "2025-04-06T14:05:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2781441018",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm not experienced working on neovim C code, but when I looked through the code, it looked like the stuff specific to `:bdelete` was indeed unlisting, but also some stuff which specifically clears options and variables (as per the `:bdelete` docs, I don't know if that happens on unlisting anyway or not). That said, I can't be sure I didn't miss anything, it goes through a lot of code shared between that and unload/wipeout to get there. So I'm not certain it is exactly unlisting only.",
            "created_at": "2025-04-07T17:48:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2784119138",
            "id": 2784119138,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6l8kli",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2784119138/reactions"
            },
            "updated_at": "2025-04-07T17:49:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2784119138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7932999?v=4",
                "events_url": "https://api.github.com/users/jamesb6626/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamesb6626/followers",
                "following_url": "https://api.github.com/users/jamesb6626/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesb6626/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamesb6626",
                "id": 7932999,
                "login": "jamesb6626",
                "node_id": "MDQ6VXNlcjc5MzI5OTk=",
                "organizations_url": "https://api.github.com/users/jamesb6626/orgs",
                "received_events_url": "https://api.github.com/users/jamesb6626/received_events",
                "repos_url": "https://api.github.com/users/jamesb6626/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamesb6626/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesb6626/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamesb6626",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The nvim_buf_delete lua function is very confusingly named, as by default it mimics :bwipeout, rather than :bdelete. This is despite a warning in the docs for :bwipeout which clearly states Don't use this unless you know what you are doing, so I don't really know why this choice was made.\n\nThe point wasn't to mimic bwipeout per see. The point was to actually delete the buffer, something which `bdelete` (equally confusingly)  fails to do, but bwipeout succeeds with doing. So ideally the default behavior of `nvim_buf_delete` should be to fully delete the buffer without messing up shada. as the latter half is not documented in `nvim_buf_delete()`  I'd consider fixing that (while still deleting the buffer for real) a bug fix which could be applied in place. ",
            "created_at": "2025-04-07T17:57:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2784139849",
            "id": 2784139849,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6l8ppJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2784139849/reactions"
            },
            "updated_at": "2025-04-07T17:57:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2784139849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The point was to actually delete the buffer, something which `bdelete` (equally confusingly) fails to do, but bwipeout succeeds with doing.\n\nConfusing naming here is indeed a problem. I understand the simplicity of having \"delete a buffer\" mean deleting a buffer. The issue is that there are several places in docs that have wipeout-delete-unload distinction mean what it means in Vim:\n- `:h :bwipeout`, `:h :bdelete`, and `:h :bunload`.\n- `:h BufWipeout`, `:h BufDelete`, `:h BufUnload`.\n\nThis is more in light of #33370 and my initial suggestion to make the new `nvim_buf_del` behave as `:bdelete` by default and in general being able to do what is documented for `:bwipeout`, `:bdelete`, `:bunload`. But if there are hidden issues with this approach (shada related or not), @bfredl, would you mind leaving a comment in #33370?",
            "created_at": "2025-04-07T18:16:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2784183752",
            "id": 2784183752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6l80XI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2784183752/reactions"
            },
            "updated_at": "2025-04-07T18:16:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2784183752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "IMO strictly defining the API \"in terms of\" existing ex commands is quite misguided. Needing to somehow \"choose\" one out of three legacy ex commands is not _at all_ what new a API function should be about, at that point you can just as well `nvim_command(\"[bufnr]mycommand\")`. The API should be defined in terms which are meaningful for API usage, with a set of flags to control various behaviors individually (without the \"bundling\" of unrelated changes that ex_cmds.c forces). \n\nThen, on top of those basic options, we should of course _document_ the equivalence of these three ex commands to API calls. This allows prior knowledge and frequent references of ex behaviors to be reused. \n\nIt is too late for me tonight but I'll look tomorrow if `nvim_buf_delete()` can be reasonable fixed in place to behave as documented.  The initial implementation happened to coincide with bwipeout as it was not documented to have bugs at that time (and I naively expected such bugs would be _fixed_, instead of being documented as bwipeout not should be used, but alas the vim way:p) ",
            "created_at": "2025-04-07T18:42:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2784241163",
            "id": 2784241163,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6l9CYL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2784241163/reactions"
            },
            "updated_at": "2025-04-07T18:42:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2784241163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> IMO strictly defining the API \"in terms of\" existing ex commands is quite misguided.\n> \n> Then, on top of those basic options, we should of course _document_ the equivalence of these three ex commands to API calls. This allows prior knowledge and frequent references of ex behaviors to be reused.\n\nSure, makes sense. Needs also to document how related autocommand events are triggered (or not).\n\nThe proposed wipeout-delete-unload approach for the possible future `nvim_buf_del()` was mostly to reduce documentation and user's cognitive overhead. That's what I'd expect as a user / plugin author, but I indeed totally acknowledge your better judgement here.\n",
            "created_at": "2025-04-07T19:01:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2784284090",
            "id": 2784284090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6l9M26",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2784284090/reactions"
            },
            "updated_at": "2025-04-07T19:01:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2784284090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "IMO, I think the new `nvim_buf_del` can receive several boolean options like `unload`, `unlist` and `wipeout` that old ex command can be implemented with options combinations.\n\nFor example,\n- `bunload bufnr` = `nvim_buf_del(bufnr, {unload=true})`\n- `bdelete bufnr` = `nvim_buf_del(bufnr, {unload=true, unlist=true})`\n- `bwipeout bufnr` = `nvim_buf_del(bufnr, {unload=true, unlist=true, wipeout=true})`",
            "created_at": "2025-04-08T01:52:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2785027614",
            "id": 2785027614,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6mACYe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785027614/reactions"
            },
            "updated_at": "2025-04-08T01:55:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785027614",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26767631?v=4",
                "events_url": "https://api.github.com/users/acehinnnqru/events{/privacy}",
                "followers_url": "https://api.github.com/users/acehinnnqru/followers",
                "following_url": "https://api.github.com/users/acehinnnqru/following{/other_user}",
                "gists_url": "https://api.github.com/users/acehinnnqru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/acehinnnqru",
                "id": 26767631,
                "login": "acehinnnqru",
                "node_id": "MDQ6VXNlcjI2NzY3NjMx",
                "organizations_url": "https://api.github.com/users/acehinnnqru/orgs",
                "received_events_url": "https://api.github.com/users/acehinnnqru/received_events",
                "repos_url": "https://api.github.com/users/acehinnnqru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/acehinnnqru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/acehinnnqru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/acehinnnqru",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> IMO, I think the new `nvim_buf_del` can receive several boolean options like `unload`, `unlist` and `wipeout` that old ex command can be implemented with options combinations.\n\nUsing flags is usually a better choice if their effect is independent and thus flags can be combined. This is not the case here:\n- With `wipeout = true` either `unload = false` or `unlist = false` is impossible to achieve (i.e. it is not possible to wipeout buffer but not unload/unlist).\n- Having all `false` also doesn't really make much sense, as no action is applied. This also raises the question about default values of flags.\n- The `unlist = true` is essentially the same as `vim.bo[bufnr].buflisted = true`, so a bit redundant. The same can be said about proposed `\"delete\"` type of action (as it is `\"unload\"` + `vim.bo[bufnr].buflisted = true`), but its benefit is reusing concepts/documentation from already existing `:bdelete` command.",
            "created_at": "2025-04-08T08:00:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2785578164",
            "id": 2785578164,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6mCIy0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785578164/reactions"
            },
            "updated_at": "2025-04-08T08:00:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785578164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "yeah, `wipeout` is not going to be a flag, as \"wipeout\" is not a separate thing you can actually do. it is just a burning memory of the fact that vim needed to add a second ex command after `bdelete` which means \"delete but _actually_ delete but oops it has bugs so you cannot use that one either, aha~ \". ",
            "created_at": "2025-04-08T08:23:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2785637650",
            "id": 2785637650,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6mCXUS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 4,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785637650/reactions"
            },
            "updated_at": "2025-04-08T08:24:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785637650",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "As I can tell, the old `nvim_buf_delete` actually check the unload to determine the action, as,\n```\nunload ? DOBUF_UNLOAD : DOBUF_WIPE\n```\n\nIf we won't like to correct it, we could simplely change the default behavior to `DOBUF_DELETE`.\n\nThat means we don't need to introduce a new `nvim_buf_del` api",
            "created_at": "2025-04-08T09:07:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2785754827",
            "id": 2785754827,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6mCz7L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785754827/reactions"
            },
            "updated_at": "2025-04-13T13:31:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785754827",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26767631?v=4",
                "events_url": "https://api.github.com/users/acehinnnqru/events{/privacy}",
                "followers_url": "https://api.github.com/users/acehinnnqru/followers",
                "following_url": "https://api.github.com/users/acehinnnqru/following{/other_user}",
                "gists_url": "https://api.github.com/users/acehinnnqru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/acehinnnqru",
                "id": 26767631,
                "login": "acehinnnqru",
                "node_id": "MDQ6VXNlcjI2NzY3NjMx",
                "organizations_url": "https://api.github.com/users/acehinnnqru/orgs",
                "received_events_url": "https://api.github.com/users/acehinnnqru/received_events",
                "repos_url": "https://api.github.com/users/acehinnnqru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/acehinnnqru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/acehinnnqru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/acehinnnqru",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This seems to be related to #24031 ",
            "created_at": "2025-04-13T06:41:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/33314#issuecomment-2799798483",
            "id": 2799798483,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33314",
            "node_id": "IC_kwDOAPphoM6m4YjT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2799798483/reactions"
            },
            "updated_at": "2025-04-13T06:41:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2799798483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33314/comments",
    "created_at": "2025-04-04T15:58:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33314/events",
    "html_url": "https://github.com/neovim/neovim/issues/33314",
    "id": 2972810042,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk, self-contained. Do NOT ask \"can I work on this\", just read CONTRIBUTING.md",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33314/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 272,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 322,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-04-14T11:08:54Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6xMXs6",
    "number": 33314,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33314/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33314/timeline",
    "title": "`nvim_buf_delete` is confusing, no lua equivalent of `:bdelete`",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-13T13:31:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33314",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7932999?v=4",
        "events_url": "https://api.github.com/users/jamesb6626/events{/privacy}",
        "followers_url": "https://api.github.com/users/jamesb6626/followers",
        "following_url": "https://api.github.com/users/jamesb6626/following{/other_user}",
        "gists_url": "https://api.github.com/users/jamesb6626/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jamesb6626",
        "id": 7932999,
        "login": "jamesb6626",
        "node_id": "MDQ6VXNlcjc5MzI5OTk=",
        "organizations_url": "https://api.github.com/users/jamesb6626/orgs",
        "received_events_url": "https://api.github.com/users/jamesb6626/received_events",
        "repos_url": "https://api.github.com/users/jamesb6626/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jamesb6626/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jamesb6626/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jamesb6626",
        "user_view_type": "public"
    }
}