{
    "active_lock_reason": "off-topic",
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!-- Before reporting: search existing issues and check the FAQ. -->\r\n\r\n- `nvim --version`: NVIM v0.3.1\r\n- Vim (version: ) behaves differently? no.\r\n- Operating system/version: Arch linux\r\n- Terminal name/version: Alacritty/0.1.0\r\n- `$TERM`: xterm-256color\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\n```\r\nnvim -u NORC +terminal\r\nIn the terminal mode go into insert mode, write something.\r\nGo back into normal mode(still in terminal) try to change or delete \r\nthe search terms. \r\n\r\n```\r\n\r\n### Actual behaviour\r\ncannot make changes, 'modifiable' is off\r\n\r\n### Expected behaviour\r\ndo whatever would normally happen to text whenever you use cw, D, dw etc.\r\n\r\n----\r\n\r\nI could probably solve this by just setting the buffer modifiable, but is there some problems with this since this is the default behavior? is there a preferred way of doing this? And how do i apply it only to the terminal buffer and nothing else all the time?\r\n\r\nThanks. ",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "When you `dd` a line from `top`, what do you expect to happen?\r\n\r\n`:terminal` 'modifiable' is supported only unofficially, and only for use by plugins (https://github.com/neovim/neovim/issues/2607). As a user it's meaningless.\r\n\r\n",
            "created_at": "2018-08-01T18:00:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-409666041",
            "id": 409666041,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY2NjA0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409666041/reactions"
            },
            "updated_at": "2018-08-01T18:00:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409666041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I don't want to ```dd``` from ```top```, i guess that would delete content in the terminal. I want to be able to use the vim commands for editing the text i wrote my self on the cmdline, just like when i use  ```set -o vi``` in bash or ```vi-mode``` plugin in zsh. \r\nI can see you're giving it a label like 'wontfix' and 'enhancement' .. I wern't really talking about a feature, i am just wondering if everybody using the nvim terminal is actually going back to not using ```set -o vi``` or ```vi-mode```. It is mainly just a question.\r\n ",
            "created_at": "2018-08-02T10:06:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-409876123",
            "id": 409876123,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTg3NjEyMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409876123/reactions"
            },
            "updated_at": "2018-08-02T10:06:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409876123",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8144937?v=4",
                "events_url": "https://api.github.com/users/DenLilleMand/events{/privacy}",
                "followers_url": "https://api.github.com/users/DenLilleMand/followers",
                "following_url": "https://api.github.com/users/DenLilleMand/following{/other_user}",
                "gists_url": "https://api.github.com/users/DenLilleMand/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DenLilleMand",
                "id": 8144937,
                "login": "DenLilleMand",
                "node_id": "MDQ6VXNlcjgxNDQ5Mzc=",
                "organizations_url": "https://api.github.com/users/DenLilleMand/orgs",
                "received_events_url": "https://api.github.com/users/DenLilleMand/received_events",
                "repos_url": "https://api.github.com/users/DenLilleMand/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DenLilleMand/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DenLilleMand/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DenLilleMand",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I want to be able to use the vim commands for editing the text i wrote my self on the cmdline, just like when i use set -o vi in bash or vi-mode plugin in zsh.\r\n\r\nThe problem is that the embedded process won't be able to see those edits (it should be possible to hack it one shell-like terminal program at a time, but there is no general solution). There are plugins that instead lets you edit text in a scratch buffer and then send it to the terminal, some are mentioned here https://github.com/neovim/neovim/wiki/Related-projects",
            "created_at": "2018-08-02T10:16:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-409878628",
            "id": 409878628,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTg3ODYyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409878628/reactions"
            },
            "updated_at": "2018-08-02T10:16:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409878628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It might be worth reading about/playing with Emacs' [shell/terminal support](https://www.gnu.org/software/emacs/manual/html_node/emacs/Shell.html).  It does allow you to modify the buffer as well as has line-buffered vs. immediate (char) input modes.  In line-buffered input, you can use normal editing commands to manipulate your input before sending it to the sub-process.\r\n\r\nAs far as the top example, I would expect it to delete that line from the buffer, which will then be undone next time top redraws the screen.  Alternatively, editing of the buffer could be disabled when in the altscreen (like top uses) but enabled otherwise.",
            "created_at": "2018-08-02T13:42:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-409930439",
            "id": 409930439,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTkzMDQzOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409930439/reactions"
            },
            "updated_at": "2018-08-02T13:42:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409930439",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I really like that suggestion. Thanks @jamessan, that was actually one of my own intuitions about how to get around this as well. ",
            "created_at": "2018-08-02T14:04:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-409937905",
            "id": 409937905,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTkzNzkwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409937905/reactions"
            },
            "updated_at": "2018-08-02T14:04:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409937905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8144937?v=4",
                "events_url": "https://api.github.com/users/DenLilleMand/events{/privacy}",
                "followers_url": "https://api.github.com/users/DenLilleMand/followers",
                "following_url": "https://api.github.com/users/DenLilleMand/following{/other_user}",
                "gists_url": "https://api.github.com/users/DenLilleMand/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DenLilleMand",
                "id": 8144937,
                "login": "DenLilleMand",
                "node_id": "MDQ6VXNlcjgxNDQ5Mzc=",
                "organizations_url": "https://api.github.com/users/DenLilleMand/orgs",
                "received_events_url": "https://api.github.com/users/DenLilleMand/received_events",
                "repos_url": "https://api.github.com/users/DenLilleMand/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DenLilleMand/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DenLilleMand/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DenLilleMand",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I marked this (the general case) as `wontfix` but the specific case for supporting shells is tentatively planned.\r\n\r\n> As far as the top example, I would expect it to delete that line from the buffer, which will then be undone next time top redraws the screen. \r\n\r\nemacs does wonky things like that, and it's really uncomfortable (usually a user mistake, which then leads to confusion). It's a [false affordance](https://en.wikipedia.org/wiki/Affordance#False_affordances).\r\n\r\n> Alternatively, editing of the buffer could be disabled when in the altscreen (like top uses) but enabled otherwise.\r\n\r\nUsing altscreen as a hint is a great idea!\r\n\r\n>  line-buffered vs. immediate (char) input modes\r\n\r\nWould it be best to start with a basic adapter like:\r\n\r\n- copy the last line of the :terminal buffer to a new, temporary, editable floating window\r\n- delete the shell prompt line: send `ctrl-u` or `<bs><bs><bs>...` (or `ctrl-c` in cmd.exe)\r\n    - guess the shell prompt \"prefix\" by comparing the state after clearing the prompt line\r\n- send the user's edited line back to the terminal job (shell)",
            "created_at": "2018-08-02T14:11:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-409940181",
            "id": 409940181,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTk0MDE4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409940181/reactions"
            },
            "updated_at": "2023-06-05T13:55:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409940181",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Would it be best to start with a basic adapter like:\r\n\r\nHow will the prompt be detected? By a supplied regex? Or perhaps by comparing with the state after `<c-u>` ? (sounds like a hack, but if it works...)",
            "created_at": "2018-08-02T14:18:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-409942574",
            "id": 409942574,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTk0MjU3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409942574/reactions"
            },
            "updated_at": "2018-08-02T14:18:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409942574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Or perhaps by comparing with the state after `<c-u>`\r\n\r\nThat's what I was leaning towards. Updated my comment.\r\n\r\nI'm not fond of regex configuration, this is why people install syntastic instead of touching 'errorformat'.",
            "created_at": "2018-08-02T14:24:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-409944752",
            "id": 409944752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTk0NDc1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409944752/reactions"
            },
            "updated_at": "2018-08-02T14:25:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409944752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> How will the prompt be detected? By a supplied regex? Or perhaps by comparing with the state after <c-u> ? (sounds like a hack, but if it works...)\r\n\r\nQuoting from Emacs' manual:\r\n\r\n> Normally, Comint mode (and thus Shell mode) automatically figures out which part of the buffer is a prompt, based on the output of the subprocess. (Specifically, it assumes that any received output line which doesn't end with a newline is a prompt.) \r\n> \r\n> Comint mode divides the buffer into two types of fields: input fields (where user input is typed) and output fields (everywhere else). Prompts are part of the output fields. Most Emacs motion commands do not cross field boundaries, unless they move over multiple lines. For instance, when point is in the input field on a shell command line, `C-a` puts point at the beginning of the input field, after the prompt.\r\n> \r\n> If you change the variable `comint-use-prompt-regexp` to a non-`nil` value, then Comint mode will recognize prompts using a regular expression (see Regexps). In Shell mode, the regular expression is specified by the variable `shell-prompt-pattern`. The default value of `comint-use-prompt-regexp` is `nil`, because this method for recognizing prompts is unreliable, but you may want to set it to a non-`nil` value in unusual circumstances.\r\n\r\n\"If it doesn't end with newline, it's a prompt\" seems like a pretty straight-forward starting point (no pun intended).  That's likely to work for most use cases and would give data points for improvements once people describe where it falls short.  No messing around deleting stuff to try guessing where the prompt is.",
            "created_at": "2018-08-03T00:52:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-410110967",
            "id": 410110967,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDExMDk2Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/410110967/reactions"
            },
            "updated_at": "2018-08-03T00:52:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/410110967",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> \"If it doesn't end with newline, it's a prompt\" seems like a pretty straight-forward starting point (no pun intended). That's likely to work for most use cases and would give data points for improvements once people describe where it falls short. No messing around deleting stuff to try guessing where the prompt is.\r\n\r\n@jamessan Of course it simpler, when it doesn't solve the same problem as @justinmk and I were discussing. They talk about classifying _lines_ as either \"output lines\" and \"prompt lines\", and doesn't expect any user input managed by the subprocess. It doesn't talk how to divide a prompt line, which could be constructed by a prompt, process-side autocomplete and history recall, and direct user input, into a \"prompt\" and \"user input\" (much of which can be process generated) parts. Or how would \"If it doesn't end with newline, it's a prompt\" tell us that?",
            "created_at": "2018-08-03T06:33:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-410158681",
            "id": 410158681,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDE1ODY4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/410158681/reactions"
            },
            "updated_at": "2018-08-03T06:33:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/410158681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Does Vim support this feature?",
            "created_at": "2018-08-11T01:16:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-412240805",
            "id": 412240805,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI0MDgwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/412240805/reactions"
            },
            "updated_at": "2018-08-11T01:16:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/412240805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8740057?v=4",
                "events_url": "https://api.github.com/users/janlazo/events{/privacy}",
                "followers_url": "https://api.github.com/users/janlazo/followers",
                "following_url": "https://api.github.com/users/janlazo/following{/other_user}",
                "gists_url": "https://api.github.com/users/janlazo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/janlazo",
                "id": 8740057,
                "login": "janlazo",
                "node_id": "MDQ6VXNlcjg3NDAwNTc=",
                "organizations_url": "https://api.github.com/users/janlazo/orgs",
                "received_events_url": "https://api.github.com/users/janlazo/received_events",
                "repos_url": "https://api.github.com/users/janlazo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/janlazo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/janlazo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/janlazo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@janlazo Bram added a \"prompt buffer type\" which attempts something like this, or is intended to. But I would prefer to support it implicitly in `:terminal` buffers, not a new buffer type.",
            "created_at": "2018-08-11T14:15:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-412277843",
            "id": 412277843,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI3Nzg0Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/412277843/reactions"
            },
            "updated_at": "2018-08-11T14:15:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/412277843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If this feature needs 8.1.0027, then this likely won't be resolved by the next point release. At least, I won't be working on it because there's other buffer patches to deal with it.\r\n\r\nSorting out the N/A patches from https://gist.github.com/janlazo/cea7acf2711e89a9bc4f7c79612c6e54#terminal would be a headstart.",
            "created_at": "2018-08-11T23:49:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-412308754",
            "id": 412308754,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjMwODc1NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/412308754/reactions"
            },
            "updated_at": "2018-08-11T23:49:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/412308754",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8740057?v=4",
                "events_url": "https://api.github.com/users/janlazo/events{/privacy}",
                "followers_url": "https://api.github.com/users/janlazo/followers",
                "following_url": "https://api.github.com/users/janlazo/following{/other_user}",
                "gists_url": "https://api.github.com/users/janlazo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/janlazo",
                "id": 8740057,
                "login": "janlazo",
                "node_id": "MDQ6VXNlcjg3NDAwNTc=",
                "organizations_url": "https://api.github.com/users/janlazo/orgs",
                "received_events_url": "https://api.github.com/users/janlazo/received_events",
                "repos_url": "https://api.github.com/users/janlazo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/janlazo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/janlazo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/janlazo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/xb-bx/editable-term.nvim claims to be able to do this. If it works well, we should upstream it. The code is minimal. Uses OSC 133.",
            "created_at": "2025-04-14T15:04:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/8805#issuecomment-2802021870",
            "id": 2802021870,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8805",
            "node_id": "IC_kwDOAPphoM6nA3Xu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2802021870/reactions"
            },
            "updated_at": "2025-04-14T15:04:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2802021870",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/8805/comments",
    "created_at": "2018-08-01T12:56:08Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/8805/events",
    "html_url": "https://github.com/neovim/neovim/issues/8805",
    "id": 346587946,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/8805/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUzNDY1ODc5NDY=",
    "number": 8805,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/8805/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/8805/timeline",
    "title": ":terminal : normal-mode editing for shell prompt",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:33Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/8805",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8144937?v=4",
        "events_url": "https://api.github.com/users/DenLilleMand/events{/privacy}",
        "followers_url": "https://api.github.com/users/DenLilleMand/followers",
        "following_url": "https://api.github.com/users/DenLilleMand/following{/other_user}",
        "gists_url": "https://api.github.com/users/DenLilleMand/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/DenLilleMand",
        "id": 8144937,
        "login": "DenLilleMand",
        "node_id": "MDQ6VXNlcjgxNDQ5Mzc=",
        "organizations_url": "https://api.github.com/users/DenLilleMand/orgs",
        "received_events_url": "https://api.github.com/users/DenLilleMand/received_events",
        "repos_url": "https://api.github.com/users/DenLilleMand/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/DenLilleMand/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DenLilleMand/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/DenLilleMand",
        "user_view_type": "public"
    }
}