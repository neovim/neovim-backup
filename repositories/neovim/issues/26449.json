{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nCurrently there is no proper enough way for users (plugins) to act when snippet session is started or ended. This is useful, for example, in the following cases:\r\n- Set mapping to be active only when snippet session is active.\r\n- Create autocommand to be active only when snippet session is active. Like to stop snippet session when exiting to `Normal` mode by using `ModeChanged` event (created on `SnippetEnter`, deleted on `SnippetLeave`).\r\n\r\nBoth these use cases *can* be worked around by having `if vim.snippet.active()` check inside of them, but it seems very wasteful to have mapping/autocommand all the time when it is only needed during active snippet session.\n\n### Expected behavior\n\n`SnippetEnter` and `SnippetLeave` `User` events which trigger when snippet session starts and ends. Ideally, with some snippet parsing data parsed in `data` of autocommand's callback.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Set mapping to be active only when snippet session is active\r\n\r\nMappings during a snippet seems overwrought, but otoh 'keymap' depends on mappings, for example.\r\n\r\nA new event seems clumsy for this, though, since it sounds like you actually want a \"mode\": https://github.com/neovim/neovim/issues/992\r\n\r\nIt's common for snippet plugins (e.g. UltiSnips) to use `:help Select-mode` for snippets. Are we using that?",
            "created_at": "2023-12-07T11:07:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/26449#issuecomment-1845145737",
            "id": 1845145737,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26449",
            "node_id": "IC_kwDOAPphoM5t-rCJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845145737/reactions"
            },
            "updated_at": "2023-12-07T11:07:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845145737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Let's not be premature here. Events and autocommands are _the_ way Neovim communicates state, and we do want people to be able to hook into and customize snippet expansion. While the sample use case in the issue alone is not necessarily a compelling argument, I would like to collect other use cases that can be handled with this; if there's enough of them, this would be worth it -- especially since it'd be straightforward to add and document (@mariasolos?), compared to the alternative of exposing currently private functions.\r\n\r\n> It's common for snippet plugins (e.g. UltiSnips) to use :help Select-mode for snippets. Are we using that?\r\n\r\nYes, but only for placeholders. It doesn't apply to tabstops without \"default text\", so this is irrelevant to this issue.\r\n\r\n",
            "created_at": "2023-12-07T11:11:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/26449#issuecomment-1845151812",
            "id": 1845151812,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26449",
            "node_id": "IC_kwDOAPphoM5t-shE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845151812/reactions"
            },
            "updated_at": "2023-12-07T11:11:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845151812",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> A new event seems clumsy for this, though, since it sounds like you actually want a \"mode\": #992\r\n\r\nWhat I actually want (right now) is a clean way to implement \"stop snippet session after exit to Normal mode\" behavior.",
            "created_at": "2023-12-07T11:12:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/26449#issuecomment-1845152090",
            "id": 1845152090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26449",
            "node_id": "IC_kwDOAPphoM5t-sla",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845152090/reactions"
            },
            "updated_at": "2023-12-07T11:12:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845152090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What I actually want (right now) is a clean way to implement \"stop snippet session after exit to Normal mode\" behavior.\r\n\r\n\r\nTo add for completeness sake, the current workarounds for that concrete use-case:\r\n\r\na) Override all keys that switch to normal mode, to call snippet.exit, e.g.:\r\n\r\n```\r\nkeymap.set({'i', 's'}, '<ESC>', function()\r\n  if vim.snippet then\r\n    vim.snippet.exit()\r\n  end\r\n  return '<ESC>'\r\nend, { expr = true })\r\n```\r\n\r\n\r\nb) Call `vim.snippet.exit()` in a `ModeChanged` event.\r\n\r\n\r\n---\r\n\r\n\r\nDownsides:\r\n- Cost of `vim.snippet.exit()` always firing (Maybe ns or microsecond range?)\r\n- Cost of the `ModeChanged` event always firing if using `b)`\r\n- Upside: Shorter than setting up a `SnippetEnter` & `SnippetLeave` that manage `ModeChanged`\r\n",
            "created_at": "2023-12-07T12:54:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/26449#issuecomment-1845293096",
            "id": 1845293096,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26449",
            "node_id": "IC_kwDOAPphoM5t_PAo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845293096/reactions"
            },
            "updated_at": "2023-12-07T12:54:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845293096",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm in favour of having snippet events and moving the cancellation logic responsibility to the user. We've had issues with cancellation before (e.g. https://github.com/neovim/neovim/pull/25835).\r\n\r\n> I would like to collect other use cases that can be handled with this; if there's enough of them, this would be worth it -- especially since it'd be straightforward to add and document (@MariaSolOs?), \r\n\r\nGiven the current \"experimental\" state of the snippet API, I much rather prefer this approach than exposing a changing interface.",
            "created_at": "2023-12-07T17:28:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/26449#issuecomment-1845784239",
            "id": 1845784239,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26449",
            "node_id": "IC_kwDOAPphoM5uBG6v",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845784239/reactions"
            },
            "updated_at": "2023-12-07T17:29:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845784239",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > What I actually want (right now) is a clean way to implement \"stop snippet session after exit to Normal mode\" behavior.\r\n> \r\n> To add for completeness sake, the current workarounds for that concrete use-case:\r\n> \r\n> a) Override all keys that switch to normal mode, to call snippet.exit, e.g.:\r\n> \r\n> ```\r\n> keymap.set({'i', 's'}, '<ESC>', function()\r\n>   if vim.snippet then\r\n>     vim.snippet.exit()\r\n>   end\r\n>   return '<ESC>'\r\n> end, { expr = true })\r\n> ```\r\n> \r\n> b) Call `vim.snippet.exit()` in a `ModeChanged` event.\r\n\r\nAfter actually trying to use `ModeChanged` event, it doesn't really work in all cases. It can get triggered when navigating through tabstops with non empty text (either previously entered one and going back to it, or a tabstop with placeholder). This seems to be because tabstop selection itself exits to Normal mode: [here](https://github.com/neovim/neovim/blob/b2d471ab337e56f660eb7c89ae24f447f7b7a165/runtime/lua/vim/snippet.lua#L279) and [here](https://github.com/neovim/neovim/blob/b2d471ab337e56f660eb7c89ae24f447f7b7a165/runtime/lua/vim/snippet.lua#L289).\r\n\r\nSo under current implementation I don't \"stop snippet session if user exited to Normal mode\" is possible with autocommand. Using a global remap for `<Esc>` is not really an option in the case of a general plugin (which relies on `vim.snippet` functionality). Making that remap being local and only during snippet session is rather painful but acceptable.",
            "created_at": "2023-12-07T17:53:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/26449#issuecomment-1845843529",
            "id": 1845843529,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26449",
            "node_id": "IC_kwDOAPphoM5uBVZJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845843529/reactions"
            },
            "updated_at": "2023-12-07T17:56:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845843529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm in favour of having snippet events and moving the cancellation logic responsibility to the user. We've had issues with cancellation before \r\n\r\nIf there is no cancellation by default it also means users cannot use snippets at all without defining their own logic, as they would forever stay in snippet mode.\r\nI'd even tend towards going the opposite direction: Set more defaults for snippets (like keymaps). In part because not having any defaults means we cannot have snippet expansion enabled for completion by default either. That means we can't set the LSP capability, which means users who _do_ want to use it have to do more configuration work.\r\n\r\n\r\nNeovim lists strong defaults as a feature/goal and I think we should try and achieve that, as long as it's not too disruptive and controversial. I'm not yet convinced that snippet cancellation is _that_ opinionated, and that we can't come up with a default behavior that will work good enough for most users.\r\n",
            "created_at": "2023-12-07T18:12:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/26449#issuecomment-1845871271",
            "id": 1845871271,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26449",
            "node_id": "IC_kwDOAPphoM5uBcKn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845871271/reactions"
            },
            "updated_at": "2023-12-07T18:14:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845871271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If there is no cancellation by default it also means users cannot use snippets at all without defining their own logic, as they would forever stay in snippet mode.\r\n\r\nI interpreted this as \"early cancellation\"; the snippet would of course still exit when reaching `$0`.  Of course, without _any_ other cancellation logic, it would be on us to make sure that is reachable. I think having a bit more, permissive, logic by default would be reasonable (i.e., erring on the side of staying in snippet mode too long) and punting the rest to user customization...\r\n\r\n...which brings me to my next point: we should not focus here too much on this specific use case, as the issue is more generally about Snippet events. We've heard one use case (that not everyone found compelling) so far; let's wait for others.\r\n\r\n(The point here is not to make people \"earn\" this feature; it's to make sure that if this feature is added, we won't have to add _another_ entry point for customization later on. Measure once, cut twice, and whatnot.)",
            "created_at": "2023-12-07T18:19:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/26449#issuecomment-1845881649",
            "id": 1845881649,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26449",
            "node_id": "IC_kwDOAPphoM5uBesx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845881649/reactions"
            },
            "updated_at": "2023-12-07T18:20:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845881649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If there is no cancellation by default it also means users cannot use snippets at all without defining their own logic, as they would forever stay in snippet mode.\r\n\r\nRight, I wasn't suggesting on moving the responsibility _entirely_ ;)\r\n\r\n> I'd even tend towards going the opposite direction: Set more defaults for snippets (like keymaps). In part because not having any defaults means we cannot have snippet expansion enabled for completion by default either. That means we can't set the LSP capability, which means users who do want to use it have to do more configuration work.\r\n\r\nI like this and I think we should keep this goal. However maybe we should make clear what the purpose of those defaults are, and what level of customization (if at all) we're willing to accommodate.",
            "created_at": "2023-12-07T19:46:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/26449#issuecomment-1845998156",
            "id": 1845998156,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26449",
            "node_id": "IC_kwDOAPphoM5uB7JM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845998156/reactions"
            },
            "updated_at": "2023-12-07T19:46:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1845998156",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "sketch of \"user defined modes\": https://github.com/neovim/neovim/issues/992#issuecomment-2577779050",
            "created_at": "2025-01-08T14:16:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/26449#issuecomment-2577780179",
            "id": 2577780179,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26449",
            "node_id": "IC_kwDOAPphoM6Zpc3T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2577780179/reactions"
            },
            "updated_at": "2025-01-08T14:16:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2577780179",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26449/comments",
    "created_at": "2023-12-07T10:57:06Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26449/events",
    "html_url": "https://github.com/neovim/neovim/issues/26449",
    "id": 2030478541,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26449/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM55BqTN",
    "number": 26449,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26449/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26449/timeline",
    "title": "Add `SnippetEnter` and `SnippetLeave` events",
    "updated_at": "2025-01-17T15:27:49Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26449",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}