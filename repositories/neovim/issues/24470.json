{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI reported this bug to `wl-clipboard` a couple of weeks ago, https://github.com/bugaevc/wl-clipboard/issues/185. `wl-paste` will hang in when you copy something from an XWayland application and then quit the application before pasting.  Neovim will also hang at this point.\r\n\r\nI personally don't agree with the conclusion in the issue there, they say that `wl-paste` is allowed to hang because it's a command line application and that all users of it, so including `neovim` should deal with it. IMO, `wl-paste` should have a default short timeout. But since that won't get fixed there, and I don't have any arguing power, I have no other choice than  to report the bug here.\r\n\r\nNow the root cause might be in KDE Plasma, but even if that's fixed, some other client might misbehave and cause similar behaviour, so there need to be a timeout somewhere. I could even argue that it's a Wayland protocol bug that allows clients to stop sending data, as far as I can see there's nothing in the specifications that disallows it.\r\n\r\nBut in any case this is a quite serious bug that needs to be fixed, and it happens very frequently for me, because I use `P4Merge`, which is an XWayland application as a merge tool, and usually copy and paste stuff there, and close it.\n\n### Steps to reproduce\n\n1. Open nvim\r\n2. Open an XWayland application on KDE Plasma\r\n3. Copy some text inside that\r\n4. Close the application\r\n5. Notice that nvim hangs, you don't even need to try to paste anything\r\n\r\nThe only way to make it responsive again is to copy some other text, and then run `pkill wl-paste`\n\n### Expected behavior\n\nNeovim should not hang\n\n### Neovim version (nvim -v)\n\n0.9.1\n\n### Vim (not Nvim) behaves the same?\n\nno, Vim 9.0\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nAlacritty\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\npacman",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
        "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
        "followers_url": "https://api.github.com/users/fredizzimo/followers",
        "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
        "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fredizzimo",
        "id": 9946255,
        "login": "fredizzimo",
        "node_id": "MDQ6VXNlcjk5NDYyNTU=",
        "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
        "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
        "repos_url": "https://api.github.com/users/fredizzimo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fredizzimo",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Nvim has `wait()`, but that probably isn't needed here. `jobwait()` also takes a timeout parameter. It looks like the clipboard provider `s:try_cmd` is using systemlist() which does _not_ take a timeout parameter: https://github.com/neovim/neovim/blob/79c2030db832e3605932a2bd3222af8781435a3c/runtime/autoload/provider/clipboard.vim#L39\r\n\r\nHowever based on your repro steps I don't think the issue issue is with `s:try_cmd`. There is this code: https://github.com/neovim/neovim/blob/79c2030db832e3605932a2bd3222af8781435a3c/runtime/autoload/provider/clipboard.vim#L234-L236\r\n\r\nbut `jobstop()` shouldn't hang.\r\n\r\nThe good news is that the problem is somewhere in `runtime/autoload/provider/clipboard.vim`. If you can narrow down the call that actually hangs, the fix may be obvious.",
            "created_at": "2023-07-25T12:51:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-1649781713",
            "id": 1649781713,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM5iVavR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1649781713/reactions"
            },
            "updated_at": "2023-07-25T12:51:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1649781713",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It seems that fish also suffers from this.",
            "created_at": "2023-07-25T13:08:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-1649814743",
            "id": 1649814743,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM5iVizX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1649814743/reactions"
            },
            "updated_at": "2023-07-25T13:08:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1649814743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "GDB backtrace:\r\n```\r\n#0  0x00007ffff7d8308d in epoll_pwait () from /usr/lib/libc.so.6\r\n#1  0x0000555557c894da in uv__io_poll (loop=0x55555901bc60 <main_loop>, timeout=-1) at **/.deps/build/src/libuv/src/unix/linux.c:1359\r\n#2  0x0000555557c6c0c6 in uv_run (loop=0x55555901bc60 <main_loop>, mode=UV_RUN_ONCE) at **/.deps/build/src/libuv/src/unix/core.c:447\r\n#3  0x0000555556a2753e in loop_uv_run (loop=0x55555901bc60 <main_loop>, ms=-1, once=true) at **/src/nvim/event/loop.c:65\r\n#4  0x0000555556a279a2 in loop_poll_events (loop=0x55555901bc60 <main_loop>, ms=-1) at **/src/nvim/event/loop.c:87\r\n#5  0x0000555556a370cd in process_wait (proc=0x7ffff65770e0, ms=-1, events=0x60400000bc10) at **/src/nvim/event/process.c:188\r\n#6  0x000055555728ca45 in do_os_system (argv=0x60300000a0f0, input=0x602000017c70 \"\", len=0, output=0x7ffff6027d90, nread=0x7ffff6027d70, silent=true, forward_output=false) at **/src/nvim/os/shell.c:923\r\n#7  0x000055555728e964 in os_system (argv=0x60300000a0f0, input=0x602000017c70 \"\", len=0, output=0x7ffff6027d90, nread=0x7ffff6027d70) at **/src/nvim/os/shell.c:841\r\n#8  0x00005555567dd921 in get_system_output_as_rettv (argvars=0x7ffff61db020, rettv=0x7ffff6026220, retlist=true) at **/src/nvim/eval.c:5696\r\n#9  0x000055555691c435 in f_systemlist (argvars=0x7ffff61db020, rettv=0x7ffff6026220, fptr=...) at **/src/nvim/eval/funcs.c:8315\r\n#10 0x00005555568ac93b in call_internal_func (fname=0x602000017c50 \"systemlist\", argcount=3, argvars=0x7ffff61db020, rettv=0x7ffff6026220) at **/src/nvim/eval/funcs.c:270\r\n#11 0x00005555569b4fa3 in call_func (funcname=0x602000017c10 \"systemlist\", len=10, rettv=0x7ffff6026220, argcount_in=3, argvars_in=0x7ffff61db020, funcexe=0x7ffff6026660) at **/src/nvim/eval/userfunc.c:1718\r\n#12 0x00005555569b147e in get_func_tv (name=0x602000017c10 \"systemlist\", len=10, rettv=0x7ffff6026220, arg=0x7ffff5ead560, evalarg=0x7ffff6026280, funcexe=0x7ffff6026660) at **/src/nvim/eval/userfunc.c:556\r\n#13 0x0000555556824c42 in eval_func (arg=0x7ffff5ead560, evalarg=0x7ffff6026280, name=0x606000007b8c \"systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)\", name_len=10, rettv=0x7ffff6026220, flags=1, basetv=0x0) at **/src/nvim/eval.c:2214\r\n#14 0x000055555681c8ed in eval7 (arg=0x7ffff5ead560, rettv=0x7ffff6026220, evalarg=0x7ffff6026280, want_string=false) at **/src/nvim/eval.c:3141\r\n#15 0x000055555681904a in eval6 (arg=0x7ffff5ead560, rettv=0x7ffff6026220, evalarg=0x7ffff6026280, want_string=false) at **/src/nvim/eval.c:2868\r\n#16 0x00005555568171be in eval5 (arg=0x7ffff5ead560, rettv=0x7ffff6026220, evalarg=0x7ffff6026280) at **/src/nvim/eval.c:2724\r\n#17 0x0000555556815b73 in eval4 (arg=0x7ffff5ead560, rettv=0x7ffff6026220, evalarg=0x7ffff6026280) at **/src/nvim/eval.c:2599\r\n#18 0x000055555681496e in eval3 (arg=0x7ffff5ead560, rettv=0x7ffff6026220, evalarg=0x7ffff6026280) at **/src/nvim/eval.c:2508\r\n#19 0x00005555567bdcce in eval2 (arg=0x7ffff5ead560, rettv=0x7ffff6026220, evalarg=0x7ffff6026280) at **/src/nvim/eval.c:2430\r\n#20 0x00005555567ad0fd in eval1 (arg=0x7ffff5ead560, rettv=0x7ffff6026220, evalarg=0x7ffff6026280) at **/src/nvim/eval.c:2334\r\n#21 0x00005555567a9e91 in eval0 (arg=0x606000007b8c \"systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)\", rettv=0x7ffff6026220, eap=0x7ffff6223040, evalarg=0x7ffff6026280) at **/src/nvim/eval.c:2279\r\n#22 0x00005555569f8550 in ex_let (eap=0x7ffff6223040) at **/src/nvim/eval/vars.c:408\r\n#23 0x0000555556ad885f in execute_cmd0 (retv=0x7ffff6223280, eap=0x7ffff6223040, errormsg=0x7ffff6223020, preview=false) at **/src/nvim/ex_docmd.c:1634\r\n#24 0x0000555556ab5859 in do_one_cmd (cmdlinep=0x7ffff63bd020, flags=7, cstack=0x7ffff63bd040, fgetline=0x5555569bf930 <get_func_line>, cookie=0x61d00000c880) at **/src/nvim/ex_docmd.c:2293\r\n#25 0x0000555556aa60ee in do_cmdline (cmdline=0x0, fgetline=0x5555569bf930 <get_func_line>, cookie=0x61d00000c880, flags=7) at **/src/nvim/ex_docmd.c:592\r\n#26 0x00005555569bc24d in call_user_func (fp=0x6110000746c0, argcount=1, argvars=0x7ffff61d9a20, rettv=0x7ffff6025720, firstline=1, lastline=1, selfdict=0x0) at **/src/nvim/eval/userfunc.c:1197\r\n#27 0x00005555569c7983 in call_user_func_check (fp=0x6110000746c0, argcount=1, argvars=0x7ffff61d9a20, rettv=0x7ffff6025720, funcexe=0x7ffff6025b60, selfdict=0x0) at **/src/nvim/eval/userfunc.c:1351\r\n#28 0x00005555569b4b4b in call_func (funcname=0x602000017b90 \"s:try_cmd\", len=9, rettv=0x7ffff6025720, argcount_in=1, argvars_in=0x7ffff61d9a20, funcexe=0x7ffff6025b60) at **/src/nvim/eval/userfunc.c:1709\r\n#29 0x00005555569b147e in get_func_tv (name=0x602000017b90 \"s:try_cmd\", len=9, rettv=0x7ffff6025720, arg=0x7ffff5ead1e0, evalarg=0x7ffff6025780, funcexe=0x7ffff6025b60) at **/src/nvim/eval/userfunc.c:556\r\n#30 0x0000555556824c42 in eval_func (arg=0x7ffff5ead1e0, evalarg=0x7ffff6025780, name=0x606000007b37 \"s:try_cmd(s:paste[a:reg])\", name_len=9, rettv=0x7ffff6025720, flags=1, basetv=0x0) at **/src/nvim/eval.c:2214\r\n#31 0x000055555681c8ed in eval7 (arg=0x7ffff5ead1e0, rettv=0x7ffff6025720, evalarg=0x7ffff6025780, want_string=false) at **/src/nvim/eval.c:3141\r\n#32 0x000055555681904a in eval6 (arg=0x7ffff5ead1e0, rettv=0x7ffff6025720, evalarg=0x7ffff6025780, want_string=false) at **/src/nvim/eval.c:2868\r\n#33 0x00005555568171be in eval5 (arg=0x7ffff5ead1e0, rettv=0x7ffff6025720, evalarg=0x7ffff6025780) at **/src/nvim/eval.c:2724\r\n#34 0x0000555556815b73 in eval4 (arg=0x7ffff5ead1e0, rettv=0x7ffff6025720, evalarg=0x7ffff6025780) at **/src/nvim/eval.c:2599\r\n#35 0x000055555681496e in eval3 (arg=0x7ffff5ead1e0, rettv=0x7ffff6025720, evalarg=0x7ffff6025780) at **/src/nvim/eval.c:2508\r\n#36 0x00005555567bdcce in eval2 (arg=0x7ffff5ead1e0, rettv=0x7ffff6025720, evalarg=0x7ffff6025780) at **/src/nvim/eval.c:2430\r\n#37 0x00005555567ad0fd in eval1 (arg=0x7ffff5ead1e0, rettv=0x7ffff6025720, evalarg=0x7ffff6025780) at **/src/nvim/eval.c:2334\r\n#38 0x00005555567a9e91 in eval0 (arg=0x606000007b37 \"s:try_cmd(s:paste[a:reg])\", rettv=0x7ffff6025720, eap=0x7ffff6222040, evalarg=0x7ffff6025780) at **/src/nvim/eval.c:2279\r\n#39 0x00005555569f8550 in ex_let (eap=0x7ffff6222040) at **/src/nvim/eval/vars.c:408\r\n#40 0x0000555556ad885f in execute_cmd0 (retv=0x7ffff6222280, eap=0x7ffff6222040, errormsg=0x7ffff6222020, preview=false) at **/src/nvim/ex_docmd.c:1634\r\n#41 0x0000555556ab5859 in do_one_cmd (cmdlinep=0x7ffff63bc020, flags=7, cstack=0x7ffff63bc040, fgetline=0x5555569bf930 <get_func_line>, cookie=0x61d00000be80) at **/src/nvim/ex_docmd.c:2293\r\n#42 0x0000555556aa60ee in do_cmdline (cmdline=0x0, fgetline=0x5555569bf930 <get_func_line>, cookie=0x61d00000be80, flags=7) at **/src/nvim/ex_docmd.c:592\r\n#43 0x00005555569bc24d in call_user_func (fp=0x611000085100, argcount=1, argvars=0x7ffff621c820, rettv=0x7ffff5fb82a0, firstline=1, lastline=1, selfdict=0x613000008e00) at **/src/nvim/eval/userfunc.c:1197\r\n#44 0x00005555569c7983 in call_user_func_check (fp=0x611000085100, argcount=1, argvars=0x7ffff621c820, rettv=0x7ffff5fb82a0, funcexe=0x7ffff621c9b0, selfdict=0x613000008e00) at **/src/nvim/eval/userfunc.c:1351\r\n#45 0x00005555569b4b4b in call_func (funcname=0x602000017a10 \"2\", len=1, rettv=0x7ffff5fb82a0, argcount_in=1, argvars_in=0x7ffff621c820, funcexe=0x7ffff621c9b0) at **/src/nvim/eval/userfunc.c:1709\r\n#46 0x00005555569c581e in func_call (name=0x602000017a10 \"2\", args=0x7ffff61d4c30, partial=0x60400000bb10, selfdict=0x613000008e00, rettv=0x7ffff5fb82a0) at **/src/nvim/eval/userfunc.c:1503\r\n#47 0x00005555568c22b5 in f_call (argvars=0x7ffff61d4c20, rettv=0x7ffff5fb82a0, fptr=...) at **/src/nvim/eval/funcs.c:577\r\n#48 0x00005555568ac93b in call_internal_func (fname=0x602000017a30 \"call\", argcount=3, argvars=0x7ffff61d4c20, rettv=0x7ffff5fb82a0) at **/src/nvim/eval/funcs.c:270\r\n#49 0x00005555569b4fa3 in call_func (funcname=0x6020000179d0 \"call\", len=4, rettv=0x7ffff5fb82a0, argcount_in=3, argvars_in=0x7ffff61d4c20, funcexe=0x7ffff6022960) at **/src/nvim/eval/userfunc.c:1718\r\n#50 0x00005555569b147e in get_func_tv (name=0x6020000179d0 \"call\", len=4, rettv=0x7ffff5fb82a0, arg=0x7ffff5eabea0, evalarg=0x7ffff5fb82c0, funcexe=0x7ffff6022960) at **/src/nvim/eval/userfunc.c:556\r\n#51 0x0000555556824c42 in eval_func (arg=0x7ffff5eabea0, evalarg=0x7ffff5fb82c0, name=0x606000007acb \"call(s:clipboard[a:method],a:args,s:clipboard)\", name_len=4, rettv=0x7ffff5fb82a0, flags=1, basetv=0x0) at **/src/nvim/eval.c:2214\r\n#52 0x000055555681c8ed in eval7 (arg=0x7ffff5eabea0, rettv=0x7ffff5fb82a0, evalarg=0x7ffff5fb82c0, want_string=false) at **/src/nvim/eval.c:3141\r\n#53 0x000055555681904a in eval6 (arg=0x7ffff5eabea0, rettv=0x7ffff5fb82a0, evalarg=0x7ffff5fb82c0, want_string=false) at **/src/nvim/eval.c:2868\r\n#54 0x00005555568171be in eval5 (arg=0x7ffff5eabea0, rettv=0x7ffff5fb82a0, evalarg=0x7ffff5fb82c0) at **/src/nvim/eval.c:2724\r\n#55 0x0000555556815b73 in eval4 (arg=0x7ffff5eabea0, rettv=0x7ffff5fb82a0, evalarg=0x7ffff5fb82c0) at **/src/nvim/eval.c:2599\r\n#56 0x000055555681496e in eval3 (arg=0x7ffff5eabea0, rettv=0x7ffff5fb82a0, evalarg=0x7ffff5fb82c0) at **/src/nvim/eval.c:2508\r\n#57 0x00005555567bdcce in eval2 (arg=0x7ffff5eabea0, rettv=0x7ffff5fb82a0, evalarg=0x7ffff5fb82c0) at **/src/nvim/eval.c:2430\r\n#58 0x00005555567ad0fd in eval1 (arg=0x7ffff5eabea0, rettv=0x7ffff5fb82a0, evalarg=0x7ffff5fb82c0) at **/src/nvim/eval.c:2334\r\n#59 0x00005555567a9e91 in eval0 (arg=0x606000007acb \"call(s:clipboard[a:method],a:args,s:clipboard)\", rettv=0x7ffff5fb82a0, eap=0x7ffff621b840, evalarg=0x7ffff5fb82c0) at **/src/nvim/eval.c:2279\r\n#60 0x00005555569e5b62 in ex_return (eap=0x7ffff621b840) at **/src/nvim/eval/userfunc.c:3102\r\n#61 0x0000555556ad885f in execute_cmd0 (retv=0x7ffff621ba80, eap=0x7ffff621b840, errormsg=0x7ffff621b820, preview=false) at **/src/nvim/ex_docmd.c:1634\r\n#62 0x0000555556ab5859 in do_one_cmd (cmdlinep=0x7ffff63bb020, flags=7, cstack=0x7ffff63bb040, fgetline=0x5555569bf930 <get_func_line>, cookie=0x61d00000b480) at **/src/nvim/ex_docmd.c:2293\r\n#63 0x0000555556aa60ee in do_cmdline (cmdline=0x0, fgetline=0x5555569bf930 <get_func_line>, cookie=0x61d00000b480, flags=7) at **/src/nvim/ex_docmd.c:592\r\n#64 0x00005555569bc24d in call_user_func (fp=0x61100008ad80, argcount=2, argvars=0x7ffff6218a80, rettv=0x7ffff6218820, firstline=1, lastline=1, selfdict=0x0) at **/src/nvim/eval/userfunc.c:1197\r\n#65 0x00005555569c7983 in call_user_func_check (fp=0x61100008ad80, argcount=2, argvars=0x7ffff6218a80, rettv=0x7ffff6218820, funcexe=0x7ffff6218ad0, selfdict=0x0) at **/src/nvim/eval/userfunc.c:1351\r\n#66 0x00005555569b4b4b in call_func (funcname=0x7ffff6218840 \"provider#clipboard#Call\", len=23, rettv=0x7ffff6218820, argcount_in=2, argvars_in=0x7ffff6218a80, funcexe=0x7ffff6218ad0) at **/src/nvim/eval/userfunc.c:1709\r\n#67 0x000055555680d7ae in eval_call_provider (provider=0x555557db8500 <str> \"clipboard\", method=0x555557db8580 <str> \"get\", arguments=0x607000006060, discard=false) at **/src/nvim/eval.c:8565\r\n#68 0x0000555557135cc8 in get_clipboard (name=43, target=0x7ffff5ea3360, quiet=false) at **/src/nvim/ops.c:6588\r\n#69 0x000055555713570b in get_yank_register (regname=43, mode=0) at **/src/nvim/ops.c:826\r\n#70 0x000055555714051c in do_put (regname=43, reg=0x0, dir=1, count=1, flags=0) at **/src/nvim/ops.c:3086\r\n#71 0x0000555557104be8 in nv_put_opt (cap=0x7ffff61ffa90, fix_indent=false) at **/src/nvim/normal.c:6564\r\n#72 0x00005555570de5e7 in nv_put (cap=0x7ffff61ffa90) at **/src/nvim/normal.c:6459\r\n#73 0x00005555570be23f in normal_execute (state=0x7ffff61ffa20, key=112) at **/src/nvim/normal.c:1202\r\n#74 0x00005555576c06cd in state_enter (s=0x7ffff61ffa20) at **/src/nvim/state.c:99\r\n#75 0x00005555570a154f in normal_enter (cmdwin=false, noexmode=false) at **/src/nvim/normal.c:501\r\n#76 0x00005555561fbf1e in main (argc=3, argv=0x7fffffffe1c8) at **/src/nvim/main.c:647\r\n```\r\nSo it's indeed hanging inside `s:try_cmd()`.",
            "created_at": "2023-07-25T13:12:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-1649822093",
            "id": 1649822093,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM5iVkmN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1649822093/reactions"
            },
            "updated_at": "2023-07-25T13:12:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1649822093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It seems that fish also suffers from this.\r\n\r\nYes. I believe this affects a lot of terminal applications and shells. That's why I tried to report the bug in the `wl-clipboard` repository first. `oh-my-zsh` is also affected at least.",
            "created_at": "2023-07-25T13:18:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-1649832101",
            "id": 1649832101,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM5iVnCl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1649832101/reactions"
            },
            "updated_at": "2023-07-25T13:18:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1649832101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sorry, I clicked close by mistake.",
            "created_at": "2023-07-25T17:15:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-1650227665",
            "id": 1650227665,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM5iXHnR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1650227665/reactions"
            },
            "updated_at": "2023-07-25T17:15:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1650227665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is this still open because https://github.com/neovim/neovim/pull/25481 isn't a \"general\" solution?",
            "created_at": "2023-10-04T12:08:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-1746745337",
            "id": 1746745337,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM5oHTf5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746745337/reactions"
            },
            "updated_at": "2023-10-04T12:09:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746745337",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't think #25481 changes anything related to this issue.",
            "created_at": "2023-10-04T13:40:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-1746902617",
            "id": 1746902617,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM5oH55Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746902617/reactions"
            },
            "updated_at": "2023-10-04T13:40:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746902617",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure how easy it is to test anymore. I think KDE plasma has fixed the issue https://bugs.kde.org/show_bug.cgi?id=449909 here https://invent.kde.org/plasma/kwin/-/merge_requests/4326. But I have not verified it myself, and I'm not on Wayland right now to test. ",
            "created_at": "2023-10-04T15:02:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-1747068583",
            "id": 1747068583,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM5oIian",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1747068583/reactions"
            },
            "updated_at": "2023-10-04T15:02:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1747068583",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi! I am also experiencing this problem. I am so frustrated with it that I'm considering moving away from Wayland back to X11 (which would be suboptimal for other personal reasons, but my Neovim freezes multiple times per day, and killing `wl-paste` is too much of a distraction). \n\nI am on Gnome rather than KDE, therefore KDE bugfix will probably not affect my case.\n\nMy Neovim version:\n\n```\n❯ /usr/local/bin/nvim --version\nNVIM v0.10.3\nBuild type: Release\nLuaJIT 2.1.1713484068\nRun \"nvim -V1 -v\" for more info\n```\n\nCould I be of any help trying to further debug this issue? I am unfortunately neither Lua nor C developer and I'm quite bad with GDB, but I'll be happy to follow any hint that will lead to either a workaround or a solution.\n\nI am positive this problem did not exist prior to me switching to Wayland.",
            "created_at": "2025-01-27T23:12:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-2617095481",
            "id": 2617095481,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM6b_bU5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2617095481/reactions"
            },
            "updated_at": "2025-01-28T09:02:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2617095481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26899407?v=4",
                "events_url": "https://api.github.com/users/Jorres/events{/privacy}",
                "followers_url": "https://api.github.com/users/Jorres/followers",
                "following_url": "https://api.github.com/users/Jorres/following{/other_user}",
                "gists_url": "https://api.github.com/users/Jorres/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Jorres",
                "id": 26899407,
                "login": "Jorres",
                "node_id": "MDQ6VXNlcjI2ODk5NDA3",
                "organizations_url": "https://api.github.com/users/Jorres/orgs",
                "received_events_url": "https://api.github.com/users/Jorres/received_events",
                "repos_url": "https://api.github.com/users/Jorres/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Jorres/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Jorres/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Jorres",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Well to start with, test [Nvim nightly](https://github.com/neovim/neovim/releases/tag/nightly). You could also try a different [clipboard tool](https://neovim.io/doc/user/provider.html#clipboard-tool). Those both sound much easier than throwing out your desktop system :)",
            "created_at": "2025-01-27T23:19:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-2617108247",
            "id": 2617108247,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM6b_ecX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2617108247/reactions"
            },
            "updated_at": "2025-01-27T23:20:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2617108247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@Jorres, could that be a new bug in Gnome? I think that if it has happened before, there would have been a lot more bug reports? Which version of Gnome are you using?\n\nThe issue on the nvim still stands though, even if the root cause is somewhere else, because according to the wl-clipboard bug above, it's completely valid for it to hang, if the provides (the program you are copying from) side is misbehaving. So nvim needs a timeout. I personally, consider this a bug in the wayland protocol itself.\n\nIt's also possible that nvim now handles this correctly and there are some bugs in some plugins, I found this\n* https://github.com/gbprod/yanky.nvim/issues/123\n",
            "created_at": "2025-01-28T01:54:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-2617516543",
            "id": 2617516543,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM6cBCH_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2617516543/reactions"
            },
            "updated_at": "2025-01-28T01:54:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2617516543",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you so much for finding a workaround for me - turning out the feature from `yanky` solved the problem for me. I should have tested on `nvim --clean` in the first place, skill issues.   \n\nFor the sake of completeness, I couldn't switch to another clipboard tool - using an X11 tool like `xclip` means I can not paste from Neovim to other Wayland apps (browser, for instance), and other Wayland clipboard tool seem to have exactly the same problem, hanging when the copy source application exits.\n\nI can confirm that I don't experience any Neovim freezes on Wayland even if I continue using `wl-paste`, and hopefully this thread has been inactive because no one else does. ",
            "created_at": "2025-01-30T17:07:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-2625079992",
            "id": 2625079992,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM6cd4q4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2625079992/reactions"
            },
            "updated_at": "2025-01-30T17:07:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2625079992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26899407?v=4",
                "events_url": "https://api.github.com/users/Jorres/events{/privacy}",
                "followers_url": "https://api.github.com/users/Jorres/followers",
                "following_url": "https://api.github.com/users/Jorres/following{/other_user}",
                "gists_url": "https://api.github.com/users/Jorres/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Jorres",
                "id": 26899407,
                "login": "Jorres",
                "node_id": "MDQ6VXNlcjI2ODk5NDA3",
                "organizations_url": "https://api.github.com/users/Jorres/orgs",
                "received_events_url": "https://api.github.com/users/Jorres/received_events",
                "repos_url": "https://api.github.com/users/Jorres/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Jorres/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Jorres/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Jorres",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Cool, is there a change we can make (or document) in Nvim to fix this for everyone? Unclear what \"feature from yanky\" means.",
            "created_at": "2025-01-30T17:18:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-2625105116",
            "id": 2625105116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM6cd-zc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2625105116/reactions"
            },
            "updated_at": "2025-01-30T17:19:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2625105116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "My apologies, saying 'feature from yanky' I meant the contents of above linked Github issue https://github.com/gbprod/yanky.nvim/issues/123\n\nChanging the suggested configuration fixed the problem for me. \n\nClean Neovim 0.10.3 (or even Neovim with the rest of my setup without this plugin) does not have this hanging behavior, so even if there was a bug in Neovim that led to opening this issue, it is __probably__ fixed by now. ",
            "created_at": "2025-01-31T07:56:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/24470#issuecomment-2626519231",
            "id": 2626519231,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24470",
            "node_id": "IC_kwDOAPphoM6cjYC_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2626519231/reactions"
            },
            "updated_at": "2025-01-31T07:59:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2626519231",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26899407?v=4",
                "events_url": "https://api.github.com/users/Jorres/events{/privacy}",
                "followers_url": "https://api.github.com/users/Jorres/followers",
                "following_url": "https://api.github.com/users/Jorres/following{/other_user}",
                "gists_url": "https://api.github.com/users/Jorres/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Jorres",
                "id": 26899407,
                "login": "Jorres",
                "node_id": "MDQ6VXNlcjI2ODk5NDA3",
                "organizations_url": "https://api.github.com/users/Jorres/orgs",
                "received_events_url": "https://api.github.com/users/Jorres/received_events",
                "repos_url": "https://api.github.com/users/Jorres/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Jorres/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Jorres/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Jorres",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24470/comments",
    "created_at": "2023-07-24T19:35:12Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24470/events",
    "html_url": "https://github.com/neovim/neovim/issues/24470",
    "id": 1819013375,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "clipboard, paste",
            "id": 186192409,
            "name": "clipboard",
            "node_id": "MDU6TGFiZWwxODYxOTI0MDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/clipboard"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24470/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5sa_D_",
    "number": 24470,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 6,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 6,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24470/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24470/timeline",
    "title": "wl-paste can hang infinitely, and freezing Neovim with it.",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:37:29Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24470",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
        "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
        "followers_url": "https://api.github.com/users/fredizzimo/followers",
        "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
        "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fredizzimo",
        "id": 9946255,
        "login": "fredizzimo",
        "node_id": "MDQ6VXNlcjk5NDYyNTU=",
        "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
        "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
        "repos_url": "https://api.github.com/users/fredizzimo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fredizzimo",
        "user_view_type": "public"
    }
}