{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI am trying to collect keystroke statistics like [somebody did in emacs](http://xahlee.info/emacs/emacs/command-frequency.html), however, there is no way to make actions like `ci[` to be sent to `vim.on_key` together. Instead, the function will be triggered 3 times, with `c`, `i` and `[`.\n\n### Expected behavior\n\nThe ability to write\n```lua\nvim.on_key(f, {\n  ns = nil,\n  on_action_complete = true\n})\n```\n... and get `ci[` sent to `f`!",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "You might have a chance using the SafeState autocommand, that is triggered when neovim finished something and is now in a safe state to do something else.\nYou'd still have to collect each keys manually though ðŸ¤”\n\nNote that this is how [this multicursor plugin](https://github.com/jake-stewart/multicursor.nvim) from @jake-stewart works AFAIK (collect, wait for safe state, propagate last inputs to other cursors if it makes sense)",
            "created_at": "2024-10-13T19:54:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/30803#issuecomment-2409104087",
            "id": 2409104087,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30803",
            "node_id": "IC_kwDOAPphoM6PmALX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2409104087/reactions"
            },
            "updated_at": "2024-10-14T01:37:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2409104087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "as mentioned in https://github.com/neovim/neovim/issues/30741#issuecomment-2404867582 , this is not implemented yet. \n\n> Part of the work to implement \"multicursor\" support will be to \"atomize\" input so that its structure is exposed. That seems like a requirement for this, otherwise you end up re-implementing a mapping parser in `on_key` (which doesn't know if a key will resolve to a mapping / builtin normal command)?\n\n",
            "created_at": "2024-10-13T20:07:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/30803#issuecomment-2409107932",
            "id": 2409107932,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30803",
            "node_id": "IC_kwDOAPphoM6PmBHc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2409107932/reactions"
            },
            "updated_at": "2024-10-13T20:07:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2409107932",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You might have a chance using the SafeState autocommand, that is triggered when neovim finished something and is now in a safe state to do something else. You'd still have to collect each keys manually though ðŸ¤”\n> \n> Note that this is how [this multicursor plugin](https://github.com/jake-stewart/multicursor.nvim) from [@jake-stewart](https://github.com/jake-stewart) works AFAIK (collect, wait for safe state, propagate last inputs to other cursors if it makes sense)\n\nIt's far from perfect.\n\n1. I have to manually filter out keys fed via `vim.fn.feedkeys` and `vim.api.nvim_feedkeys`.\n2. Repeating an overlapped mapping will stop vim from entering a safe state. For example, map `lj` to something and press `l` three times. Despite the `l` mapping executing twice, vim never had a chance to enter a safe state.",
            "created_at": "2024-10-14T02:09:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/30803#issuecomment-2409721137",
            "id": 2409721137,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30803",
            "node_id": "IC_kwDOAPphoM6PoW0x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2409721137/reactions"
            },
            "updated_at": "2024-10-14T02:09:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2409721137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/83528263?v=4",
                "events_url": "https://api.github.com/users/jake-stewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/jake-stewart/followers",
                "following_url": "https://api.github.com/users/jake-stewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/jake-stewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jake-stewart",
                "id": 83528263,
                "login": "jake-stewart",
                "node_id": "MDQ6VXNlcjgzNTI4MjYz",
                "organizations_url": "https://api.github.com/users/jake-stewart/orgs",
                "received_events_url": "https://api.github.com/users/jake-stewart/received_events",
                "repos_url": "https://api.github.com/users/jake-stewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jake-stewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jake-stewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jake-stewart",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hmm, `vim.fn.state(\"o\")` might help me here, but it's still very vulnerable to internal changes.",
            "created_at": "2024-10-14T09:07:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/30803#issuecomment-2410528037",
            "id": 2410528037,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30803",
            "node_id": "IC_kwDOAPphoM6Prb0l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2410528037/reactions"
            },
            "updated_at": "2024-10-14T09:07:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2410528037",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/108414369?v=4",
                "events_url": "https://api.github.com/users/xiaoshihou514/events{/privacy}",
                "followers_url": "https://api.github.com/users/xiaoshihou514/followers",
                "following_url": "https://api.github.com/users/xiaoshihou514/following{/other_user}",
                "gists_url": "https://api.github.com/users/xiaoshihou514/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xiaoshihou514",
                "id": 108414369,
                "login": "xiaoshihou514",
                "node_id": "U_kgDOBnZFoQ",
                "organizations_url": "https://api.github.com/users/xiaoshihou514/orgs",
                "received_events_url": "https://api.github.com/users/xiaoshihou514/received_events",
                "repos_url": "https://api.github.com/users/xiaoshihou514/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xiaoshihou514/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xiaoshihou514/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xiaoshihou514",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30803/comments",
    "created_at": "2024-10-13T18:46:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30803/events",
    "html_url": "https://github.com/neovim/neovim/issues/30803",
    "id": 2584181154,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 396626349,
            "name": "input",
            "node_id": "MDU6TGFiZWwzOTY2MjYzNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/input"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1471818957,
            "name": "multicursor",
            "node_id": "MDU6TGFiZWwxNDcxODE4OTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/multicursor"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "key bindings, keycodes",
            "id": 3304938718,
            "name": "mappings",
            "node_id": "MDU6TGFiZWwzMzA0OTM4NzE4",
            "url": "https://api.github.com/repos/neovim/neovim/labels/mappings"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30803/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6aB3mi",
    "number": 30803,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30803/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30803/timeline",
    "title": "vim.on_key does not expose a way to only trigger on completion of a valid action",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:58:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30803",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/108414369?v=4",
        "events_url": "https://api.github.com/users/xiaoshihou514/events{/privacy}",
        "followers_url": "https://api.github.com/users/xiaoshihou514/followers",
        "following_url": "https://api.github.com/users/xiaoshihou514/following{/other_user}",
        "gists_url": "https://api.github.com/users/xiaoshihou514/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/xiaoshihou514",
        "id": 108414369,
        "login": "xiaoshihou514",
        "node_id": "U_kgDOBnZFoQ",
        "organizations_url": "https://api.github.com/users/xiaoshihou514/orgs",
        "received_events_url": "https://api.github.com/users/xiaoshihou514/received_events",
        "repos_url": "https://api.github.com/users/xiaoshihou514/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/xiaoshihou514/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xiaoshihou514/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/xiaoshihou514",
        "user_view_type": "public"
    }
}