{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nThank you for neovim!\r\n\r\nI'm using kickstart.nvim, and I'm not completely familiar with what component implements what features (i.e. neovim vs mason vs telescope). If this is the responsibility of some other component, please let me know and close this issue. I originally asked for this [on Reddit](https://www.reddit.com/r/neovim/comments/17y4ug7/use_some_lsp_features_without_opening_an_lspbound/) but didn't get any responses.\r\n\r\nI'm working in a C project, using Clangd as an LSP server. The project consists of C almost exclusively, except for tests which are written in PHP. Essentially, I would like some LSP features to always be available, most notably searching for workspace symbols. Currently, there are two scenarios that are annoying:\r\n\r\n* When I first open neovim, I need to open up any C file, just to be able to search symbols in my workspace\r\n* When I switch to a test, I need to go back to a C file to search symbols in my workspace\r\n\r\n### Expected behavior\r\n\r\nWithout much technical knowledge about neovim, the optimal solution would be if LSPs could be attached to some features (like search by workspace symbols) globally, even if the current file is not associated with that LSP. If multiple global LSPs are configured, neovim would merge the results of them. This would allow for global, language agnostic searches, which might be really handy for projects that mix multiple languages.\r\n\r\nIf that's not possible, I would like to specify one master LSP that is always used when searching for symbols, without associating the test files as C files, because that would incorrectly lint the files.\r\n\r\nThank you for your response!",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "That is impossible, since these features are provided by external servers that sre filetype specific. ",
            "created_at": "2023-11-28T19:46:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/26278#issuecomment-1830597396",
            "id": 1830597396,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26278",
            "node_id": "IC_kwDOAPphoM5tHLMU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830597396/reactions"
            },
            "updated_at": "2023-11-28T19:46:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830597396",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi @clason ðŸ‘‹  VSCode seems to handle this correctly, at least once any file of that type has been opened, launching the LSP server. I could check what LSP requests it makes, if that helps. Maybe the previous file just stays attached? (Again, I'm not familiar with the details of the protocol).",
            "created_at": "2023-11-28T20:43:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/26278#issuecomment-1830703346",
            "id": 1830703346,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26278",
            "node_id": "IC_kwDOAPphoM5tHlDy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830703346/reactions"
            },
            "updated_at": "2023-11-28T20:43:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830703346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1752683?v=4",
                "events_url": "https://api.github.com/users/iluuu1994/events{/privacy}",
                "followers_url": "https://api.github.com/users/iluuu1994/followers",
                "following_url": "https://api.github.com/users/iluuu1994/following{/other_user}",
                "gists_url": "https://api.github.com/users/iluuu1994/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iluuu1994",
                "id": 1752683,
                "login": "iluuu1994",
                "node_id": "MDQ6VXNlcjE3NTI2ODM=",
                "organizations_url": "https://api.github.com/users/iluuu1994/orgs",
                "received_events_url": "https://api.github.com/users/iluuu1994/received_events",
                "repos_url": "https://api.github.com/users/iluuu1994/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iluuu1994/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iluuu1994/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iluuu1994",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "VS Code cares nothing about protocol if it gets in the way of marketable features. We don't have that luxury and stick to the specification. ",
            "created_at": "2023-11-28T20:50:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/26278#issuecomment-1830713284",
            "id": 1830713284,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26278",
            "node_id": "IC_kwDOAPphoM5tHnfE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830713284/reactions"
            },
            "updated_at": "2023-11-28T20:50:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830713284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Amd I do recommend reading the specification to get an idea of what LSP should do. ",
            "created_at": "2023-11-28T20:51:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/26278#issuecomment-1830714151",
            "id": 1830714151,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26278",
            "node_id": "IC_kwDOAPphoM5tHnsn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830714151/reactions"
            },
            "updated_at": "2023-11-28T20:51:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830714151",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Telescope (or any other plugin) could send the workspace symbols request to all active LSP clients and collate the results. I don't know if it already has this capability or not, but it's in theory possible.\r\n\r\nNo changes are necessary in Neovim to provide this. Neovim already provides the client based abstraction that's needed.",
            "created_at": "2023-11-28T20:58:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/26278#issuecomment-1830734365",
            "id": 1830734365,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26278",
            "node_id": "IC_kwDOAPphoM5tHsod",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830734365/reactions"
            },
            "updated_at": "2023-11-28T20:58:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830734365",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Also, we should be careful to distinguish aggregating responses from multiple servers in one file (which is actively being worked on) and providing LSP functionality independent of a server or across workspaces (which makes no sense). The issue here conflates the two. ",
            "created_at": "2023-11-28T21:14:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/26278#issuecomment-1830757764",
            "id": 1830757764,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26278",
            "node_id": "IC_kwDOAPphoM5tHyWE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830757764/reactions"
            },
            "updated_at": "2023-11-28T21:14:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830757764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> , the optimal solution would be if LSPs could be attached to some features (like search by workspace symbols) globally, even if the current file is not associated with that LSP. \r\n\r\nSee `:help vim.lsp.start` and `vim.lsp.start_client`. You can already start a client & server without attaching it to a buffer.\r\nNeovim doesn't have a concept of a workspace like vscode does and it by default doesn't start a language server at all. Usually it's done in a FileType event (that's also what lspconfig does), but that's no must. \r\n\r\nAs for the workspace symbol search, see https://github.com/neovim/neovim/issues/24799",
            "created_at": "2023-11-28T22:22:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/26278#issuecomment-1830852627",
            "id": 1830852627,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26278",
            "node_id": "IC_kwDOAPphoM5tIJgT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830852627/reactions"
            },
            "updated_at": "2023-11-28T22:22:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830852627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If multiple global LSPs are configured, neovim would merge the results of them.\r\n\r\nThat is something we've discussed (implemented?) for completion. \"Merging\" completion results is required if multiple LSP clients are attached to a buffer. \r\n\r\nDoes it not make sense to extend that to a workspace (or project, if that lands: https://github.com/neovim/neovim/issues/8610)?",
            "created_at": "2023-11-29T16:09:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/26278#issuecomment-1832211991",
            "id": 1832211991,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26278",
            "node_id": "IC_kwDOAPphoM5tNVYX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1832211991/reactions"
            },
            "updated_at": "2023-11-29T16:10:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1832211991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That is something we've discussed (implemented?) for completion. \"Merging\" completion results is required if multiple LSP clients are attached to a buffer.\r\n\r\nIt is implemented for some operations (e.g. code actions and completion), but there are still many missing.\r\nSee:\r\n\r\n- https://github.com/neovim/neovim/issues/22318\r\n- https://github.com/neovim/neovim/issues/17712\r\n\r\n(There's currently no issue that gives a complete overview)\r\n\r\n> Does it not make sense to extend that to a workspace (or project, if that lands: https://github.com/neovim/neovim/issues/8610)?\r\n\r\nSure, if neovim ever introduces a workspace or project primitive we should take that into account for LSP workspace operations. It could probably also be used as default for the `root_dir` in `lsp.start`\r\n",
            "created_at": "2024-01-02T11:09:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/26278#issuecomment-1873890928",
            "id": 1873890928,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26278",
            "node_id": "IC_kwDOAPphoM5vsU5w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873890928/reactions"
            },
            "updated_at": "2024-01-02T11:09:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873890928",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26278/comments",
    "created_at": "2023-11-28T19:32:18Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26278/events",
    "html_url": "https://github.com/neovim/neovim/issues/26278",
    "id": 2015157782,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26278/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 277,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 320,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-05-10T14:46:06Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM54HN4W",
    "number": 26278,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26278/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26278/timeline",
    "title": "Global, file-independent LSP features",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-10T13:39:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26278",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1752683?v=4",
        "events_url": "https://api.github.com/users/iluuu1994/events{/privacy}",
        "followers_url": "https://api.github.com/users/iluuu1994/followers",
        "following_url": "https://api.github.com/users/iluuu1994/following{/other_user}",
        "gists_url": "https://api.github.com/users/iluuu1994/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iluuu1994",
        "id": 1752683,
        "login": "iluuu1994",
        "node_id": "MDQ6VXNlcjE3NTI2ODM=",
        "organizations_url": "https://api.github.com/users/iluuu1994/orgs",
        "received_events_url": "https://api.github.com/users/iluuu1994/received_events",
        "repos_url": "https://api.github.com/users/iluuu1994/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iluuu1994/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iluuu1994/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iluuu1994",
        "user_view_type": "public"
    }
}