{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl",
        "user_view_type": "public"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "### Neovim version (nvim -v)\r\n\r\n0.6.0 commit b74916cfd\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nFedora 34\r\n\r\n### Terminal name/version\r\n\r\nkitty\r\n\r\n### $TERM environment variable\r\n\r\nxterm-kitty\r\n\r\n### Installation\r\n\r\nsource build\r\n\r\n### How to reproduce the issue\r\n\r\n```lua\r\nlocal edit_buf = vim.api.nvim_create_buf(true, true)\r\n\r\nvim.api.nvim_set_current_buf(edit_buf)\r\n\r\nvim.api.nvim_buf_set_lines(edit_buf, 0, -1, true, { '' })\r\n\r\nlocal prev_lines = vim.api.nvim_buf_get_lines(edit_buf, 0, -1, true)\r\nlocal curr_lines = prev_lines\r\n\r\nlocal callback = function(buf)\r\n  curr_lines = vim.api.nvim_buf_get_lines(buf, 0, -1, true)\r\n  print('on_lines callback occured')\r\n  print(vim.inspect(prev_lines))\r\n  print(vim.inspect(curr_lines))\r\n  prev_lines=curr_lines\r\nend\r\n\r\nvim.api.nvim_buf_attach(edit_buf, false, { on_bytes = callback })\r\nvim.api.nvim_feedkeys('ggdd', 'n', false)\r\n```\r\nprints \"on_lines callback occured\"\r\n\r\n\r\n```lua\r\nlocal edit_buf = vim.api.nvim_create_buf(true, true)\r\n\r\nvim.api.nvim_set_current_buf(edit_buf)\r\n\r\n--vim.api.nvim_buf_set_lines(edit_buf, 0, -1, true, { '' })\r\n\r\nlocal prev_lines = vim.api.nvim_buf_get_lines(edit_buf, 0, -1, true)\r\nlocal curr_lines = prev_lines\r\n\r\nlocal callback = function(buf)\r\n  curr_lines = vim.api.nvim_buf_get_lines(buf, 0, -1, true)\r\n  print('on_lines callback occured')\r\n  print(vim.inspect(prev_lines))\r\n  print(vim.inspect(curr_lines))\r\n  prev_lines=curr_lines\r\nend\r\n\r\nvim.api.nvim_buf_attach(edit_buf, false, { on_bytes = callback })\r\nvim.api.nvim_feedkeys('ggdd', 'n', false)\r\n```\r\nDoes not print on_lines callback occured. The former seems more correct to me, as this should be a no-op.\r\n\r\n### Expected behavior\r\n\r\non_lines callback should not be called on deletion of an empty buffer.\r\n\r\n### Actual behavior\r\n\r\non_lines callback is called on deletion of an empty buffer.\r\n\r\nThis impacts the new incremental sync implementation I'm working on [here](https://github.com/mjlbach/neovim/blob/b2c398025edaeadc971506fc36a4558f78b27c73/runtime/lua/vim/lsp/sync.lua#L177-L179)",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I used the scripts included by the original poster to reproduce this issue and got the following error when running the first script on my local build NVIM v0.10.0-dev-1935+g2b0acacb3-dirty\r\n\r\n```\r\nError executing lua callback: /Users/kabraham/neovim/issue16258/issue16258A.lua:\r\n11: Invalid 'buffer': Expected Lua number\r\nstack traceback:\r\n        [C]: in function 'nvim_buf_get_lines'\r\n        /Users/kabraham/neovim/issue16258/issue16258A.lua:11: in function </User\r\ns/kabraham/neovim/issue16258/issue16258A.lua:10>\r\n```\r\n\r\nwhich clearly indicates that the callback function is still being called but is now generating an error before the print is called.\r\n\r\nI modified the first script to call print immediately after entering the callback\r\n\r\n```\r\n local edit_buf = vim.api.nvim_create_buf(true, true)                           \r\n                                                                                \r\n vim.api.nvim_set_current_buf(edit_buf)\r\n \r\n vim.api.nvim_buf_set_lines(edit_buf, 0, -1, true, { '' })\r\n \r\n local prev_lines = vim.api.nvim_buf_get_lines(edit_buf, 0, -1, true)\r\n local curr_lines = prev_lines\r\n \r\n local callback = function(buf)\r\n   print('on_lines callback occured')\r\n   curr_lines = vim.api.nvim_buf_get_lines(buf, 0, -1, true)\r\n   print(vim.inspect(prev_lines))\r\n   print(vim.inspect(curr_lines))\r\n   prev_lines=curr_lines\r\n end\r\n \r\n vim.api.nvim_buf_attach(edit_buf, false, { on_bytes = callback })\r\n vim.api.nvim_feedkeys('ggdd', 'n', false)\r\n```\r\nand now see the print followed by the error\r\n\r\n```\r\non_lines callback occured                                              \r\nError executing lua callback: /Users/kabraham/neovim/issue16258/issue16258A.lua:\r\n12: Invalid 'buffer': Expected Lua number\r\nstack traceback:\r\n        [C]: in function 'nvim_buf_get_lines'\r\n        /Users/kabraham/neovim/issue16258/issue16258A.lua:12: in function </User\r\ns/kabraham/neovim/issue16258/issue16258A.lua:10>\r\n```\r\n\r\nIs bfredl still working on this issue? If not, I am willing to debug it further.\r\n",
            "created_at": "2023-12-24T05:17:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/16258#issuecomment-1868435305",
            "id": 1868435305,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16258",
            "node_id": "IC_kwDOAPphoM5vXg9p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868435305/reactions"
            },
            "updated_at": "2023-12-24T05:17:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868435305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/154294160?v=4",
                "events_url": "https://api.github.com/users/kwabrahamson/events{/privacy}",
                "followers_url": "https://api.github.com/users/kwabrahamson/followers",
                "following_url": "https://api.github.com/users/kwabrahamson/following{/other_user}",
                "gists_url": "https://api.github.com/users/kwabrahamson/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kwabrahamson",
                "id": 154294160,
                "login": "kwabrahamson",
                "node_id": "U_kgDOCTJXkA",
                "organizations_url": "https://api.github.com/users/kwabrahamson/orgs",
                "received_events_url": "https://api.github.com/users/kwabrahamson/received_events",
                "repos_url": "https://api.github.com/users/kwabrahamson/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kwabrahamson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kwabrahamson/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kwabrahamson",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16258/comments",
    "created_at": "2021-11-07T17:42:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/16258/events",
    "html_url": "https://github.com/neovim/neovim/issues/16258",
    "id": 1046807251,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "save/restore editor state: shada, context, ctx, sessions, mksession",
            "id": 4449264023,
            "name": "editor-state",
            "node_id": "LA_kwDOAPphoM8AAAABCTJhlw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/editor-state"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/16258/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM4-ZQLT",
    "number": 16258,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/16258/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/16258/timeline",
    "title": "on_lines callback called on deletion of empty buffer after nvim_buf_set_lines(0, 0, -1, true, { '' }) ",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-30T16:12:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/16258",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
        "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
        "followers_url": "https://api.github.com/users/mjlbach/followers",
        "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
        "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mjlbach",
        "id": 13316262,
        "login": "mjlbach",
        "node_id": "MDQ6VXNlcjEzMzE2MjYy",
        "organizations_url": "https://api.github.com/users/mjlbach/orgs",
        "received_events_url": "https://api.github.com/users/mjlbach/received_events",
        "repos_url": "https://api.github.com/users/mjlbach/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mjlbach",
        "user_view_type": "public"
    }
}