{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "- `nvim --version`: `v0.5.0-dev+1000-g84d08358b`\r\n- `vim -u NONE` behaves differently? No\r\n- Operating system/version: MacOS 10.14.6\r\n- Terminal name/version: iTerm2 3.4.3\r\n- `$TERM`: `xterm-256color`\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\n```sh\r\nnvim -u NORC +checkhealth\r\n```\r\n\r\n### Actual behaviour\r\n\r\n```\r\n## Python virtualenv\r\n  - WARNING: $VIRTUAL_ENV is set to: /Users/gwerbin/.local/share/pyenv/versions/3.8.6/envs/sandbox38\r\n    And its /bin directory contains: python, python3, python3.8, pythoni, pythoni1\r\n```\r\n\r\n`pythoni` and `pythoni1` are not Python executables, they are other scripts that happen to be in this environment and happen to match the pattern `python*`.\r\n\r\nThe offending line of code seems to be:\r\n<https://github.com/neovim/neovim/blob/2dd383c943ea31abf30ec1e39fbeb5f5971131aa/runtime/autoload/health/provider.vim#L509>\r\n\r\n### Expected behaviour\r\n\r\n```\r\n## Python virtualenv\r\n  - WARNING: $VIRTUAL_ENV is set to: /Users/gwerbin/.local/share/pyenv/versions/3.8.6/envs/sandbox38\r\n    And its /bin directory contains: python, python3, python3.8\r\n```\r\n\r\nThe search should only look for:\r\n* `python`\r\n* `python2`\r\n* `python2.X` where `X` is any numeral\r\n* `python3`\r\n* `python3.X` where `X` is any numeral\r\n* Any other specific executables that should be specifically whitelisted, but I can't think of any\r\n\r\n### Proposed fix:\r\n\r\n```patch\r\ndiff --git a/runtime/autoload/health/provider.vim b/runtime/autoload/health/provider.vim\r\nindex 112dd4..b71b60 100644\r\n--- a/runtime/autoload/health/provider.vim\r\n+++ b/runtime/autoload/health/provider.vim\r\n@@ -491,6 +491,11 @@ function! s:python_exepath(invocation) abort\r\n     \\ . ' -c \"import sys; sys.stdout.write(sys.executable)\"'))\r\n endfunction\r\n \r\n+\" If true, the named file is a Python binary\r\n+function! s:is_python_binary(filename)\r\n+  return a:filename =~# '\\v^python%([23]%(\\.[0-9]+)?)?$'\r\n+endfunction\r\n+\r\n \" Checks that $VIRTUAL_ENV Python executables are found at front of $PATH in\r\n \" Nvim and subshells.\r\n function! s:check_virtualenv() abort\r\n@@ -507,15 +512,17 @@ function! s:check_virtualenv() abort\r\n   \" subshells launched from Nvim.\r\n   let bin_dir = has('win32') ? '/Scripts' : '/bin'\r\n   let venv_bins = glob($VIRTUAL_ENV . bin_dir . '/python*', v:true, v:true)\r\n-  \" XXX: Remove irrelevant executables found in bin/.\r\n-  let venv_bins = filter(venv_bins, 'v:val !~# \"python-config\"')\r\n   if len(venv_bins)\r\n     for venv_bin in venv_bins\r\n+      if ! s:is_python_binary(fnamemodify(v:val, \":t\"))\r\n+        \" XXX: Remove irrelevant executables found in bin/.\r\n+        continue\r\n+      endif\r\n       let venv_bin = s:normalize_path(venv_bin)\r\n       let py_bin_basename = fnamemodify(venv_bin, ':t')\r\n       let nvim_py_bin = s:python_exepath(exepath(py_bin_basename))\r\n       let subshell_py_bin = s:python_exepath(py_bin_basename)\r\n-      if venv_bin !=# nvim_py_bin\r\n+      if resolve(venv_bin) !=# nvim_py_bin\r\n         call add(errors, '$PATH yields this '.py_bin_basename.' executable: '.nvim_py_bin)\r\n         let hint = '$PATH ambiguities arise if the virtualenv is not '\r\n           \\.'properly activated prior to launching Nvim. Close Nvim, activate the virtualenv, '\r\n```\r\n\r\nNote that this change also resolves symlinks in `venv_bin`. In my setup, this was causing a spurious warning about a non-matching binary in `PATH`. This is kind of a separate bug, so I can file a separate issue if that makes it easier to keep track.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Same behaviour on Windows 10.\r\n\r\nnvim -u NORC +checkhealth file.py also makes the cpu go 100%. If it does not find a python installation or python isntallation without pynvim\r\n\r\nNvim verison:\r\n```\r\nNVIM v0.5.0-dev+1133-g0869cbd55\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.0-beta3\r\n```\r\nWindows version:\r\n```\r\nWindows 10 Home x86_64\r\nCompilaion: 19041.804\r\n```",
            "created_at": "2021-03-11T17:45:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/13965#issuecomment-796918878",
            "id": 796918878,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13965",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjkxODg3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/796918878/reactions"
            },
            "updated_at": "2021-03-11T17:59:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/796918878",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26649798?v=4",
                "events_url": "https://api.github.com/users/petacreepers23/events{/privacy}",
                "followers_url": "https://api.github.com/users/petacreepers23/followers",
                "following_url": "https://api.github.com/users/petacreepers23/following{/other_user}",
                "gists_url": "https://api.github.com/users/petacreepers23/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/petacreepers23",
                "id": 26649798,
                "login": "petacreepers23",
                "node_id": "MDQ6VXNlcjI2NjQ5Nzk4",
                "organizations_url": "https://api.github.com/users/petacreepers23/orgs",
                "received_events_url": "https://api.github.com/users/petacreepers23/received_events",
                "repos_url": "https://api.github.com/users/petacreepers23/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/petacreepers23/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/petacreepers23/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/petacreepers23",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/13965/comments",
    "created_at": "2021-02-17T23:22:54Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/13965/events",
    "html_url": "https://github.com/neovim/neovim/issues/13965",
    "id": 810613726,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "funtime",
            "id": 120251370,
            "name": "runtime",
            "node_id": "MDU6TGFiZWwxMjAyNTEzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/runtime"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 144672485,
            "name": "provider",
            "node_id": "MDU6TGFiZWwxNDQ2NzI0ODU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/provider"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/13965/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4MTA2MTM3MjY=",
    "number": 13965,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/13965/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/13965/timeline",
    "title": "Python :checkhealth searches too broadly for Python binaries",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:36:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/13965",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5758789?v=4",
        "events_url": "https://api.github.com/users/gwerbin/events{/privacy}",
        "followers_url": "https://api.github.com/users/gwerbin/followers",
        "following_url": "https://api.github.com/users/gwerbin/following{/other_user}",
        "gists_url": "https://api.github.com/users/gwerbin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gwerbin",
        "id": 5758789,
        "login": "gwerbin",
        "node_id": "MDQ6VXNlcjU3NTg3ODk=",
        "organizations_url": "https://api.github.com/users/gwerbin/orgs",
        "received_events_url": "https://api.github.com/users/gwerbin/received_events",
        "repos_url": "https://api.github.com/users/gwerbin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gwerbin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gwerbin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gwerbin",
        "user_view_type": "public"
    }
}