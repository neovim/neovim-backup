{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "## Problem\n\n#33575 aims to begin upstreaming configs from nvim-lspconfig. When doing this, we may experience some issues with the current merge semantics of `vim.lsp.config` with some of the complex configs. This is due to the fact the merge semantics is just the behaviour of `vim.tbl_deep_extend` and thus has no way of removing `nil` values.\n\nExamples:\n1. Core ships a config that defines `root_dir`, but the user just wants their config to use `root_markers`\n2. Core ships a config with a complex `reuse_client` field, but the user wants to use the default.\n3. Core ships a config with an `on_attach` field which the user does not want.\n\n## Possible solutions\n\n1. Use `vim.NIL` as a special value in merging to mean \"delete this value\"\n\n2. Allow `lsp/*` files to return a directive (similar to treesitter query files) to define the merge semantics of that config.\n\n   E.g. `return { ... }, 'override'`\n \n3. Modify the configuration schema so every field has an explicit opt-out value (e.g. `false`)\n\n   E.g. if a field is of type `function?` change this to `function|false?` so that function can be removed.\n\n   #33579",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Solution 2 seems to me the easiest to reason about and handle in practice. (Although this doesn't rule out _also_ doing Solution 3.)",
            "created_at": "2025-04-22T14:32:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2821536048",
            "id": 2821536048,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6oLTkw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821536048/reactions"
            },
            "updated_at": "2025-04-22T17:58:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821536048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think there is also something to be said about merging semantics of `on_attach` in order to support merging the functions in some way. If the user defines a default `on_attach` function with `vim.lsp.config(\"*\", { on_attach = function(client, bufnr) end })` which does core work that they want to apply to all language servers, it would be nice if there was a way to do language specific setup with `vim.lsp.config(server_name, { on_attach = function(client, bufnr) end })` to do language specific `on_attach` functions.\n\nThis also shows up in the case where the user sets up a default with `\"*\"` and then utilizes `nvim-lspconfig` which provides LSP configuration through runtime files where some of them provide an `on_attach` function which sets up things such as useful user commands. This would promptly override what the user specified that they wanted with `\"*\"` which may not be the intended behavior especially when most of the language servers will work fine and only the subset that do add `on_attach` functions would behave differently.\n\nAn alternative approach would be to expect the user to rely more heavily on the `LspAttach` event to set up autocommands rather than recommending they use `on_attach` in `vim.lsp.config`. If that's the case then maybe it's good to mention that in the documentation.",
            "created_at": "2025-04-22T17:45:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2822048651",
            "id": 2822048651,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6oNQuL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2822048651/reactions"
            },
            "updated_at": "2025-04-22T17:48:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2822048651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1591837?v=4",
                "events_url": "https://api.github.com/users/mehalter/events{/privacy}",
                "followers_url": "https://api.github.com/users/mehalter/followers",
                "following_url": "https://api.github.com/users/mehalter/following{/other_user}",
                "gists_url": "https://api.github.com/users/mehalter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mehalter",
                "id": 1591837,
                "login": "mehalter",
                "node_id": "MDQ6VXNlcjE1OTE4Mzc=",
                "organizations_url": "https://api.github.com/users/mehalter/orgs",
                "received_events_url": "https://api.github.com/users/mehalter/received_events",
                "repos_url": "https://api.github.com/users/mehalter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mehalter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mehalter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mehalter",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  vim.lsp.config(\"*\", { on_attach = function(client, bufnr) end })\n\nThat's what `LspAttach` is for.",
            "created_at": "2025-04-22T17:54:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2822066227",
            "id": 2822066227,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6oNVAz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2822066227/reactions"
            },
            "updated_at": "2025-04-22T17:54:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2822066227",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Not just `on_attach` but `on_init` and `before_init` would also be nice to have some sort of merging behavior and I don't believe those have an event you can listen to. Right now, you can do\n\n```lua\nlocal old_on_init = vim.lsp.config['myls'].on_init\n\nvim.lsp.config('myls', {\n  on_init = function(client)\n    old_on_init(client)\n    -- my additional init code\n  end\n})\n```\n\nbut that feels quite clunky and you have to know if the base LSP config has them set.\n\nMaybe something like providing an extra parameter `prev` which calls the existing callback / noops so users can choose whether they want to extend or replace the callback would be nice? Something like\n\n```lua\nvim.lsp.config('myls', {\n  on_init = function(client, prev)\n    -- inherit existing on_init, comment out to replace entirely\n    prev(client)\n    -- my additional init code\n  end\n})\n```",
            "created_at": "2025-04-26T14:10:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2832231240",
            "id": 2832231240,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6o0GtI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832231240/reactions"
            },
            "updated_at": "2025-04-26T14:14:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832231240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/246230?v=4",
                "events_url": "https://api.github.com/users/thatsmydoing/events{/privacy}",
                "followers_url": "https://api.github.com/users/thatsmydoing/followers",
                "following_url": "https://api.github.com/users/thatsmydoing/following{/other_user}",
                "gists_url": "https://api.github.com/users/thatsmydoing/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/thatsmydoing",
                "id": 246230,
                "login": "thatsmydoing",
                "node_id": "MDQ6VXNlcjI0NjIzMA==",
                "organizations_url": "https://api.github.com/users/thatsmydoing/orgs",
                "received_events_url": "https://api.github.com/users/thatsmydoing/received_events",
                "repos_url": "https://api.github.com/users/thatsmydoing/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/thatsmydoing/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thatsmydoing/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/thatsmydoing",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Core ships a config with an on_attach field which the user does not want.\n\nNot ideal, but this particular case can be solved with empty function:\n```lua\nvim.lsp.config('myls', { on_attach = function() end })\n```\n\nThat being said, the general problem of _\"how to remove parameter from table?\"_ should be solved regardless; and as I understand, it is already somewhat being tackled by #33579 (albeit I think using `false` as to-remove-flag could be disputed).\n\nAs @mehalter and @thatsmydoing notice, from the opposite end of spectrum, there's also a 2nd problem of _\"how to **not** override parameter?\"_. Proposition of `prev` parameter is interesting. Another approach I can think of is to have a table like so:\n\n```lua\nvim.lsp.config('myls', {\n  on_attach = function() print(\"foo\") end, -- on_attach gets overridden\n  on_init = {\n    queue_pos = \"last\",  -- our on_init will be called after pre-existing on_init function(s!)\n    callback = function()\n      print(\"bar\")\n    end\n  },\n})\n```",
            "created_at": "2025-04-27T01:22:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2832855734",
            "id": 2832855734,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6o2fK2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832855734/reactions"
            },
            "updated_at": "2025-04-27T01:22:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832855734",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22616434?v=4",
                "events_url": "https://api.github.com/users/Jorenar/events{/privacy}",
                "followers_url": "https://api.github.com/users/Jorenar/followers",
                "following_url": "https://api.github.com/users/Jorenar/following{/other_user}",
                "gists_url": "https://api.github.com/users/Jorenar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Jorenar",
                "id": 22616434,
                "login": "Jorenar",
                "node_id": "MDQ6VXNlcjIyNjE2NDM0",
                "organizations_url": "https://api.github.com/users/Jorenar/orgs",
                "received_events_url": "https://api.github.com/users/Jorenar/received_events",
                "repos_url": "https://api.github.com/users/Jorenar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Jorenar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Jorenar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Jorenar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To avoid making `vim.lsp.config` a special-case \"inner platform\", [extending `vim.tbl_deep_extend()`](https://github.com/neovim/neovim/pull/33579#issuecomment-2827481259) seems like a good option. Its `behavior` arg could take a function:\n\n```lua\nvim.tbl_deep_extend(function(key, val)\n  ...\nend, ...)\n```\n\nThen `vim.lsp.config` can just accept that `merge` parameter and pass it along.",
            "created_at": "2025-04-27T01:42:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2832866835",
            "id": 2832866835,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6o2h4T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832866835/reactions"
            },
            "updated_at": "2025-04-27T11:40:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832866835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> As @mehalter and @thatsmydoing notice, from the opposite end of spectrum, there's also a 2nd problem of \"how to not override parameter?\". Proposition of prev parameter is interesting. Another approach I can think of is to have a table like so:\n\nI think propositions like this just overcomplicate things for almost no benefit. I don't think we'll be changing the merging semantics in any significant way. We'll have to add other solutions to specific problems, or just not address them at all. Complicated server setups probably shouldn't use `vim.lsp.config` and use `vim.lsp.start` instead. We can continue to make iterative improvements if they don't overly complicate things.\n\nStuff like `on_attach` and other callbacks should probably be implemented as autocmds and providers should be wary about adding them.",
            "created_at": "2025-04-27T07:39:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2833268685",
            "id": 2833268685,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6o4D_N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2833268685/reactions"
            },
            "updated_at": "2025-04-27T07:39:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2833268685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Stuff like `on_attach` and other callbacks should probably be implemented as autocmds and providers should be wary about adding them.\n\nIndeed, adding events `LspInit`, `LspBeforeInit`, etc., and appropriate warnings in the docs could also be a solution.",
            "created_at": "2025-04-27T08:09:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2833290084",
            "id": 2833290084,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6o4JNk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2833290084/reactions"
            },
            "updated_at": "2025-04-27T21:02:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2833290084",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22616434?v=4",
                "events_url": "https://api.github.com/users/Jorenar/events{/privacy}",
                "followers_url": "https://api.github.com/users/Jorenar/followers",
                "following_url": "https://api.github.com/users/Jorenar/following{/other_user}",
                "gists_url": "https://api.github.com/users/Jorenar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Jorenar",
                "id": 22616434,
                "login": "Jorenar",
                "node_id": "MDQ6VXNlcjIyNjE2NDM0",
                "organizations_url": "https://api.github.com/users/Jorenar/orgs",
                "received_events_url": "https://api.github.com/users/Jorenar/received_events",
                "repos_url": "https://api.github.com/users/Jorenar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Jorenar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Jorenar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Jorenar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> overcomplicate things for almost no benefit.\n\nAdding a [`merge` item](https://github.com/neovim/neovim/issues/33577#issuecomment-2832866835) to vim.lsp.config, which is passed along to `tbl_deep_extend(behavior: string|fun(key,val))`, is a complete solution, that also allows us to keep the mental model / docs simple.\n\nIt'll look a bit janky for users that want to do complex stuff, but will be much better than having to document \"this config defines a `LspAttach` handler, delete it if you don't want it...\".\n\nWe also may need this merge behavior for other things in the future, e.g. treesitter configs...",
            "created_at": "2025-04-27T11:43:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2833414964",
            "id": 2833414964,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6o4ns0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2833414964/reactions"
            },
            "updated_at": "2025-04-27T11:45:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2833414964",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Adding a [`merge` item](https://github.com/neovim/neovim/issues/33577#issuecomment-2832866835) to vim.lsp.config, which is passed along to `tbl_deep_extend(behavior: string|fun(key,val))`, is a complete solution, that also allows us to keep the mental model / docs simple.\n\nI don't disagree, but having `LspInit`, `LspBeforeInit`, etc. events would be quite useful regardless.",
            "created_at": "2025-04-27T17:11:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2833553134",
            "id": 2833553134,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6o5Jbu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2833553134/reactions"
            },
            "updated_at": "2025-04-27T17:30:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2833553134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22616434?v=4",
                "events_url": "https://api.github.com/users/Jorenar/events{/privacy}",
                "followers_url": "https://api.github.com/users/Jorenar/followers",
                "following_url": "https://api.github.com/users/Jorenar/following{/other_user}",
                "gists_url": "https://api.github.com/users/Jorenar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Jorenar",
                "id": 22616434,
                "login": "Jorenar",
                "node_id": "MDQ6VXNlcjIyNjE2NDM0",
                "organizations_url": "https://api.github.com/users/Jorenar/orgs",
                "received_events_url": "https://api.github.com/users/Jorenar/received_events",
                "repos_url": "https://api.github.com/users/Jorenar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Jorenar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Jorenar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Jorenar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> having `LspInit`, `LspBeforeInit`, etc. events would be quite useful regardless\n\nall of the surface area we add, is a new place that needs to be debugged when things go wrong. we already have start() callbacks, and if we add event handlers for all of them, then we have doubled the surface area.\n\nopen a new issue for that, it's off topic here.",
            "created_at": "2025-04-27T17:30:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/33577#issuecomment-2833560612",
            "id": 2833560612,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33577",
            "node_id": "IC_kwDOAPphoM6o5LQk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2833560612/reactions"
            },
            "updated_at": "2025-04-27T17:30:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2833560612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33577/comments",
    "created_at": "2025-04-22T14:30:47Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33577/events",
    "html_url": "https://github.com/neovim/neovim/issues/33577",
    "id": 3011276952,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33577/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 33,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 68,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-04-28T13:01:46Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM6zfHCY",
    "number": 33577,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 13,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 13,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33577/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33577/timeline",
    "title": "`lsp.config` merging semantics",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-27T21:02:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33577",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    }
}