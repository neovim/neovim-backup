{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen using `completeopt=menuone,longest`, triggering omnifunc with `<C-X C-O>` will delete the already-typed prefix if there are multiple matches. It should not delete any characters at all.\n\nIf I edit a Python file and try to type `staticmethod` by typing `sta` then pressing `<C-X C-O>`, `sta` is deleted and the completion popup is shown for prefix `sta`. If I type more characters before I invoke omnifunc, it will complete properly instead of deleting. It seems to be inconsistent how many characters are needed.\n\nIf I disable `longest` and just set `completeopt` to `menuone`, omnifunc in the Python file no longer causes the already-typed prefix to be deleted (but I lose the functionality of `longest`).\n\nI bisected and found commit 025c87441502cf570bad7b71f40bc6fe88989297 does not exhibit this bug, but it looks like there has been a lot of change to the LSP code since then so there may be versions in between that don't exhibit it either.\n\n### Steps to reproduce\n\nMy `minimal.lua`, from the template, and run with `nvim --clean -u minimal.lua`:\n\n```\nfor name, url in pairs {\n  'https://github.com/neovim/nvim-lspconfig/',\n} do\n  local install_path = vim.fn.fnamemodify('nvim_issue/' .. name, ':p')\n  if vim.fn.isdirectory(install_path) == 0 then\n    vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\n  end\n  vim.opt.runtimepath:append(install_path)\nend\n\nvim.o.completeopt = \"longest,menuone\"\n\nlocal on_attach = function(client, bufnr)\n    vim.bo.omnifunc = \"v:lua.vim.lsp.omnifunc\"\nend\n\nlocal nvim_lsp = require('lspconfig')\n\nnvim_lsp.pyright.setup({ on_attach = on_attach })\n```\n\nI have built neovim from source using a vanilla `make install` to a custom prefix:\n\n```\ngit clone --bare --recurse-submodules https://github.com/neovim/neovim /path/to/dir\ncd /path/to/dir\nmake CMAKE_BUILD_TYPE=Release CMAKE_INSTALL_PREFIX=\"/path/to/install\" install\n```\n\n### Expected behavior\n\nIf I edit a Python file and try to type `staticmethod` by typing `sta` then pressing `<C-X C-O>`, `sta` should be preserved and the completion popup should be shown for prefix `sta`.\n\n### Nvim version (nvim -v)\n\ncommit e9c077d197a80a2ecd858821b18d0be3e3eb6d0b\n\n### Vim (not Nvim) behaves the same?\n\nCan't reproduce, LSP related.\n\n### Operating system/version\n\nDebian Trixie\n\n### Terminal name/version\n\nfoot 1.18.1\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nBuild from repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "When item.textEdit has matches, item is considered a match. This will return a large number of results that do not match preifx. comp_leader is frequently changed in ins_compl_longest_match to find the longest substring. This can cause prefix to be deleted when many items that do not match prefix exist. this should work. . .\n\n```diff\ndiff --git a/runtime/lua/vim/lsp/completion.lua b/runtime/lua/vim/lsp/completion.lua\nindex dbf0a62ee..7d4e11ac2 100644\n--- a/runtime/lua/vim/lsp/completion.lua\n+++ b/runtime/lua/vim/lsp/completion.lua\n@@ -262,7 +262,7 @@ function M._lsp_to_complete_items(result, prefix, client_id)\n         return match_item_by_value(item.filterText, prefix)\n       end\n\n-      if item.textEdit then\n+      if item.textEdit and not vim.o.completeopt:find('longest') then\n         -- server took care of filtering\n         return true\n       end\n```",
            "created_at": "2024-12-31T06:15:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/31795#issuecomment-2566165014",
            "id": 2566165014,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31795",
            "node_id": "IC_kwDOAPphoM6Y9JIW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566165014/reactions"
            },
            "updated_at": "2024-12-31T06:15:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566165014",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm experiencing the same problem. If I use \\<C-N> or \\<C-P>, the prefix text remains in place. But if I use omnifunc (from nvim-lspconfig) the prefix intermittently disappears.\n\nSteps to reproduce:\n1. `mkdir ~/empty_test_dir`\n2. `cd ~/empty_test_dir`\n3. `nvim empty_file.cpp`\n4. Confirm `:set completeopt?` contains `menu,longest`.\n5. Enter input mode and type `a<C-X><C-O>` to invoke omnifunc with `a` as prefix. On my machine this reports 100 matches and the `a` remains in the buffer. (expected?)\n6. Delete the line.\n7. Enter input mode and type `b<C-X><C-O>`. On my machine this reports 89 matches but the `b` is removed from the buffer. (bug?)\n\nOmnifunc works correctly when completing 'a' but incorrectly when completing 'b'.\n\n__NeoVim v0.11.0__\n_from Arch repository_\n__nvim-lspconfig__\n_commit 32b6a64_",
            "created_at": "2025-04-22T08:33:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/31795#issuecomment-2820577597",
            "id": 2820577597,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31795",
            "node_id": "IC_kwDOAPphoM6oHpk9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820577597/reactions"
            },
            "updated_at": "2025-04-22T08:33:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820577597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/177370237?v=4",
                "events_url": "https://api.github.com/users/bwaterford/events{/privacy}",
                "followers_url": "https://api.github.com/users/bwaterford/followers",
                "following_url": "https://api.github.com/users/bwaterford/following{/other_user}",
                "gists_url": "https://api.github.com/users/bwaterford/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bwaterford",
                "id": 177370237,
                "login": "bwaterford",
                "node_id": "U_kgDOCpJ0fQ",
                "organizations_url": "https://api.github.com/users/bwaterford/orgs",
                "received_events_url": "https://api.github.com/users/bwaterford/received_events",
                "repos_url": "https://api.github.com/users/bwaterford/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bwaterford/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bwaterford/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bwaterford",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Following the procedure I just posted, I experimented with various completion prefixs and gleaned some further information that might be useful.\n\nFor a given prefix (`a` and `b` above), the bug always presents or always fails to present. It's not truly intermittent since it can be reliably created.\n\nAlso, the bug does not appear to be related to the displayed results in the menu.\n\n`be` returns seven results and the typed text is removed. \n\nHowever, of the seven results, three start with `beg`, three start with `bet`, and one starts with `ber`. If I start completion on any of those prefixes the completion works normally.",
            "created_at": "2025-04-22T09:03:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/31795#issuecomment-2820657247",
            "id": 2820657247,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31795",
            "node_id": "IC_kwDOAPphoM6oH9Bf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820657247/reactions"
            },
            "updated_at": "2025-04-22T09:03:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820657247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/177370237?v=4",
                "events_url": "https://api.github.com/users/bwaterford/events{/privacy}",
                "followers_url": "https://api.github.com/users/bwaterford/followers",
                "following_url": "https://api.github.com/users/bwaterford/following{/other_user}",
                "gists_url": "https://api.github.com/users/bwaterford/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bwaterford",
                "id": 177370237,
                "login": "bwaterford",
                "node_id": "U_kgDOCpJ0fQ",
                "organizations_url": "https://api.github.com/users/bwaterford/orgs",
                "received_events_url": "https://api.github.com/users/bwaterford/received_events",
                "repos_url": "https://api.github.com/users/bwaterford/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bwaterford/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bwaterford/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bwaterford",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31795/comments",
    "created_at": "2024-12-31T02:16:06Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31795/events",
    "html_url": "https://github.com/neovim/neovim/issues/31795",
    "id": 2763876198,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31795/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6kvWdm",
    "number": 31795,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31795/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31795/timeline",
    "title": "Already-typed prefix is deleted when invoking omnifunc with completeopt set to menuone,longest",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-22T09:03:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31795",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/288426?v=4",
        "events_url": "https://api.github.com/users/shabbyrobe/events{/privacy}",
        "followers_url": "https://api.github.com/users/shabbyrobe/followers",
        "following_url": "https://api.github.com/users/shabbyrobe/following{/other_user}",
        "gists_url": "https://api.github.com/users/shabbyrobe/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/shabbyrobe",
        "id": 288426,
        "login": "shabbyrobe",
        "node_id": "MDQ6VXNlcjI4ODQyNg==",
        "organizations_url": "https://api.github.com/users/shabbyrobe/orgs",
        "received_events_url": "https://api.github.com/users/shabbyrobe/received_events",
        "repos_url": "https://api.github.com/users/shabbyrobe/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/shabbyrobe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shabbyrobe/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/shabbyrobe",
        "user_view_type": "public"
    }
}