{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nAs in the title. I don't understand why the preceding `print()` is essential in the repro to get the error message with empty kind.\n\n```\n{\n  c = { { 0, \"1\", 0 } },\n  k = \"lua_print\"\n}\n{\n  c = { { 25, 'Error detected while processing BufWinEnter Autocommands for \"*\":', 6 } },\n  k = \"lua_error\"\n}\n{\n  c = { { 25, \"Error executing lua callback: ...tgx/opt/arctgx/examples/ui-messages/empty-error-kind.lua:30: x\\nstack traceback:\\n\\t[C]: in function 'error'\\n\\t...tgx/opt/arctgx/examples/ui-messages/empty-error-kind.lua:30: in function <...tgx/opt/arctgx/examples/ui-messages/empty-error-kind.lua:28>\", 6 } },\n  k = \"\"\n}\n```\n\n### Steps to reproduce\n\ninit.lua\n```lua\nlocal api = vim.api\nlocal ns = api.nvim_create_namespace('messageRedirection')\n\nlocal function log(msg)\n  vim.schedule(function ()\n    api.nvim_buf_set_lines(1, -1, -1, true, vim.split(msg, '\\n'))\n    api.nvim__redraw({flush = true})\n  end)\nend\n\nlocal function handleMessages(kind, content)\n  if kind == 'return_prompt' then\n    api.nvim_input('\\r')\n    return\n  end\n\n  log(vim.inspect({k = kind or 'none', c = content or 'none'}))\nend\n\nvim.ui_attach(ns, {ext_messages = true, ext_cmdline = true}, function (event, ...)\n  if event == 'msg_show' then\n    handleMessages(...)\n  end\nend)\n\napi.nvim_create_autocmd({'BufWinEnter'}, {\n  callback = function ()\n    print(1)\n    error('x')\n  end\n})\n```\n- `nvim --clean -u init.lua`\n\n### Expected behavior\n\nThe error message is sent with the correct kind.\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-2023+g3e3775961f\n\n### Vim (not Nvim) behaves the same?\n\nn/a\n\n### Operating system/version\n\nDebian Sid\n\n### Terminal name/version\n\nalacritty\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nfrom repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32933/comments",
    "created_at": "2025-03-16T23:25:02Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32933/events",
    "html_url": "https://github.com/neovim/neovim/issues/32933",
    "id": 2923388133,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "UI messages, log messages, errors, warnings, feedback",
            "id": 5637083595,
            "name": "messages",
            "node_id": "LA_kwDOAPphoM8AAAABT_8Ryw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/messages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32933/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6uP1zl",
    "number": 32933,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32933/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32933/timeline",
    "title": "Lua error messages can still be sent to ui_attach callback with empty kind",
    "updated_at": "2025-03-17T00:42:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32933",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia",
        "user_view_type": "public"
    }
}