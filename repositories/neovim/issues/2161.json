{
    "active_lock_reason": "off-topic",
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hi Everyone, I've got a few use-cases that I'm wondering if Neovim can solve. If I'm missing something just let me know.\n\nThe main thing I'd like to do is to be able to have two or more **linked** Windows (using OS terminology, NOT vim windows, see emacs **frames** for a comparison) of Vim. The reason for this is that it would facilitate multi-monitor set-ups. Each monitor would have its own OS window (I'll call them **widgets** from now on to avoid confusion) and focus could be switched between the two (or more) using vim-bindings.\n\nThis is a necessary addition to existing structures like tabs, windows, splits, etc. because often different monitors have different resolutions and arrangements, and Vim doesn't always adapt well to these situations (stretching a single widget across multiple screens doesn't work well, and MANY programmers are using multi-monitor setups).\n\nSome features this would require for optimal use would include:\n- If a buffer is present in each widget, they should update themselves with changes made in other widgets (preferably in real-time) \n- It is possible for a buffer to be open in one widget, while not open in another.\n- It is possible for a buffer to be open in multiple widgets at the same time.\n- All splits, windows, and tabs are managed on a per widget basis (making a split in one widget doesn't affect any others).\n- There is only one active cursor between all widgets\n- The Vim instance is aware of all windows and can switch between them using keyboard bindings (similar to switching between splits using <ctrl-w>[key] bindings\n\nAs far as implementation goes I don't believe something like this is currently possible. Since Vim does not traditionally deal with Widgets itself (leaving that to gVim and MacVim) it would perhaps be more dependent on GUI clients to implement, however it would still be important for Neovim to define an interface which allows this behaviour. These features will come in handy when third-parties begin to look at embedding Vim, and will allow them greater flexibility in doing so.\n\nI don't believe that Vim's server modes allow this behaviour as they are, though it would be possible to extend it's behaviour to accommodate this sort of thing.\n\nIf there is any confusion, please ask.  For reference, simply look over how \"frames\" are handled in Emacs.\n\nI'm not sure whether it would be most beneficial to share a buffer list between widgets or not, that's up for debate I suppose.\n\nCheers! Thanks for your time.\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Something I had planned is to allow one nvim instance have multiple screens(possibly of different sizes) attached. The main purpose is to allow more fancy GUIs(which have panes with different font sizes for example), but also covers the use case you described.\n",
            "created_at": "2015-03-15T23:19:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-81289851",
            "id": 81289851,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjg5ODUx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/81289851/reactions"
            },
            "updated_at": "2015-03-15T23:19:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/81289851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Right, that sounds good. I think GUI providers will find many convenient uses for a design like this.\n\nWould it be up to the GUI provider to give suitable key-bindings to navigate between them? Or is it possible to have a vim-centric solution for focusing a screen using vim keybindings?\nUsing OS shortcuts like Alt-Tab is kind of a sub-optimal solution.\n",
            "created_at": "2015-03-15T23:23:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-81291522",
            "id": 81291522,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjkxNTIy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/81291522/reactions"
            },
            "updated_at": "2015-03-15T23:23:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/81291522",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6439644?v=4",
                "events_url": "https://api.github.com/users/ChrisPenner/events{/privacy}",
                "followers_url": "https://api.github.com/users/ChrisPenner/followers",
                "following_url": "https://api.github.com/users/ChrisPenner/following{/other_user}",
                "gists_url": "https://api.github.com/users/ChrisPenner/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ChrisPenner",
                "id": 6439644,
                "login": "ChrisPenner",
                "node_id": "MDQ6VXNlcjY0Mzk2NDQ=",
                "organizations_url": "https://api.github.com/users/ChrisPenner/orgs",
                "received_events_url": "https://api.github.com/users/ChrisPenner/received_events",
                "repos_url": "https://api.github.com/users/ChrisPenner/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ChrisPenner/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ChrisPenner/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ChrisPenner",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": ":+1: \n",
            "created_at": "2015-03-16T19:59:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-81905356",
            "id": 81905356,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTA1MzU2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/81905356/reactions"
            },
            "updated_at": "2020-03-01T19:03:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/81905356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2317562?v=4",
                "events_url": "https://api.github.com/users/simonweil/events{/privacy}",
                "followers_url": "https://api.github.com/users/simonweil/followers",
                "following_url": "https://api.github.com/users/simonweil/following{/other_user}",
                "gists_url": "https://api.github.com/users/simonweil/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/simonweil",
                "id": 2317562,
                "login": "simonweil",
                "node_id": "MDQ6VXNlcjIzMTc1NjI=",
                "organizations_url": "https://api.github.com/users/simonweil/orgs",
                "received_events_url": "https://api.github.com/users/simonweil/received_events",
                "repos_url": "https://api.github.com/users/simonweil/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/simonweil/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/simonweil/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/simonweil",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I am also very interested in this.\n\nMeanwhile if your main interest is using the same set of command to move between splits as your window manager, you should be able to use the rpc to acheive that.\n\nI was thinking of writing a windowmanager (i3 in my case) level script that would detect neovim focus and then send wincmd via rpc. When the command fails (i.e. you run wincmd h and there is no window at the left), the wm can takeover and switch focus to the window on the left.\n\nMy current problem is to retrieve the \"wincmd h\" result.\n",
            "created_at": "2015-08-22T13:46:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-133704998",
            "id": 133704998,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzcwNDk5OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/133704998/reactions"
            },
            "updated_at": "2015-08-22T13:46:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/133704998",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've written and explained a hack to move smoothly (i.e., with the same mappings) between my tiling Window Manager windows and neovim splits in this post: https://www.reddit.com/r/vim/comments/3hh42z/can_i_replace_vims_windows_with_a_tiling_window/cuc8gk5\nThat doesn't solve everything but that helps\n",
            "created_at": "2015-08-22T22:52:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-133761100",
            "id": 133761100,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzc2MTEwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/133761100/reactions"
            },
            "updated_at": "2015-08-22T22:52:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/133761100",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": ":+1: \n",
            "created_at": "2015-11-25T15:31:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-159641907",
            "id": 159641907,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTY0MTkwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/159641907/reactions"
            },
            "updated_at": "2020-03-01T19:03:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/159641907",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1336287?v=4",
                "events_url": "https://api.github.com/users/languitar/events{/privacy}",
                "followers_url": "https://api.github.com/users/languitar/followers",
                "following_url": "https://api.github.com/users/languitar/following{/other_user}",
                "gists_url": "https://api.github.com/users/languitar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/languitar",
                "id": 1336287,
                "login": "languitar",
                "node_id": "MDQ6VXNlcjEzMzYyODc=",
                "organizations_url": "https://api.github.com/users/languitar/orgs",
                "received_events_url": "https://api.github.com/users/languitar/received_events",
                "repos_url": "https://api.github.com/users/languitar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/languitar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/languitar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/languitar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think it should be possible through a plugin to hack something with Shada, like:\n-on some events  you force shada to save (yanking/focuslost...) or load shada file (gainedfocus)\n-and you override some commands like :split / newbuffer/new tab to open a new neovim instance. \n",
            "created_at": "2015-11-25T16:32:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-159663834",
            "id": 159663834,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTY2MzgzNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/159663834/reactions"
            },
            "updated_at": "2015-11-25T16:32:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/159663834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I guess flushing everything to disk or using the same swapfiles could make this work but I am not sure if that would be a good idea.\n\nDoes focuslost/gainedfocus even work in the terminal version? Haven't tried much with gui clients because so far all I tried very immensely laggy compared to terminal nvim.\n",
            "created_at": "2015-11-25T17:55:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-159687457",
            "id": 159687457,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTY4NzQ1Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/159687457/reactions"
            },
            "updated_at": "2015-11-25T17:55:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/159687457",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11866759?v=4",
                "events_url": "https://api.github.com/users/Tarmean/events{/privacy}",
                "followers_url": "https://api.github.com/users/Tarmean/followers",
                "following_url": "https://api.github.com/users/Tarmean/following{/other_user}",
                "gists_url": "https://api.github.com/users/Tarmean/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Tarmean",
                "id": 11866759,
                "login": "Tarmean",
                "node_id": "MDQ6VXNlcjExODY2NzU5",
                "organizations_url": "https://api.github.com/users/Tarmean/orgs",
                "received_events_url": "https://api.github.com/users/Tarmean/received_events",
                "repos_url": "https://api.github.com/users/Tarmean/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Tarmean/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Tarmean/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Tarmean",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Using the disk is indeed not optimal, hence the \"hack\" part :) \nfocuslost/gainedfocus should be working in the terminal version since some patches last week (haven't tested yet).\nThat would be a cool hack though\n",
            "created_at": "2015-11-25T18:05:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-159689586",
            "id": 159689586,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTY4OTU4Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/159689586/reactions"
            },
            "updated_at": "2015-11-25T18:05:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/159689586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I converted my post from the 23 August into an actual script that can be used in i3 to use the same WM bindings to move between splits and windows, https://github.com/teto/i3-dispatch .\nThis doesn't solve the other problems but I find it useful already.\n",
            "created_at": "2016-02-16T11:52:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-184652251",
            "id": 184652251,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDY1MjI1MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184652251/reactions"
            },
            "updated_at": "2016-02-16T11:52:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184652251",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Big +1 on this. It's something I've always wished for.\n\nFor even bigger bonus the split-style commands (e.g. :Sex or :stag) should just pop up a new terminal emulator with an appropriately linked neovim instance sitting inside it. My window manager will take care of the rest. :)\n",
            "created_at": "2016-03-28T22:22:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-202602783",
            "id": 202602783,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjYwMjc4Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/202602783/reactions"
            },
            "updated_at": "2018-11-15T20:10:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/202602783",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1149047?v=4",
                "events_url": "https://api.github.com/users/haasn/events{/privacy}",
                "followers_url": "https://api.github.com/users/haasn/followers",
                "following_url": "https://api.github.com/users/haasn/following{/other_user}",
                "gists_url": "https://api.github.com/users/haasn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/haasn",
                "id": 1149047,
                "login": "haasn",
                "node_id": "MDQ6VXNlcjExNDkwNDc=",
                "organizations_url": "https://api.github.com/users/haasn/orgs",
                "received_events_url": "https://api.github.com/users/haasn/received_events",
                "repos_url": "https://api.github.com/users/haasn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/haasn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/haasn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/haasn",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I hope one day to be able to use vim in the same project on two monitors!\n\nBTW, if you know any workaround for the moment, it would be highly appreciated.\n",
            "created_at": "2016-09-09T08:08:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-245847969",
            "id": 245847969,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTg0Nzk2OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/245847969/reactions"
            },
            "updated_at": "2018-11-15T20:10:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/245847969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/533068?v=4",
                "events_url": "https://api.github.com/users/jreybert/events{/privacy}",
                "followers_url": "https://api.github.com/users/jreybert/followers",
                "following_url": "https://api.github.com/users/jreybert/following{/other_user}",
                "gists_url": "https://api.github.com/users/jreybert/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jreybert",
                "id": 533068,
                "login": "jreybert",
                "node_id": "MDQ6VXNlcjUzMzA2OA==",
                "organizations_url": "https://api.github.com/users/jreybert/orgs",
                "received_events_url": "https://api.github.com/users/jreybert/received_events",
                "repos_url": "https://api.github.com/users/jreybert/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jreybert/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jreybert/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jreybert",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just as a note for usability, it might make sense to have each OS window show a vim tab, like in XMonad. Having both windows open the same tab could just mirror the windows, maybe with the cursor only existing in one window, OR trying to open a tab that is currently open in another window could just swap the remote window and the current window's tabs. Like this:\r\n[(window1, tab1), (window2, tab2)]\r\n*in window1, run a command to open next tab, or open tab2 specifically, or whatever*\r\n[(window1,tab2), (window2, tab1)]\r\nTab2 is opened as requested, and the previously open tab is moved to fill the gap of window2. This is how XMonad deals with this problem, and I think it could work here, as well.",
            "created_at": "2017-01-12T18:15:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-272239045",
            "id": 272239045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjIzOTA0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/272239045/reactions"
            },
            "updated_at": "2017-01-12T18:15:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/272239045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12566788?v=4",
                "events_url": "https://api.github.com/users/vatrat/events{/privacy}",
                "followers_url": "https://api.github.com/users/vatrat/followers",
                "following_url": "https://api.github.com/users/vatrat/following{/other_user}",
                "gists_url": "https://api.github.com/users/vatrat/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vatrat",
                "id": 12566788,
                "login": "vatrat",
                "node_id": "MDQ6VXNlcjEyNTY2Nzg4",
                "organizations_url": "https://api.github.com/users/vatrat/orgs",
                "received_events_url": "https://api.github.com/users/vatrat/received_events",
                "repos_url": "https://api.github.com/users/vatrat/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vatrat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vatrat/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vatrat",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Dear @jreybert,\r\nI have the same dream as you and I find a solution.... EmacsEvilMode.\r\nIt's hard to say but Emacs is a better Vim than Vim itself ;(\r\nUse an editor on multiple monitor should be a basic feature.\r\nI really hope that NeoVim will come with this extremely useful feature :)",
            "created_at": "2017-03-16T05:09:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-286959538",
            "id": 286959538,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njk1OTUzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 2,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/286959538/reactions"
            },
            "updated_at": "2018-11-15T20:10:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/286959538",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2981437?v=4",
                "events_url": "https://api.github.com/users/stephane-archer/events{/privacy}",
                "followers_url": "https://api.github.com/users/stephane-archer/followers",
                "following_url": "https://api.github.com/users/stephane-archer/following{/other_user}",
                "gists_url": "https://api.github.com/users/stephane-archer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stephane-archer",
                "id": 2981437,
                "login": "stephane-archer",
                "node_id": "MDQ6VXNlcjI5ODE0Mzc=",
                "organizations_url": "https://api.github.com/users/stephane-archer/orgs",
                "received_events_url": "https://api.github.com/users/stephane-archer/received_events",
                "repos_url": "https://api.github.com/users/stephane-archer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stephane-archer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stephane-archer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stephane-archer",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Just as a note for usability, it might make sense to have each OS window show a vim tab, like in XMonad. Having both windows open the same tab could just mirror the windows, maybe with the cursor only existing in one window, OR trying to open a tab that is currently open in another window could just swap the remote window and the current window's tabs. Like this:\r\n\r\nOf course, if every tab was literally its own window, xmonad etc. would deal with this just fine. :p\r\n\r\nWhy reinvent the wheel when a better wheel already exists?",
            "created_at": "2017-03-16T07:26:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-286978382",
            "id": 286978382,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njk3ODM4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/286978382/reactions"
            },
            "updated_at": "2020-03-01T19:02:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/286978382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1149047?v=4",
                "events_url": "https://api.github.com/users/haasn/events{/privacy}",
                "followers_url": "https://api.github.com/users/haasn/followers",
                "following_url": "https://api.github.com/users/haasn/following{/other_user}",
                "gists_url": "https://api.github.com/users/haasn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/haasn",
                "id": 1149047,
                "login": "haasn",
                "node_id": "MDQ6VXNlcjExNDkwNDc=",
                "organizations_url": "https://api.github.com/users/haasn/orgs",
                "received_events_url": "https://api.github.com/users/haasn/received_events",
                "repos_url": "https://api.github.com/users/haasn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/haasn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/haasn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/haasn",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sorry @vatrat , I didn´t understand how you solve the problem :(\r\nI use i3wm witch look like close to XMonad.\r\nIn my case I want to edit a C++ file on one screen and have on another screen some file to help me.\r\nFor example the header or the declaration of over function inside the same file.\r\nCan it can solve my problem?",
            "created_at": "2017-03-16T08:34:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-286990287",
            "id": 286990287,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njk5MDI4Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/286990287/reactions"
            },
            "updated_at": "2020-03-01T19:02:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/286990287",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2981437?v=4",
                "events_url": "https://api.github.com/users/stephane-archer/events{/privacy}",
                "followers_url": "https://api.github.com/users/stephane-archer/followers",
                "following_url": "https://api.github.com/users/stephane-archer/following{/other_user}",
                "gists_url": "https://api.github.com/users/stephane-archer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stephane-archer",
                "id": 2981437,
                "login": "stephane-archer",
                "node_id": "MDQ6VXNlcjI5ODE0Mzc=",
                "organizations_url": "https://api.github.com/users/stephane-archer/orgs",
                "received_events_url": "https://api.github.com/users/stephane-archer/received_events",
                "repos_url": "https://api.github.com/users/stephane-archer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stephane-archer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stephane-archer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stephane-archer",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think this can be done (single nvim instance solution) without gigantic refactors or additions to screen.c and window.c with one sacrifice: top-level frames will replace tabs in multi-frame mode. I have a WIP branch here https://github.com/neovim/neovim/compare/master...bfredl:multigrid?expand=1 . All tab functions and commands will manipulate top-level frames instead in multigrid mode. Currently can be \"tested\" only with https://github.com/neovim/python-gui/compare/master...bfredl:multigrid?expand=1 . I will open PR when I fix some severe problems such as no input focus tracking and almost completely broken resize. Also it must be compatible with floating windows #6619 using own grids.",
            "created_at": "2017-11-07T20:14:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-342608030",
            "id": 342608030,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjYwODAzMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/342608030/reactions"
            },
            "updated_at": "2017-11-07T20:14:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/342608030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "[There is a bounty on this issue.](https://www.bountysource.com/issues/9598868-multiple-linked-clients-like-frames-in-emacs)",
            "created_at": "2018-01-10T20:03:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-356720196",
            "id": 356720196,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjcyMDE5Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 12,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 12,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/356720196/reactions"
            },
            "updated_at": "2018-01-10T20:03:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/356720196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3281837?v=4",
                "events_url": "https://api.github.com/users/lorienhu/events{/privacy}",
                "followers_url": "https://api.github.com/users/lorienhu/followers",
                "following_url": "https://api.github.com/users/lorienhu/following{/other_user}",
                "gists_url": "https://api.github.com/users/lorienhu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lorienhu",
                "id": 3281837,
                "login": "lorienhu",
                "node_id": "MDQ6VXNlcjMyODE4Mzc=",
                "organizations_url": "https://api.github.com/users/lorienhu/orgs",
                "received_events_url": "https://api.github.com/users/lorienhu/received_events",
                "repos_url": "https://api.github.com/users/lorienhu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lorienhu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lorienhu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lorienhu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "any updates on this issue?",
            "created_at": "2018-11-15T19:00:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-439152682",
            "id": 439152682,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTE1MjY4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/439152682/reactions"
            },
            "updated_at": "2020-03-01T19:02:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/439152682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8763010?v=4",
                "events_url": "https://api.github.com/users/kovasap/events{/privacy}",
                "followers_url": "https://api.github.com/users/kovasap/followers",
                "following_url": "https://api.github.com/users/kovasap/following{/other_user}",
                "gists_url": "https://api.github.com/users/kovasap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kovasap",
                "id": 8763010,
                "login": "kovasap",
                "node_id": "MDQ6VXNlcjg3NjMwMTA=",
                "organizations_url": "https://api.github.com/users/kovasap/orgs",
                "received_events_url": "https://api.github.com/users/kovasap/received_events",
                "repos_url": "https://api.github.com/users/kovasap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kovasap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kovasap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kovasap",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@kovasap #8455 and #6619 are adding infrastructure that lays the groundwork for tackling this. After those are merged we should move forward with this. #8707 will (among a lot of other things) allow UI-side implementation of frames, while #7541 is a rough sketch of a solution with nvim-side control (using the magic formula \"one tabpage == one frame\").",
            "created_at": "2018-11-15T19:11:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-439155911",
            "id": 439155911,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTE1NTkxMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 6,
                "hooray": 6,
                "laugh": 0,
                "rocket": 0,
                "total_count": 12,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/439155911/reactions"
            },
            "updated_at": "2018-11-15T19:11:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/439155911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ok, thanks for the quick and detailed update!",
            "created_at": "2018-11-15T20:08:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-439173411",
            "id": 439173411,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTE3MzQxMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/439173411/reactions"
            },
            "updated_at": "2020-03-01T19:02:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/439173411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8763010?v=4",
                "events_url": "https://api.github.com/users/kovasap/events{/privacy}",
                "followers_url": "https://api.github.com/users/kovasap/followers",
                "following_url": "https://api.github.com/users/kovasap/following{/other_user}",
                "gists_url": "https://api.github.com/users/kovasap/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kovasap",
                "id": 8763010,
                "login": "kovasap",
                "node_id": "MDQ6VXNlcjg3NjMwMTA=",
                "organizations_url": "https://api.github.com/users/kovasap/orgs",
                "received_events_url": "https://api.github.com/users/kovasap/received_events",
                "repos_url": "https://api.github.com/users/kovasap/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kovasap/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kovasap/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kovasap",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "long time no hear, eager to see this coming. May this also be the foundation for collaborative editing?",
            "created_at": "2020-03-01T18:30:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-593128821",
            "id": 593128821,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzEyODgyMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 6,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/593128821/reactions"
            },
            "updated_at": "2021-07-10T17:13:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/593128821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/160382?v=4",
                "events_url": "https://api.github.com/users/the42/events{/privacy}",
                "followers_url": "https://api.github.com/users/the42/followers",
                "following_url": "https://api.github.com/users/the42/following{/other_user}",
                "gists_url": "https://api.github.com/users/the42/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/the42",
                "id": 160382,
                "login": "the42",
                "node_id": "MDQ6VXNlcjE2MDM4Mg==",
                "organizations_url": "https://api.github.com/users/the42/orgs",
                "received_events_url": "https://api.github.com/users/the42/received_events",
                "repos_url": "https://api.github.com/users/the42/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/the42/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/the42/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/the42",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There is work in that direction, for instance https://github.com/neovim/neovim/pull/11326",
            "created_at": "2020-03-01T18:52:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/2161#issuecomment-593131151",
            "id": 593131151,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2161",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzEzMTE1MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 11,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 11,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/593131151/reactions"
            },
            "updated_at": "2020-03-01T18:52:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/593131151",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 23,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/2161/comments",
    "created_at": "2015-03-15T23:08:18Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/2161/events",
    "html_url": "https://github.com/neovim/neovim/issues/2161",
    "id": 61916455,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/2161/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU2MTkxNjQ1NQ==",
    "number": 2161,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 53,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 10,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 63,
        "url": "https://api.github.com/repos/neovim/neovim/issues/2161/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/2161/timeline",
    "title": "Multihead: multiple linked clients (like Emacs \"frames\", multitenancy)",
    "updated_at": "2025-01-17T16:19:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/2161",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6439644?v=4",
        "events_url": "https://api.github.com/users/ChrisPenner/events{/privacy}",
        "followers_url": "https://api.github.com/users/ChrisPenner/followers",
        "following_url": "https://api.github.com/users/ChrisPenner/following{/other_user}",
        "gists_url": "https://api.github.com/users/ChrisPenner/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ChrisPenner",
        "id": 6439644,
        "login": "ChrisPenner",
        "node_id": "MDQ6VXNlcjY0Mzk2NDQ=",
        "organizations_url": "https://api.github.com/users/ChrisPenner/orgs",
        "received_events_url": "https://api.github.com/users/ChrisPenner/received_events",
        "repos_url": "https://api.github.com/users/ChrisPenner/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ChrisPenner/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ChrisPenner/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ChrisPenner",
        "user_view_type": "public"
    }
}