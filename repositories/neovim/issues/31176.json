{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nHi! I made this plugin to call code actions on save. Most of the work was in figuring out that a sync version of `vim.lsp.buf.code_action` is needed, and in coercing Neovim to call code actions synchronously, by inspecting how Neovim calls them synchronously and repeating the code.\n\nThis would be much easier, and probably my plugin would not be needed if there were a `vim.lsp.buf.code_action_sync` variant.\n\n### Expected behavior\n\n```lua\n-- Can be called on a `BufWritePre` autocmd\nvim.lsp.buf.code_action_sync({\n  context = { only = { \"source.organizeImports\" } },\n  apply = true,\n})\n```\n\n### Alternative\n\nCurrently this is what I do in my plugin, it's not great:\n\nhttps://github.com/fnune/codeactions-on-save.nvim/blob/main/lua/codeactions-on-save/main.lua#L15-L37",
    "closed_at": "2024-11-12T10:31:17Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Duplicate of #25259",
            "created_at": "2024-11-12T10:31:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/31176#issuecomment-2470164278",
            "id": 2470164278,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31176",
            "node_id": "IC_kwDOAPphoM6TO7c2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2470164278/reactions"
            },
            "updated_at": "2024-11-12T10:31:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2470164278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for linking! A callback does not make the whole thing sync, no? How would that work within e.g. a `BufWritePre` `autocmd`?",
            "created_at": "2024-11-12T10:34:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/31176#issuecomment-2470171196",
            "id": 2470171196,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31176",
            "node_id": "IC_kwDOAPphoM6TO9I8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2470171196/reactions"
            },
            "updated_at": "2024-11-12T10:34:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2470171196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16181067?v=4",
                "events_url": "https://api.github.com/users/fnune/events{/privacy}",
                "followers_url": "https://api.github.com/users/fnune/followers",
                "following_url": "https://api.github.com/users/fnune/following{/other_user}",
                "gists_url": "https://api.github.com/users/fnune/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fnune",
                "id": 16181067,
                "login": "fnune",
                "node_id": "MDQ6VXNlcjE2MTgxMDY3",
                "organizations_url": "https://api.github.com/users/fnune/orgs",
                "received_events_url": "https://api.github.com/users/fnune/received_events",
                "repos_url": "https://api.github.com/users/fnune/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fnune/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fnune/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fnune",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You can use `vim.wait`. We are not providing sync versions for every `vim.lsp.buf.*` function, but we will provide continuations for them. This can then be used with whatever we implement for #19624.",
            "created_at": "2024-11-12T10:43:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/31176#issuecomment-2470191826",
            "id": 2470191826,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31176",
            "node_id": "IC_kwDOAPphoM6TPCLS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2470191826/reactions"
            },
            "updated_at": "2024-11-12T10:43:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2470191826",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> ...but we will provide continuations for them.\n\nOK. That is workable (either coding it in a raw version using `vim.wait()` or using libraries like coop.nvim (https://github.com/neovim/neovim/issues/19624#issuecomment-2466700118).\n\nBut, that does require that `vim.lsp.buf.code_action` learns about a `cb` argument. Would that be accepted, or are you not sure about the approach yet?",
            "created_at": "2024-11-13T12:50:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/31176#issuecomment-2473531247",
            "id": 2473531247,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31176",
            "node_id": "IC_kwDOAPphoM6Tbxdv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2473531247/reactions"
            },
            "updated_at": "2024-11-13T12:50:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2473531247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But, that does require that vim.lsp.buf.code_action learns about a cb argument. Would that be accepted, or are you not sure about the approach yet?\n\nYes eventually, but this will be done for all `vim.lsp.buf` functions in one go.\n\nAnd going forward, I want to require that all async functions provide a continuation.",
            "created_at": "2024-11-13T14:01:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/31176#issuecomment-2473704448",
            "id": 2473704448,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31176",
            "node_id": "IC_kwDOAPphoM6TcbwA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2473704448/reactions"
            },
            "updated_at": "2024-11-13T14:01:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2473704448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31176/comments",
    "created_at": "2024-11-12T06:13:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31176/events",
    "html_url": "https://github.com/neovim/neovim/issues/31176",
    "id": 2651153590,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as duplicates of other issues",
            "id": 3221613764,
            "name": "closed:duplicate",
            "node_id": "MDU6TGFiZWwzMjIxNjEzNzY0",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:duplicate"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31176/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6eBWS2",
    "number": 31176,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31176/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31176/timeline",
    "title": "Sync version of `vim.lsp.buf.code_action`, allowing code actions on save",
    "updated_at": "2025-01-17T15:33:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31176",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/16181067?v=4",
        "events_url": "https://api.github.com/users/fnune/events{/privacy}",
        "followers_url": "https://api.github.com/users/fnune/followers",
        "following_url": "https://api.github.com/users/fnune/following{/other_user}",
        "gists_url": "https://api.github.com/users/fnune/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fnune",
        "id": 16181067,
        "login": "fnune",
        "node_id": "MDQ6VXNlcjE2MTgxMDY3",
        "organizations_url": "https://api.github.com/users/fnune/orgs",
        "received_events_url": "https://api.github.com/users/fnune/received_events",
        "repos_url": "https://api.github.com/users/fnune/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fnune/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fnune/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fnune",
        "user_view_type": "public"
    }
}