{
    "active_lock_reason": "off-topic",
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "This is a stub issue, will update it over time.\n\n## Problem\n\nAlthough \"AI features\" are not something we see a need for in Nvim core, I'm looking at the space and have noticed some \"primitives\" that are missing and require every plugin to reimplement things that are generally useful, even for non-AI plugins. \n\n\n## Expected behavior\n\n- Support `textDocument/inlineCompletion` from the LSP 3.18 spec.\n- Other LSP standard events which may be useful for AI/MCP plugins:\n    - `window/showDocument`\n    - [Document open/change](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_synchronization)\n    - Diagnostics: `textDocument/publishDiagnostics`\n    - Modify/rename: `workspace/applyEdit`\n    - Progress events: `window/workDoneProgress`, [partialResults](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#partialResults)\n- Can mark a buffer or window as \"busy\" or \"in progress\".\n    - ✅ Default 'statusline' shows the busy indicator (\"spinner\"?). [#34493](https://github.com/neovim/neovim/pull/34493)\n    - https://github.com/neovim/neovim/issues/28809\n- `vim.ui` interface for showing progress. https://github.com/neovim/neovim/issues/32537\n- MCP support?\n    - https://github.com/ravitemer/mcphub.nvim\n- ✅ blink/highlight of a region will be helpful https://github.com/neovim/neovim/pull/32012 cc @siddhantdev\n- ✅ multiline completion https://github.com/neovim/neovim/issues/7769\n    - combine with `completeopt+=preinsert` https://github.com/neovim/neovim/pull/32251\n    - highlight `ComplMatchIns` ([not highlighted](https://github.com/neovim/neovim/pull/32251#issuecomment-2624040047) by default)",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Specifically for the progress spinners, I believe [fidget.nvim](https://github.com/j-hui/fidget.nvim) has a nice implementation.",
            "created_at": "2025-01-18T03:47:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2599509251",
            "id": 2599509251,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6a8V0D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 11,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 11,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599509251/reactions"
            },
            "updated_at": "2025-01-18T03:47:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599509251",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/68201519?v=4",
                "events_url": "https://api.github.com/users/siddhantdev/events{/privacy}",
                "followers_url": "https://api.github.com/users/siddhantdev/followers",
                "following_url": "https://api.github.com/users/siddhantdev/following{/other_user}",
                "gists_url": "https://api.github.com/users/siddhantdev/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/siddhantdev",
                "id": 68201519,
                "login": "siddhantdev",
                "node_id": "MDQ6VXNlcjY4MjAxNTE5",
                "organizations_url": "https://api.github.com/users/siddhantdev/orgs",
                "received_events_url": "https://api.github.com/users/siddhantdev/received_events",
                "repos_url": "https://api.github.com/users/siddhantdev/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/siddhantdev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/siddhantdev/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/siddhantdev",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> A way to mark a buffer or window as \"busy\" or \"in progress\".\n\nA yes, this is essential for operations that run asynchronously. Basically a mutex/lock for buffers. Or in other words \"I want this buffer and I'm going to operate on it at some point, so please no one else do anything with the buffer until I'm done\".\n\nPlugins like Gitsigns already need this but to a lesser degree than AI. At the moment if the buffer changes whilst an operation is running in the background we just abandon the results.",
            "created_at": "2025-02-14T10:28:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2658920040",
            "id": 2658920040,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6ee-Zo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2658920040/reactions"
            },
            "updated_at": "2025-02-14T10:48:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2658920040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> for operations that run asynchronously. ... \"I want this buffer and I'm going to operate on it at some point, so please no one else do anything with the buffer until I'm done\".\n\nThat's also a good a idea. But I was just thinking of a cosmetic indicator. Both will be useful.",
            "created_at": "2025-02-14T11:40:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2659113285",
            "id": 2659113285,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6eftlF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2659113285/reactions"
            },
            "updated_at": "2025-02-14T11:40:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2659113285",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi @justinmk ,\n\nI'd like to work on this for GSoC 2025 project. But first, I want to tackle a much smaller task to prove my qualification. Can you assign it to me after that?\n\nThank you for your consideration.",
            "created_at": "2025-03-05T07:54:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2700136611",
            "id": 2700136611,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6g8NCj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2700136611/reactions"
            },
            "updated_at": "2025-03-07T13:23:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2700136611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/126640223?v=4",
                "events_url": "https://api.github.com/users/gyreas/events{/privacy}",
                "followers_url": "https://api.github.com/users/gyreas/followers",
                "following_url": "https://api.github.com/users/gyreas/following{/other_user}",
                "gists_url": "https://api.github.com/users/gyreas/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gyreas",
                "id": 126640223,
                "login": "gyreas",
                "node_id": "U_kgDOB4xgXw",
                "organizations_url": "https://api.github.com/users/gyreas/orgs",
                "received_events_url": "https://api.github.com/users/gyreas/received_events",
                "repos_url": "https://api.github.com/users/gyreas/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gyreas/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gyreas/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gyreas",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@gyreas we'll do that based on the outcome of the application process",
            "created_at": "2025-03-07T13:22:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2706445703",
            "id": 2706445703,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6hURWH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706445703/reactions"
            },
            "updated_at": "2025-03-07T13:22:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706445703",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hey @justinmk, I am a GSOC contributor. I am an avid Neovim User and am passionate to contribute to Neovim as its my go to editor for my projects. Seeing the recent AI code pairing and a new product named \"Cursor\" I cam up with an idea which is synonymous with your issue.\n\nMy idea was to create a plugin that would read the user's codebase for context and provide solutions to the user just like how cursor does. and in order to keep it open source and free we can ask the User for their API Key and then use it to carry out AI communications. Another solution will be to do what \"pieces\" did we can take permission to run ollama and run an open source model in the background and the use port forwarding to implement the AI context and code suggestion feature.\n\nI am aiming to implement this as a part of GSOC contribution. if you are interested to give me a chance at it then please ping me up.",
            "created_at": "2025-03-24T13:53:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2748212261",
            "id": 2748212261,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6jzmQl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2748212261/reactions"
            },
            "updated_at": "2025-03-24T15:06:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2748212261",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/76492740?v=4",
                "events_url": "https://api.github.com/users/Jyo561/events{/privacy}",
                "followers_url": "https://api.github.com/users/Jyo561/followers",
                "following_url": "https://api.github.com/users/Jyo561/following{/other_user}",
                "gists_url": "https://api.github.com/users/Jyo561/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Jyo561",
                "id": 76492740,
                "login": "Jyo561",
                "node_id": "MDQ6VXNlcjc2NDkyNzQw",
                "organizations_url": "https://api.github.com/users/Jyo561/orgs",
                "received_events_url": "https://api.github.com/users/Jyo561/received_events",
                "repos_url": "https://api.github.com/users/Jyo561/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Jyo561/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Jyo561/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Jyo561",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@Jyo561 please read https://github.com/neovim/neovim/wiki/Google-Summer-of-Code ",
            "created_at": "2025-03-24T15:06:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2748450154",
            "id": 2748450154,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6j0gVq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2748450154/reactions"
            },
            "updated_at": "2025-03-24T15:06:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2748450154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It's an [MCP Server](https://zed.dev/docs/assistant/model-context-protocol) on the table?",
            "created_at": "2025-03-27T01:52:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2756252335",
            "id": 2756252335,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6kSRKv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2756252335/reactions"
            },
            "updated_at": "2025-03-27T01:52:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2756252335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5428479?v=4",
                "events_url": "https://api.github.com/users/tricktux/events{/privacy}",
                "followers_url": "https://api.github.com/users/tricktux/followers",
                "following_url": "https://api.github.com/users/tricktux/following{/other_user}",
                "gists_url": "https://api.github.com/users/tricktux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tricktux",
                "id": 5428479,
                "login": "tricktux",
                "node_id": "MDQ6VXNlcjU0Mjg0Nzk=",
                "organizations_url": "https://api.github.com/users/tricktux/orgs",
                "received_events_url": "https://api.github.com/users/tricktux/received_events",
                "repos_url": "https://api.github.com/users/tricktux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tricktux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tricktux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tricktux",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's an [MCP Server](https://zed.dev/docs/assistant/model-context-protocol) on the table?\n\nI also noticed this protocol, but it seems too new for now. Do you know if there are any noteworthy applications at the moment?",
            "created_at": "2025-03-27T02:19:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2756289680",
            "id": 2756289680,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6kSaSQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2756289680/reactions"
            },
            "updated_at": "2025-03-27T02:19:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2756289680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Value proposition:\n- Standardized Communication. By implementation of a protocol, Similar to LSP.\n- Better AI Integration, by providing tight controls over the context window.\n- Leverage Treesitter by giving intelligent access to codebases, rather than pure textual context.\n- Extensible: Enable plugin authors to build on a low level implementation to create customizable workflows.\n\nCons:\n- Significant scope expansion\n- Development cost\n- Maintenance cost\n\nAbout MCP: TL;DR it's a protocol for applications to share context with LLMs. The protocol, according the blog post, was developed by the Zed text editor in collaboration with Anthropic.\n\n[Zed Blog Post](https://zed.dev/blog/mcp)\n[Awesome-MCP-Servers](https://github.com/punkpeye/awesome-mcp-servers)\n[Hacker News Posts](https://hn.algolia.com/?q=MCP)\n",
            "created_at": "2025-03-28T00:57:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2759909637",
            "id": 2759909637,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6kgOEF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2759909637/reactions"
            },
            "updated_at": "2025-03-28T00:57:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2759909637",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5428479?v=4",
                "events_url": "https://api.github.com/users/tricktux/events{/privacy}",
                "followers_url": "https://api.github.com/users/tricktux/followers",
                "following_url": "https://api.github.com/users/tricktux/following{/other_user}",
                "gists_url": "https://api.github.com/users/tricktux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tricktux",
                "id": 5428479,
                "login": "tricktux",
                "node_id": "MDQ6VXNlcjU0Mjg0Nzk=",
                "organizations_url": "https://api.github.com/users/tricktux/orgs",
                "received_events_url": "https://api.github.com/users/tricktux/received_events",
                "repos_url": "https://api.github.com/users/tricktux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tricktux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tricktux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tricktux",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Do you know if there are any noteworthy applications at the moment?\n\nNvim could act as an MCP server that allow ~~additional~~ external LLM applications that support MCP like Claude Desktop to edit files, get context,...",
            "created_at": "2025-04-29T08:02:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2837865723",
            "id": 2837865723,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6pJmT7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2837865723/reactions"
            },
            "updated_at": "2025-04-29T08:59:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2837865723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Nvim could act as an MCP server that allow ~additional~ external LLM applications that support MCP like Claude Desktop to edit files, get context,...\n\nWhat I'm concerned about is how nvim can interact with these MCP servers. The general description above of the interaction is in one direction, that is, what information can MCP servers get from nvim, but in another direction, that is, what information can nvim get from the MCP server (such as completion suggestions, code explanations)? One-directional communication is meaningless because MCP servers can obtain information from anywhere, such as a daemon process.",
            "created_at": "2025-04-29T09:13:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2838044400",
            "id": 2838044400,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6pKR7w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2838044400/reactions"
            },
            "updated_at": "2025-04-29T09:13:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2838044400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "MCP is out of scope for now. It's in the list above only as a placeholder.",
            "created_at": "2025-04-29T13:33:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2838941083",
            "id": 2838941083,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6pNs2b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2838941083/reactions"
            },
            "updated_at": "2025-04-29T13:33:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2838941083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What I'm concerned about is how nvim can interact with these MCP servers. \n\nSince Justin said this is out-of-scope, it may also be off-topic but please let me explain this. Nvim will BE the MCP server, just like how Nvim has always been a Messagepack-RPC server. With the model I mentioned above, you will not chat inside Nvim, you will chat inside Claude Desktop, but Claude Desktop can get files information, LSP diagnostic from MCP servers (which includes Nvim) to provide better response. Claude Desktop can also use MCP to control Nvim to write files, run commands,... as well (that depends on what Nvim \"tools\" you expose via MCP).\n\nOf course you can swap Claude Desktop with any MCP-supported LLM applications you want, the LLM application could also be a Nvim plugin.\n\n> How will Nvim receives code suggestion from LLM\n\nCould be via LSP method `textDocument/inlineCompletion`. Doesn't need to be used with MCP, because context can be sent via LSP as well. MCP suits AI agents more.",
            "created_at": "2025-04-29T13:44:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2838984305",
            "id": 2838984305,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6pN3Zx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2838984305/reactions"
            },
            "updated_at": "2025-05-27T13:31:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2838984305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "[Claude Code](https://docs.anthropic.com/en/docs/claude-code/overview) has huge potential for integration with Neovim, given that it's native to the terminal. It's already able to use commands like `nvim --remote-expr`. However, connecting it to Neovim in this way defeats the purpose of its [permission system](https://docs.anthropic.com/en/docs/claude-code/security), because blanket access to the `nvim` command allows it to escape its sandbox via `system()`. Not sure what it would look like but some way to sandbox remote commands could be very interesting.",
            "created_at": "2025-05-26T23:04:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2910739715",
            "id": 2910739715,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6tfl0D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2910739715/reactions"
            },
            "updated_at": "2025-05-26T23:04:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2910739715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
                "events_url": "https://api.github.com/users/frangio/events{/privacy}",
                "followers_url": "https://api.github.com/users/frangio/followers",
                "following_url": "https://api.github.com/users/frangio/following{/other_user}",
                "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/frangio",
                "id": 481465,
                "login": "frangio",
                "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
                "organizations_url": "https://api.github.com/users/frangio/orgs",
                "received_events_url": "https://api.github.com/users/frangio/received_events",
                "repos_url": "https://api.github.com/users/frangio/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/frangio",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Not sure what it would look like but some way to sandbox remote commands could be very interesting.\n\nPerhaps a WASM interface could help there (capabilities-based security). https://github.com/neovim/neovim/issues/23579",
            "created_at": "2025-05-27T12:49:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2912397041",
            "id": 2912397041,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6tl6bx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912397041/reactions"
            },
            "updated_at": "2025-05-27T12:49:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912397041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> However, connecting it to Neovim in this way defeats the purpose of its permission system, because blanket access to the nvim command allows it to escape its sandbox via system()\n\nSorry, maybe I don't understand what you mean, but as I read, you have to give Claude Code permission to run \"Bash commands\" like `nvim --remote-expr`, don't you?\n\n> Perhaps a WASM interface could help there (capabilities-based security). #23579\n\nI don't think that helps much, if an AI agent can run Bash commands, it can do almost anything to your computer already. The question now is how your AI client like Calude Code will sandbox it, or how your operating system will sandbox. I don't think Neovim can help much in this case.",
            "created_at": "2025-05-27T13:02:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2912436537",
            "id": 2912436537,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6tmEE5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912436537/reactions"
            },
            "updated_at": "2025-05-27T13:35:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912436537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> you have to allow Claude Code to run \"Bash commands\" like `nvim --remote-expr`, don't you?\n\nYeah, the issue is I want to allow it access to nvim but only to a subset of safe (sandbox-preserving) commands and expressions.",
            "created_at": "2025-05-27T13:34:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2912541086",
            "id": 2912541086,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6tmdme",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912541086/reactions"
            },
            "updated_at": "2025-05-27T13:34:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912541086",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
                "events_url": "https://api.github.com/users/frangio/events{/privacy}",
                "followers_url": "https://api.github.com/users/frangio/followers",
                "following_url": "https://api.github.com/users/frangio/following{/other_user}",
                "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/frangio",
                "id": 481465,
                "login": "frangio",
                "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
                "organizations_url": "https://api.github.com/users/frangio/orgs",
                "received_events_url": "https://api.github.com/users/frangio/received_events",
                "repos_url": "https://api.github.com/users/frangio/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/frangio",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Neovim has `:h 'sandbox'` mode already, I think it could help. (It is legacy Vim feature AFAIK, but I also wonder what Nvim's sandbox mode do to API clients connecting to it via $NVIM)\n\nBut if your AI client can run Bash commands, it can do almost everything already, so I don't know how a sandbox Nvim would actually change the game.",
            "created_at": "2025-05-27T13:38:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2912553682",
            "id": 2912553682,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6tmgrS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912553682/reactions"
            },
            "updated_at": "2025-05-27T13:40:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912553682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It's not able to run arbitrary commands, there's a user-managed allowlist (see [permission system](https://docs.anthropic.com/en/docs/claude-code/security)).",
            "created_at": "2025-05-27T14:12:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/32084#issuecomment-2912670573",
            "id": 2912670573,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32084",
            "node_id": "IC_kwDOAPphoM6tm9Nt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912670573/reactions"
            },
            "updated_at": "2025-05-27T14:12:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912670573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
                "events_url": "https://api.github.com/users/frangio/events{/privacy}",
                "followers_url": "https://api.github.com/users/frangio/followers",
                "following_url": "https://api.github.com/users/frangio/following{/other_user}",
                "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/frangio",
                "id": 481465,
                "login": "frangio",
                "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
                "organizations_url": "https://api.github.com/users/frangio/orgs",
                "received_events_url": "https://api.github.com/users/frangio/received_events",
                "repos_url": "https://api.github.com/users/frangio/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/frangio",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 20,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32084/comments",
    "created_at": "2025-01-18T02:57:27Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32084/events",
    "html_url": "https://github.com/neovim/neovim/issues/32084",
    "id": 2796602141,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "F3A62E",
            "default": false,
            "description": "community: Google Summer of Code project",
            "id": 834483397,
            "name": "gsoc",
            "node_id": "MDU6TGFiZWw4MzQ0ODMzOTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gsoc"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32084/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6msMMd",
    "number": 32084,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 47,
        "-1": 2,
        "confused": 0,
        "eyes": 2,
        "heart": 3,
        "hooray": 2,
        "laugh": 2,
        "rocket": 2,
        "total_count": 60,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32084/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 3,
        "percent_completed": 21,
        "total": 14
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32084/timeline",
    "title": "AI/LLM/GenAI related features",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-06T23:14:45Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32084",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}