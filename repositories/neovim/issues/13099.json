{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Actual behaviour\r\nThere is only an event emitted before and after a command as run that Vim considers to be relevant for the quickfix or location list (e.g. `:grep`). But the lists can be set by basically everyone, causing no event the user could listen to.\r\n\r\n### Expected behaviour\r\nAn event gets thrown when ever `setqflist` or `setloclist` got called.\r\n\r\n---\r\n\r\nSorry if this was already discussed once. I was not able to find such conversation. \r\nI know there should not be an event for every rare use-case. But in fact this event(s) do already exist, just that they do not apply not for everything. Why emitting an event for specific commands only rather than make it more generic?\r\nTo finally make an example where this could be useful would be a status segment that highlights if and how much location lists entry exist. So there is no need to automatically open the location list (if such feature is provided), but the user can have a visual feedback if any asynchronous tool is adding location or quickfix list entries.\r\nThanks for any input!\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "another example of a use-case is the https://github.com/dhruvasagar/vim-markify plugin, which displays signs for quickfix locations and uses `QuickFixCmdPost` to listen to quickfix changes, but that even is not triggered for manual `setqflist` changes.",
            "created_at": "2024-04-05T06:26:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/13099#issuecomment-2039038469",
            "id": 2039038469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13099",
            "node_id": "IC_kwDOAPphoM55iUIF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2039038469/reactions"
            },
            "updated_at": "2024-04-05T06:26:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2039038469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339433?v=4",
                "events_url": "https://api.github.com/users/emmanueltouzery/events{/privacy}",
                "followers_url": "https://api.github.com/users/emmanueltouzery/followers",
                "following_url": "https://api.github.com/users/emmanueltouzery/following{/other_user}",
                "gists_url": "https://api.github.com/users/emmanueltouzery/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/emmanueltouzery",
                "id": 339433,
                "login": "emmanueltouzery",
                "node_id": "MDQ6VXNlcjMzOTQzMw==",
                "organizations_url": "https://api.github.com/users/emmanueltouzery/orgs",
                "received_events_url": "https://api.github.com/users/emmanueltouzery/received_events",
                "repos_url": "https://api.github.com/users/emmanueltouzery/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/emmanueltouzery/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/emmanueltouzery/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/emmanueltouzery",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I was looking for something like that as well. Is there a another way to achieve similar behaviour?\n\nI tried something like this:\n```lua\n  vim.api.nvim_create_autocmd(\"FileType\", {\n    group = vim.api.nvim_create_augroup(\"QfOpen\", { clear = true }),\n    pattern = \"qf\",\n    callback = function()\n      vim.api.nvim_create_autocmd(\n        { \"QuickFixCmdPost\", \"BufReadPost\", \"TextChanged\", \"TextChangedI\", \"TextChangedP\", \"TextChangedI\" },\n        {\n          buffer = ev.buf,\n          group = vim.api.nvim_create_augroup(\"QfChanged\", { clear = true }),\n          callback = function(ev)\n          end,\n        }\n      )\n    end,\n  })\n```\nBut `TextChanged` only seems to trigger when qf-buffer-window is active",
            "created_at": "2024-12-13T09:45:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/13099#issuecomment-2541012214",
            "id": 2541012214,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13099",
            "node_id": "IC_kwDOAPphoM6XdMT2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2541012214/reactions"
            },
            "updated_at": "2024-12-13T09:45:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2541012214",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26342294?v=4",
                "events_url": "https://api.github.com/users/hfn92/events{/privacy}",
                "followers_url": "https://api.github.com/users/hfn92/followers",
                "following_url": "https://api.github.com/users/hfn92/following{/other_user}",
                "gists_url": "https://api.github.com/users/hfn92/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hfn92",
                "id": 26342294,
                "login": "hfn92",
                "node_id": "MDQ6VXNlcjI2MzQyMjk0",
                "organizations_url": "https://api.github.com/users/hfn92/orgs",
                "received_events_url": "https://api.github.com/users/hfn92/received_events",
                "repos_url": "https://api.github.com/users/hfn92/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hfn92/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hfn92/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hfn92",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "See also https://github.com/vim/vim/discussions/16181",
            "created_at": "2024-12-13T13:35:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/13099#issuecomment-2541478831",
            "id": 2541478831,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13099",
            "node_id": "IC_kwDOAPphoM6Xe-Ov",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2541478831/reactions"
            },
            "updated_at": "2024-12-13T13:35:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2541478831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@hfn92 I think you are almost there, but—if the context is `setqflist` or `setloclist`—you need to make a [User autocommand](https://neovim.io/doc/user/autocmd.html#User) and then manually fire the autocommand that you create. Here's my solution for something I wrote for myself. (This may not be the most elegant solution, but it works.)\n\nFirst, in an initialization function, I create the User autocommand:\n\n```lua\n local refinery_augroup =\n        vim.api.nvim_create_augroup(\"RefineryAugroup\", { clear = true })\n    -- Create a no-op autocommand to fire after filling QuickFix list.\n    -- This is not required, but it provides a place for a description.\n    vim.api.nvim_create_autocmd(\"User\", {\n        pattern = \"RefineryQuickFixCmdPost\",\n        command = \"execute\",\n        group = refinery_augroup,\n        desc = \"No-op autocommand that provides a hook event for refinery.nvim\",\n    })\n```\n\nIn another file, after I call `setqflist`, I fire that autocommand:\n\n```lua\nlocal on_exit = function(stream, title, efm)\n    -- ...\n    vim.fn.setqflist({}, \" \", {\n        lines = lines,\n        title = title,\n        efm = efm,\n    })\n\n    vim.api.nvim_exec_autocmds(\n        \"User\",\n        { pattern = \"RefineryQuickFixCmdPost\", modeline = false }\n    )\nend\n```\n\nThe user can then set autocommands on `RefineryQuickFixCmdPost` as if that were a built-in autocommand:\n\n```lua\n-- Open quickfix window after refinery.nvim adds items to it.\ncreate_autocmd(\"User\", {\n    pattern = \"RefineryQuickFixCmdPost\",\n    command = \":cwindow\",\n    group = telemachus_augroup,\n})\n```\n",
            "created_at": "2024-12-13T13:41:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/13099#issuecomment-2541490941",
            "id": 2541490941,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13099",
            "node_id": "IC_kwDOAPphoM6XfBL9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2541490941/reactions"
            },
            "updated_at": "2024-12-13T13:41:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2541490941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@telemachus hey thanks for helping me out with this :) But I guess this would only work if you have control over when `setqflist` gets called, right? I use plugins that essentially call `vim.fn.setqflist({}, \"a\", { lines = { ... } })` to feed lines to the qflist. I guess I would need to have them support my custom autocommand for this to work.",
            "created_at": "2024-12-13T19:03:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/13099#issuecomment-2542073541",
            "id": 2542073541,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13099",
            "node_id": "IC_kwDOAPphoM6XhPbF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2542073541/reactions"
            },
            "updated_at": "2024-12-14T00:07:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2542073541",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26342294?v=4",
                "events_url": "https://api.github.com/users/hfn92/events{/privacy}",
                "followers_url": "https://api.github.com/users/hfn92/followers",
                "following_url": "https://api.github.com/users/hfn92/following{/other_user}",
                "gists_url": "https://api.github.com/users/hfn92/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hfn92",
                "id": 26342294,
                "login": "hfn92",
                "node_id": "MDQ6VXNlcjI2MzQyMjk0",
                "organizations_url": "https://api.github.com/users/hfn92/orgs",
                "received_events_url": "https://api.github.com/users/hfn92/received_events",
                "repos_url": "https://api.github.com/users/hfn92/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hfn92/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hfn92/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hfn92",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@hfn92 Yes, sorry. In my case, I wrote the plugin myself. If it's someone else's plugin, then you need to encourage them to adopt this approach. In that case, they wouldn't be supporting *your* custom autocommand. Instead, they would add their own custom autocommand, and you would use that in your configuration files. For example, see the [autocommands section in paq's documentation](https://github.com/savq/paq-nvim/blob/master/doc/paq-nvim.txt#L339-L355).\n\ntl;dr - you need to lobby the plugins to include an autocommand hook.",
            "created_at": "2024-12-13T19:47:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/13099#issuecomment-2542174169",
            "id": 2542174169,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13099",
            "node_id": "IC_kwDOAPphoM6Xhn_Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2542174169/reactions"
            },
            "updated_at": "2024-12-14T00:07:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2542174169",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/13099/comments",
    "created_at": "2020-10-16T14:27:11Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/13099/events",
    "html_url": "https://github.com/neovim/neovim/issues/13099",
    "id": 723274511,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "upstream issue that must be fixed in Vim first",
            "id": 2639399975,
            "name": "needs:vim-patch",
            "node_id": "MDU6TGFiZWwyNjM5Mzk5OTc1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:vim-patch"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 6937717172,
            "name": "quickfix",
            "node_id": "LA_kwDOAPphoM8AAAABnYUptA",
            "url": "https://api.github.com/repos/neovim/neovim/labels/quickfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/13099/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 285,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 339,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-04T21:53:41Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU3MjMyNzQ1MTE=",
    "number": 13099,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 7,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 7,
        "url": "https://api.github.com/repos/neovim/neovim/issues/13099/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/13099/timeline",
    "title": "add autocmd-event for setloclist/setqflist",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:57:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/13099",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12543647?v=4",
        "events_url": "https://api.github.com/users/weilbith/events{/privacy}",
        "followers_url": "https://api.github.com/users/weilbith/followers",
        "following_url": "https://api.github.com/users/weilbith/following{/other_user}",
        "gists_url": "https://api.github.com/users/weilbith/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/weilbith",
        "id": 12543647,
        "login": "weilbith",
        "node_id": "MDQ6VXNlcjEyNTQzNjQ3",
        "organizations_url": "https://api.github.com/users/weilbith/orgs",
        "received_events_url": "https://api.github.com/users/weilbith/received_events",
        "repos_url": "https://api.github.com/users/weilbith/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/weilbith/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weilbith/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/weilbith",
        "user_view_type": "public"
    }
}