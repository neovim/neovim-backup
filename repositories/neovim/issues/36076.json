{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nhello,\n\nwhen using lsp omnicomplete with typescript, it works fine when completing a whole token but fails to show any completion options on partial tokens in some cases. it works fine on builtin types. for example, `console.l<C-x><C-o>` works as expected. and if i define an object type in a file, omnicomplete works as expected on partial tokens. However, if i try to match on a partial token of an array of that type, the applicable array methods don't show up. for example:\n\n```typescript\ninterface Thing {\n    hi: boolean\n  }\n\nfunction foo(things: Thing[]) \n    things.m  // <-- cursor here, after the m. i expect \"map\" to be completed\n}\n```\n\n`things.<C-x><C-o>` works fine in this example.\n\napologies if this is an upstream issue, however it appears not to be since the token i'm looking for in this example, `map`, appears to be coming back from the typescript language server, according to the debug logs. However it is the case that, with vtsls using this same example, omnicompletion of the partial token results in the token `m` being blown away and a menu of all array methods is shown, as if i had done `things.<C-x><C-o>`.\n\nneovim version:\n\n```\n$ nvim --version\nNVIM v0.11.4\nBuild type: Release\nLuaJIT 2.1.1753364724\n```\n\nI can reproduce this on master as well: `v0.12.0-dev-1381+g3b860653ca`\n\nrelevant debug logs from `vim.lsp.set_log_level(\"debug\")`:\n```\n[DEBUG][2025-10-07 18:13:27] ...p/completion.lua:867    \"omnifunc.findstart\"    { base = \"\", findstart = 1 }                                                                          \n[DEBUG][2025-10-07 18:13:27] ...m/lsp/client.lua:674    \"LSP[ts_ls]\"    \"client.request\"        1       \"textDocument/completion\"       { context = { triggerKind = 1 }, position = {\ncharacter = 9, line = 7 }, textDocument = { uri = \"file:///Users/jeff/src/scratch/src/index.ts\" } }     <function 1>    3  \n[DEBUG][2025-10-07 18:13:27] .../vim/lsp/rpc.lua:277    \"rpc.send\"      { id = 6, jsonrpc = \"2.0\", method = \"textDocument/completion\", params = { context = { triggerKind = 1 }, position = { character = 9, line = 7 }, textDocument = { uri = \"file:///Users/jeff/src/scratch/src/index.ts\" } } }\n[DEBUG][2025-10-07 18:13:27] .../vim/lsp/rpc.lua:391    \"rpc.receive\"   { id = 6, jsonrpc = \"2.0\", result = { isIncomplete = false, items = { { data = { cacheId = 1 }, kind = 2, label = \"at\", sortText = \"11\" }, { data = { cacheId = 2 }, kind = 2, label = \"concat\", sortText = \"11\" }, { data = { cacheId = 3 }, kind = 2, label = \"copyWithin\", sortText = \"11\" }, { data = { cacheId = 4 }, kind = 2, label = \"entries\", sortText = \"11\" }, { data = { cacheId = 5 }, kind = 2, label = \"every\", sortText = \"11\" }, { data = { cacheId = 6 }, kind = 2, label = \"fill\", sortText = \"11\" }, { data = { cacheId = 7 }, kind = 2, label = \"filter\", sortText = \"11\" }, { data = { cacheId = 8 }, kind = 2, label = \"find\", sortText = \"11\" }, { data\n = { cacheId = 9 }, kind = 2, label = \"findIndex\", sortText = \"11\" }, { data = { cacheId = 10 }, kind = 2, label = \"findLast\", sortText = \"11\" }, { data = { cacheId = 11 }, kind = 2, label = \"findLastIndex\", sortText = \"11\" }, { data = { cacheId = 12 }, kind = 2, label = \"flat\", sortText = \"11\" }, { data = { cacheId = 13 }, kind = 2, label = \"flatMap\", sortText\n= \"11\" }, { data = { cacheId = 14 }, kind = 2, label = \"forEach\", sortText = \"11\" }, { data = { cacheId = 15 }, kind = 2, label = \"includes\", sortText = \"11\" }, { data = { cacheId = 16 }, kind = 2, label = \"indexOf\", sortText = \"11\" }, { data = { cacheId = 17 }, kind = 2, label = \"join\", sortText = \"11\" }, { data = { cacheId = 18 }, kind = 2, label = \"keys\", sor\ntText = \"11\" }, { data = { cacheId = 19 }, kind = 2, label = \"lastIndexOf\", sortText = \"11\" }, { data = { cacheId = 20 }, kind = 5, label = \"length\", sortText = \"11\" }, { data = { cacheId = 21 }, kind = 2, label = \"map\", sortText = \"11\" }, { data = { cacheId = 22 }, kind = 2, label = \"pop\", sortText = \"11\" }, { data = { cacheId = 23 }, kind = 2, label = \"push\",\nsortText = \"11\" }, { data = { cacheId = 24 }, kind = 2, label = \"reduce\", sortText = \"11\" }, { data = { cacheId = 25 }, kind = 2, label = \"reduceRight\", sortText = \"11\" }, { data = { cacheId = 26 }, kind = 2, label = \"reverse\", sortText = \"11\" }, { data = { cacheId = 27 }, kind = 2, label = \"shift\", sortText = \"11\" }, { data = { cacheId = 28 }, kind = 2, label = \"slice\", sortText = \"11\" }, { data = { cacheId = 29 }, kind = 2, label = \"some\", sortText = \"11\" }, { data = { cacheId = 30 }, kind = 2, label = \"sort\", sortText = \"11\" }, { data = { cacheId = 31 }, kind = 2, label = \"splice\", sortText = \"11\" }, { data = { cacheId = 32 }, kind = 2, label = \"toLocaleString\", sortText = \"11\" }, { data = { cacheId = 33 }, kind = 2\n, label = \"toReversed\", sortText = \"11\" }, { data = { cacheId = 34 }, kind = 2, label = \"toSorted\", sortText = \"11\" }, { data = { cacheId = 35 }, kind = 2, label = \"toSpliced\", sortT\next = \"11\" }, { data = { cacheId = 36 }, kind = 2, label = \"toString\", sortText = \"11\" }, { data = { cacheId = 37 }, kind = 2, label = \"unshift\", sortText = \"11\" }, { data = { cacheI\nd = 38 }, kind = 2, label = \"values\", sortText = \"11\" }, { data = { cacheId = 39 }, kind = 2, label = \"with\", sortText = \"11\" }, { data = { cacheId = 40 }, filterText = \"[Symbol]\", k\nind = 6, label = \"Symbol\", sortText = \"15\", textEdit = { newText = \"[Symbol]\", range = { [\"end\"] = { character = 8, line = 7 }, start = { character = 7, line = 7 } } } } } } }\n[DEBUG][2025-10-07 18:13:27] .../vim/lsp/rpc.lua:277    \"rpc.send\"      { jsonrpc = \"2.0\", method = \"textDocument/didChange\", params = { contentChanges = { { range = { [\"end\"] = { ch\naracter = 9, line = 7 }, start = { character = 8, line = 7 } }, rangeLength = 1, text = \"\" } }, textDocument = { uri = \"file:///Users/jeff/src/scratch/src/index.ts\", version = 8 } }\n}\n```\n\nthanks!\n\n### Steps to reproduce\n\nminimal init.lua:\n\n```lua\n  vim.o.omnifunc = \"v:lua.vim.lsp.omnifunc\"\n  vim.lsp.config.ts_ls = {\n    filetypes = { \"typescript\" },\n    cmd = { \"typescript-language-server\", \"--stdio\" },\n    init_options = { hostInfo = \"neovim\" },\n    root_markers = { \"tsconfig.json\", \"jsconfig.json\", \"package.json\", \".git\" },\n    single_file_support = true,\n  }\n  vim.lsp.enable({\n    \"ts_ls\",\n  })\n```\n\n### Expected behavior\n\ni expect `things.map` to be completed\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-1381+g3b860653ca\n\n### Vim (not Nvim) behaves the same?\n\nn/a\n\n### Operating system/version\n\nmacOS 15.7.1\n\n### Terminal name/version\n\niterm2 v3.6.2\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nhomebrew",
    "closed_at": "2025-10-08T04:46:34Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1254674?v=4",
        "events_url": "https://api.github.com/users/jeffrom/events{/privacy}",
        "followers_url": "https://api.github.com/users/jeffrom/followers",
        "following_url": "https://api.github.com/users/jeffrom/following{/other_user}",
        "gists_url": "https://api.github.com/users/jeffrom/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jeffrom",
        "id": 1254674,
        "login": "jeffrom",
        "node_id": "MDQ6VXNlcjEyNTQ2NzQ=",
        "organizations_url": "https://api.github.com/users/jeffrom/orgs",
        "received_events_url": "https://api.github.com/users/jeffrom/received_events",
        "repos_url": "https://api.github.com/users/jeffrom/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jeffrom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jeffrom/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jeffrom",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "The issue comes from tsserver: it reports an incorrect start position in completion response - one character earlier than it should be. As a result, Neovim receives a completion trigger range that includes the preceding dot (e.g. `.m` instead of `m`). Because Neovim prioritizes the LSP-provided range over its own word boundary detection, it fails to match completion candidates.",
            "created_at": "2025-10-08T02:30:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/36076#issuecomment-3379347302",
            "id": 3379347302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36076",
            "node_id": "IC_kwDOAPphoM7JbL9m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3379347302/reactions"
            },
            "updated_at": "2025-10-08T02:30:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3379347302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@skewb1k Makes sense. I'll close this since it's not a bug. Thanks for the quick reply!",
            "created_at": "2025-10-08T04:46:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/36076#issuecomment-3379552293",
            "id": 3379552293,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36076",
            "node_id": "IC_kwDOAPphoM7Jb-Al",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3379552293/reactions"
            },
            "updated_at": "2025-10-08T04:46:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3379552293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1254674?v=4",
                "events_url": "https://api.github.com/users/jeffrom/events{/privacy}",
                "followers_url": "https://api.github.com/users/jeffrom/followers",
                "following_url": "https://api.github.com/users/jeffrom/following{/other_user}",
                "gists_url": "https://api.github.com/users/jeffrom/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jeffrom",
                "id": 1254674,
                "login": "jeffrom",
                "node_id": "MDQ6VXNlcjEyNTQ2NzQ=",
                "organizations_url": "https://api.github.com/users/jeffrom/orgs",
                "received_events_url": "https://api.github.com/users/jeffrom/received_events",
                "repos_url": "https://api.github.com/users/jeffrom/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jeffrom/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jeffrom/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jeffrom",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/36076/comments",
    "created_at": "2025-10-08T01:51:06Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/36076/events",
    "html_url": "https://github.com/neovim/neovim/issues/36076",
    "id": 3493542093,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "",
            "id": 606691254,
            "name": "has:plan",
            "node_id": "MDU6TGFiZWw2MDY2OTEyNTQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:plan"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/36076/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7QOzjN",
    "number": 36076,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/36076/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/36076/timeline",
    "title": "vim.lsp.omnifunc fails to generate completion options for partial token on certain types",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-08T04:46:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/36076",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1254674?v=4",
        "events_url": "https://api.github.com/users/jeffrom/events{/privacy}",
        "followers_url": "https://api.github.com/users/jeffrom/followers",
        "following_url": "https://api.github.com/users/jeffrom/following{/other_user}",
        "gists_url": "https://api.github.com/users/jeffrom/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jeffrom",
        "id": 1254674,
        "login": "jeffrom",
        "node_id": "MDQ6VXNlcjEyNTQ2NzQ=",
        "organizations_url": "https://api.github.com/users/jeffrom/orgs",
        "received_events_url": "https://api.github.com/users/jeffrom/received_events",
        "repos_url": "https://api.github.com/users/jeffrom/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jeffrom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jeffrom/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jeffrom",
        "user_view_type": "public"
    }
}