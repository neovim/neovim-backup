{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "A generic tree-view component has come up several times, particularly as a potential replacement for the netrw directory listing. This issue is intended to track and discuss the design and implementation of a generic `vim.ui.tree` element. It is **not** meant to focus on netrw or file browsing specifically. See #32280 and #32430 for that.\n\n@mfussenegger suggested a useful direction [here](https://github.com/neovim/neovim/pull/32430#issuecomment-2657379029):\n\n> Something more like textual [Tree](https://textual.textualize.io/widget_gallery/#tree) that can be used to display arbitrary data in tree shape with collapse/expand functionality and ideally also a way to retrieve the underlying data (lua table) from a given line.\n\nThus it should:\n\n1. Be generic and not tied to file structures\n2. Be constructed from a Lua table\n3. Support retrieving data, e.g. as:\n  - A dot-separated path (`a.b.c`)?\n  - A Lua-style table path (`{ a = { b = { c } } }`)?\n4. Open in a buffer? Or should it only return text, like vim.inspect?\n5. Folds (preferably with Nvim's builtin fold mechanism\n6. ...\n\nI've experimented with a `vim.ui.tree` prototype that renders arbitrary Lua tables as trees, including folding and virtual text for fold indicators:\n\n<img width=\"671\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0599846d-ec6f-4d85-a597-362c57d2f3c3\" />\n\n<sub>(Yes, itâ€™s a file listing for now ðŸ™ˆ)</sub>\n\nI'm happy to continue working on this, but as @clason [pointed out](https://github.com/neovim/neovim/issues/32280#issuecomment-2862245146), we'll likely need to work through some bikeshedding first. I'd prefer to start implementation once there's general agreement on the requirements and direction of the tree UI component. I hope this issue can be used to discuss the requirements and implementation details.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Implementation-wise, the easiest approach seems to me to use `vim.inspect` to print the Lua table and add some conceal or remove the syntax (`{`, `}`, `\"`). Conceal can possibly help with folding (Heck, even the TS parser for lua can be leveraged).\n\nPros:\n- Reuses the `vim.inspect` code for recursively printing tables\n- Probably easy to support retrieving data\n\nCons:\n- Feels a bit like a hack\n- Have to change it a bit to print elements of an array-like table on separate lines\n- `vim.inspect` handles more than just strings? Not sure if that's a con?",
            "created_at": "2025-05-08T17:05:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/33914#issuecomment-2863727766",
            "id": 2863727766,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33914",
            "node_id": "IC_kwDOAPphoM6qsQSW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863727766/reactions"
            },
            "updated_at": "2025-05-08T18:56:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863727766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33914/comments",
    "created_at": "2025-05-08T16:58:54Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33914/events",
    "html_url": "https://github.com/neovim/neovim/issues/33914",
    "id": 3049591992,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33914/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM61xRS4",
    "number": 33914,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33914/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33914/timeline",
    "title": "vim.ui.tree",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-08T18:56:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33914",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
        "events_url": "https://api.github.com/users/yochem/events{/privacy}",
        "followers_url": "https://api.github.com/users/yochem/followers",
        "following_url": "https://api.github.com/users/yochem/following{/other_user}",
        "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yochem",
        "id": 23235841,
        "login": "yochem",
        "node_id": "MDQ6VXNlcjIzMjM1ODQx",
        "organizations_url": "https://api.github.com/users/yochem/orgs",
        "received_events_url": "https://api.github.com/users/yochem/received_events",
        "repos_url": "https://api.github.com/users/yochem/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yochem",
        "user_view_type": "public"
    }
}