{
    "active_lock_reason": "resolved",
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
            "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
            "followers_url": "https://api.github.com/users/echasnovski/followers",
            "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
            "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/echasnovski",
            "id": 24854248,
            "login": "echasnovski",
            "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
            "organizations_url": "https://api.github.com/users/echasnovski/orgs",
            "received_events_url": "https://api.github.com/users/echasnovski/received_events",
            "repos_url": "https://api.github.com/users/echasnovski/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/echasnovski",
            "user_view_type": "public"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nWhen users put `vim.pack.add( 'some-plugin' )` in their `init.lua`, the `plugin/` directory of that plugin will be loaded right away, even though `init.lua` may hasn't finished loading. This makes it different from the initializing process documented in `:h startup`, and also make `--noplugin` not work.\n\nAnd it seems to me Vim already recommends using `:packadd!` in config files. Here is the document of `:h packadd`\n```help\n\t\t\tWhen the optional \"!\" is given, no plugin/ files or\n\t\t\tftdetect/ scripts are loaded, only the matching\n\t\t\tdirectories are added to 'runtimepath'.  This is\n\t\t\tuseful in your |init.vim|.\n```\nThe help doc of `pack-add` says\n```help\nYou can also load an optional plugin at startup, by putting this command in\nyour |config|: >\n    :packadd! foodebug\n```\nThe help doc of `termdebug-starting` says:\n```help\nWhen loading the plugin from the |vimrc| file, add the \"!\" attribute: >vim\n\tpackadd! termdebug\n```\n\nSome other problems of current behavior (as mentioned in later comments):\n- Cannot use plugins that require users to call `setup()` before `plugin/` script is loaded\n- Can make each `plugin/` script sourced twice\n\n### Expected behavior\n\n`vim.pack.add` should has option `load` set to `false` (at least if it is executed during startup time)",
    "closed_at": "2025-08-11T22:20:26Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "It's been discussed already and decided. There may be an option later to use the `:packadd!` variant.\n\nDefaulting to bang version would mean first load of init.lua with plugin specific code would error because it was not loaded. The current behaviour was intended.",
            "created_at": "2025-08-06T16:24:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3160811672",
            "id": 3160811672,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68ZiiY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3160811672/reactions"
            },
            "updated_at": "2025-08-06T16:26:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3160811672",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7416158?v=4",
                "events_url": "https://api.github.com/users/craigmac/events{/privacy}",
                "followers_url": "https://api.github.com/users/craigmac/followers",
                "following_url": "https://api.github.com/users/craigmac/following{/other_user}",
                "gists_url": "https://api.github.com/users/craigmac/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/craigmac",
                "id": 7416158,
                "login": "craigmac",
                "node_id": "MDQ6VXNlcjc0MTYxNTg=",
                "organizations_url": "https://api.github.com/users/craigmac/orgs",
                "received_events_url": "https://api.github.com/users/craigmac/received_events",
                "repos_url": "https://api.github.com/users/craigmac/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/craigmac/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/craigmac/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/craigmac",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's been discussed already and decided\n\nCan you please give me a link to the discussion?\n\n> There may be an option later to use the :packadd! variant.\n\nThere is, already. But I'm talking about default here. I believe default behavior should align with other built-in features.\n\n> Defaulting to bang version would mean first load of init.lua with plugin specific code would error because it was not loaded.\n\nDo you mean like calling `require('some-plugin').setup()`? That should only requires `some-plugin` to be in runtimepath, not requires its `plugin/` code to be loaded first.\n\nAnd what if a plugin uses `setup()` for configuration, but requires it to be called before loading `plugin/` script?",
            "created_at": "2025-08-06T16:32:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3160833905",
            "id": 3160833905,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68Zn9x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3160833905/reactions"
            },
            "updated_at": "2025-08-07T00:33:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3160833905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It was discussed in the original PR. Somewhere in the 1000 comments.",
            "created_at": "2025-08-07T02:34:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3162214298",
            "id": 3162214298,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68e4-a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162214298/reactions"
            },
            "updated_at": "2025-08-07T02:34:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162214298",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sorry, I have looked into that PR, but cannot find a comment that explain why use `:packadd` by default instead of `:packadd!`",
            "created_at": "2025-08-07T03:12:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3162269453",
            "id": 3162269453,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68fGcN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162269453/reactions"
            },
            "updated_at": "2025-08-07T03:12:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162269453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/issues/34770",
            "created_at": "2025-08-07T03:38:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3162318530",
            "id": 3162318530,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68fSbC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162318530/reactions"
            },
            "updated_at": "2025-08-07T03:38:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162318530",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't think #34770 is related to this one. #34770 is about adding _more_ options to `vim.pack.add()`, while this issue is about default behavior, which is that `opts.load` should be `false` by default",
            "created_at": "2025-08-07T03:47:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3162337090",
            "id": 3162337090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68fW9C",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162337090/reactions"
            },
            "updated_at": "2025-08-07T14:47:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162337090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Setting `false` to always be a default value for `load` is definitely not a good idea, since `vim.pack.add()` is intended to be used not only during startup, but also after it (like for lazy loading). With `load = false` no 'plugin/' directories will be loaded if called after startup, which is a non-trivial thing to deal with for users.\n\n*But* the not working `--noplugin` (which is present, I verified) is indeed a problem. And also the fact that all 'plugin/' directories are sources twice if `vim.pack.add()` is called during startup. This doesn't end up as a huge deal (it didn't cause troubles for ~1.5 years of 'mini.deps'), but undoubtedly can be better.\n\nI think a reasonable solution here is to have default value `false` during startup and `true` afterwards. This is a one-line code change, but would require non-trivial testing. I'll address this when resolving #34770, which is next on my list.",
            "created_at": "2025-08-07T16:57:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3165034232",
            "id": 3165034232,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68ppb4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3165034232/reactions"
            },
            "updated_at": "2025-08-07T16:57:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3165034232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think a reasonable solution here is to have default value false during startup and true afterwards.\n\nI would agree with this",
            "created_at": "2025-08-07T17:21:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3165105492",
            "id": 3165105492,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68p61U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3165105492/reactions"
            },
            "updated_at": "2025-08-07T17:21:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3165105492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Say a user adds a Vimscript plugin, then during their startup sequence calls a function from it. Don't vimscript plugins rely on being sourced through packadd? Or am I mistaken?\n\nFor example, the core code of vim-fugitive lives in the plugin folder.",
            "created_at": "2025-08-07T18:29:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3165305997",
            "id": 3165305997,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68qryN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3165305997/reactions"
            },
            "updated_at": "2025-08-07T18:31:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3165305997",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62523234?v=4",
                "events_url": "https://api.github.com/users/mikejmcguirk/events{/privacy}",
                "followers_url": "https://api.github.com/users/mikejmcguirk/followers",
                "following_url": "https://api.github.com/users/mikejmcguirk/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikejmcguirk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mikejmcguirk",
                "id": 62523234,
                "login": "mikejmcguirk",
                "node_id": "MDQ6VXNlcjYyNTIzMjM0",
                "organizations_url": "https://api.github.com/users/mikejmcguirk/orgs",
                "received_events_url": "https://api.github.com/users/mikejmcguirk/received_events",
                "repos_url": "https://api.github.com/users/mikejmcguirk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mikejmcguirk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikejmcguirk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mikejmcguirk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Don't vimscript plugins rely on being sourced through packadd? Or am I mistaken?\n> \n> For example, the core code of vim-fugitive lives in the plugin folder.\n\nThe 'plugin/' scripts during startup are intended to be sourced after user's config. This is documented in `:h startup` in general and `:h load-plugins` in particular. If user for some reason needs to call a function that is defined in 'plugin/' script, then having `vim.pack.add({ 'https://github.com/user/vim-plugin' }, { load = true } )` in 'init.lua' / 'init.vim' will still be possible.",
            "created_at": "2025-08-07T19:09:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3165410017",
            "id": 3165410017,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68rFLh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3165410017/reactions"
            },
            "updated_at": "2025-08-07T19:09:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3165410017",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> For example, the core code of vim-fugitive lives in the plugin folder.\n\nYou likely don't want to execute any of those functions on startup, but you just want to create an autocmd/user command/Lua function that call those vim-fugitive functions and use them later. In all such cases, they don't require `plugin/` code to be eagerly loaded in `vimrc`.\n\nAlso this is 2025, I don't think it is a good idea to define public API functions in `plugin/`",
            "created_at": "2025-08-07T23:56:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3166169557",
            "id": 3166169557,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68t-nV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3166169557/reactions"
            },
            "updated_at": "2025-08-08T00:33:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3166169557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > For example, the core code of vim-fugitive lives in the plugin folder.\n> \n> You likely don't want to execute any of those functions on startup, but you just want to create an autocmd/user command/Lua function that call those vim-fugitive functions and use them later. In all such cases, they don't require `plugin/` code to be eagerly loaded in `vimrc`.\n\nGood example of this - I have TSUpdate scheduled to run on VimEnter with a defer function, since I have load = false in my pack.add().\n\nThinking back to when I was new to Neovim and setting up LSPConfig was an evening+ long odyssey, I'm not sure I would have understood the nuances that go into that.\n\nBut, given what echasnovski mentioned about the load process, I don't think it would have been good to form bad habits on purpose just to avoid having to think about the load process either.\n\nMaybe it ultimately falls to plugin documentation. This is already somewhat the case anyway. ",
            "created_at": "2025-08-08T00:17:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3166198131",
            "id": 3166198131,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM68uFlz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3166198131/reactions"
            },
            "updated_at": "2025-08-08T00:17:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3166198131",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62523234?v=4",
                "events_url": "https://api.github.com/users/mikejmcguirk/events{/privacy}",
                "followers_url": "https://api.github.com/users/mikejmcguirk/followers",
                "following_url": "https://api.github.com/users/mikejmcguirk/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikejmcguirk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mikejmcguirk",
                "id": 62523234,
                "login": "mikejmcguirk",
                "node_id": "MDQ6VXNlcjYyNTIzMjM0",
                "organizations_url": "https://api.github.com/users/mikejmcguirk/orgs",
                "received_events_url": "https://api.github.com/users/mikejmcguirk/received_events",
                "repos_url": "https://api.github.com/users/mikejmcguirk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mikejmcguirk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikejmcguirk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mikejmcguirk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think a reasonable solution here is to have default value false during startup and true afterwards. \n\n+1. I also did this in pckr.nvim",
            "created_at": "2025-08-08T13:53:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/35192#issuecomment-3167999202",
            "id": 3167999202,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35192",
            "node_id": "IC_kwDOAPphoM6809Ti",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3167999202/reactions"
            },
            "updated_at": "2025-08-08T13:53:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3167999202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35192/comments",
    "created_at": "2025-08-06T15:40:51Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35192/events",
    "html_url": "https://github.com/neovim/neovim/issues/35192",
    "id": 3297192384,
    "labels": [
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35192/labels{/name}",
    "locked": true,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7EhynA",
    "number": 35192,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35192/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35192/timeline",
    "title": "vim.pack should use `packadd!` by default (or at least if it is executed on startup)",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-11T22:20:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35192",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
        "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
        "followers_url": "https://api.github.com/users/brianhuster/followers",
        "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
        "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/brianhuster",
        "id": 111893501,
        "login": "brianhuster",
        "node_id": "U_kgDOBqtb_Q",
        "organizations_url": "https://api.github.com/users/brianhuster/orgs",
        "received_events_url": "https://api.github.com/users/brianhuster/received_events",
        "repos_url": "https://api.github.com/users/brianhuster/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/brianhuster",
        "user_view_type": "public"
    }
}