{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "## Feature description\n\n#13854 adds support for general-purpose fuzzy filtering of completion candidates, but I've been recently thinking about ways to make this more general, and allow plugins to have more control over the completion process beyond just filtering. More specifically, I'm proposing an API such as the following:\n\n```lua\nvim.api.nvim_completion_attach(mode, {\n  on_init = function(line, index)\n    -- returns the index where completion should start, like omnifunc\n  end,\n  on_fetch = function(prefix)\n    -- returns a list of completion candidates, overriding the current completion list.\n  end,\n  on_fetch_chain = function(prefix)\n    -- returns a list of completion candidates, which are then appended to the current completion list.\n  end\n  on_filter = function(prefix, match)\n    -- returns a float representing the match between prefix and match.\n    -- higher numbers are sorted first in the completion list.\n  end,\n  on_select = function(match)\n    -- called when a completion candidate is selected.\n  end,\n  on_accept = function(match)\n    -- called when a completion candidate is accepted.\n  end,\n  on_cancel = function() end,\n})\n```\nwhere `mode` is one of the builtin completion modes, such as `CTRL_X_{NORMAL, FILES, TAGS}`, etc.\n\nAs follow up work, we can also allow for custom user completion modes via a new api function `nvim_complete`, which is also implemented in #13854:\n\n```\nvim.api.nvim_completion_attach(\"user:git\", ...)\nvim.api.nvim_complete(1, {\"git\", \"files\", \"here\"}, {completion_mode = \"git\"})\n```\n\nI'm posting this issue to try and get feedback on whether this is even a good idea or not, and general API design, before I start writing anything.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "First off, I think this is a great idea. Built-in completion is extremely underutilized. I'm curious how completion_mode intersects with the chain completion, can you provide an array of completion_modes?",
            "created_at": "2021-12-01T16:43:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-983825467",
            "id": 983825467,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM46o_w7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983825467/reactions"
            },
            "updated_at": "2021-12-01T16:43:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983825467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Quick question: should this be a general API (`nvim_XXX`, which comes with a rigid contract and is also potentially available through vim script or rpc), or is a Lua API (`vim.completion.XXX`) enough?",
            "created_at": "2021-12-01T16:51:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-983832759",
            "id": 983832759,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM46pBi3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983832759/reactions"
            },
            "updated_at": "2021-12-01T16:51:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983832759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Quick question: should this be a general API (`nvim_XXX`, which comes with a rigid contract and is also potentially available through vim script or rpc), or is a Lua API (`vim.completion.XXX`) enough?\n\nSound like a good idea to put it Lua only first. Avoiding the strict API contract while experimenting. I'm not ðŸ’¯ on the internals but I'd imagine serializing completion candidates to Lua objects directly instead of going the API Objects route could speed things up and perhaps simpler to implement?",
            "created_at": "2021-12-01T17:05:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-983845993",
            "id": 983845993,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM46pExp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983845993/reactions"
            },
            "updated_at": "2021-12-01T17:05:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983845993",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9699804?v=4",
                "events_url": "https://api.github.com/users/muniter/events{/privacy}",
                "followers_url": "https://api.github.com/users/muniter/followers",
                "following_url": "https://api.github.com/users/muniter/following{/other_user}",
                "gists_url": "https://api.github.com/users/muniter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/muniter",
                "id": 9699804,
                "login": "muniter",
                "node_id": "MDQ6VXNlcjk2OTk4MDQ=",
                "organizations_url": "https://api.github.com/users/muniter/orgs",
                "received_events_url": "https://api.github.com/users/muniter/received_events",
                "repos_url": "https://api.github.com/users/muniter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/muniter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/muniter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/muniter",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think we should care about the *auto* completion if we create new completion API because a lot of people loves it (Of course, I know a lot of people loves *omni* (manual) completion though.",
            "created_at": "2021-12-01T17:07:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-983847215",
            "id": 983847215,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM46pFEv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983847215/reactions"
            },
            "updated_at": "2021-12-01T17:07:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983847215",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/629908?v=4",
                "events_url": "https://api.github.com/users/hrsh7th/events{/privacy}",
                "followers_url": "https://api.github.com/users/hrsh7th/followers",
                "following_url": "https://api.github.com/users/hrsh7th/following{/other_user}",
                "gists_url": "https://api.github.com/users/hrsh7th/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hrsh7th",
                "id": 629908,
                "login": "hrsh7th",
                "node_id": "MDQ6VXNlcjYyOTkwOA==",
                "organizations_url": "https://api.github.com/users/hrsh7th/orgs",
                "received_events_url": "https://api.github.com/users/hrsh7th/received_events",
                "repos_url": "https://api.github.com/users/hrsh7th/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hrsh7th/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hrsh7th/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hrsh7th",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "FWIW I am in favor of creating an API amenable to (auto) completion so long as it is extensible. (and would be great to have your input hrsh7th as the expert :) )",
            "created_at": "2021-12-01T17:08:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-983848562",
            "id": 983848562,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM46pFZy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983848562/reactions"
            },
            "updated_at": "2021-12-01T17:09:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983848562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I will be happy to contribute.\r\nI'm excited about the suggestion to add an \"extensible completion API by registering the source\" to neovim itself.\r\n",
            "created_at": "2021-12-01T17:22:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-983861312",
            "id": 983861312,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM46pIhA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 11,
                "total_count": 11,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983861312/reactions"
            },
            "updated_at": "2021-12-01T17:22:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983861312",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/629908?v=4",
                "events_url": "https://api.github.com/users/hrsh7th/events{/privacy}",
                "followers_url": "https://api.github.com/users/hrsh7th/followers",
                "following_url": "https://api.github.com/users/hrsh7th/following{/other_user}",
                "gists_url": "https://api.github.com/users/hrsh7th/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hrsh7th",
                "id": 629908,
                "login": "hrsh7th",
                "node_id": "MDQ6VXNlcjYyOTkwOA==",
                "organizations_url": "https://api.github.com/users/hrsh7th/orgs",
                "received_events_url": "https://api.github.com/users/hrsh7th/received_events",
                "repos_url": "https://api.github.com/users/hrsh7th/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hrsh7th/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hrsh7th/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hrsh7th",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Basically, if the proposed API `on_fetch` will be a callback-style API, I think it can be used for auto-completion.\r\n\r\nIt can be used by the external plugin and if the neovim core provides **auto** completion in the future, it also can be used.",
            "created_at": "2021-12-01T17:32:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-983869688",
            "id": 983869688,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM46pKj4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983869688/reactions"
            },
            "updated_at": "2021-12-01T17:32:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983869688",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/629908?v=4",
                "events_url": "https://api.github.com/users/hrsh7th/events{/privacy}",
                "followers_url": "https://api.github.com/users/hrsh7th/followers",
                "following_url": "https://api.github.com/users/hrsh7th/following{/other_user}",
                "gists_url": "https://api.github.com/users/hrsh7th/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hrsh7th",
                "id": 629908,
                "login": "hrsh7th",
                "node_id": "MDQ6VXNlcjYyOTkwOA==",
                "organizations_url": "https://api.github.com/users/hrsh7th/orgs",
                "received_events_url": "https://api.github.com/users/hrsh7th/received_events",
                "repos_url": "https://api.github.com/users/hrsh7th/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hrsh7th/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hrsh7th/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hrsh7th",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "One of the barriers for builtin auto completion is that there is no way to add and remove completion candidates after completion is started. So we have to either expose the completion list directly to authors via another api, or refactor the code so that on_fetch is called after every keypress, not just at the beginning.",
            "created_at": "2021-12-01T17:57:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-983904485",
            "id": 983904485,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM46pTDl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983904485/reactions"
            },
            "updated_at": "2021-12-01T17:57:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983904485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36219739?v=4",
                "events_url": "https://api.github.com/users/chentoast/events{/privacy}",
                "followers_url": "https://api.github.com/users/chentoast/followers",
                "following_url": "https://api.github.com/users/chentoast/following{/other_user}",
                "gists_url": "https://api.github.com/users/chentoast/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chentoast",
                "id": 36219739,
                "login": "chentoast",
                "node_id": "MDQ6VXNlcjM2MjE5NzM5",
                "organizations_url": "https://api.github.com/users/chentoast/orgs",
                "received_events_url": "https://api.github.com/users/chentoast/received_events",
                "repos_url": "https://api.github.com/users/chentoast/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chentoast/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chentoast/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chentoast",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think outlining the problem that this solves first would help to judge the API or idea.\r\n\r\nE.g. people now mention auto-completion (which I think is mostly orthogonal to this), and chaining completion sources (your proposal seems to attack a different problem?)\r\n\r\n\r\nHow would this interact with the existing autocmds `CompleteDone`, `CompleteDonePre` and `CompleteChanged`, what's the advantage of `on_select`, `on_accept` ... over the existing autocmd system?\r\n",
            "created_at": "2021-12-01T18:22:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-983935111",
            "id": 983935111,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM46paiH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983935111/reactions"
            },
            "updated_at": "2021-12-01T18:22:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/983935111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": ">  people now mention auto-completion (which I think is mostly orthogonal to this), and chaining completion sources (your proposal seems to attack a different problem?)\r\n\r\nYes, this proposal is slightly separate from auto-completion, but exposing the builtin completion mechanism as an api might allow for easier autocomplete integration and newer features. Chaining completion sources would be done via the `on_fetch_chain` key: the idea is that multiple plugins could attach a completion source to a particular mode so that triggering completion will fetch candidates from all of the attached sources.\r\n\r\n> How would this interact with the existing autocmds CompleteDone, CompleteDonePre and CompleteChanged, what's the advantage of on_select, on_accept ... over the existing autocmd system?\r\n\r\nThe autocommands do not allow direct control over the internal completion mechanisms used by vim. Adding a `CompleteFetch` or `CompleteFilter` autocommand is not enough, since plugins might actually need to modify the completion list themselves, or override default filtering behavior. I do agree that maybe `on_accept` seems mostly redundant with `CompleteDone`, but I think the main benefit of the proposal is the ability to distinguish different types of completion, i.e. running different code when finishing files completion versus tags completion, versus some special user defined completion mode. Doing something like that just via autocommands alone is difficult and clunky.",
            "created_at": "2021-12-01T23:11:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-984142430",
            "id": 984142430,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM46qNJe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/984142430/reactions"
            },
            "updated_at": "2021-12-01T23:13:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/984142430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36219739?v=4",
                "events_url": "https://api.github.com/users/chentoast/events{/privacy}",
                "followers_url": "https://api.github.com/users/chentoast/followers",
                "following_url": "https://api.github.com/users/chentoast/following{/other_user}",
                "gists_url": "https://api.github.com/users/chentoast/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chentoast",
                "id": 36219739,
                "login": "chentoast",
                "node_id": "MDQ6VXNlcjM2MjE5NzM5",
                "organizations_url": "https://api.github.com/users/chentoast/orgs",
                "received_events_url": "https://api.github.com/users/chentoast/received_events",
                "repos_url": "https://api.github.com/users/chentoast/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chentoast/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chentoast/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chentoast",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think we are in general open to adding Nvim API functions for interacting with completion, but adding a completely new system on top of the existing autocommands (which now accept native Lua callbacks) and `func` options (which hopefully will soon) should not be done without a very compelling reason.\r\n\r\nA good first step would be to make a list of steps that a completion plugin would want to take and explain which of these could be handled by existing autocommands (possibly with additions to their `v:event`) and which can't.",
            "created_at": "2022-10-15T11:07:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-1279722150",
            "id": 1279722150,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM5MRwKm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279722150/reactions"
            },
            "updated_at": "2022-10-15T11:07:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279722150",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@clason I feel like custom filtering can't be accomplished currently in any way? (assuming people are not attaching to `InsertChange` and repeatedly calling `complete()` which feels a bit dumb).\r\n\r\nHonestly I think #13854 is a good solution for that, but my understanding is that @chentoast wanted to overhaul the system a bit further.",
            "created_at": "2022-10-15T14:05:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-1279752892",
            "id": 1279752892,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM5MR3q8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279752892/reactions"
            },
            "updated_at": "2022-10-15T14:05:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279752892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/108725?v=4",
                "events_url": "https://api.github.com/users/fsouza/events{/privacy}",
                "followers_url": "https://api.github.com/users/fsouza/followers",
                "following_url": "https://api.github.com/users/fsouza/following{/other_user}",
                "gists_url": "https://api.github.com/users/fsouza/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fsouza",
                "id": 108725,
                "login": "fsouza",
                "node_id": "MDQ6VXNlcjEwODcyNQ==",
                "organizations_url": "https://api.github.com/users/fsouza/orgs",
                "received_events_url": "https://api.github.com/users/fsouza/received_events",
                "repos_url": "https://api.github.com/users/fsouza/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fsouza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fsouza/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fsouza",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The point was to get a _complete_ view of the status quo and what is missing and decide based on this information, instead of adding individual functions or start from scratch.",
            "created_at": "2022-10-15T14:14:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/16488#issuecomment-1279754335",
            "id": 1279754335,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16488",
            "node_id": "IC_kwDOAPphoM5MR4Bf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279754335/reactions"
            },
            "updated_at": "2022-10-15T14:14:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279754335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16488/comments",
    "created_at": "2021-12-01T16:36:23Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/16488/events",
    "html_url": "https://github.com/neovim/neovim/issues/16488",
    "id": 1068623976,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/16488/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM4_seho",
    "number": 16488,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 12,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 4,
        "hooray": 0,
        "laugh": 0,
        "rocket": 2,
        "total_count": 18,
        "url": "https://api.github.com/repos/neovim/neovim/issues/16488/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/16488/timeline",
    "title": "Completion API: completion handlers, Lua callbacks on completion events",
    "updated_at": "2025-01-20T13:53:06Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/16488",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/36219739?v=4",
        "events_url": "https://api.github.com/users/chentoast/events{/privacy}",
        "followers_url": "https://api.github.com/users/chentoast/followers",
        "following_url": "https://api.github.com/users/chentoast/following{/other_user}",
        "gists_url": "https://api.github.com/users/chentoast/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/chentoast",
        "id": 36219739,
        "login": "chentoast",
        "node_id": "MDQ6VXNlcjM2MjE5NzM5",
        "organizations_url": "https://api.github.com/users/chentoast/orgs",
        "received_events_url": "https://api.github.com/users/chentoast/received_events",
        "repos_url": "https://api.github.com/users/chentoast/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/chentoast/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chentoast/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/chentoast",
        "user_view_type": "public"
    }
}