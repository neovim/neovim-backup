{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen applying ext marks around the cursor and during scrolling of the window upwrad only, the ext marks do not update the window and do not apply the highlight - group. When scrolling down the exmarks reflect correctly.\n\n### Steps to reproduce\n\n\nUse the repro script below as follows:\n\n1. focus the window with content\n2. scroll, N lines i.e 15j\n3. line is highlighted, as expected at the cursor and around\n4. press gz to clear the namespace - extmarks, etc.\n5. start scrolling up to the first line in the buffer, with k (1 by 1), notice that the lines above the cursor, when new lines come in view are not getting re-highlighted and also the log reports that extmarks exist for lines that it should not exist for, since we have forced namespace clear, for the entire buffer, and also for those lines extmarks were never added, i.e lines above and including 13 (if using 15j to scroll down).\n6. re-start the test, 15j, gz, then start scrolling down with j (1 by 1) notice that the lines below the cursor are re-highlighted and the extmarks are created and applied, when scrolling down correctly marks report as being added, once, if we stop and start scrolling up the lines remain highlighted and  report as expected that marks already exist.\n```lua\nlocal ns = vim.api.nvim_create_namespace(\"prompt_matches_highlight\")\nlocal opts = { limit = 1, type = \"highlight\", details = false, hl_name = true }\nlocal buffer = vim.api.nvim_create_buf(false, true)\nlocal window = vim.api.nvim_open_win(buffer, true, {\n    height = 1, split = \"below\", win = vim.api.nvim_get_current_win()\n});\nvim.api.nvim_set_current_win(window)\nvim.api.nvim_win_set_cursor(window, { 1, 0 })\nvim.api.nvim_buf_set_lines(buffer, 0, -1, false, {\n    \"extmark_test_line_1\",\n    \"extmark_test_line_2\",\n    \"extmark_test_line_3\",\n    \"extmark_test_line_4\",\n    \"extmark_test_line_5\",\n    \"extmark_test_line_6\",\n    \"extmark_test_line_7\",\n    \"extmark_test_line_8\",\n    \"extmark_test_line_9\",\n    \"extmark_test_line_10\",\n    \"extmark_test_line_11\",\n    \"extmark_test_line_11\",\n    \"extmark_test_line_12\",\n    \"extmark_test_line_13\",\n    \"extmark_test_line_14\",\n    \"extmark_test_line_15\",\n    \"extmark_test_line_16\",\n    \"extmark_test_line_17\",\n    \"extmark_test_line_18\",\n    \"extmark_test_line_19\",\n    \"extmark_test_line_20\",\n    \"extmark_test_line_21\",\n    \"extmark_test_line_22\",\n    \"extmark_test_line_23\",\n    \"extmark_test_line_24\",\n    \"extmark_test_line_25\",\n    \"extmark_test_line_26\",\n    \"extmark_test_line_27\",\n    \"extmark_test_line_28\",\n    \"extmark_test_line_29\",\n    \"extmark_test_line_30\",\n    \"extmark_test_line_31\",\n    \"extmark_test_line_32\",\n    \"extmark_test_line_33\",\n    \"extmark_test_line_34\",\n    \"extmark_test_line_35\",\n    \"extmark_test_line_36\",\n    \"extmark_test_line_37\",\n    \"extmark_test_line_38\",\n    \"extmark_test_line_39\",\n    \"extmark_test_line_40\",\n    \"extmark_test_line_41\",\n    \"extmark_test_line_42\",\n    \"extmark_test_line_43\",\n    \"extmark_test_line_44\",\n    \"extmark_test_line_45\",\n    \"extmark_test_line_46\",\n    \"extmark_test_line_47\",\n    \"extmark_test_line_48\",\n    \"extmark_test_line_49\",\n    \"extmark_test_line_50\",\n})\n\nlocal function hl(start, _end)\n        for target = start, _end, 1 do\n            local marks = vim.api.nvim_buf_get_extmarks(\n                buffer, ns, { target - 1, 0 }, -1, opts\n            )\n            if not marks or #marks < 1 then\n                vim.print(\"adding extmark to line: \" .. target)\n                vim.api.nvim_buf_set_extmark(\n                    buffer,\n                    ns,\n                    target - 1,\n                    5,\n                    {\n                        strict = true,\n                        hl_eol = false,\n                        invalidate = true,\n                        ephemeral = false,\n                        undo_restore = false,\n                        end_col = 10,\n                        end_line = target - 1,\n                        hl_group = \"IncSearch\",\n                    }\n                )\n        else\n            vim.print(\"extmark exists for line: \" .. target)\n            end\n        end\nend\n\nvim.api.nvim_create_autocmd(\"WinScrolled\", {\n    pattern = tostring(window),\n    callback = function()\n        local cursor = vim.api.nvim_win_get_cursor(window)\n        local height = 1 -- vim.api.nvim_win_get_height(window)\n        local start = math.max(1, cursor[1] - height)\n        local _end = math.min(vim.api.nvim_buf_line_count(buffer), cursor[1] + height)\n        hl(start, _end)\n    end\n})\n\nvim.keymap.set(\"n\", \"gz\", function()\n    vim.api.nvim_buf_clear_namespace(buffer, ns, 0, -1)\nend)\n\n```\n\n### Expected behavior\n\nMarks are highlighting the text they cover when scrolling or when the text comes in view.\n\n### Nvim version (nvim -v)\n\nmaster\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nUbuntu\n\n### Terminal name/version\n\nAlacritty\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\ngithub release",
    "closed_at": "2025-08-21T09:13:23Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "If this is a regression, can you bisect",
            "created_at": "2025-08-20T16:53:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/35405#issuecomment-3207260082",
            "id": 3207260082,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35405",
            "node_id": "IC_kwDOAPphoM6_Kuey",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3207260082/reactions"
            },
            "updated_at": "2025-08-20T16:53:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3207260082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I could not find a good / working commit for bisect, and past commit 55c4393e9f80ac3e7233da889efce4f760e41664 (not specifically that commit), i am starting to have issues with building nvim, my guess is that it might have never worked as intended.",
            "created_at": "2025-08-20T17:54:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/35405#issuecomment-3207486837",
            "id": 3207486837,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35405",
            "node_id": "IC_kwDOAPphoM6_Ll11",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3207486837/reactions"
            },
            "updated_at": "2025-08-20T17:55:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3207486837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Please read the documentation of `nvim_buf_get_extmarks`:\n\n> Region can be given as (row,col) tuples, or valid extmark ids (whose\n> positions define the bounds). 0 and -1 are understood as (0,0) and (-1,-1)\n\nYou passed only a `-1` as `end`, so it gets all extmarks on and below row `target - 1`.",
            "created_at": "2025-08-21T09:13:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/35405#issuecomment-3209681637",
            "id": 3209681637,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35405",
            "node_id": "IC_kwDOAPphoM6_T9rl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3209681637/reactions"
            },
            "updated_at": "2025-08-21T09:18:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3209681637",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yeah, i was confused by that, to obtain to the end of line, i did try initially using, did get error for out of range column, however now testing it again it seems to work as expected. To summarize replacing the -1 with `{ target - 1, -1 }`, should work.",
            "created_at": "2025-08-21T10:38:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/35405#issuecomment-3209994172",
            "id": 3209994172,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35405",
            "node_id": "IC_kwDOAPphoM6_VJ-8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3209994172/reactions"
            },
            "updated_at": "2025-08-21T10:49:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3209994172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35405/comments",
    "created_at": "2025-08-20T15:16:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35405/events",
    "html_url": "https://github.com/neovim/neovim/issues/35405",
    "id": 3338548833,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as usage questions",
            "id": 77997478,
            "name": "closed:question",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:question"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35405/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7G_jZh",
    "number": 35405,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35405/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35405/timeline",
    "title": "Extmarks are not being shown when scrolling upwards in a window",
    "type": null,
    "updated_at": "2025-08-21T10:49:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35405",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
        "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
        "followers_url": "https://api.github.com/users/asmodeus812/followers",
        "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
        "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/asmodeus812",
        "id": 15955811,
        "login": "asmodeus812",
        "node_id": "MDQ6VXNlcjE1OTU1ODEx",
        "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
        "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
        "repos_url": "https://api.github.com/users/asmodeus812/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/asmodeus812",
        "user_view_type": "public"
    }
}