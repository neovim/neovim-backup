{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nI hit this on Githubs CI, where I was setting `NVIM_APPNAME=$some_uuid` and generating long paths, not sure how applicable this is to \"real world\" use.\r\n\r\nWindows paths are capped at 260 chars. The loader generates a rfc2396 encoded string of a module path, and puts that under the cache dir, so `c:\\mod\\file.lua` is stored at `c:\\users\\the-user\\appdata\\local\\temp\\<appname>\\luac\\c%3a%3fmod%3ffile.luac`.\r\n\r\nIf `mod\\file.lua` is nested somewhere deep (say where a package manager might install it) and has some nesting of its own, and the user name is long, and/or the app_name is long, the encoded luac path can fail to write, and then the module fails to load, even if the module is loadable without the loader enabled.\r\n\r\nThere are ways to extend the path limit [here](https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=registry), unsure if Neovim uses an application manifest though, and it requires a user registry edit.\r\n\r\nIn 0.9 the paths are just encoded as `%`, instead of `%FF`, so its possible this could be an unpleasant experience for some when upgrading in the future.\r\n\r\n### Steps to reproduce\r\n\r\n```powershell\r\n# powershell -ExecutionPolicy Bypass x.ps1\r\n\r\n$env:NVIM_APPNAME = [Guid]::NewGuid().ToString()\r\n\r\n# create file in appname dir, with a long path\r\n$appDataDir = [System.Environment]::GetFolderPath([System.Environment+SpecialFolder]::LocalApplicationData)\r\n$luaDir = \"$appDataDir\\$env:NVIM_APPNAME\\lua\"\r\n\r\n$long = \"aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\aaa\\a\\a\"\r\n$modname = $long.Replace(\"\\\", \".\")\r\nmkdir \"$luaDir\\$long\"\r\n$luaFile = \"$luaDir\\$long.lua\"\r\nSet-Content -Path $luaFile -Value \"print(1)\"\r\necho $appDataDir\r\necho $luaFile\r\n\r\n# install nvim 0.10 via msi package\r\n& 'c:\\Program Files\\Neovim\\bin\\nvim' -v\r\n# works, raw path is under limits\r\n& 'c:\\Program Files\\Neovim\\bin\\nvim' $luaFile +\":lua=require('$modname')\"\r\n# fails, luac path is too long.\r\n# uses rfc2396 encoding, where \\ becomes %f2 (1 char becomes 3)\r\n& 'c:\\Program Files\\Neovim\\bin\\nvim' $luaFile +\":lua vim.loader.enable()\" +\":lua=require('$modname')\"\r\n\r\n# install nvim 0.9 via choco\r\n# uses plain \\ to % encoding (1 char becomes 1)\r\nnvim $luaFile +\":lua=require('$modname')\"\r\nnvim $luaFile +\":lua vim.loader.enable()\" +\":lua=require('$modname')\"\r\n\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe module loads, or maybe a nicer warning is given telling the user or disable the loader for long paths automatically?\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-1025+g0e11bf0e1\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nNA\r\n\r\n### Operating system/version\r\n\r\nWindows 11\r\n\r\n### Terminal name/version\r\n\r\nWindows Terminal\r\n\r\n### $TERM environment variable\r\n\r\nNA?\r\n\r\n### Installation\r\n\r\n\"latest\" release msi package for ",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "One workaround is to simply disable the cache for this scenario.",
            "created_at": "2023-09-03T11:01:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/25008#issuecomment-1704184365",
            "id": 1704184365,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25008",
            "node_id": "IC_kwDOAPphoM5lk8ot",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704184365/reactions"
            },
            "updated_at": "2023-09-03T11:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704184365",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, the cache is still considered experimental and it's a hyper-optimization, disabling it won't be noticeable for most users.\r\n\r\n    vim.loader.disable()",
            "created_at": "2023-09-12T10:08:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/25008#issuecomment-1715415068",
            "id": 1715415068,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25008",
            "node_id": "IC_kwDOAPphoM5mPygc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715415068/reactions"
            },
            "updated_at": "2023-09-12T10:08:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715415068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I believe I'm getting the same (or similar?) error, but on Ubuntu. Have disabled the cache, but I figure I'd provide the following data in case it's useful:\r\n\r\nError (with https://github.com/JoosepAlviste/nvim-ts-context-commentstring):\r\n\r\n```\r\nError detected while processing BufReadPost Autocommands for \"*\":\r\nError executing lua callback: .../installs/neovim/nightly/share/nvim/runtime/filetype.lua:30: Error executing lua: .../installs\r\n/neovim/nightly/share/nvim/runtime/filetype.lua:31: BufReadPost Autocommands for \"*\"..FileType Autocommands for \"*\": Vim(append\r\n):Error executing lua callback: vim/loader.lua:0: ENAMETOOLONG: name too long: /home/sroeca/.cache/nvim/luac/%2fhome%2fsroeca%2\r\nf.config%2fnvim%2fpack%2fpackager%2fstart%2fnvim-ts-context-commentstring%2flua%2fts_context_commentstring%2fintegrations%2fvim\r\n_commentary.luac\r\n```\r\n\r\nSystem / Neovim version:\r\n\r\n```\r\nNVIM v0.10.0-dev-6405fa4\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.1694940244\r\nRun \"nvim -V1 -v\" for more info\r\n\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 22.04.3 LTS\r\nRelease:        22.04\r\nCodename:       jammy\r\n```",
            "created_at": "2023-09-19T16:02:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/25008#issuecomment-1725951342",
            "id": 1725951342,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25008",
            "node_id": "IC_kwDOAPphoM5m3-1u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1725951342/reactions"
            },
            "updated_at": "2023-09-19T16:02:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1725951342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3723671?v=4",
                "events_url": "https://api.github.com/users/pappasam/events{/privacy}",
                "followers_url": "https://api.github.com/users/pappasam/followers",
                "following_url": "https://api.github.com/users/pappasam/following{/other_user}",
                "gists_url": "https://api.github.com/users/pappasam/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pappasam",
                "id": 3723671,
                "login": "pappasam",
                "node_id": "MDQ6VXNlcjM3MjM2NzE=",
                "organizations_url": "https://api.github.com/users/pappasam/orgs",
                "received_events_url": "https://api.github.com/users/pappasam/received_events",
                "repos_url": "https://api.github.com/users/pappasam/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pappasam/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pappasam/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pappasam",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "`NAME_MAX` is 255 on my boring x86_64 system. I wonder if yours is particularly low? The unix limit is \"per component\", not the total path, but even then, the full path is 193ch and the file component is only 163. I did check saving a 254/255 ch long filenames with the nightly release in case it was built with some funny define but it acted as expected there.\r\n\r\nThe luac paths could just be the regular paths with a prefix, eg: `/home/x/y/z.lua` becomes `/home/x/.cache/nvim/luac/home/x/y/z.luac` which would avoid the issues on both platforms. Drive names (`c:/`) on windows still need special marshalling.\r\n\r\nAlternatively, would it be preferable to silently ignore caching specific paths if `fs_open` fails (currently `assert`'d)? Or perhaps only if the reason contains `ENAMETOOLONG`?\r\n\r\nWe could issue a warning but I think that would mostly just be annoying since the user cant really fix it, short of disabling the loader, and given the choice would probably opt to cache 99% of files instead of 0%.\r\n\r\nI can write a PR if there is consensus on how to handle it.",
            "created_at": "2023-09-20T03:03:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/25008#issuecomment-1726810784",
            "id": 1726810784,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25008",
            "node_id": "IC_kwDOAPphoM5m7Qqg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1726810784/reactions"
            },
            "updated_at": "2023-09-20T03:03:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1726810784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/866010?v=4",
                "events_url": "https://api.github.com/users/rktjmp/events{/privacy}",
                "followers_url": "https://api.github.com/users/rktjmp/followers",
                "following_url": "https://api.github.com/users/rktjmp/following{/other_user}",
                "gists_url": "https://api.github.com/users/rktjmp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rktjmp",
                "id": 866010,
                "login": "rktjmp",
                "node_id": "MDQ6VXNlcjg2NjAxMA==",
                "organizations_url": "https://api.github.com/users/rktjmp/orgs",
                "received_events_url": "https://api.github.com/users/rktjmp/received_events",
                "repos_url": "https://api.github.com/users/rktjmp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rktjmp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rktjmp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rktjmp",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> would it be preferable to silently ignore caching specific paths if `fs_open` fails (currently `assert`'d)? Or perhaps only if the reason contains `ENAMETOOLONG`\r\n\r\nI think that's too subtle, makes analyzing performance more complicated. \r\n\r\nWhy don't we hash the file paths? It makes inspecting the cache contents less obvious, but we could write out a mapping file (analogous to `~/.local/state/nvim/trust` )",
            "created_at": "2023-09-20T09:41:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/25008#issuecomment-1727358786",
            "id": 1727358786,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25008",
            "node_id": "IC_kwDOAPphoM5m9WdC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727358786/reactions"
            },
            "updated_at": "2023-09-20T09:41:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727358786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think that's too subtle, makes analyzing performance more complicated.\r\n\r\nTrue, but this is pretty edge case and hashing isn't so straight forward. To mitigate this we could just report issues to the log file?",
            "created_at": "2023-09-20T10:16:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/25008#issuecomment-1727414359",
            "id": 1727414359,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25008",
            "node_id": "IC_kwDOAPphoM5m9kBX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727414359/reactions"
            },
            "updated_at": "2023-09-20T10:16:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727414359",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> To mitigate this we could just report issues to the log file?\r\n\r\nWe should at least show one message per session (notify_once or whatever), and then the rest can silently go to the logs. \r\n\r\nMore generally though, Nvim by default should not freak out when an error happens. Solving https://github.com/neovim/neovim/issues/1029 is the single, central reason that other editors like Helix or VSCode \"feel better\" in general.",
            "created_at": "2023-09-20T10:50:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/25008#issuecomment-1727482623",
            "id": 1727482623,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25008",
            "node_id": "IC_kwDOAPphoM5m90r_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727482623/reactions"
            },
            "updated_at": "2023-09-20T10:50:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727482623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25008/comments",
    "created_at": "2023-09-03T10:26:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25008/events",
    "html_url": "https://github.com/neovim/neovim/issues/25008",
    "id": 1879040603,
    "labels": [
        {
            "color": "d4c5f9",
            "default": false,
            "description": null,
            "id": 109461219,
            "name": "platform:windows",
            "node_id": "MDU6TGFiZWwxMDk0NjEyMTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/platform:windows"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25008/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5v_-Jb",
    "number": 25008,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25008/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25008/timeline",
    "title": "`vim.loader` luac file paths can end up too long for windows to load",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:37:14Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25008",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/866010?v=4",
        "events_url": "https://api.github.com/users/rktjmp/events{/privacy}",
        "followers_url": "https://api.github.com/users/rktjmp/followers",
        "following_url": "https://api.github.com/users/rktjmp/following{/other_user}",
        "gists_url": "https://api.github.com/users/rktjmp/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rktjmp",
        "id": 866010,
        "login": "rktjmp",
        "node_id": "MDQ6VXNlcjg2NjAxMA==",
        "organizations_url": "https://api.github.com/users/rktjmp/orgs",
        "received_events_url": "https://api.github.com/users/rktjmp/received_events",
        "repos_url": "https://api.github.com/users/rktjmp/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rktjmp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rktjmp/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rktjmp",
        "user_view_type": "public"
    }
}