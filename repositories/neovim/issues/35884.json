{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nSince [`once_buf_loaded`](https://github.com/neovim/neovim/blob/78371610769f980cd0a629853628de5fe9127cee/runtime/lua/vim/diagnostic.lua#L1269-L1281) might call a callback passed to it at a later point (which is it's reason to exist) that callback might end up referring to stale diagnostics in `vim.diagnostic.set` and handlers' `show` functions.\n\nFor example, if we first set some diagnostics for an unloaded buffer, then call `vim.diagnostic.reset` and only then load the buffer, we might see diagnostics from the first call.\n\nThis is caused by the change from https://github.com/neovim/neovim/pull/35866. Previously diagnostic handlers would not do anything at all in this scenario, which isn't great either.\n\n### Steps to reproduce\n\n1. `cd <nvim-repo-path>` and add the following `init.lua` to setup an autocommand to set diagnostics from quickfix:\n\n```lua\nvim.api.nvim_create_autocmd('QuickFixCmdPost', {\n  callback = function(event)\n    local ns = vim.api.nvim_create_namespace 'QuickFixCmdPost'\n    vim.diagnostic.reset(ns)\n\n    local qf = vim.fn.getqflist { items = 0, title = 0 }\n\n    ---@type table<integer, vim.Diagnostic[]>\n    local per_buffer = {}\n    for _, item in ipairs(vim.diagnostic.fromqflist(qf.items)) do\n      per_buffer[item.bufnr] = per_buffer[item.bufnr] or {}\n      item.source = event.match\n      table.insert(per_buffer[item.bufnr], item)\n    end\n\n    for bufnr, diagnostics in pairs(per_buffer) do\n      vim.diagnostic.set(ns, bufnr, diagnostics)\n    end\n  end,\n})\n```\n\n2. Run `make` at least once to focus only on a single warning in later steps.\n3. Add an unused variable to `src/nvim/main.c` to cause a compiler warning, for example:\n\n```diff\ndiff --git a/src/nvim/main.c b/src/nvim/main.c\nindex 8270ddd63c..d8ada6a42e 100644\n--- a/src/nvim/main.c\n+++ b/src/nvim/main.c\n@@ -250,6 +250,7 @@ int main(int argc, char **argv)\n #endif\n {\n   argv0 = argv[0];\n+  int the_answer = 42;\n \n   if (!appname_is_valid()) {\n     fprintf(stderr, \"$NVIM_APPNAME must be a name or relative path.\\n\");\n```\n\n4. Start `nvim --clean --noplugin -u init.lua` at the repo root (from scratch, without opening a file, so that the buffer is not loaded at this point).\n5. Run `:make! | copen`. A quickfix window with a single warning should appear. At this point diagnostics are also scheduled to be set once a buffer is loaded.\n6. Run `:make!` again. Quickfix should have no warnings now since there's no need to recompile when there's no file changes. `vim.diagnostic.reset` is being called to clear diagnostics from buffers.\n7. Run `:edit src/nvim/main.c`\n8. Observe stale diagnostic sign and underline (via `/the_answer` since `[d` and `]d` do not work). Seems like it only affects `handlers` in this case. Not sure if `set` might have a similar problem in other scenarios.\n\n### Expected behavior\n\nNo stale diagnostic sign and underlines (same for any other builtin handler).\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-1282+g7837161076\n\n### Vim (not Nvim) behaves the same?\n\nnot applicable\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nkitty 0.42.2\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nhttps://aur.archlinux.org/packages/neovim-git",
    "closed_at": "2025-10-02T03:17:57Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35884/comments",
    "created_at": "2025-09-23T05:10:04Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35884/events",
    "html_url": "https://github.com/neovim/neovim/issues/35884",
    "id": 3443704936,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35884/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 128,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-12-25T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 75,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-10-04T16:48:30Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM7NQsRo",
    "number": 35884,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35884/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35884/timeline",
    "title": "Stale diagnostics are shown when set for not yet loaded buffers",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-02T03:18:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35884",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
        "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
        "followers_url": "https://api.github.com/users/faergeek/followers",
        "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
        "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/faergeek",
        "id": 3524621,
        "login": "faergeek",
        "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
        "organizations_url": "https://api.github.com/users/faergeek/orgs",
        "received_events_url": "https://api.github.com/users/faergeek/received_events",
        "repos_url": "https://api.github.com/users/faergeek/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/faergeek",
        "user_view_type": "public"
    }
}