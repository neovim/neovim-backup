{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I want to start discussion around LSP omnifunc. Last few days i'm trying to use it directly without any autocompletion frameworks (like CoC or deoplete), and I ran into an issue with omnifunc being (kinda) async. As far as I know, omnifunc should be always a sync call.\r\n\r\nFor example, I tried to create a simple fallback to default `<C-n>` completion if omnifunc doesn't return anything, but I cannot rely on the complete done event since it's triggered multiple times.\r\n\r\nI also tried to use \"mucomplete\" to see if it manages to make it work with it's chain completion, but it just skips the omnifunc and continues down the chain, probably because initial trigger of omnifunc didn't return anything.\r\n\r\nI think we should either make it sync, or expose another omnifunc function that will be sync, since my guess is that some people are ok with having it async.\r\n\r\nI'd gladly do this myself, but my lua skills are really bad, especially around the async stuff.\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You can instead call it with `vim.lsp.buf_request_sync` perhaps? Then you can handle the results yourself?\r\n\r\nI'm not sure if that will solve your problem.",
            "created_at": "2020-10-25T04:46:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-716093539",
            "id": 716093539,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjA5MzUzOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/716093539/reactions"
            },
            "updated_at": "2020-10-25T04:46:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/716093539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yeah I already tried that. It looks like it's working, but I haven't tested it extensively. Here's the code if someone wants to try it:\r\n\r\n```lua\r\nfunction _G.omnifunc_sync(findstart, base)\r\n  local bufnr = vim.api.nvim_get_current_buf()\r\n  local pos = vim.api.nvim_win_get_cursor(0)\r\n  local line = vim.api.nvim_get_current_line()\r\n  local line_to_cursor = line:sub(1, pos[2])\r\n  local textMatch = vim.fn.match(line_to_cursor, '\\\\k*$')\r\n\r\n  if findstart == 1 then\r\n    return textMatch\r\n  end\r\n\r\n  local params = vim.lsp.util.make_position_params()\r\n\r\n  local result = vim.lsp.buf_request_sync(bufnr, 'textDocument/completion', params, 2000)\r\n  local items = {}\r\n  if result then\r\n    for _, item in ipairs(result) do\r\n      if not item.err then\r\n        local matches = vim.lsp.util.text_document_completion_list_to_complete_items(item.result, base)\r\n        vim.list_extend(items, matches)\r\n      end\r\n    end\r\n  end\r\n\r\n  return items\r\nend\r\n```\r\n\r\n```vim\r\nsetlocal omnifunc=v:lua.omnifunc_sync\r\n```",
            "created_at": "2020-10-25T07:43:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-716107137",
            "id": 716107137,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjEwNzEzNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/716107137/reactions"
            },
            "updated_at": "2020-10-25T07:43:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/716107137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "is there anything in neovim core that you would like to see changed to make this easier? I'm not sure how many people want the feature this way (as it's blocking while you wait for the completion results), but I suppose it's possible we could merge something like `vim.lsp.omnifunc_sync` as we have for some other items (such as `vim.lsp.buf.formatting_sync`).\r\n\r\nWould that be a good solution for you?",
            "created_at": "2020-10-30T15:06:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-719607956",
            "id": 719607956,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTYwNzk1Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/719607956/reactions"
            },
            "updated_at": "2020-10-30T15:06:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/719607956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yeah I think we should have the sync version of it. \r\nIt is useful if someone uses a plugin that expects omnifunc to be sync, like [mucomplete](https://github.com/lifepillar/vim-mucomplete) with it's chain completion.",
            "created_at": "2020-10-30T15:10:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-719610155",
            "id": 719610155,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTYxMDE1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/719610155/reactions"
            },
            "updated_at": "2020-10-30T15:10:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/719610155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Are there any news on this? Unfortunately, the function provided by @kristijanhusak doesn't seem to work anymore. An omnifunc_sync feature would be great! Thank you in advance.",
            "created_at": "2021-06-23T14:38:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-866896005",
            "id": 866896005,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2Njg5NjAwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/866896005/reactions"
            },
            "updated_at": "2021-06-23T14:38:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/866896005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/872787?v=4",
                "events_url": "https://api.github.com/users/inventionate/events{/privacy}",
                "followers_url": "https://api.github.com/users/inventionate/followers",
                "following_url": "https://api.github.com/users/inventionate/following{/other_user}",
                "gists_url": "https://api.github.com/users/inventionate/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/inventionate",
                "id": 872787,
                "login": "inventionate",
                "node_id": "MDQ6VXNlcjg3Mjc4Nw==",
                "organizations_url": "https://api.github.com/users/inventionate/orgs",
                "received_events_url": "https://api.github.com/users/inventionate/received_events",
                "repos_url": "https://api.github.com/users/inventionate/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/inventionate/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/inventionate/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/inventionate",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I played a bit with the existing code—thank you for that—and created this variant, which seems to work. I haven't tested it intensively yet, but I will do so in the near future. As @kristijanhusak has already said, a sync version would actually be very helpful, for example to be able to use MUcomplete chains (see lifepillar/vim-mucomplete#179). In any case, I would be very grateful for it, and if anyone would like to improve my code, I would be happy to do so.\r\n\r\n```lua\r\nfunction _G.omnifunc_sync(findstart, base)\r\n    local bufnr = vim.api.nvim_get_current_buf()\r\n    local pos = vim.api.nvim_win_get_cursor(0)\r\n    local line = vim.api.nvim_get_current_line()\r\n    local line_to_cursor = line:sub(1, pos[2])\r\n    local textMatch = vim.fn.match(line_to_cursor, '\\\\k*$')\r\n\r\n    if findstart == 1 then\r\n        return -1\r\n    end\r\n\r\n    local params = vim.lsp.util.make_position_params()\r\n    \r\n    local result = vim.lsp.buf_request_sync(bufnr, 'textDocument/completion', params, 1000)\r\n    local items = {}\r\n    if result then\r\n        for _, item in pairs(result) do\r\n            if not item.err then\r\n                local matches = vim.lsp.util.text_document_completion_list_to_complete_items(item.result, base)\r\n                vim.list_extend(items, matches)\r\n                vim.fn.complete(textMatch+1, items)\r\n            end\r\n        end\r\n    end\r\nend\r\n```\r\n\r\n```vim\r\nsetlocal omnifunc=v:lua.omnifunc_sync\r\n```",
            "created_at": "2021-06-24T14:58:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-867705356",
            "id": 867705356,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2NzcwNTM1Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/867705356/reactions"
            },
            "updated_at": "2021-06-24T14:58:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/867705356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/872787?v=4",
                "events_url": "https://api.github.com/users/inventionate/events{/privacy}",
                "followers_url": "https://api.github.com/users/inventionate/followers",
                "following_url": "https://api.github.com/users/inventionate/following{/other_user}",
                "gists_url": "https://api.github.com/users/inventionate/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/inventionate",
                "id": 872787,
                "login": "inventionate",
                "node_id": "MDQ6VXNlcjg3Mjc4Nw==",
                "organizations_url": "https://api.github.com/users/inventionate/orgs",
                "received_events_url": "https://api.github.com/users/inventionate/received_events",
                "repos_url": "https://api.github.com/users/inventionate/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/inventionate/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/inventionate/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/inventionate",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hey, @inventionate. While researching for some other stuff, I managed to implement what seems to be a fully working synchronous omnifunc.\r\n\r\nThis is basically a  @kristijanhusak version, but with two tweaks:\r\n- Replace `ipairs()` with `pairs()` at the end of function body. This seemed to fix issues on some servers, but it also needs a second tweak to fully work.\r\n- Deal with vim/vim#8510 issue.\r\n\r\nThis version actually behaves like omnifunc which doesn't use `vim.fn.complete()`. There are two important differences:\r\n- It keeps completion list on when deleting characters. So if type \"fun\", run omnifunc (suppose it suggests \"function\"), type \"ctio\"  (this should reduce completion list), then hit `<BS>` and the list will still be there without extra requests to LSP server. This is what is lacking in your and `vim.lsp.omnifunc()` versions.\r\n- It makes automatic LSP request when deleting past point of initial request but not past position of completion start. In previous example, when hit `<BS>` until line becomes just \"fu\", it should make new LSP request with possibly larger completion suggestions.\r\n\r\nHere is the code:\r\n\r\n```lua\r\nlocal omnifunc_cache\r\nfunction _G.omnifunc_sync(findstart, base)\r\n  local pos = vim.api.nvim_win_get_cursor(0)\r\n  local line = vim.api.nvim_get_current_line()\r\n\r\n  if findstart == 1 then\r\n    -- Cache state of cursor line and position due to the fact that it will\r\n    -- change at the second call to this function (with `findstart = 0`). See:\r\n    -- https://github.com/vim/vim/issues/8510.\r\n    -- This is needed because request to LSP server is made on second call.\r\n    -- If not done, server's completion mechanics will operate on different\r\n    -- document and position.\r\n    omnifunc_cache = {pos = pos, line = line}\r\n\r\n    -- On first call return column of completion start\r\n    local line_to_cursor = line:sub(1, pos[2])\r\n    return vim.fn.match(line_to_cursor, '\\\\k*$')\r\n  end\r\n\r\n  -- Restore cursor line and position to the state of first call\r\n  vim.api.nvim_set_current_line(omnifunc_cache.line)\r\n  vim.api.nvim_win_set_cursor(0, omnifunc_cache.pos)\r\n\r\n  -- Make request\r\n  local bufnr = vim.api.nvim_get_current_buf()\r\n  local params = vim.lsp.util.make_position_params()\r\n  local result = vim.lsp.buf_request_sync(bufnr, 'textDocument/completion', params, 2000)\r\n  if not result then return {} end\r\n\r\n  -- Transform request answer to list of completion matches\r\n  local items = {}\r\n  for _, item in pairs(result) do\r\n    if not item.err then\r\n      local matches = vim.lsp.util.text_document_completion_list_to_complete_items(item.result, base)\r\n      vim.list_extend(items, matches)\r\n    end\r\n  end\r\n\r\n  -- Restore back cursor line and position to the state of this call's start\r\n  -- (avoids outcomes of Vim's internal line postprocessing)\r\n  vim.api.nvim_set_current_line(line)\r\n  vim.api.nvim_win_set_cursor(0, pos)\r\n\r\n  return items\r\nend\r\n```",
            "created_at": "2021-07-04T17:25:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-873629520",
            "id": 873629520,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzYyOTUyMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/873629520/reactions"
            },
            "updated_at": "2021-07-04T17:25:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/873629520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As we are in feature freeze for 0.6, the answer has to be \"No\". (And in any case, somebody would have to make a PR first.)",
            "created_at": "2021-11-01T11:38:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-956161243",
            "id": 956161243,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "IC_kwDOAPphoM44_dzb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/956161243/reactions"
            },
            "updated_at": "2023-03-11T18:21:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/956161243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you and good hint. I'm happy to do a PR as I think the feature is very important and it works very well so far. Would that be an idea, @kristijanhusak, or do you want to take action?",
            "created_at": "2021-11-01T11:50:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-956167521",
            "id": 956167521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "IC_kwDOAPphoM44_fVh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/956167521/reactions"
            },
            "updated_at": "2023-03-11T18:21:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/956167521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/872787?v=4",
                "events_url": "https://api.github.com/users/inventionate/events{/privacy}",
                "followers_url": "https://api.github.com/users/inventionate/followers",
                "following_url": "https://api.github.com/users/inventionate/following{/other_user}",
                "gists_url": "https://api.github.com/users/inventionate/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/inventionate",
                "id": 872787,
                "login": "inventionate",
                "node_id": "MDQ6VXNlcjg3Mjc4Nw==",
                "organizations_url": "https://api.github.com/users/inventionate/orgs",
                "received_events_url": "https://api.github.com/users/inventionate/received_events",
                "repos_url": "https://api.github.com/users/inventionate/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/inventionate/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/inventionate/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/inventionate",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@inventionate I'll let you take care of it, thanks.",
            "created_at": "2021-11-01T13:03:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-956214294",
            "id": 956214294,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "IC_kwDOAPphoM44_qwW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/956214294/reactions"
            },
            "updated_at": "2023-03-11T18:21:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/956214294",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I get an error using the script from @echasnovski \r\n\r\n```\r\nE5108: Error executing lua [string \":lua\"]:21: E565: Not allowed to change text or change window\r\nstack traceback:\r\n        [C]: in function 'nvim_set_current_line'\r\n        [string \":lua\"]:21: in function <[string \":lua\"]:2>\r\n```\r\n\r\nIs it enough to put it in `init.vim` and add `set omnifunc=v:lua.omnifunc_sync`? ",
            "created_at": "2023-03-09T23:46:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-1463002193",
            "id": 1463002193,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "IC_kwDOAPphoM5XM6RR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1463002193/reactions"
            },
            "updated_at": "2023-03-09T23:46:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1463002193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36510152?v=4",
                "events_url": "https://api.github.com/users/astier/events{/privacy}",
                "followers_url": "https://api.github.com/users/astier/followers",
                "following_url": "https://api.github.com/users/astier/following{/other_user}",
                "gists_url": "https://api.github.com/users/astier/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/astier",
                "id": 36510152,
                "login": "astier",
                "node_id": "MDQ6VXNlcjM2NTEwMTUy",
                "organizations_url": "https://api.github.com/users/astier/orgs",
                "received_events_url": "https://api.github.com/users/astier/received_events",
                "repos_url": "https://api.github.com/users/astier/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/astier/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/astier/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/astier",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there any chance that a sync-version will be shipped with 0.9? I am just wondering what the status is because https://github.com/neovim/neovim/projects/9#card-72001806 lists it for 0.8 but it is under the 'unplanned' milestone.",
            "created_at": "2023-03-11T12:08:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-1464898125",
            "id": 1464898125,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "IC_kwDOAPphoM5XUJJN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1464898125/reactions"
            },
            "updated_at": "2023-03-11T12:08:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1464898125",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36510152?v=4",
                "events_url": "https://api.github.com/users/astier/events{/privacy}",
                "followers_url": "https://api.github.com/users/astier/followers",
                "following_url": "https://api.github.com/users/astier/following{/other_user}",
                "gists_url": "https://api.github.com/users/astier/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/astier",
                "id": 36510152,
                "login": "astier",
                "node_id": "MDQ6VXNlcjM2NTEwMTUy",
                "organizations_url": "https://api.github.com/users/astier/orgs",
                "received_events_url": "https://api.github.com/users/astier/received_events",
                "repos_url": "https://api.github.com/users/astier/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/astier/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/astier/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/astier",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No chance, since there's no PR (and no concrete plan) for it currently. (The projects are just internal \"sketchpad\" notes; they are not to be taken as promises or even firm intentions.)",
            "created_at": "2023-03-11T13:16:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/12390#issuecomment-1464910266",
            "id": 1464910266,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12390",
            "node_id": "IC_kwDOAPphoM5XUMG6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1464910266/reactions"
            },
            "updated_at": "2023-03-11T13:17:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1464910266",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12390/comments",
    "created_at": "2020-05-28T09:10:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/12390/events",
    "html_url": "https://github.com/neovim/neovim/issues/12390",
    "id": 626348896,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/12390/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 285,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 339,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-04T21:53:41Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU2MjYzNDg4OTY=",
    "number": 12390,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 4,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/neovim/neovim/issues/12390/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/12390/timeline",
    "title": "lsp: synchronous omnifunc",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:57:59Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/12390",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
        "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
        "followers_url": "https://api.github.com/users/kristijanhusak/followers",
        "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
        "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kristijanhusak",
        "id": 1782860,
        "login": "kristijanhusak",
        "node_id": "MDQ6VXNlcjE3ODI4NjA=",
        "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
        "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
        "repos_url": "https://api.github.com/users/kristijanhusak/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kristijanhusak",
        "user_view_type": "public"
    }
}