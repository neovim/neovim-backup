{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nUsing `K` on api functions in lua and vimdoc buffers does not bring up the documentation for said buffers.\r\n\r\n### Expected behavior\r\n\r\n`K` should work by default (i.e. `keywordprg` should be appropriately set), the way it does for e.g. `shell`. Nlua.nvim has a potentially good starting point:\r\n\r\nhttps://github.com/tjdevries/nlua.nvim/blob/master/lua/nlua/init.lua#L7",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "[xolox#lua#help()](https://github.com/idbrii/vim-lua-ftplugin/blob/13f3d65368841859203e0486e22264bdb3837f95/autoload/xolox/lua.vim#L59) does something similar but in vimscript. (The `lrv-` prefixes are for [idbrii/luarefvim](https://github.com/idbrii/luarefvim).)\n\nIt uses whole word to find the function instead of the command (substitute() vs :substitute). It also handles `v.o`, `v.g` and other option/variables.\n\nNeovim's current default is for lsps to set K for hover info. I like nlua's strategy to try showing help before hover info. Especially since nvim includes the luaref.txt so lua builtins are also included in help (for Lua 5.1).",
            "created_at": "2025-01-13T23:45:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/22368#issuecomment-2588467531",
            "id": 2588467531,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22368",
            "node_id": "IC_kwDOAPphoM6aSOFL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2588467531/reactions"
            },
            "updated_at": "2025-01-13T23:45:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2588467531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/43559?v=4",
                "events_url": "https://api.github.com/users/idbrii/events{/privacy}",
                "followers_url": "https://api.github.com/users/idbrii/followers",
                "following_url": "https://api.github.com/users/idbrii/following{/other_user}",
                "gists_url": "https://api.github.com/users/idbrii/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/idbrii",
                "id": 43559,
                "login": "idbrii",
                "node_id": "MDQ6VXNlcjQzNTU5",
                "organizations_url": "https://api.github.com/users/idbrii/orgs",
                "received_events_url": "https://api.github.com/users/idbrii/received_events",
                "repos_url": "https://api.github.com/users/idbrii/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/idbrii/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/idbrii/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/idbrii",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "LSP in Lua files handles this by default, but still in favor of this when LSP is not available.\n\nWhile we're at it, sure would be nice if `K` and `ctrl-]` were more eager/aggressive in help files...",
            "created_at": "2025-01-14T00:15:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/22368#issuecomment-2588486000",
            "id": 2588486000,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22368",
            "node_id": "IC_kwDOAPphoM6aSSlw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2588486000/reactions"
            },
            "updated_at": "2025-01-14T00:15:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2588486000",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The default K behaviour is to open a split with help, but LSP in Lua files opens a floating window that disappears. Would be nice to support a split so you can keep looking at the reference.\n\n----\n\nThe OP mentions vimdoc buffers which at first it seems works, but it doesn't work on sample code:\n\n1. `:h nvim_buf_get_extmarks`\n2. `/nvim_win_get_cursor`  -- this line is: `local pos = api.nvim_win_get_cursor(0)`\n3. `K`\n4. error\n\nI guess that's both a challenge of using a local to store  `vim.api` and making this lookup work in both `lua` and `help` filetypes.",
            "created_at": "2025-02-09T22:15:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/22368#issuecomment-2646624422",
            "id": 2646624422,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22368",
            "node_id": "IC_kwDOAPphoM6dwEim",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646624422/reactions"
            },
            "updated_at": "2025-02-09T22:15:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646624422",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/43559?v=4",
                "events_url": "https://api.github.com/users/idbrii/events{/privacy}",
                "followers_url": "https://api.github.com/users/idbrii/followers",
                "following_url": "https://api.github.com/users/idbrii/following{/other_user}",
                "gists_url": "https://api.github.com/users/idbrii/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/idbrii",
                "id": 43559,
                "login": "idbrii",
                "node_id": "MDQ6VXNlcjQzNTU5",
                "organizations_url": "https://api.github.com/users/idbrii/orgs",
                "received_events_url": "https://api.github.com/users/idbrii/received_events",
                "repos_url": "https://api.github.com/users/idbrii/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/idbrii/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/idbrii/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/idbrii",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Related: https://github.com/vim/vim/issues/16631. I prefer`'keywordexpr'`, as mentioned in that issue, to remapping `K`, because it would be really confusing if `K` in both Vimscript and Lua buffers open `:help`, but `K` in Lua buffer is a mapping while `K` in Vimscript one is not\n\n> /nvim_win_get_cursor -- this line is: local pos = api.nvim_win_get_cursor(0)\n\nIt works in [my implementation](https://github.com/brianhuster/dotfiles/blob/main/nvim/lua/an/lua.lua#L62) (I detect `nvim_` instead of `vim.api`)\nBut I don't think we need to handle all edge cases. I think Neovim team don't want to reinvent a Lua language server, do they?\n\n> LSP in Lua files handles this by default, but still in favor of this when LSP is not available.\n\nPersonally I also want completion for Lua file when LSP is not available. What do you think of setting `omnifunc` for Lua filetype as `v:lua.vim.lua_omnifunc` by default? Many other filetypes (C, Python, Ruby, PHP, HTML,...) set an omnifunc by default btw",
            "created_at": "2025-02-16T04:09:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/22368#issuecomment-2661232260",
            "id": 2661232260,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22368",
            "node_id": "IC_kwDOAPphoM6eny6E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661232260/reactions"
            },
            "updated_at": "2025-02-16T06:16:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661232260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> when LSP is not available. What do you think of setting `omnifunc` for Lua filetype as `v:lua.vim.lua_omnifunc` by default?\n\nSure, assuming the builtin Lua omnicomplete does anything useful. Please discuss in a separate issue though.",
            "created_at": "2025-02-16T20:06:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/22368#issuecomment-2661595027",
            "id": 2661595027,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22368",
            "node_id": "IC_kwDOAPphoM6epLeT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661595027/reactions"
            },
            "updated_at": "2025-02-16T20:06:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661595027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/22368/comments",
    "created_at": "2023-02-22T19:19:52Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/22368/events",
    "html_url": "https://github.com/neovim/neovim/issues/22368",
    "id": 1595689369,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim defaults for options, colorscheme/theme, autocmds/events, etc.",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "funtime",
            "id": 120251370,
            "name": "runtime",
            "node_id": "MDU6TGFiZWwxMjAyNTEzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/runtime"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "filetype detection, filetype.lua, ftplugins",
            "id": 3708202139,
            "name": "filetype",
            "node_id": "LA_kwDOAPphoM7dBqyb",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filetype"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/22368/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5fHEmZ",
    "number": 22368,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 8,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 8,
        "url": "https://api.github.com/repos/neovim/neovim/issues/22368/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/22368/timeline",
    "title": "docs: make `K` work by default for nvim api functions in lua buffers",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T09:00:04Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/22368",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
        "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
        "followers_url": "https://api.github.com/users/glacambre/followers",
        "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
        "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glacambre",
        "id": 11534587,
        "login": "glacambre",
        "node_id": "MDQ6VXNlcjExNTM0NTg3",
        "organizations_url": "https://api.github.com/users/glacambre/orgs",
        "received_events_url": "https://api.github.com/users/glacambre/received_events",
        "repos_url": "https://api.github.com/users/glacambre/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glacambre",
        "user_view_type": "public"
    }
}