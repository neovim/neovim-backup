{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Given `t.vim`:\r\n\r\n```vim\r\ntry\r\n  python3 meh\r\ncatch\r\n  echom v:exception\r\nendtry\r\n```\r\n\r\n`vim -u t.vim`:\r\n```\r\nVim(python3):Traceback (most recent call last):\r\n```\r\n\r\n`neovim -u t.vim`:\r\n```\r\nVim(return):Traceback (most recent call last):\r\n```\r\n\r\nThere are plugins catching `python3` here explicitly, e.g. vim-maktaba: https://github.com/google/vim-maktaba/blob/2ae8b4478ea9bc2c6c8106acb55ddfb935754fb9/autoload/maktaba/python.vim#L57",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "The problem here is that `:throw` is not allowed to raise what looks like a Vim own exception (ones with `Vim`), so this can’t just be fixed in VimL. I see three main ways out:\r\n\r\n1. Allow `:throw` to do that.\r\n2. Catch and rewrite provider exception in C code which does not have this restriction.\r\n3. Add some way to override the behaviour so `:throw` is allowed to raise builtin-like exceptions.\r\n\r\nI would suggest the third variant with a function declaration modifier `_core`/`_unsafe`:\r\n\r\n```VimL\r\nfunction s:Throw(msg) _core\r\n  throw 'Vim(python):' . a:msg\r\nendfunction\r\n```\r\n\r\n. The idea is that `_core` functions are allowed to do what regular functions cannot, but this is not supposed to be safe: not only lessen the restrictions on `:throw` command, but e.g. overriding VAR_FIXED variables (like v:event - to be able to code some autocommands in VimL like `let v:event = … | doautocmd NewAutocmd`).\r\n\r\nIntended purpose of the modifier is allowing to implement some logic in VimL which was written in C in Vim without making existing functions able to access what they should not. Underscore is there to hint that new modifier is for internal use only and not subject to keeping backwards compatibility.\r\n\r\nNew modifier should apply only to the function itself, but not to the functions it calls (i.e. it is to be checked via `current_funccall` pointer and not via some global like `msg_silent`). Though this obviously implies that what did not yield a new funccall will not make the modifier reset (e.g. running a `:lua my_func()` from `_core` function will still have modifier active inside `my_func()`).",
            "created_at": "2017-09-21T07:55:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/7294#issuecomment-331081137",
            "id": 331081137,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7294",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTA4MTEzNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/331081137/reactions"
            },
            "updated_at": "2017-09-21T07:55:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/331081137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> There are plugins catching python3 here explicitly\r\n\r\nThen don't do that ...\r\n\r\n> The idea is that _core functions are allowed to do what regular functions cannot, but this is not supposed to be safe: not only lessen the restrictions on :throw command, but e.g. overriding VAR_FIXED variables\r\n\r\nSounds like a new class of difficult bugs. Then we will also need a way to detect which plugins are doing this, when things go wrong. \r\n\r\nPlugins always do things one doesn't expect them to do, but the support request is sent to Nvim, since no one will have any idea what's going on until after a time-consuming triage.\r\n",
            "created_at": "2017-09-21T08:22:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/7294#issuecomment-331087222",
            "id": 331087222,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7294",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTA4NzIyMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/331087222/reactions"
            },
            "updated_at": "2017-09-21T08:22:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/331087222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Then don't do that ...\r\n\r\nIt is by no means a good idea. Vim exceptions have a well-defined contract which includes command name and you are breaking this bit.",
            "created_at": "2017-09-21T21:15:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/7294#issuecomment-331284035",
            "id": 331284035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7294",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTI4NDAzNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/331284035/reactions"
            },
            "updated_at": "2017-09-21T21:15:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/331284035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/7294/comments",
    "created_at": "2017-09-20T12:46:31Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/7294/events",
    "html_url": "https://github.com/neovim/neovim/issues/7294",
    "id": 259150052,
    "labels": [
        {
            "color": "c7def8",
            "default": false,
            "description": "",
            "id": 109899557,
            "name": "vimscript",
            "node_id": "MDU6TGFiZWwxMDk4OTk1NTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vimscript"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "compatibility with Vim or older Neovim",
            "id": 109899712,
            "name": "compatibility",
            "node_id": "MDU6TGFiZWwxMDk4OTk3MTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/compatibility"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 144672485,
            "name": "provider",
            "node_id": "MDU6TGFiZWwxNDQ2NzI0ODU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/provider"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/7294/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWUyNTkxNTAwNTI=",
    "number": 7294,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/7294/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/7294/timeline",
    "title": "Incompatible with Vim when catching errors from Python commands",
    "updated_at": "2025-01-19T11:52:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/7294",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
        "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
        "followers_url": "https://api.github.com/users/blueyed/followers",
        "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
        "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/blueyed",
        "id": 9766,
        "login": "blueyed",
        "node_id": "MDQ6VXNlcjk3NjY=",
        "organizations_url": "https://api.github.com/users/blueyed/orgs",
        "received_events_url": "https://api.github.com/users/blueyed/received_events",
        "repos_url": "https://api.github.com/users/blueyed/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/blueyed",
        "user_view_type": "public"
    }
}