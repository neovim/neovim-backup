{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I am the author of UltiSnips. \n\nDuring the development of UltiSnips I had to jump through several rings to support passing a keymap on to another plugin. For example expanding a snippet with <tab> when not at a trigger keyword should just write a <tab> - except when supertab or ycm is installed. Then it should trigger those plugins to do the work. It would be great to have keymaps with priorities - all plugins map <tab>, ultisnips with priority 1000, supertab with 900, ycm with 800. UltiSnips goes first, if it does not handle the event, neovim tries the next mapping and so on. \n\nPlease make this happen. This would have saved me several gray hairs. \n",
    "closed_at": "2014-04-04T23:45:35Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
        "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
        "followers_url": "https://api.github.com/users/tarruda/followers",
        "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
        "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tarruda",
        "id": 842846,
        "login": "tarruda",
        "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
        "organizations_url": "https://api.github.com/users/tarruda/orgs",
        "received_events_url": "https://api.github.com/users/tarruda/received_events",
        "repos_url": "https://api.github.com/users/tarruda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tarruda",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes, I think this feature is useful, too.\n`<CR>`, `<Space>`, `<Tab>` custom mappings often conflict with the other mappings.\nSublime Text has context mappings feature to prevent conflicts.\nhttp://docs.sublimetext.info/en/latest/customization/key_bindings.html\n",
            "created_at": "2014-02-26T11:22:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/159#issuecomment-36115276",
            "id": 36115276,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/159",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTE1Mjc2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36115276/reactions"
            },
            "updated_at": "2014-02-26T11:22:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36115276",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "There is another approach that I thought but I didn't applied in production yet, but I already tested, and that is a sort of idea stolen from major modes of Emacs. And that idea is possible only thanks to the Lazy load of some plugins made by the @Shougo's Neobundle plugin.\n\nThis idea relies totally in the user to customize his `.vimrc` file on that way, is only a workaround.\n\n> The idea is to remap carefully all those plugin's shortcuts that overlaps by filetype, in order to only load the plugins needed by each filetype. So in this way, you can use the same bindings through several plugins without conflicts, since only have been loaded those plugins that you specified to that filetype with `NeoBundleLazy`. The major drawback of this notion is that you have to avoid to load different filetypes in the same session of Vim or restart it/start another session. That's impracticable in the day to day, but it can lead us to another way to approach the problem. \n\nThe context way that @Shougo mentions is another way to see the problem, but I still see the Emac way as a reference (even when is not perfect at all).\n\nThat's not useful in the context that @SirVer brings in here, but I think that to use more than one plugin for the same task at the same time is not a good idea IMHO.\n\nBTW this is a major problem in every editor that I used for years until now, always reach a point where is inevitable to have some conflicts between plugins in terms of binding keys.\n",
            "created_at": "2014-02-26T11:45:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/159#issuecomment-36116869",
            "id": 36116869,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/159",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTE2ODY5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36116869/reactions"
            },
            "updated_at": "2014-02-26T12:10:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36116869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/390964?v=4",
                "events_url": "https://api.github.com/users/joedicastro/events{/privacy}",
                "followers_url": "https://api.github.com/users/joedicastro/followers",
                "following_url": "https://api.github.com/users/joedicastro/following{/other_user}",
                "gists_url": "https://api.github.com/users/joedicastro/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/joedicastro",
                "id": 390964,
                "login": "joedicastro",
                "node_id": "MDQ6VXNlcjM5MDk2NA==",
                "organizations_url": "https://api.github.com/users/joedicastro/orgs",
                "received_events_url": "https://api.github.com/users/joedicastro/received_events",
                "repos_url": "https://api.github.com/users/joedicastro/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/joedicastro/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/joedicastro/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/joedicastro",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> That's not useful in the context that @SirVer brings in here, but I think that to use more than one plugin for the same task at the same time is not a good idea IMHO.\n\nthat should be up to the user to decide, don't you think? \n\nThis suggestion would make it possible to implement key remapping as plugin instead of in the engine. It would be possible to implement langmap that way too. It makes it possible to have <tab> for all completions like it works in other editors (I agree that this has problems). It would make it possible to have <c-j> jump forward in triggers if you can actually jump right now. It actually adds a simple concept that is super common in event handlers like guis to the engine and could remove lots of core features that could be implement as plugins instead. \n",
            "created_at": "2014-02-26T19:46:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/159#issuecomment-36168044",
            "id": 36168044,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/159",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTY4MDQ0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36168044/reactions"
            },
            "updated_at": "2014-02-26T19:46:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36168044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/140115?v=4",
                "events_url": "https://api.github.com/users/SirVer/events{/privacy}",
                "followers_url": "https://api.github.com/users/SirVer/followers",
                "following_url": "https://api.github.com/users/SirVer/following{/other_user}",
                "gists_url": "https://api.github.com/users/SirVer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/SirVer",
                "id": 140115,
                "login": "SirVer",
                "node_id": "MDQ6VXNlcjE0MDExNQ==",
                "organizations_url": "https://api.github.com/users/SirVer/orgs",
                "received_events_url": "https://api.github.com/users/SirVer/received_events",
                "repos_url": "https://api.github.com/users/SirVer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/SirVer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SirVer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/SirVer",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Sublime Text has context mappings feature to prevent conflicts.\n> http://docs.sublimetext.info/en/latest/customization/key_bindings.html\n\nI used Sublime text for a few days, but I felt that the key-mapping feature was complicated and I could actually not express what I wanted to have: I tried a smart <tab> completion that figures out if you want to complete a file, a ssh host, a snippet, but I could only manage to do it in a if / else mess and it would not work when some other context grabbed the key. This is a bandaid.\n",
            "created_at": "2014-02-26T19:49:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/159#issuecomment-36168391",
            "id": 36168391,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/159",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTY4Mzkx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36168391/reactions"
            },
            "updated_at": "2014-02-26T19:49:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36168391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/140115?v=4",
                "events_url": "https://api.github.com/users/SirVer/events{/privacy}",
                "followers_url": "https://api.github.com/users/SirVer/followers",
                "following_url": "https://api.github.com/users/SirVer/following{/other_user}",
                "gists_url": "https://api.github.com/users/SirVer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/SirVer",
                "id": 140115,
                "login": "SirVer",
                "node_id": "MDQ6VXNlcjE0MDExNQ==",
                "organizations_url": "https://api.github.com/users/SirVer/orgs",
                "received_events_url": "https://api.github.com/users/SirVer/received_events",
                "repos_url": "https://api.github.com/users/SirVer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/SirVer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SirVer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/SirVer",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Why don't we allow the default commands (hjkl etc) to be mapped, sort of like <plug> mappings now?\n",
            "created_at": "2014-02-27T00:39:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/159#issuecomment-36196949",
            "id": 36196949,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/159",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTk2OTQ5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36196949/reactions"
            },
            "updated_at": "2014-02-27T00:39:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36196949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4495750?v=4",
                "events_url": "https://api.github.com/users/Gaelan/events{/privacy}",
                "followers_url": "https://api.github.com/users/Gaelan/followers",
                "following_url": "https://api.github.com/users/Gaelan/following{/other_user}",
                "gists_url": "https://api.github.com/users/Gaelan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Gaelan",
                "id": 4495750,
                "login": "Gaelan",
                "node_id": "MDQ6VXNlcjQ0OTU3NTA=",
                "organizations_url": "https://api.github.com/users/Gaelan/orgs",
                "received_events_url": "https://api.github.com/users/Gaelan/received_events",
                "repos_url": "https://api.github.com/users/Gaelan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Gaelan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Gaelan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Gaelan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@SirVer I agree with this feature but I don't know how hard would be to implement it yet(Haven't read any code related to mappings). Currently we are focusing on refactoring and removing a lot of legacy code, in time I'm sure this will be much easier to implement. \n\nFor now will leave this issue open and we can come back to this later\n",
            "created_at": "2014-02-27T01:24:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/159#issuecomment-36199988",
            "id": 36199988,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/159",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTk5OTg4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36199988/reactions"
            },
            "updated_at": "2014-02-27T01:24:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36199988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@Gaelan I do not understand what you mean, but I believe what you want to say is 'everything is a plugin', i.e. the default mappings should not be special (or even implemented in the core), but instead are implemented by a plugin (maybe a 'special' one, running in process). To which I agree.\n\n@tarruda I believe this can be tagged on later. You can keep :map compatible by using a default priority and later change all the mapping functions to be one function call to a mapping method that takes arguments (i.e. the mode, the priority). Adding in the concept of priority sorted keys into the engine early though will probably make this easier to expose later on. Great that you are considering it\n",
            "created_at": "2014-02-27T05:31:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/159#issuecomment-36211754",
            "id": 36211754,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/159",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjExNzU0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36211754/reactions"
            },
            "updated_at": "2014-02-27T05:31:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36211754",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/140115?v=4",
                "events_url": "https://api.github.com/users/SirVer/events{/privacy}",
                "followers_url": "https://api.github.com/users/SirVer/followers",
                "following_url": "https://api.github.com/users/SirVer/following{/other_user}",
                "gists_url": "https://api.github.com/users/SirVer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/SirVer",
                "id": 140115,
                "login": "SirVer",
                "node_id": "MDQ6VXNlcjE0MDExNQ==",
                "organizations_url": "https://api.github.com/users/SirVer/orgs",
                "received_events_url": "https://api.github.com/users/SirVer/received_events",
                "repos_url": "https://api.github.com/users/SirVer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/SirVer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SirVer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/SirVer",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@SirVer Basically.\n",
            "created_at": "2014-02-27T06:34:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/159#issuecomment-36214749",
            "id": 36214749,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/159",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjE0NzQ5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36214749/reactions"
            },
            "updated_at": "2014-02-27T06:34:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36214749",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4495750?v=4",
                "events_url": "https://api.github.com/users/Gaelan/events{/privacy}",
                "followers_url": "https://api.github.com/users/Gaelan/followers",
                "following_url": "https://api.github.com/users/Gaelan/following{/other_user}",
                "gists_url": "https://api.github.com/users/Gaelan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Gaelan",
                "id": 4495750,
                "login": "Gaelan",
                "node_id": "MDQ6VXNlcjQ0OTU3NTA=",
                "organizations_url": "https://api.github.com/users/Gaelan/orgs",
                "received_events_url": "https://api.github.com/users/Gaelan/received_events",
                "repos_url": "https://api.github.com/users/Gaelan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Gaelan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Gaelan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Gaelan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Closing for now, we can reopen after the initial goals are achieved,\n",
            "created_at": "2014-04-04T23:45:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/159#issuecomment-39621974",
            "id": 39621974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/159",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjIxOTc0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39621974/reactions"
            },
            "updated_at": "2014-04-04T23:45:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39621974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/159/comments",
    "created_at": "2014-02-26T09:01:46Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/159/events",
    "html_url": "https://github.com/neovim/neovim/issues/159",
    "id": 28317930,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "key bindings",
            "id": 3304938718,
            "name": "mappings",
            "node_id": "MDU6TGFiZWwzMzA0OTM4NzE4",
            "url": "https://api.github.com/repos/neovim/neovim/labels/mappings"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/159/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUyODMxNzkzMA==",
    "number": 159,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/159/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/159/timeline",
    "title": "Make multiple keybindings with priorities possible",
    "updated_at": "2025-01-31T10:17:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/159",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/140115?v=4",
        "events_url": "https://api.github.com/users/SirVer/events{/privacy}",
        "followers_url": "https://api.github.com/users/SirVer/followers",
        "following_url": "https://api.github.com/users/SirVer/following{/other_user}",
        "gists_url": "https://api.github.com/users/SirVer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/SirVer",
        "id": 140115,
        "login": "SirVer",
        "node_id": "MDQ6VXNlcjE0MDExNQ==",
        "organizations_url": "https://api.github.com/users/SirVer/orgs",
        "received_events_url": "https://api.github.com/users/SirVer/received_events",
        "repos_url": "https://api.github.com/users/SirVer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/SirVer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SirVer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/SirVer",
        "user_view_type": "public"
    }
}