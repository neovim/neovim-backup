{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nIf a LSP client detaches from a buffer while the LSP server is still emitting diagnostics, you can end up with \"stuck\" diagnostics that won't go away.\n\nI traced through this a bit, and the issue seems to be that this [`handle_diagnostics` function](https://github.com/neovim/neovim/blob/v0.11.1/runtime/lua/vim/lsp/diagnostic.lua#L207) gets called after `lsp.buf_detach_client`. This behavior is documented in [`lsp.buf_detach_client`'s docstring](https://github.com/neovim/neovim/blob/v0.11.1/runtime/lua/vim/lsp.lua#L971-L972):\n\n> Note: While the server is notified that the text document (buffer)\n> was closed, it is still able to send notifications should it ignore this notification.\n\nBut I know that my lsp *does* honor the text document (buffer) closed event, because things work fine when I detach the client by hand. The issue only happens when the client is getting detached immediately after getting started (with the appropriate LSP server *already* running). It feels to me that the current implementation is just inherently racy if we ask the client to detach while it is emitting diagnostics. I was able to resolve this issue by changing `handle_diagnostics` to ignore diagnostics from a detached LSP client (https://github.com/neovim/neovim/commit/88e1f2189e06722231e15fc6d0562117e1772fe3#diff-2c5241b87ba4cc10dd6d1822a2cfa718b1ea523bb9781da4f92585aff7f6b01fR214). I'm not sure if there's a better way to handle this.\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\nIn an empty directory, create the following files:\n\n`minimal_init.lua`\n\n```lua\nfor name, url in pairs {\n  'https://github.com/neovim/nvim-lspconfig.git',\n} do\n  local install_path = vim.fn.fnamemodify('nvim_issue/' .. name, ':p')\n  if vim.fn.isdirectory(install_path) == 0 then\n    vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\n  end\n  vim.opt.runtimepath:append(install_path)\nend\n\nvim.lsp.enable('nixd')\n```\n\n`myscript`:\n\n```python\n#!/usr/bin/env nix-shell\n#!nix-shell -i python3 -p python3\n\n# vi: ft=python\n\nprint(\"Hello, world!\")\n```\n\nInstall `nixd`, and run a recent nightly version of neovim with https://github.com/neovim/neovim/pull/33707.\n\nOpen `myscript` with `nvim -u minimal_init.lua myscript`. Then re-open the buffer with `:e`. You'll be left with diagnostics from `nixd` that do not apply to the python filetype that is open.\n\nhttps://github.com/user-attachments/assets/f1fb0260-2126-44a9-8457-fbbd14ffb53b\n\n### Expected behavior\n\nI expect all diagnostics associated with a LSP client to disappear when the client is detached from the buffer.\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-319+g9efdd4fe98\n\n### Language server name/version\n\nnixd, version: 2.6.3\n\n### Operating system/version\n\nNixOS 25.05 (Warbler)\n\n### Log file\n\nhttps://gist.github.com/jfly/20f901aa7fe0d07a712f9eb071ac8b0d",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33864/comments",
    "created_at": "2025-05-05T21:56:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33864/events",
    "html_url": "https://github.com/neovim/neovim/issues/33864",
    "id": 3040920209,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "startup, shutdown, attach, detach",
            "id": 870629450,
            "name": "lifecycle",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lifecycle"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33864/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM61QMKR",
    "number": 33864,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33864/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33864/timeline",
    "title": "LSP: detaching a LSP client while the client is emitting diagnostics can result in \"stuck\" diagnostics",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-05T23:26:39Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33864",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
        "events_url": "https://api.github.com/users/jfly/events{/privacy}",
        "followers_url": "https://api.github.com/users/jfly/followers",
        "following_url": "https://api.github.com/users/jfly/following{/other_user}",
        "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jfly",
        "id": 277474,
        "login": "jfly",
        "node_id": "MDQ6VXNlcjI3NzQ3NA==",
        "organizations_url": "https://api.github.com/users/jfly/orgs",
        "received_events_url": "https://api.github.com/users/jfly/received_events",
        "repos_url": "https://api.github.com/users/jfly/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jfly",
        "user_view_type": "public"
    }
}