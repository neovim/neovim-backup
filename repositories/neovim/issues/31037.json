{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen 'foldtext' is set to an empty string per PR #20750, calling the `foldtextresult()` function with the line number of a closed fold returns something like \"+-- 4 lines folded\".  I wonder if it would be more consistent with it's documentation to just return the actual buffer line's text --basically like `getline()`.\n\n### Steps to reproduce\n\n1. nvim --clean\n2. `:set foldtext=`\n3. paste some text in the buffer, e.g.\n\n>  START FOLD AFTER THIS LINE\n> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n> Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n> Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n> Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n>  END FOLD BEFORE THIS LINE\n\n5. fold some of the text manually ('foldmethod' doesn't matter)\n6. `:echom foldtextresult(2)`\n7. given the above text, result will be \"+-- 4 lines folded\"\n\n\n\n\n### Expected behavior\n\nReturn a string of the text being displayed for the closed fold--essentially what `getline()` would give you for that line.\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-1075+gb34e137e43\n\n### Vim (not Nvim) behaves the same?\n\nnvim only feature\n\n### Operating system/version\n\nWindows 11\n\n### Terminal name/version\n\nWindows Terminal\n\n### $TERM environment variable\n\nNA\n\n### Installation\n\nDownload and extract from releases",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This is a bit complicated.\n- It needs to include inline virtual text\n- It needs to be limited to a simple screen line",
            "created_at": "2024-11-02T04:15:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/31037#issuecomment-2452851868",
            "id": 2452851868,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31037",
            "node_id": "IC_kwDOAPphoM6SM4yc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452851868/reactions"
            },
            "updated_at": "2024-11-02T04:15:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452851868",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think the simplest thing would be to return an empty string. The caller can then get the buffer contents themselves, if they need it.",
            "created_at": "2024-11-02T08:09:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/31037#issuecomment-2452915539",
            "id": 2452915539,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31037",
            "node_id": "IC_kwDOAPphoM6SNIVT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452915539/reactions"
            },
            "updated_at": "2024-11-02T08:09:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452915539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I would guess the `foldtextresult()` function isn't used that much anyway.  But to get an idea, I ran a Github code search using: `path:*.vim OR path:*.lua foldtextresult` [full search url](https://github.com/search?q=path%3A*.vim+OR+path%3A*.lua+foldtextresult&type=code&query=path%3A*.vim+OR+path%3A*.lua+foldtextresult).  \nLooks like the only significant uses in those results are lukas-reineke/indent-blankline.nvim and the tohtml.vim implementation (which might only be relevant to vim now, since wasn't there a Neovim rewrite of that?).\n\nIn my case, I was using it to figure out where to place some virtual text at the end of a closed fold's text (if it was less than window width).  Which like you say, I can get this another way in the case where foldtext == '' --probably using `virtcol({ linenr, '$' }, 0, winid)`.",
            "created_at": "2024-11-03T03:25:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/31037#issuecomment-2453278467",
            "id": 2453278467,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31037",
            "node_id": "IC_kwDOAPphoM6SOg8D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453278467/reactions"
            },
            "updated_at": "2024-11-03T03:25:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453278467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/77601554?v=4",
                "events_url": "https://api.github.com/users/stringTrimmer/events{/privacy}",
                "followers_url": "https://api.github.com/users/stringTrimmer/followers",
                "following_url": "https://api.github.com/users/stringTrimmer/following{/other_user}",
                "gists_url": "https://api.github.com/users/stringTrimmer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stringTrimmer",
                "id": 77601554,
                "login": "stringTrimmer",
                "node_id": "MDQ6VXNlcjc3NjAxNTU0",
                "organizations_url": "https://api.github.com/users/stringTrimmer/orgs",
                "received_events_url": "https://api.github.com/users/stringTrimmer/received_events",
                "repos_url": "https://api.github.com/users/stringTrimmer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stringTrimmer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stringTrimmer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stringTrimmer",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31037/comments",
    "created_at": "2024-11-02T04:11:39Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31037/events",
    "html_url": "https://github.com/neovim/neovim/issues/31037",
    "id": 2630186813,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 2598645343,
            "name": "folds",
            "node_id": "MDU6TGFiZWwyNTk4NjQ1MzQz",
            "url": "https://api.github.com/repos/neovim/neovim/labels/folds"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31037/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6cxXc9",
    "number": 31037,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31037/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31037/timeline",
    "title": "foldtextresult() is inconsistent with the new 'foldtext' set to empty string feature",
    "updated_at": "2025-01-17T15:39:17Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31037",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/77601554?v=4",
        "events_url": "https://api.github.com/users/stringTrimmer/events{/privacy}",
        "followers_url": "https://api.github.com/users/stringTrimmer/followers",
        "following_url": "https://api.github.com/users/stringTrimmer/following{/other_user}",
        "gists_url": "https://api.github.com/users/stringTrimmer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/stringTrimmer",
        "id": 77601554,
        "login": "stringTrimmer",
        "node_id": "MDQ6VXNlcjc3NjAxNTU0",
        "organizations_url": "https://api.github.com/users/stringTrimmer/orgs",
        "received_events_url": "https://api.github.com/users/stringTrimmer/received_events",
        "repos_url": "https://api.github.com/users/stringTrimmer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/stringTrimmer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/stringTrimmer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/stringTrimmer",
        "user_view_type": "public"
    }
}