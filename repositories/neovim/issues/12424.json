{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "\r\n<!-- Before reporting: search existing issues and check the FAQ. -->\r\n\r\n- `nvim --version`: NVIM v0.5.0-519-g74fed7d50\r\n- UI extensions: ext_linegrid=true, ext_multigrid=false, ext_messages=false, rgb=true\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\nCreate a 20 lines x 80 columns UI showing a buffer containing ~1000 lines and `:set nu`. Go to the bottom of the screen and press `k` to scroll up.\r\n\r\n### Actual behaviour\r\n\r\nNeovim sends the following events:\r\n\r\n```\r\n[\"grid_line\",[1,29,71,[[\"g\",1],[\"k\"]]]]\r\n[\"grid_line\",[1,29,71,[[\" \",1,2]]]]\r\n[\"grid_line\",[1,1,0,[[\" \",67],[\"9\"],[\"7\"],[\"2\"],[\" \"],[\" \",0,77]]],[1,2,0,[[\" \",67],[\"9\"],[\"7\"],[\"3\"],[\" \"],[\" \",0,77]]],[1,3,0,[[\" \",67],[\"9\"],[\"7\"],[\"4\"],[\" \"],[\" \",0,77]]],[1,4,0,[[\" \",67],[\"9\"],[\"7\"],[\"5\"],[\" \"],[\" \",0,77]]],[1,5,0,[[\" \",67],[\"9\"],[\"7\"],[\"6\"],[\" \"],[\" \",0,77]]],[1,6,0,[[\" \",67],[\"9\"],[\"7\",67,2],[\" \"],[\" \",0,77]]],[1,7,0,[[\" \",67],[\"9\"],[\"7\"],[\"8\"],[\" \"],[\" \",0,77]]],[1,8,0,[[\" \",67],[\"9\"],[\"7\"],[\"9\"],[\" \"],[\" \",0,77]]],[1,9,0,[[\" \",67],[\"9\"],[\"8\"],[\"0\"],[\" \"],[\" \",0,77]]],[1,10,0,[[\" \",67],[\"9\"],[\"8\"],[\"1\"],[\" \"],[\" \",0,77]]],[1,11,0,[[\" \",67],[\"9\"],[\"8\"],[\"2\"],[\" \"],[\" \",0,77]]],[1,12,0,[[\" \",67],[\"9\"],[\"8\"],[\"3\"],[\" \"],[\" \",0,77]]],[1,13,0,[[\" \",67],[\"9\"],[\"8\"],[\"4\"],[\" \"],[\" \",0,77]]],[1,14,0,[[\" \",67],[\"9\"],[\"8\"],[\"5\"],[\" \"],[\" \",0,77]]],[1,15,0,[[\" \",67],[\"9\"],[\"8\"],[\"6\"],[\" \"],[\" \",0,77]]],[1,16,0,[[\" \",67],[\"9\"],[\"8\"],[\"7\"],[\" \"],[\" \",0,77]]],[1,17,0,[[\" \",67],[\"9\"],[\"8\",67,2],[\" \"],[\" \",0,77]]],[1,18,0,[[\" \",67],[\"9\"],[\"8\"],[\"9\"],[\" \"],[\" \",0,77]]],[1,19,0,[[\" \",67],[\"9\",67,2],[\"0\"],[\" \"],[\" \",0,77]]],[1,20,0,[[\" \",67],[\"9\",67,2],[\"1\"],[\" \"],[\" \",0,77]]],[1,21,0,[[\" \",67],[\"9\",67,2],[\"2\"],[\" \"],[\" \",0,77]]],[1,22,0,[[\" \",67],[\"9\",67,2],[\"3\"],[\" \"],[\" \",0,77]]],[1,23,0,[[\" \",67],[\"9\",67,2],[\"4\"],[\" \"],[\" \",0,77]]],[1,24,0,[[\" \",67],[\"9\",67,2],[\"5\"],[\" \"],[\" \",0,77]]],[1,25,0,[[\" \",67],[\"9\",67,2],[\"6\"],[\" \"],[\" \",0,77]]],[1,26,0,[[\" \",67],[\"9\",67,2],[\"7\"],[\" \"],[\" \",0,77]]],[1,27,0,[[\" \",67],[\"9\",67,2],[\"8\"],[\" \"],[\" \",0,77]]],[1,28,0,[[\" \",67],[\"9\",67,3],[\" \"],[\" \",0,77]]],[1,0,0,[[\" \",67],[\"9\"],[\"7\"],[\"1\"],[\" \"],[\" \",0,77]]]]\r\n```\r\n\r\n### Expected behaviour\r\n\r\nNeovim sends the following events:\r\n```\r\n[\"grid_line\",[1,29,71,[[\"g\",1],[\"k\"]]]]\r\n[\"grid_line\",[1,29,71,[[\" \",1,2]]]]\r\n[\"grid_scroll\",[1,0,29,0,82,-1,0]]\r\n[\"grid_line\",[1,28,0,[[\"1\",67],[\"0\",67,3],[\" \"],[\" \",0,77]]]]\r\n```\r\n\r\nSince UI bugs aren't easy to reproduce I'll investigate myself. I'm just opening this here so that I don't forget.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Here is a minimal reproducer:\r\n```python\r\nimport time\r\nfrom pynvim import attach\r\nfrom threading import Thread\r\n\r\nclass UIThread(Thread):\r\n    def __init__(self, nvim):\r\n        Thread.__init__(self)\r\n        self.nvim = nvim\r\n        self.do_print = False\r\n    def run(self):\r\n        self.nvim.run_loop(self.callback, self.callback)\r\n    def callback(self, event_name, events):\r\n        if self.do_print:\r\n            [print(event) for event in events if event[0] == \"grid_line\" or event[0] == \"grid_scroll\"]\r\n\r\nnvim = attach('child', argv=[\"/home/me/bin/nvim\", \"--embed\", \"-u\", \"NORC\", \"-i\", \"NONE\"])\r\nui = UIThread(nvim)\r\nui.start()\r\nnvim.async_call(nvim.ui_attach, 80, 20, ext_linegrid = True, rgb = True)\r\nnvim.async_call(nvim.command, \"set laststatus=1\")\r\nnvim.async_call(nvim.command, \"set nu\")\r\nnvim.async_call(nvim.input, \"1000o\")\r\nnvim.async_call(nvim.input, \"<Esc>\")\r\nnvim.async_call(nvim.input, \"H\")\r\ntime.sleep(1)\r\nui.do_print = True\r\ntime.sleep(1)\r\nnvim.async_call(nvim.input, \"k\")\r\ntime.sleep(1)\r\nui.do_print = False\r\ntime.sleep(1)\r\nnvim.async_call(nvim.input, \":qa!<Enter>\")\r\ntime.sleep(1)\r\n```\r\n\r\nRunning this script will print:\r\n```\r\n['grid_line', [1, 19, 52, [['k', 1]]]]\r\n['grid_line', [1, 19, 52, [[' ', 1]]]]\r\n['grid_line', [1, 1, 0, [[' ', 24], ['9'], ['8'], ['4'], [' '], [' ', 0, 75]]], [1, 2, 0, [[' ', 24], ['9'\r\n], ['8'], ['5'], [' '], [' ', 0, 75]]], [1, 3, 0, [[' ', 24], ['9'], ['8'], ['6'], [' '], [' ', 0, 75]]],\r\n[1, 4, 0, [[' ', 24], ['9'], ['8'], ['7'], [' '], [' ', 0, 75]]], [1, 5, 0, [[' ', 24], ['9'], ['8', 24, 2\r\n], [' '], [' ', 0, 75]]], [1, 6, 0, [[' ', 24], ['9'], ['8'], ['9'], [' '], [' ', 0, 75]]], [1, 7, 0, [['\r\n', 24], ['9', 24, 2], ['0'], [' '], [' ', 0, 75]]], [1, 8, 0, [[' ', 24], ['9', 24, 2], ['1'], [' '], [' '\r\n, 0, 75]]], [1, 9, 0, [[' ', 24], ['9', 24, 2], ['2'], [' '], [' ', 0, 75]]], [1, 10, 0, [[' ', 24], ['9',\r\n 24, 2], ['3'], [' '], [' ', 0, 75]]], [1, 11, 0, [[' ', 24], ['9', 24, 2], ['4'], [' '], [' ', 0, 75]]],\r\n[1, 12, 0, [[' ', 24], ['9', 24, 2], ['5'], [' '], [' ', 0, 75]]], [1, 13, 0, [[' ', 24], ['9', 24, 2], ['\r\n6'], [' '], [' ', 0, 75]]], [1, 14, 0, [[' ', 24], ['9', 24, 2], ['7'], [' '], [' ', 0, 75]]], [1, 15, 0,\r\n[[' ', 24], ['9', 24, 2], ['8'], [' '], [' ', 0, 75]]], [1, 16, 0, [[' ', 24], ['9', 24, 3], [' '], [' ',\r\n0, 75]]], [1, 17, 0, [['1', 24], ['0', 24, 3], [' '], [' ', 0, 75]]], [1, 18, 0, [['1', 24], ['0', 24, 2],\r\n ['1'], [' '], [' ', 0, 75]]], [1, 0, 0, [[' ', 24], ['9'], ['8'], ['3'], [' '], [' ', 0, 75]]], [1, 19, 6\r\n4, [['3', 1]]]]\r\n```\r\n\r\nBut set laststatus to 2 instead and you get a nice scroll event:\r\n```\r\n['grid_line', [1, 19, 69, [['k', 1]]]]\r\n['grid_line', [1, 19, 69, [[' ', 1]]]]\r\n['grid_scroll', [1, 0, 18, 0, 80, -1, 0]]\r\n['grid_line', [1, 0, 0, [[' ', 24], ['9'], ['8'], ['3'], [' '], [' ', 0, 75]]], [1, 18, 64, [['3', 9], [',\r\n'], ['0'], ['-'], ['1'], [' ', 9, 8], ['9', 9, 2], ['%']]]]\r\n```\r\n\r\nNow let's see if it's a regression.",
            "created_at": "2020-06-04T05:45:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/12424#issuecomment-638615889",
            "id": 638615889,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzODYxNTg4OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/638615889/reactions"
            },
            "updated_at": "2020-06-04T05:52:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/638615889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It is indeed a regression, Neovim 0.3.7 doesn't have this issue. Now let's bisectâ€¦",
            "created_at": "2020-06-04T05:53:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/12424#issuecomment-638618292",
            "id": 638618292,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzODYxODI5Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/638618292/reactions"
            },
            "updated_at": "2020-06-04T09:01:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/638618292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This regression was introduced in b51ba122c1edfb769e72c25c4f14f469f59f1b8e (written by @bfredl). The problem with this patch is not obvious to me, I'll revert it hunk by hunk until I find out what's wrong.",
            "created_at": "2020-06-05T04:51:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/12424#issuecomment-639257187",
            "id": 639257187,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTI1NzE4Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/639257187/reactions"
            },
            "updated_at": "2020-06-05T04:51:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/639257187",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I couldn't understand what was wrong from reading b51ba12 so I looked at what differed between executing the reproducer with `laststatus=1` and `laststatus=2` and I found two reasons for this missed optimization.\r\n\r\nThe first one is in ui_comp_grid_scroll:\r\n\r\nhttps://github.com/neovim/neovim/blob/dbc8ec94464049311e69274cad562585d7bb6749/src/nvim/ui_compositor.c#L613-L647\r\n\r\nAs explained by the TODOs, neovim doesn't try to compute a grid_scroll when there is potential overlap between two rectangles. Fixing this would make neovim send grid_scroll events again.\r\n\r\nThe second one is in curgrid_covered_above:\r\n\r\nhttps://github.com/neovim/neovim/blob/dbc8ec94464049311e69274cad562585d7bb6749/src/nvim/ui_compositor.c#L606-L611\r\n\r\nThe `row < msg_current_row` should actually be msg_current_row + 1 if the statusline is not being displayed. A patch like this fixes the problem when only one window is present:\r\n\r\n```patch\r\ndiff --git a/src/nvim/ui_compositor.c b/src/nvim/ui_compositor.c\r\nindex e582d8f..951b667 100644\r\n--- a/src/nvim/ui_compositor.c\r\n+++ b/src/nvim/ui_compositor.c\r\n@@ -605,8 +605,9 @@ static void ui_comp_msg_set_pos(UI *ui, Integer grid, Integer row,\r\n /// TODO(bfredl): currently this only handles message row\r\n static bool curgrid_covered_above(int row)\r\n {\r\n+  int statusline_height = p_ls == 2 ? 1 : 0;\r\n   bool above_msg = (kv_A(layers, kv_size(layers)-1) == &msg_grid\r\n-                    && row < msg_current_row-(msg_was_scrolled?1:0));\r\n+                    && row - statusline_height <= msg_current_row-(msg_was_scrolled?1:0));\r\n   return kv_size(layers)-(above_msg?1:0) > curgrid->comp_index+1;\r\n }\r\n```\r\n\r\nUnfortunately this isn't entirely correct, `statusline_height` should actually be `(p_ls == 2) || (p_ls == 1 && win_count() > 0)`. And on top of that, the compositor currently reasons in terms of grids, it's probably a bad idea to get windows and statuslines involved.\r\n\r\nSo I'll try to fix the TODOs in ui_comp_grid_scroll instead.",
            "created_at": "2020-06-07T13:11:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/12424#issuecomment-640216685",
            "id": 640216685,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDIxNjY4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640216685/reactions"
            },
            "updated_at": "2020-06-07T13:12:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640216685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "thanks for the intel, keep up the good work :)",
            "created_at": "2020-06-22T21:45:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/12424#issuecomment-647785226",
            "id": 647785226,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12424",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzc4NTIyNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/647785226/reactions"
            },
            "updated_at": "2020-06-22T21:45:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/647785226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12424/comments",
    "created_at": "2020-06-02T07:37:26Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/12424/events",
    "html_url": "https://github.com/neovim/neovim/issues/12424",
    "id": 628973799,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/12424/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2Mjg5NzM3OTk=",
    "number": 12424,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 3,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 6,
        "url": "https://api.github.com/repos/neovim/neovim/issues/12424/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/12424/timeline",
    "title": "UI protocol: scrolling up sent as grid_line events instead of grid_scroll",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:36:51Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/12424",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
        "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
        "followers_url": "https://api.github.com/users/glacambre/followers",
        "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
        "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glacambre",
        "id": 11534587,
        "login": "glacambre",
        "node_id": "MDQ6VXNlcjExNTM0NTg3",
        "organizations_url": "https://api.github.com/users/glacambre/orgs",
        "received_events_url": "https://api.github.com/users/glacambre/received_events",
        "repos_url": "https://api.github.com/users/glacambre/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glacambre",
        "user_view_type": "public"
    }
}