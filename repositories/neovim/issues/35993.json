{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen i am using TreeSitter with Vue file with two opened windows with same file on different positions and registering epty timer wrapped to schedule_wrap CPU usage is 100%.\n\n### Steps to reproduce\n\n- download Select.vue.txt\n- rename to Select.vue\n- run `nvim --clean -u minimal.lua Select.vue -c 'normal! gg' -c 'vsplit' -c 'wincmd l' -c 'normal! G'`\n\n```lua\n-- minimal.lua\nfor name, url in pairs {\n  treesitter='https://github.com/nvim-treesitter/nvim-treesitter'\n} do\n  local install_path = vim.fn.fnamemodify('nvim_issue/' .. name, ':p')\n  if vim.fn.isdirectory(install_path) == 0 then\n    vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\n  end\n  vim.opt.runtimepath:append(install_path)\nend\n\nlocal ts = require(\"nvim-treesitter.configs\")\n\nts.setup({\n  ensure_installed = { \"vue\", \"javascript\", \"html\", \"css\", \"typescript\" },\n  auto_install = true,\n  highlight = {\n    enable = true,\n    additional_vim_regex_highlighting = false,\n  },\n  indent = { enable = true },\n})\n\n\ntimer = vim.loop.new_timer()\nvim.loop.timer_start(\n  timer,\n  0,\n  16, -- 60 fps\n  vim.schedule_wrap(function(...)\n    -- Nothing\n  end)\n)\n```\n\n<img width=\"1151\" height=\"47\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f6162cdd-db67-4101-a7ca-7019a39f4d01\" />\n\n[Select.vue.txt](https://github.com/user-attachments/files/22665732/Select.vue.txt)\n\n### Expected behavior\n\nIt's empty timer. There is no reason to consume 100% CPU.\n\n### Nvim version (nvim -v)\n\nv0.11.3\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nGentoo linux\n\n### Terminal name/version\n\nrxvt-unicode (urxvt) v9.31\n\n### $TERM environment variable\n\nrxvt-unicode-256color\n\n### Installation\n\nsystem package manager",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Test the latest development version. The [Releases](https://github.com/neovim/neovim/releases/tag/nightly) page has pre-built archives for Linux/Windows/macOS. Check `:version` to confirm the version.\n\n(Side-note: the latest stable release is 0.11.4, always use the latest stable release.)\n",
            "created_at": "2025-10-02T21:59:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/35993#issuecomment-3363358998",
            "id": 3363358998,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35993",
            "node_id": "IC_kwDOAPphoM7IeMkW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363358998/reactions"
            },
            "updated_at": "2025-10-02T21:59:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363358998",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Same issue with `NVIM v0.12.0-dev-1341+g` 28ccebd138. Window needs to be not so high, so both buffers don't overlap. It looks like `vim.schedule` sometimes triggers re-rendering tree-sitter highlighting rules and i am using lualine which checks event queue 60 times per second using vim.schedule. And problem is only with long vue files. Maybe something with #32660",
            "created_at": "2025-10-02T22:20:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/35993#issuecomment-3363414601",
            "id": 3363414601,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35993",
            "node_id": "IC_kwDOAPphoM7IeaJJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363414601/reactions"
            },
            "updated_at": "2025-10-02T23:05:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363414601",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33599?v=4",
                "events_url": "https://api.github.com/users/mireq/events{/privacy}",
                "followers_url": "https://api.github.com/users/mireq/followers",
                "following_url": "https://api.github.com/users/mireq/following{/other_user}",
                "gists_url": "https://api.github.com/users/mireq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mireq",
                "id": 33599,
                "login": "mireq",
                "node_id": "MDQ6VXNlcjMzNTk5",
                "organizations_url": "https://api.github.com/users/mireq/orgs",
                "received_events_url": "https://api.github.com/users/mireq/received_events",
                "repos_url": "https://api.github.com/users/mireq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mireq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mireq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mireq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It looks like `vim.schedule` sometimes triggers re-rendering tree-sitter highlighting rules and i am using\n\nIf we can narrow it down then maybe we can improve the event loop or timer logic somehow. Would be preferred if nvim-treesitter was not required to reproduce the issue.\n\n> lualine which checks event queue 60 times per second using vim.schedule.\n\nwhy in god's name.\n\n> only with long vue files.\n\nSo it's at least partially related to parser performance.",
            "created_at": "2025-10-02T22:28:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/35993#issuecomment-3363437096",
            "id": 3363437096,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35993",
            "node_id": "IC_kwDOAPphoM7Iefoo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363437096/reactions"
            },
            "updated_at": "2025-10-02T22:28:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363437096",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> If we can narrow it down then maybe we can improve the event loop or timer logic somehow. Would be preferred if nvim-treesitter was not required to reproduce the issue.\n\nTreesitter seems like important part of problem. When i disalbe treesitter CPU usage is same if i have just one window or two windows or just start page.\n\nI don't know why lualine don't stop timer when there are no events if they wanted to trigger events in single bulk update. Here is problematic timer:\n\nhttps://github.com/nvim-lualine/lualine.nvim/blob/556e99f0bd1bfbdd5a550ffe3a9c81244458f289/lua/lualine.lua#L516\n\nAnyway. I can change timer to very long period and schedule refresh manually, so it's not a issue for me currently, but there is still performance problem.",
            "created_at": "2025-10-02T22:54:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/35993#issuecomment-3363508012",
            "id": 3363508012,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35993",
            "node_id": "IC_kwDOAPphoM7Iew8s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363508012/reactions"
            },
            "updated_at": "2025-10-02T22:54:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363508012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33599?v=4",
                "events_url": "https://api.github.com/users/mireq/events{/privacy}",
                "followers_url": "https://api.github.com/users/mireq/followers",
                "following_url": "https://api.github.com/users/mireq/following{/other_user}",
                "gists_url": "https://api.github.com/users/mireq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mireq",
                "id": 33599,
                "login": "mireq",
                "node_id": "MDQ6VXNlcjMzNTk5",
                "organizations_url": "https://api.github.com/users/mireq/orgs",
                "received_events_url": "https://api.github.com/users/mireq/received_events",
                "repos_url": "https://api.github.com/users/mireq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mireq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mireq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mireq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As I said, each TS parser may have very different performance. If the Vue parser is very slow, it should probably be fixed.\n\nThe Lualine issue should be reported to Lualine.\n\nBut yes, we also want to avoid \"hangs\" even if plugins and parsers are doing sloppy things.",
            "created_at": "2025-10-02T23:05:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/35993#issuecomment-3363538761",
            "id": 3363538761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35993",
            "node_id": "IC_kwDOAPphoM7Ie4dJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363538761/reactions"
            },
            "updated_at": "2025-10-02T23:05:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363538761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hey, I'm also having this issue, with the Svelte parser. I suspect the cause isn't the parser's performance, but actually injections: I think it was regression introduced in https://github.com/neovim/neovim/pull/33842 (which is related to #32660). Can you confirm that, @mireq?",
            "created_at": "2025-10-02T23:59:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/35993#issuecomment-3363656823",
            "id": 3363656823,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35993",
            "node_id": "IC_kwDOAPphoM7IfVR3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363656823/reactions"
            },
            "updated_at": "2025-10-02T23:59:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3363656823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/84649544?v=4",
                "events_url": "https://api.github.com/users/igorlfs/events{/privacy}",
                "followers_url": "https://api.github.com/users/igorlfs/followers",
                "following_url": "https://api.github.com/users/igorlfs/following{/other_user}",
                "gists_url": "https://api.github.com/users/igorlfs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/igorlfs",
                "id": 84649544,
                "login": "igorlfs",
                "node_id": "MDQ6VXNlcjg0NjQ5NTQ0",
                "organizations_url": "https://api.github.com/users/igorlfs/orgs",
                "received_events_url": "https://api.github.com/users/igorlfs/received_events",
                "repos_url": "https://api.github.com/users/igorlfs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/igorlfs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/igorlfs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/igorlfs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "A possible explanation:\n\n- One window gets parsed, which causes injection trees for other ranges to get dropped, and a redraw to be called\n- The redraw triggers the other window to reparse, dropping the previous trees and causing another redraw\n- Which triggers the first window to redraw, restarting the loop\n\nMeaning this will be fixed by using extmarks to track injection trees. However, I'm not sure why this only happens with a slow parser, and with a lot of `vim.schedule()`ing going on. You would think this would be universal behavior if my explanation holds, or if not, that it would not occur in any edge cases",
            "created_at": "2025-10-03T04:29:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/35993#issuecomment-3364211976",
            "id": 3364211976,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35993",
            "node_id": "IC_kwDOAPphoM7Ihc0I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3364211976/reactions"
            },
            "updated_at": "2025-10-03T04:29:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3364211976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@igorlfs Probably it's related but cant' confirm. It started with version 0.11. Older 0.10.4 is not affected.\n\n@ribru17 exactly. If it would be circular redraw, then timer would not make any difference. And problem is only high frequency timer. I can lower CPU usage to 50% just by lowering rate so timer with scheduler triggers something. Maybe timer triggers already scheduled redraw?",
            "created_at": "2025-10-03T06:44:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/35993#issuecomment-3364462794",
            "id": 3364462794,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35993",
            "node_id": "IC_kwDOAPphoM7IiaDK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3364462794/reactions"
            },
            "updated_at": "2025-10-03T06:44:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3364462794",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33599?v=4",
                "events_url": "https://api.github.com/users/mireq/events{/privacy}",
                "followers_url": "https://api.github.com/users/mireq/followers",
                "following_url": "https://api.github.com/users/mireq/following{/other_user}",
                "gists_url": "https://api.github.com/users/mireq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mireq",
                "id": 33599,
                "login": "mireq",
                "node_id": "MDQ6VXNlcjMzNTk5",
                "organizations_url": "https://api.github.com/users/mireq/orgs",
                "received_events_url": "https://api.github.com/users/mireq/received_events",
                "repos_url": "https://api.github.com/users/mireq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mireq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mireq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mireq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Confirmed that this is fixed by #36030",
            "created_at": "2025-10-11T23:49:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/35993#issuecomment-3393742809",
            "id": 3393742809,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35993",
            "node_id": "IC_kwDOAPphoM7KSGfZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 2,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3393742809/reactions"
            },
            "updated_at": "2025-10-11T23:49:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3393742809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35993/comments",
    "created_at": "2025-10-02T18:59:45Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35993/events",
    "html_url": "https://github.com/neovim/neovim/issues/35993",
    "id": 3478589991,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "performance, latency, cpu/memory usage",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 520282574,
            "name": "event-loop",
            "node_id": "MDU6TGFiZWw1MjAyODI1NzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/event-loop"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "futures/promises, async/await, concurrency, task pipelines",
            "id": 5683343649,
            "name": "async",
            "node_id": "LA_kwDOAPphoM8AAAABUsDxIQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/async"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35993/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 297,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 353,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-10-12T17:29:29Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM7PVxIn",
    "number": 35993,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35993/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35993/timeline",
    "title": "100% CPU usage with 60/s scheduled event + slow treesitter parser",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-11T23:49:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35993",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33599?v=4",
        "events_url": "https://api.github.com/users/mireq/events{/privacy}",
        "followers_url": "https://api.github.com/users/mireq/followers",
        "following_url": "https://api.github.com/users/mireq/following{/other_user}",
        "gists_url": "https://api.github.com/users/mireq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mireq",
        "id": 33599,
        "login": "mireq",
        "node_id": "MDQ6VXNlcjMzNTk5",
        "organizations_url": "https://api.github.com/users/mireq/orgs",
        "received_events_url": "https://api.github.com/users/mireq/received_events",
        "repos_url": "https://api.github.com/users/mireq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mireq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mireq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mireq",
        "user_view_type": "public"
    }
}