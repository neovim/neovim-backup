{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nNote: this is (mostly) a copy-paste from https://github.com/nvim-treesitter/nvim-treesitter/issues/8087#event-19285198968, as it was pointed out the `:Inspect` command is done on neovim's side, not nvim-treesitter. The screenshot below is from my config, but it is reproducible given the minimal config below.\n\n----\n\nWhen I have an LSP with semantic tokens enabled (`lua_ls` for example) their highlighting can override the `comment` highlights, which are useful to quickly spot TODO/NOTE/FIXME comments. Following the advice described in https://github.com/nvim-treesitter/nvim-treesitter/issues/4744, I have copied over the `<tree-sitter query directory>/comment/highlights.scm` to my config folder, under the `~/.config/nvim/queries/comment/` directory, and added `(#set! <node name> priority 200)` for all relevant nodes.\n\nSince `nvim-treesitter` __always prepends its runtime path__ to `vim.o.runtimepath` ([see here](https://github.com/nvim-treesitter/nvim-treesitter/blob/44e90ec66e44f7dbb60030f453a48282b3a1125a/lua/nvim-treesitter/config.lua#L19)), I have moved `<tree-sitter query directory>/comment/{highlights.scm ==> foo}` in order to test my new (personal) `~/.config/nvim/queries/comment/highlights.scm` file. It works: the comment highlighting of named tags is now always set, no matter the semantic tokens my LSP might send. However, the `:Inspect` command does not seem to be aware of the right priority... See the following screenshot:\n\n<img width=\"736\" height=\"463\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7aad19fb-fc20-4a7f-8c08-5f498e0663c7\" />\n\nAccording to `:Inspect`, the semantic highlighting should take over the tag but the tag is clearly a higher priority. The file here is [the top of `blink.cmp`'s `init.lua` file](https://github.com/Saghen/blink.cmp/blob/4e9edba1b1cef1585cc65e54287229e5d34e4df8/lua/blink/cmp/init.lua#L1-L7), with an added FIXME comment.\n\n### Steps to reproduce\n\nHere's the minimal config file:\n\n```lua\nfor name, details in pairs {\n  ['nvim-treesitter'] = { url = 'https://github.com/nvim-treesitter/nvim-treesitter', branch = 'main' },\n  ['nvim-lspconfig'] = { url = 'https://github.com/neovim/nvim-lspconfig/' },\n} do\n  local install_path = vim.fn.fnamemodify('nvim-treesitter-highlight-issue/' .. name, ':p')\n  if vim.fn.isdirectory(install_path) == 0 then\n    local br = ('--branch=%s'):format(details.branch or 'master')\n    vim.fn.system { 'git', 'clone', '--depth=1', br, details.url, install_path }\n  end\n  vim.opt.runtimepath:append(install_path)\nend\n\nif not vim.lsp.is_enabled('lua_ls') then\n\n  local lua_ls_settings = {\n    settings = {\n            Lua = {\n                    runtime = { version = 'LuaJIT', builtin = 'enable', },\n                    diagnostics = { enable = true, globals = {'vim'}, },\n                    workspace = { library = vim.api.nvim_list_runtime_paths(), checkThirdParty = 'Disabled', },\n                    telemetry = { enable = false, }\n            },\n    },\n    filetypes = { 'lua' },\n    root_markers = { \".luarc.json\", \".luarc.jsonc\", \".luacheckrc\", \".stylua.toml\", \"stylua.toml\", \"selene.toml\", \"selene.yml\", \".git\", \"init.lua\" },\n    --on_attach = function()\n      -- vim.schedule(function() vim.notify('lua_ls started...') end)\n    --end\n  }\n\n  vim.lsp.config('lua_ls', lua_ls_settings)\n  vim.lsp.enable('lua_ls')\nend\n\nlocal treesitter = require('nvim-treesitter')\ntreesitter.setup({\n  -- Make TS files relative to ./:\n  install_dir = vim.fn.fnamemodify('nvim-treesitter-highlight-issue/' .. 'tree-sitter', ':p')\n})\ntreesitter.install({'comment', 'lua'}, {summary = true})\n\nvim.api.nvim_create_autocmd('FileType', {\n  desc='Start treesitter',\n  pattern = 'lua',\n  callback = function(ev)\n    -- vim.schedule(function() vim.notify('filetype enabled for lua') end)\n    vim.treesitter.start(ev.buf, 'lua')\n  end,\n})\n\n```\n\nHere is an overview of the simple rules added to the default `highlight.scm` for comments:\n\n```\n((tag\n  (name) @comment.todo @nospell\n  (\"(\" @punctuation.bracket\n    (user) @constant\n    \")\" @punctuation.bracket)?\n  \":\" @punctuation.delimiter)\n  (#any-of? @comment.todo \"TODO\" \"WIP\")\n  (#set! @comment.todo priority 200)); 👈  This was added, the rest is untouched.\n```\n\nHere are the few commands you need to run, in order (assumes bash expansion syntax):\n\n```bash\n# my.scm: Basically the same as nvim-treesitter's comment highlight rules, but with priorities set to 200.\nmv nvim-treesitter-highlight-issue/tree-sitter/queries/comment/{highlights.scm,foo}\nmv my.scm nvim-treesitter-highlight-issue/tree-sitter/queries/comment/highlights.scm\n\nnvim --clean -u minimal.lua some-file.lua\n# Then, add a FIXME/TODO comment when the lsp has finished starting up. The highlight will stay, but `:Inspect` will report a priority of 100 when it should be 200.\n```\n\n### Expected behavior\n\nIn the screenshot at the top of the issue, the priority of the @comment.error should be 200, not 100.\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.3, LuaJIT 2.1.1748459687, reproducible on latest master.\n\n### Vim (not Nvim) behaves the same?\n\nN/A, tree-sitter related.\n\n### Operating system/version\n\nFedora 42, KDE\n\n### Terminal name/version\n\nwezterm 20250813_044957_0f4af152\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nfedora dnf package",
    "closed_at": "2025-08-23T19:01:39Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Update: after a bit of digging, the priority is clearly set in the capture. Calling `:Inspect!` with a bang returns the table of the `comment.error` with the priority set to 200 in its metadata.\n\nHowever, this is never used, as a capture's metadata is stored in `metadata[capture_id][key]` according to `treesitter.txt`:\n\nhttps://github.com/neovim/neovim/blob/d73cfefed5e45fec91a422cd87054611ff711b30/runtime/doc/treesitter.txt#L203-L216\n\nAnd it seems to be the case, as my metadata table on those captures report something like this:\n\n```lua\n-- ...\n  metadata = {\n    [8] = {\n      priority = 200,\n    },\n  },\n-- ...\n```\n\n... leading to the code in _inspector.lua to always prints out the default value for tree-sitter highlighting:\n\nhttps://github.com/neovim/neovim/blob/d73cfefed5e45fec91a422cd87054611ff711b30/runtime/lua/vim/_inspector.lua#L203",
            "created_at": "2025-08-22T13:55:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/35430#issuecomment-3214465781",
            "id": 3214465781,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35430",
            "node_id": "IC_kwDOAPphoM6_mNr1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214465781/reactions"
            },
            "updated_at": "2025-08-22T13:56:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214465781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25150288?v=4",
                "events_url": "https://api.github.com/users/Thibaulltt/events{/privacy}",
                "followers_url": "https://api.github.com/users/Thibaulltt/followers",
                "following_url": "https://api.github.com/users/Thibaulltt/following{/other_user}",
                "gists_url": "https://api.github.com/users/Thibaulltt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Thibaulltt",
                "id": 25150288,
                "login": "Thibaulltt",
                "node_id": "MDQ6VXNlcjI1MTUwMjg4",
                "organizations_url": "https://api.github.com/users/Thibaulltt/orgs",
                "received_events_url": "https://api.github.com/users/Thibaulltt/received_events",
                "repos_url": "https://api.github.com/users/Thibaulltt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Thibaulltt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Thibaulltt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Thibaulltt",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "From adding a few print statements to my local copy of this repo, `capture.metadata.priority` is always nil, but `capture.metadata[some-id].priority` is defined.\n\nI'm unsure how to resolve it (don't know too much about tree-sitter's and its queries' internals to make a patch), but it seems to be the root cause.",
            "created_at": "2025-08-22T13:59:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/35430#issuecomment-3214478450",
            "id": 3214478450,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35430",
            "node_id": "IC_kwDOAPphoM6_mQxy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214478450/reactions"
            },
            "updated_at": "2025-08-22T13:59:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214478450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25150288?v=4",
                "events_url": "https://api.github.com/users/Thibaulltt/events{/privacy}",
                "followers_url": "https://api.github.com/users/Thibaulltt/followers",
                "following_url": "https://api.github.com/users/Thibaulltt/following{/other_user}",
                "gists_url": "https://api.github.com/users/Thibaulltt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Thibaulltt",
                "id": 25150288,
                "login": "Thibaulltt",
                "node_id": "MDQ6VXNlcjI1MTUwMjg4",
                "organizations_url": "https://api.github.com/users/Thibaulltt/orgs",
                "received_events_url": "https://api.github.com/users/Thibaulltt/received_events",
                "repos_url": "https://api.github.com/users/Thibaulltt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Thibaulltt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Thibaulltt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Thibaulltt",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's not that simple; if you look at \"simple\" patterns setting priority (like the one in the bundled C highlight query), then `capture.metadata.priority` works just fine. I suspect this is fallout from the `iter_matches` switch, which this code was not fully adapted to.\n\n@ribru17 ?",
            "created_at": "2025-08-22T14:03:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/35430#issuecomment-3214493780",
            "id": 3214493780,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35430",
            "node_id": "IC_kwDOAPphoM6_mUhU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214493780/reactions"
            },
            "updated_at": "2025-08-22T14:03:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214493780",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looks like we just need the following patch:\n\n```diff\ndiff --git a/runtime/lua/vim/_inspector.lua b/runtime/lua/vim/_inspector.lua\nindex 0321ab76df..c08523716c 100644\n--- a/runtime/lua/vim/_inspector.lua\n+++ b/runtime/lua/vim/_inspector.lua\n@@ -200,7 +200,9 @@ function vim.show_pos(bufnr, row, col, filter)\n         capture,\n         string.format(\n           'priority: %d   language: %s',\n-          capture.metadata.priority or vim.hl.priorities.treesitter,\n+          capture.metadata.priority\n+            or (capture.metadata[capture.id] and capture.metadata[capture.id].priority)\n+            or vim.hl.priorities.treesitter,\n           capture.lang\n         )\n       )\n```\n\n(I can make a PR once done with work)",
            "created_at": "2025-08-22T14:59:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/35430#issuecomment-3214682055",
            "id": 3214682055,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35430",
            "node_id": "IC_kwDOAPphoM6_nCfH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214682055/reactions"
            },
            "updated_at": "2025-08-22T15:11:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3214682055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Wouldn't the `capture.metadata[capture.id]` need to be tested first?\n\nWhen might the \"regular\" metadata and rhe ID-based one both be filled in?",
            "created_at": "2025-08-22T19:48:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/35430#issuecomment-3215442404",
            "id": 3215442404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35430",
            "node_id": "IC_kwDOAPphoM6_p8Hk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3215442404/reactions"
            },
            "updated_at": "2025-08-22T19:48:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3215442404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25150288?v=4",
                "events_url": "https://api.github.com/users/Thibaulltt/events{/privacy}",
                "followers_url": "https://api.github.com/users/Thibaulltt/followers",
                "following_url": "https://api.github.com/users/Thibaulltt/following{/other_user}",
                "gists_url": "https://api.github.com/users/Thibaulltt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Thibaulltt",
                "id": 25150288,
                "login": "Thibaulltt",
                "node_id": "MDQ6VXNlcjI1MTUwMjg4",
                "organizations_url": "https://api.github.com/users/Thibaulltt/orgs",
                "received_events_url": "https://api.github.com/users/Thibaulltt/received_events",
                "repos_url": "https://api.github.com/users/Thibaulltt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Thibaulltt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Thibaulltt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Thibaulltt",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Wouldn't the `capture.metadata[capture.id]` need to be tested first?\n\nYou're right 👍 \n\n> When might the \"regular\" metadata and rhe ID-based one both be filled in?\n\nFor something like this, I believe:\n\n```\n((tag) @_tag\n  (#set! priority 200) ; pattern-level metadata\n  (#set! @_tag priority 201) ; capture-level metadata\n)\n```",
            "created_at": "2025-08-23T01:07:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/35430#issuecomment-3216047589",
            "id": 3216047589,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35430",
            "node_id": "IC_kwDOAPphoM6_sP3l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3216047589/reactions"
            },
            "updated_at": "2025-08-23T01:07:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3216047589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35430/comments",
    "created_at": "2025-08-22T12:34:13Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35430/events",
    "html_url": "https://github.com/neovim/neovim/issues/35430",
    "id": 3345342348,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35430/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 46,
        "created_at": "2025-07-14T12:16:41Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/52",
        "id": 13265074,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/52/labels",
        "node_id": "MI_kwDOAPphoM4Aymiy",
        "number": 52,
        "open_issues": 20,
        "state": "open",
        "title": "0.11.4",
        "updated_at": "2025-08-24T06:42:11Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/52"
    },
    "node_id": "I_kwDOAPphoM7HZd-M",
    "number": 35430,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35430/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35430/timeline",
    "title": "highlights: Priority is not always reflected in `:Inspect`",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-23T19:01:54Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35430",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/25150288?v=4",
        "events_url": "https://api.github.com/users/Thibaulltt/events{/privacy}",
        "followers_url": "https://api.github.com/users/Thibaulltt/followers",
        "following_url": "https://api.github.com/users/Thibaulltt/following{/other_user}",
        "gists_url": "https://api.github.com/users/Thibaulltt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Thibaulltt",
        "id": 25150288,
        "login": "Thibaulltt",
        "node_id": "MDQ6VXNlcjI1MTUwMjg4",
        "organizations_url": "https://api.github.com/users/Thibaulltt/orgs",
        "received_events_url": "https://api.github.com/users/Thibaulltt/received_events",
        "repos_url": "https://api.github.com/users/Thibaulltt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Thibaulltt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Thibaulltt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Thibaulltt",
        "user_view_type": "public"
    }
}