{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "- `nvim --version`: v0.4.3\r\n- `vim -u DEFAULTS` (version: 8.1) behaves differently? No\r\n- Operating system/version: Arch, running kernel 5.3.13\r\n- Terminal name/version: Konsole 19.08.3\r\n- `$TERM`: xterm-256color\r\n\r\n### Actual behaviour\r\n\r\nWhen I edit a file, and it's been bind-mounted with Docker, I expect to see the changes inside the container. However, the file inside the container does not reflect that change.\r\n\r\nI believe it's because of https://github.com/moby/moby/issues/15793, quoted below:\r\n\r\n> If you are using some editor like vim, when you save the file it does not save the file directly, rather it creates a new file and copies it into place.\r\nThis breaks the bind-mount, which is based on inode. Since saving the file effectively changes the inode, changes will not propagate into the container.\r\nWhen the container is restarted the new inode.\r\nIf you edit the file in place you should see changes propagate.\r\n\r\n### Expected behaviour\r\n\r\nNeovim doesn't create a brand-new file when saving, but instead reuses the existing file.\r\n\r\nI would like this behaviour to change, either with some combination of settings or always. I think it would be less surprising if the default were to change as well.",
    "closed_at": "2019-12-01T22:09:54Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "However\r\n\r\n> rather it creates a new file and copies it into place.\r\n\r\nis standard practice to protect against crashes mid-write.\r\n\r\n(e) I'm kinda wondering if your use-case could not be solve by a proper `BufWritePost` autocommand.",
            "created_at": "2019-12-01T12:20:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/11490#issuecomment-560100938",
            "id": 560100938,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11490",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwMDkzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/560100938/reactions"
            },
            "updated_at": "2019-12-01T12:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/560100938",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4117685?v=4",
                "events_url": "https://api.github.com/users/KillTheMule/events{/privacy}",
                "followers_url": "https://api.github.com/users/KillTheMule/followers",
                "following_url": "https://api.github.com/users/KillTheMule/following{/other_user}",
                "gists_url": "https://api.github.com/users/KillTheMule/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KillTheMule",
                "id": 4117685,
                "login": "KillTheMule",
                "node_id": "MDQ6VXNlcjQxMTc2ODU=",
                "organizations_url": "https://api.github.com/users/KillTheMule/orgs",
                "received_events_url": "https://api.github.com/users/KillTheMule/received_events",
                "repos_url": "https://api.github.com/users/KillTheMule/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KillTheMule/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KillTheMule/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KillTheMule",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The default for Linux should be `set nobackup writebackup`. So, while saving the buffer, a backup is made and removed afterwards.\r\n\r\nThere are two approaches to making a backup and `:h 'backupcopy'` explains it very well and in detail. Both have pros and cons.\r\n\r\nIn your case, you probably want to `set nowritebackup`. Maybe even conditionally, e.g. only for files below a certain directory:\r\n\r\n```vim\r\nautocmd BufWritePre  /path/to/dir/* set nowritebackup\r\nautocmd BufWritePost /path/to/dir/* set writebackup\r\n```\r\n\r\nEDIT: Oh, also see `:h 'backupskip'`.",
            "created_at": "2019-12-01T13:18:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/11490#issuecomment-560107241",
            "id": 560107241,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11490",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDEwNzI0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/560107241/reactions"
            },
            "updated_at": "2019-12-01T13:21:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/560107241",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/972014?v=4",
                "events_url": "https://api.github.com/users/mhinz/events{/privacy}",
                "followers_url": "https://api.github.com/users/mhinz/followers",
                "following_url": "https://api.github.com/users/mhinz/following{/other_user}",
                "gists_url": "https://api.github.com/users/mhinz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mhinz",
                "id": 972014,
                "login": "mhinz",
                "node_id": "MDQ6VXNlcjk3MjAxNA==",
                "organizations_url": "https://api.github.com/users/mhinz/orgs",
                "received_events_url": "https://api.github.com/users/mhinz/received_events",
                "repos_url": "https://api.github.com/users/mhinz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mhinz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mhinz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mhinz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > rather it creates a new file and copies it into place.\r\n> \r\n> is standard practice to protect against crashes mid-write.\r\n\r\nYes. Not doing so is bad practice.\r\n\r\n> Expected behaviour: Neovim doesn't create a brand-new file when saving, but instead reuses the existing file.\r\n\r\nThe process is more like: write to a temp location, then _rename_ after the write succeeds. That's the typical way to atomically save a file. Blame it on the OS vendors.\r\n\r\nMeanwhile you can disable this behavior as @mhinz noted:\r\n\r\n    :set nobackup nowritebackup\r\n\r\nOr set `backupskip` to a pattern that matches Docker-specific paths.",
            "created_at": "2019-12-01T22:09:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/11490#issuecomment-560165912",
            "id": 560165912,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11490",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDE2NTkxMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/560165912/reactions"
            },
            "updated_at": "2019-12-01T22:11:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/560165912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks @justinmk and @mhinz for the pointers in the documentation!",
            "created_at": "2019-12-02T07:05:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/11490#issuecomment-560262031",
            "id": 560262031,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11490",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDI2MjAzMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/560262031/reactions"
            },
            "updated_at": "2019-12-02T07:05:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/560262031",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14547?v=4",
                "events_url": "https://api.github.com/users/nogweii/events{/privacy}",
                "followers_url": "https://api.github.com/users/nogweii/followers",
                "following_url": "https://api.github.com/users/nogweii/following{/other_user}",
                "gists_url": "https://api.github.com/users/nogweii/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nogweii",
                "id": 14547,
                "login": "nogweii",
                "node_id": "MDQ6VXNlcjE0NTQ3",
                "organizations_url": "https://api.github.com/users/nogweii/orgs",
                "received_events_url": "https://api.github.com/users/nogweii/received_events",
                "repos_url": "https://api.github.com/users/nogweii/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nogweii/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nogweii/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nogweii",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I came across this recently -- the brithtime of my file is changed after being written in neovim. I changed `backupcopy` to `yes` to still get write protection, just fyi.",
            "created_at": "2025-07-23T14:39:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/11490#issuecomment-3108943743",
            "id": 3108943743,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11490",
            "node_id": "IC_kwDOAPphoM65Trd_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3108943743/reactions"
            },
            "updated_at": "2025-07-23T14:39:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3108943743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/984374?v=4",
                "events_url": "https://api.github.com/users/albertnetymk/events{/privacy}",
                "followers_url": "https://api.github.com/users/albertnetymk/followers",
                "following_url": "https://api.github.com/users/albertnetymk/following{/other_user}",
                "gists_url": "https://api.github.com/users/albertnetymk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/albertnetymk",
                "id": 984374,
                "login": "albertnetymk",
                "node_id": "MDQ6VXNlcjk4NDM3NA==",
                "organizations_url": "https://api.github.com/users/albertnetymk/orgs",
                "received_events_url": "https://api.github.com/users/albertnetymk/received_events",
                "repos_url": "https://api.github.com/users/albertnetymk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/albertnetymk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/albertnetymk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/albertnetymk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/11490/comments",
    "created_at": "2019-12-01T12:08:28Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/11490/events",
    "html_url": "https://github.com/neovim/neovim/issues/11490",
    "id": 530721117,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as usage questions",
            "id": 77997478,
            "name": "closed:question",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:question"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 378639615,
            "name": "io",
            "node_id": "MDU6TGFiZWwzNzg2Mzk2MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/io"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim core functionality or code",
            "id": 858327504,
            "name": "core",
            "node_id": "MDU6TGFiZWw4NTgzMjc1MDQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/core"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/11490/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1MzA3MjExMTc=",
    "number": 11490,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/11490/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/11490/timeline",
    "title": "Change the way neovim writes files to better work with bind mounts and docker",
    "type": null,
    "updated_at": "2025-07-23T14:39:45Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/11490",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/14547?v=4",
        "events_url": "https://api.github.com/users/nogweii/events{/privacy}",
        "followers_url": "https://api.github.com/users/nogweii/followers",
        "following_url": "https://api.github.com/users/nogweii/following{/other_user}",
        "gists_url": "https://api.github.com/users/nogweii/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nogweii",
        "id": 14547,
        "login": "nogweii",
        "node_id": "MDQ6VXNlcjE0NTQ3",
        "organizations_url": "https://api.github.com/users/nogweii/orgs",
        "received_events_url": "https://api.github.com/users/nogweii/received_events",
        "repos_url": "https://api.github.com/users/nogweii/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nogweii/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nogweii/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nogweii",
        "user_view_type": "public"
    }
}