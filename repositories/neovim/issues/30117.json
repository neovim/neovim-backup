{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nIt is not possible to yank (`ggyG`, `\"+yj`...) text from Neovim's terminal buffers without Neovim hard-wrapping lines that were longer than the terminal buffer's width.\n\n### Expected behavior\n\nNow that libvterm is vendored and that reflow is enabled, Neovim might have access to enough information to not hard-wrap yanked text?",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Related Vim PR (with partial libvterm support which we haven't cherry-picked yet): https://github.com/vim/vim/pull/8365",
            "created_at": "2024-08-22T15:11:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/30117#issuecomment-2304936456",
            "id": 2304936456,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30117",
            "node_id": "IC_kwDOAPphoM6JYooI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2304936456/reactions"
            },
            "updated_at": "2024-08-22T15:11:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2304936456",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Recently upgraded to `0.11`, excited by some of the recent improvements to this ðŸ¥³ \n\nIt's a pretty common workflow that I want to send a coworker the output of a command that I just recently ran (usually including what the command was). \n\nHere's my ideal workflow:\n1. Run the command in the `:terminal` buffer\n2. `V[[y` (using the new `:h terminal_[[`, which AFAICT doesn't work OOTB in visual-block mode)\n3. paste command to coworker\n\nHowever, here's what I've historically done:\n1. Run the command to get the output I want: ex `cat a_file_with_long_lines.txt`\n2. `<esc><esc>Vkkkkkkkkkky` (go into normal mode, navigate in visual-block mode to the start of the last command and yank it)\n3. If there were any newlines introduced by wrapping, paste in a scratch buffer and do a bit of `:%s///c` to clean things up.\n\nAFAICT https://github.com/neovim/neovim/issues/2514 makes this better, in that making my terminal smaller causes it to reflow; awesome. \n\nIf the command ended up taking more than a whole screen, however, it won't end up reflowing the lines in scrollback (mentioned in the final comment of that issue: [comment](https://github.com/neovim/neovim/issues/2514#issuecomment-2304310791)). This means for any long outputs, I still have to resort to step (3).\n\nI'll also note that another way around this entirely is just to rerun the command with `my_command | pbcopy/xclip`. However, sometimes the commands I run aren't idempotent, so I unfortunately have to work with the output that I already got.\n\n---\n\nA few ways I'm thinking about how to fix this:\n1. Is there any exposed way to manually access libvterm's reflow functionality? I'd be happy to make a custom `vmap` that looks at the currently highlighted section and just reflows those lines in particular. \n    1. I (perhaps incorrectly) assume that we aren't reflowing the entire terminal buffer when resizing due to performance reasons. Is there some way to temporarily override that?\n2. Are there any specific markers/characters in the terminal buffer to differentiate between actual newlines from the command output, and newlines introduced by wrapping? If so, then it could be a matter of just removing the wrap-created newlines in a custom keymap, and that'd be very straightforward.\n\nThanks!\n\n",
            "created_at": "2025-03-28T17:04:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/30117#issuecomment-2761941799",
            "id": 2761941799,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30117",
            "node_id": "IC_kwDOAPphoM6kn-Mn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2761941799/reactions"
            },
            "updated_at": "2025-03-28T17:04:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2761941799",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2601844?v=4",
                "events_url": "https://api.github.com/users/matthewgrossman/events{/privacy}",
                "followers_url": "https://api.github.com/users/matthewgrossman/followers",
                "following_url": "https://api.github.com/users/matthewgrossman/following{/other_user}",
                "gists_url": "https://api.github.com/users/matthewgrossman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matthewgrossman",
                "id": 2601844,
                "login": "matthewgrossman",
                "node_id": "MDQ6VXNlcjI2MDE4NDQ=",
                "organizations_url": "https://api.github.com/users/matthewgrossman/orgs",
                "received_events_url": "https://api.github.com/users/matthewgrossman/received_events",
                "repos_url": "https://api.github.com/users/matthewgrossman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matthewgrossman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matthewgrossman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matthewgrossman",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> 2\\. `terminal_[[`, which AFAICT doesn't work OOTB in visual-block mode)\n\noh true, we are missing visual-mode mappings for that. PR? :)\n\n> If the command ended up taking more than a whole screen, however, it won't end up reflowing the lines in scrollback\n\nYes, known issue. I feel your pain :)\n\n> is there any exposed way to manually access libvterm's reflow functionality? I'd be happy to make a custom `vmap` that looks at the currently highlighted section and just reflows those lines in particular.\n\nThe issue is missing functionality in libvterm itself. If that existed we'd just use it.\n\n> Are there any specific markers/characters in the terminal buffer to differentiate between actual newlines from the command output, and newlines introduced by wrapping?\n\nDefining such markers would be equivalent to solving the problem, so those markers don't exist.",
            "created_at": "2025-03-29T11:43:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/30117#issuecomment-2763313551",
            "id": 2763313551,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30117",
            "node_id": "IC_kwDOAPphoM6ktNGP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2763313551/reactions"
            },
            "updated_at": "2025-03-29T11:43:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2763313551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30117/comments",
    "created_at": "2024-08-22T14:52:23Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30117/events",
    "html_url": "https://github.com/neovim/neovim/issues/30117",
    "id": 2480995868,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30117/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 707,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 637,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-03-31T13:15:01Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6T4P4c",
    "number": 30117,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 6,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 6,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30117/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30117/timeline",
    "title": "Terminal softwrapping",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-03-29T11:44:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30117",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
        "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
        "followers_url": "https://api.github.com/users/glacambre/followers",
        "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
        "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glacambre",
        "id": 11534587,
        "login": "glacambre",
        "node_id": "MDQ6VXNlcjExNTM0NTg3",
        "organizations_url": "https://api.github.com/users/glacambre/orgs",
        "received_events_url": "https://api.github.com/users/glacambre/received_events",
        "repos_url": "https://api.github.com/users/glacambre/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glacambre",
        "user_view_type": "public"
    }
}