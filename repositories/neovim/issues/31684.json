{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\n#### Background\n\nI use lspconfig to configure the lsp client in neovim, and I have run into an issue that I could probably figure out how to work around, but I am not a lua expert and I think there is a good argument that this should be changed in neovim itself, so I am creating this issue for both those purposes.\n\n#### Problem\n\nThe issue at hand is how neovim communicates workspace configuration to the LSP server. I know that `vim.lsp.start_client` accepts ` settings` table that will be sent in response to `workspace/configuration` requests from the client. AFAICT this makes neovim always respond to `workspace/configuration` with the same response for the life of the client. If I wanted to change my configuration I can send a `workspace/didChangeConfiguration` notification to the server. However, some languages servers rerequest `workspace/configuration` when receiving those notifications. This causes neovim to send the old initial configuration again, overwrite the updates I asked for.\n\nNow I don't think language servers _should_ be requesting configuration again, since after all they receive it in the didChange notification, but given how the [LSP spec talks about `workspace/configuration`](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_configuration) I don't think they _shouldn't_ either. This is the part I'm referring to:\n\n> This pull model replaces the old push model were the client signaled configuration change via an event. If the server still needs to react to configuration changes (since the server caches the result of workspace/configuration requests) the server should register for an empty configuration change\n\nThus I think it makes sense for neovim to handle both paradigms.\n\n#### Workarounds\n\nFor servers that exhibit this problem I am working around it by disabling the `workspace.configuration` capability. This makes all configuration updates happen via didChange notifications instead, which works, but seems...not recommended? Especially since LSP spec says that the pull model is meant to replace the push model.\n\n#### Related\nI filed an issue for the Haskell LSP side of things in https://github.com/haskell/haskell-language-server/issues/4469\n\n### Expected behavior\n\nI think it would make sense for the neovim client to respond to workspace/configuration requests using the same configuration that was last sent using workspace/didChangeConfiguration. Rather than updating configuration directly on the server by sending a notification, I think it makes the most sense to update the local version of the configuration first, and the trigger a notification using the updated client configuration. I think this more closely models how LSP expects clients to handle their configuration and the communication of that configuration with the server, but I if proven wrong I can take that proof to the language servers to help motivate changing this behavior on their side of this.",
    "closed_at": "2024-12-24T15:19:26Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3359229?v=4",
        "events_url": "https://api.github.com/users/andremarianiello/events{/privacy}",
        "followers_url": "https://api.github.com/users/andremarianiello/followers",
        "following_url": "https://api.github.com/users/andremarianiello/following{/other_user}",
        "gists_url": "https://api.github.com/users/andremarianiello/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/andremarianiello",
        "id": 3359229,
        "login": "andremarianiello",
        "node_id": "MDQ6VXNlcjMzNTkyMjk=",
        "organizations_url": "https://api.github.com/users/andremarianiello/orgs",
        "received_events_url": "https://api.github.com/users/andremarianiello/received_events",
        "repos_url": "https://api.github.com/users/andremarianiello/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/andremarianiello/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andremarianiello/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/andremarianiello",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You can change the `settings` on the client.\n\nFor example, to extend the luals workspace library you can do something like:\n\n```lua\nlocal client = vim.lsp.get_clients({ name = \"luals\" })[1]\ntable.insert(\n  client.settings.Lua.workspace.library,\n  os.getenv(\"HOME\") .. \"/.config/nvim/pack/plugins/start/nvim-dap/lua\"\n)\nclient:notify(\"workspace/didChangeConfiguration\", { settings = client.settings })\n```\n\nThis should work for both servers which use the playload from the notification and also those that pull the config via `workspace/configuration`",
            "created_at": "2024-12-23T13:15:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/31684#issuecomment-2559693729",
            "id": 2559693729,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31684",
            "node_id": "IC_kwDOAPphoM6YkdOh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2559693729/reactions"
            },
            "updated_at": "2024-12-23T13:15:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2559693729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "That seems like a good option! I'll see if I can get that working",
            "created_at": "2024-12-23T14:03:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/31684#issuecomment-2559768389",
            "id": 2559768389,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31684",
            "node_id": "IC_kwDOAPphoM6YkvdF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2559768389/reactions"
            },
            "updated_at": "2024-12-23T14:03:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2559768389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3359229?v=4",
                "events_url": "https://api.github.com/users/andremarianiello/events{/privacy}",
                "followers_url": "https://api.github.com/users/andremarianiello/followers",
                "following_url": "https://api.github.com/users/andremarianiello/following{/other_user}",
                "gists_url": "https://api.github.com/users/andremarianiello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andremarianiello",
                "id": 3359229,
                "login": "andremarianiello",
                "node_id": "MDQ6VXNlcjMzNTkyMjk=",
                "organizations_url": "https://api.github.com/users/andremarianiello/orgs",
                "received_events_url": "https://api.github.com/users/andremarianiello/received_events",
                "repos_url": "https://api.github.com/users/andremarianiello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andremarianiello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andremarianiello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andremarianiello",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I did manage to get that working. I was stuck for a while when I was accidentally using 0.9.1, but using 0.10.3 worked perfectly. Thanks!",
            "created_at": "2024-12-24T15:19:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/31684#issuecomment-2561226244",
            "id": 2561226244,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31684",
            "node_id": "IC_kwDOAPphoM6YqTYE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2561226244/reactions"
            },
            "updated_at": "2024-12-24T15:19:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2561226244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3359229?v=4",
                "events_url": "https://api.github.com/users/andremarianiello/events{/privacy}",
                "followers_url": "https://api.github.com/users/andremarianiello/followers",
                "following_url": "https://api.github.com/users/andremarianiello/following{/other_user}",
                "gists_url": "https://api.github.com/users/andremarianiello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andremarianiello",
                "id": 3359229,
                "login": "andremarianiello",
                "node_id": "MDQ6VXNlcjMzNTkyMjk=",
                "organizations_url": "https://api.github.com/users/andremarianiello/orgs",
                "received_events_url": "https://api.github.com/users/andremarianiello/received_events",
                "repos_url": "https://api.github.com/users/andremarianiello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andremarianiello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andremarianiello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andremarianiello",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31684/comments",
    "created_at": "2024-12-22T19:25:08Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31684/events",
    "html_url": "https://github.com/neovim/neovim/issues/31684",
    "id": 2754806657,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31684/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6kMwOB",
    "number": 31684,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31684/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31684/timeline",
    "title": "LSP: client should respond to \"workspace/configuration\" with latest (dynamic) config",
    "updated_at": "2025-01-17T15:33:21Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31684",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3359229?v=4",
        "events_url": "https://api.github.com/users/andremarianiello/events{/privacy}",
        "followers_url": "https://api.github.com/users/andremarianiello/followers",
        "following_url": "https://api.github.com/users/andremarianiello/following{/other_user}",
        "gists_url": "https://api.github.com/users/andremarianiello/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/andremarianiello",
        "id": 3359229,
        "login": "andremarianiello",
        "node_id": "MDQ6VXNlcjMzNTkyMjk=",
        "organizations_url": "https://api.github.com/users/andremarianiello/orgs",
        "received_events_url": "https://api.github.com/users/andremarianiello/received_events",
        "repos_url": "https://api.github.com/users/andremarianiello/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/andremarianiello/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andremarianiello/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/andremarianiello",
        "user_view_type": "public"
    }
}