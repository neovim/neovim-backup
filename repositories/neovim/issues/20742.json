{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Feature already in Vim?\r\n\r\nNo\r\n\r\n### Feature description\r\n\r\nIt would be nice if neovim provided an API for filtering code lenses.\r\nIn my use-case, [haskell-language-server relies on code lenses for quite a few features](https://haskell-language-server.readthedocs.io/en/latest/features.html#code-lenses).\r\n\r\nSome of them are useful to the degree that I have set up an autocmd to aggressively refresh them. But in some projects, code lenses that I'm not at all interested in show up. I can disable each plugin in the client config, but it would be nice if I could filter them out only for specific projects.\r\n\r\nI'm thinking of something like this:\r\n\r\n```lua\r\n-- codelens.lua\r\nfunction M.on_codelens(err, result, ctx, opts, _)\r\n-- ...\r\nend\r\n\r\nfunction M.refresh(opts)\r\nend\r\n```\r\n\r\n```lua\r\n-- user call\r\nopts = {\r\n  filter = function(lens)\r\n  --...\r\n  end\r\n}\r\nvim.lsp.codelens.refresh(opts)\r\n```\r\n\r\nA similar API is provided by `lsp.codeAction`.\r\n\r\n### Alternatives\r\n* In my case, I can disable the respective haskell-language-server plugins. This takes effect globally though, so it isn't very flexible. Other language servers may not support this.\r\n* Override the `textDocument/codeLens` handler manually.\r\n\r\nLet me know if you think it's a good idea, and if so I'll gladly take some time to draft a PR.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": ">  Override the `textDocument/codeLens` handler manually.\r\n\r\nThis is generally our recommendation. Improving the story around overriding `vim.lsp.handlers` is a preferred approach if possible, rather than having special interfaces for each kind of handler.",
            "created_at": "2022-10-20T10:28:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/20742#issuecomment-1285300951",
            "id": 1285300951,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20742",
            "node_id": "IC_kwDOAPphoM5MnCLX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285300951/reactions"
            },
            "updated_at": "2022-10-20T10:28:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285300951",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": ">This is generally our recommendation\r\n\r\nIn this specific case, it would probably require custom implementations of `codelens.refresh()`, `codelens.display()` and `codelens.on_codelens()` with its own list of active refreshes to keep track of.\r\nSo almost a re-implementation of the `vim.lsp.codelens` module.\r\n\r\nNot very convenient, but I can live with it.\r\nI can see that the need to filter code lenses is probably not very common.",
            "created_at": "2022-10-20T16:30:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/20742#issuecomment-1285843427",
            "id": 1285843427,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20742",
            "node_id": "IC_kwDOAPphoM5MpGnj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285843427/reactions"
            },
            "updated_at": "2022-10-20T16:35:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285843427",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It's true that`vim.lsp.codelens` is different from others, but you wouldn't need to re-implement it to be able filter results, you can wrap `vim.lsp.codelens.on_codelens`, which is the handler used everywhere.",
            "created_at": "2022-10-20T16:55:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/20742#issuecomment-1285871322",
            "id": 1285871322,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20742",
            "node_id": "IC_kwDOAPphoM5MpNba",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285871322/reactions"
            },
            "updated_at": "2022-10-20T16:55:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285871322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/108725?v=4",
                "events_url": "https://api.github.com/users/fsouza/events{/privacy}",
                "followers_url": "https://api.github.com/users/fsouza/followers",
                "following_url": "https://api.github.com/users/fsouza/following{/other_user}",
                "gists_url": "https://api.github.com/users/fsouza/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fsouza",
                "id": 108725,
                "login": "fsouza",
                "node_id": "MDQ6VXNlcjEwODcyNQ==",
                "organizations_url": "https://api.github.com/users/fsouza/orgs",
                "received_events_url": "https://api.github.com/users/fsouza/received_events",
                "repos_url": "https://api.github.com/users/fsouza/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fsouza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fsouza/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fsouza",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@fsouza oh, now I see it.\r\nI only have to write a custom `refresh` that passes a wrapper of `on_codelens` to `vim.lsp.buf_request`. The wrapper can filter the list of lenses (`result`) before passing it to the default handler.\r\n\r\nThanks :pray: \r\nThat seems quite reasonable.",
            "created_at": "2022-10-20T17:17:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/20742#issuecomment-1285896232",
            "id": 1285896232,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20742",
            "node_id": "IC_kwDOAPphoM5MpTgo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285896232/reactions"
            },
            "updated_at": "2022-10-20T17:19:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285896232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hmm that works, but I meant something like (untested):\r\n\r\n```lua\r\nlocal original_on_codelens = vim.lsp.codelens.on_codelens\r\nvim.lsp.codelens.on_codelens = function(err, result, context, ...)\r\n  if not err then\r\n    -- filter results here\r\n  end\r\n\r\n  original_on_codelens(err, result, context, ...)\r\nend\r\n```\r\n\r\nThat would work for `refresh` and even custom requests that don't override the callback.",
            "created_at": "2022-10-20T17:22:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/20742#issuecomment-1285901886",
            "id": 1285901886,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20742",
            "node_id": "IC_kwDOAPphoM5MpU4-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285901886/reactions"
            },
            "updated_at": "2022-10-20T17:23:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285901886",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/108725?v=4",
                "events_url": "https://api.github.com/users/fsouza/events{/privacy}",
                "followers_url": "https://api.github.com/users/fsouza/followers",
                "following_url": "https://api.github.com/users/fsouza/following{/other_user}",
                "gists_url": "https://api.github.com/users/fsouza/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fsouza",
                "id": 108725,
                "login": "fsouza",
                "node_id": "MDQ6VXNlcjEwODcyNQ==",
                "organizations_url": "https://api.github.com/users/fsouza/orgs",
                "received_events_url": "https://api.github.com/users/fsouza/received_events",
                "repos_url": "https://api.github.com/users/fsouza/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fsouza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fsouza/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fsouza",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Why is it that every time I learn something new about what you can do in lua, a shiver runs up my spine? :joy: \r\n",
            "created_at": "2022-10-20T17:44:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/20742#issuecomment-1285924882",
            "id": 1285924882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20742",
            "node_id": "IC_kwDOAPphoM5MpagS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285924882/reactions"
            },
            "updated_at": "2022-10-20T18:09:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1285924882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20742/comments",
    "created_at": "2022-10-19T18:59:18Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/20742/events",
    "html_url": "https://github.com/neovim/neovim/issues/20742",
    "id": 1415446491,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "issue needs attention from an expert, or PR proposes significant changes to architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/20742/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM5UXf_b",
    "number": 20742,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/20742/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/20742/timeline",
    "title": "LSP: Enable filtering of code lenses",
    "updated_at": "2025-01-17T15:32:41Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/20742",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
        "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
        "followers_url": "https://api.github.com/users/mrcjkb/followers",
        "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
        "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mrcjkb",
        "id": 12857160,
        "login": "mrcjkb",
        "node_id": "MDQ6VXNlcjEyODU3MTYw",
        "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
        "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
        "repos_url": "https://api.github.com/users/mrcjkb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mrcjkb",
        "user_view_type": "public"
    }
}