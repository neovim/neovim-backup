{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nBuffer was modified on startup in Tmux.\n\n\n### Steps to reproduce\n\n- `nvim -u NONE`: No reproduce\n- `nvim —-clean`: Started with an error message: `E353: Nothing in register \"`.\n- `nvim -u init.lua` (init.lua is empty): The buffer was modified, and I can recognize that there’s a paste. But I don't know how to obtain a list of the history actions.\n\n### Expected behavior\n\nNo bug\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-1752+gf247402010-Homebrew\n\n### Vim (not Nvim) behaves the same?\n\nno, 9.1.1100\n\n### Operating system/version\n\nmacOS 15.3\n\n### Terminal name/version\n\nwezterm 20240203-110809-5046fc22, tmux 3.5a\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nhomebrew",
    "closed_at": "2025-03-06T03:28:07Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`-clean` is not a valid argument. Do you mean `--clean`?",
            "created_at": "2025-02-24T14:26:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2678591077",
            "id": 2678591077,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6fqA5l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2678591077/reactions"
            },
            "updated_at": "2025-02-25T12:00:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2678591077",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, it’s `—-clean`, a typo, sorry.",
            "created_at": "2025-02-24T14:33:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2678611590",
            "id": 2678611590,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6fqF6G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2678611590/reactions"
            },
            "updated_at": "2025-02-25T12:01:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2678611590",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65963536?v=4",
                "events_url": "https://api.github.com/users/stevalkr/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevalkr/followers",
                "following_url": "https://api.github.com/users/stevalkr/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevalkr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevalkr",
                "id": 65963536,
                "login": "stevalkr",
                "node_id": "MDQ6VXNlcjY1OTYzNTM2",
                "organizations_url": "https://api.github.com/users/stevalkr/orgs",
                "received_events_url": "https://api.github.com/users/stevalkr/received_events",
                "repos_url": "https://api.github.com/users/stevalkr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevalkr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevalkr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevalkr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Are you observing this every time?\nI've had this happen to me as well but only reliably in certain tmux windows/shells, always long living shell sessions. Happened in zsh. \n\n`NVIM v0.11.0-dev-1788+g51cf84daf9`\n`tmux 3.5a`\n`zsh 5.9 (x86_64-pc-linux-gnu)`",
            "created_at": "2025-02-24T16:31:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2679011823",
            "id": 2679011823,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6frnnv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2679011823/reactions"
            },
            "updated_at": "2025-02-24T16:31:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2679011823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66286082?v=4",
                "events_url": "https://api.github.com/users/jamestrew/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamestrew/followers",
                "following_url": "https://api.github.com/users/jamestrew/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamestrew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamestrew",
                "id": 66286082,
                "login": "jamestrew",
                "node_id": "MDQ6VXNlcjY2Mjg2MDgy",
                "organizations_url": "https://api.github.com/users/jamestrew/orgs",
                "received_events_url": "https://api.github.com/users/jamestrew/received_events",
                "repos_url": "https://api.github.com/users/jamestrew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamestrew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamestrew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamestrew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I wonder if your runtime files are messed up. Try deleting the runtime folder then reinstall. \n\nAlso try `:checkhealth`, in all the example cases that you gave.",
            "created_at": "2025-02-24T21:30:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2679694889",
            "id": 2679694889,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6fuOYp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2679694889/reactions"
            },
            "updated_at": "2025-02-25T12:01:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2679694889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I deleted the directories `~/.local/share/nvim` and `~/.local/state/nvim`, reinstalled neovim, and the problem persisted when I started neovim from a directory that should open a new empty buffer. Maybe it will occur to file buffers when I have more undo histories and so on. \n\n`nvim -u NONE` and `nvim --clean` were run before any plugins were installed.\n\n`:checkhealth`:\n\n<details>\n<summary>nvim -u NONE</summary>\n\n==============================================================================\nvim.deprecated:                       require(\"vim.deprecated.health\").check()\n\n- OK No deprecated functions detected\n\n==============================================================================\nvim.health:                               require(\"vim.health.health\").check()\n\nConfiguration ~\n- OK no issues found\n\nRuntime ~\n- OK $VIMRUNTIME: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/share/nvim/runtime\n\nPerformance ~\n- OK Build type: Release\n\nRemote Plugins ~\n- OK Up to date\n\nterminal ~\n- key_backspace (kbs) terminfo entry: `key_backspace=^H`\n- key_dc (kdch1) terminfo entry: `key_dc=\\E[3~`\n- $TERM_PROGRAM=\"tmux\"\n- $COLORTERM=\"truecolor\"\n\ntmux ~\n- OK escape-time: 10\n- OK focus-events: on\n- $TERM: tmux-256color\n\nExternal Tools ~\n- OK ripgrep 14.1.1 (/opt/homebrew/bin/rg)\n\n==============================================================================\nvim.lsp:                                     require(\"vim.lsp.health\").check()\n\n- LSP log level : WARN\n- Log path: /Users/walker/.local/state/nvim/lsp.log\n- Log size: 0 KB\n\nvim.lsp: Active Clients ~\n- No active clients\n\nvim.lsp: Enabled Configurations ~\n\nvim.lsp: File Watcher ~\n- file watching \"(workspace/didChangeWatchedFiles)\" disabled on all clients\n\nvim.lsp: Position Encodings ~\n- No active clients\n\n==============================================================================\nvim.provider:                           require(\"vim.provider.health\").check()\n\nClipboard (optional) ~\n- OK Clipboard tool found: pbcopy\n\nNode.js provider (optional) ~\n- Node.js: v23.7.0\n  \n- WARNING Missing \"neovim\" npm (or yarn, pnpm) package.\n  - ADVICE:\n    - Run in shell: npm install -g neovim\n    - Run in shell (if you use yarn): yarn global add neovim\n    - Run in shell (if you use pnpm): pnpm install -g neovim\n    - You may disable this provider (and warning) by adding `let g:loaded_node_provider = 0` to your init.vim\n\nPerl provider (optional) ~\n- WARNING \"Neovim::Ext\" cpan module is not installed\n  - ADVICE:\n    - See :help |provider-perl| for more information.\n    - You may disable this provider (and warning) by adding `let g:loaded_perl_provider = 0` to your init.vim\n- WARNING No usable perl executable found\n\nPython 3 provider (optional) ~\n- WARNING No Python executable found that can `import neovim`. Using the first available executable for diagnostics.\n- WARNING Could not load Python :\n  /usr/bin/python3 does not have the \"neovim\" module.\n  /opt/homebrew/bin/python3.12 does not have the \"neovim\" module.\n  python3.11 not found in search path or not executable.\n  python3.10 not found in search path or not executable.\n  python3.9 not found in search path or not executable.\n  python3.8 not found in search path or not executable.\n  python3.7 not found in search path or not executable.\n  python not found in search path or not executable.\n  - ADVICE:\n    - See :help |provider-python| for more information.\n    - You may disable this provider (and warning) by adding `let g:loaded_python3_provider = 0` to your init.vim\n- Executable: Not found\n\nPython virtualenv ~\n- OK no $VIRTUAL_ENV\n\nRuby provider (optional) ~\n- Ruby: ruby 2.6.10p210 (2022-04-12 revision 67958) [universal.arm64e-darwin24]\n- WARNING `neovim-ruby-host` not found.\n  - ADVICE:\n    - Run `gem install neovim` to ensure the neovim RubyGem is installed.\n    - Run `gem environment` to ensure the gem bin directory is in $PATH.\n    - If you are using rvm/rbenv/chruby, try \"rehashing\".\n    - See :help |g:ruby_host_prog| for non-standard gem installations.\n    - You may disable this provider (and warning) by adding `let g:loaded_ruby_provider = 0` to your init.vim\n\n==============================================================================\nvim.treesitter:                       require(\"vim.treesitter.health\").check()\n\nTreesitter features ~\n- Treesitter ABI support: min 13, max 15\n- WASM parser support: false\n\nTreesitter parsers ~\n- OK Parser: c                    ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/c.so\n- OK Parser: lua                  ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/lua.so\n- OK Parser: markdown             ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/markdown.so\n- OK Parser: markdown_inline      ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/markdown_inline.so\n- OK Parser: query                ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/query.so\n- OK Parser: vim                  ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/vim.so\n- OK Parser: vimdoc               ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/vimdoc.so\n\n</details>\n\n<details>\n\n<summary>nvim --clean</summary>\n\n\n==============================================================================\nvim.deprecated:                       require(\"vim.deprecated.health\").check()\n\n- OK No deprecated functions detected\n\n==============================================================================\nvim.health:                               require(\"vim.health.health\").check()\n\nConfiguration ~\n- OK no issues found\n\nRuntime ~\n- OK $VIMRUNTIME: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/share/nvim/runtime\n\nPerformance ~\n- OK Build type: Release\n\nRemote Plugins ~\n- OK Up to date\n\nterminal ~\n- key_backspace (kbs) terminfo entry: `key_backspace=^H`\n- key_dc (kdch1) terminfo entry: `key_dc=\\E[3~`\n- $TERM_PROGRAM=\"tmux\"\n- $COLORTERM=\"truecolor\"\n\ntmux ~\n- OK escape-time: 10\n- OK focus-events: on\n- $TERM: tmux-256color\n\nExternal Tools ~\n- OK ripgrep 14.1.1 (/opt/homebrew/bin/rg)\n\n==============================================================================\nvim.lsp:                                     require(\"vim.lsp.health\").check()\n\n- LSP log level : WARN\n- Log path: /Users/walker/.local/state/nvim/lsp.log\n- Log size: 0 KB\n\nvim.lsp: Active Clients ~\n- No active clients\n\nvim.lsp: Enabled Configurations ~\n\nvim.lsp: File Watcher ~\n- file watching \"(workspace/didChangeWatchedFiles)\" disabled on all clients\n\nvim.lsp: Position Encodings ~\n- No active clients\n\n==============================================================================\nvim.provider:                           require(\"vim.provider.health\").check()\n\nClipboard (optional) ~\n- OK Clipboard tool found: pbcopy\n\nNode.js provider (optional) ~\n- Node.js: v23.7.0\n  \n- WARNING Missing \"neovim\" npm (or yarn, pnpm) package.\n  - ADVICE:\n    - Run in shell: npm install -g neovim\n    - Run in shell (if you use yarn): yarn global add neovim\n    - Run in shell (if you use pnpm): pnpm install -g neovim\n    - You may disable this provider (and warning) by adding `let g:loaded_node_provider = 0` to your init.vim\n\nPerl provider (optional) ~\n- WARNING \"Neovim::Ext\" cpan module is not installed\n  - ADVICE:\n    - See :help |provider-perl| for more information.\n    - You may disable this provider (and warning) by adding `let g:loaded_perl_provider = 0` to your init.vim\n- WARNING No usable perl executable found\n\nPython 3 provider (optional) ~\n- WARNING No Python executable found that can `import neovim`. Using the first available executable for diagnostics.\n- WARNING Could not load Python :\n  /usr/bin/python3 does not have the \"neovim\" module.\n  /opt/homebrew/bin/python3.12 does not have the \"neovim\" module.\n  python3.11 not found in search path or not executable.\n  python3.10 not found in search path or not executable.\n  python3.9 not found in search path or not executable.\n  python3.8 not found in search path or not executable.\n  python3.7 not found in search path or not executable.\n  python not found in search path or not executable.\n  - ADVICE:\n    - See :help |provider-python| for more information.\n    - You may disable this provider (and warning) by adding `let g:loaded_python3_provider = 0` to your init.vim\n- Executable: Not found\n\nPython virtualenv ~\n- OK no $VIRTUAL_ENV\n\nRuby provider (optional) ~\n- Ruby: ruby 2.6.10p210 (2022-04-12 revision 67958) [universal.arm64e-darwin24]\n- WARNING `neovim-ruby-host` not found.\n  - ADVICE:\n    - Run `gem install neovim` to ensure the neovim RubyGem is installed.\n    - Run `gem environment` to ensure the gem bin directory is in $PATH.\n    - If you are using rvm/rbenv/chruby, try \"rehashing\".\n    - See :help |g:ruby_host_prog| for non-standard gem installations.\n    - You may disable this provider (and warning) by adding `let g:loaded_ruby_provider = 0` to your init.vim\n\n==============================================================================\nvim.treesitter:                       require(\"vim.treesitter.health\").check()\n\nTreesitter features ~\n- Treesitter ABI support: min 13, max 15\n- WASM parser support: false\n\nTreesitter parsers ~\n- OK Parser: c                    ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/c.so\n- OK Parser: lua                  ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/lua.so\n- OK Parser: markdown             ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/markdown.so\n- OK Parser: markdown_inline      ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/markdown_inline.so\n- OK Parser: query                ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/query.so\n- OK Parser: vim                  ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/vim.so\n- OK Parser: vimdoc               ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/vimdoc.so\n\n</details>\n\n<details>\n\n<summary>nvim -u init.lua (empty)</summary>\n\n\n==============================================================================\nvim.deprecated:                       require(\"vim.deprecated.health\").check()\n\n- OK No deprecated functions detected\n\n==============================================================================\nvim.health:                               require(\"vim.health.health\").check()\n\nConfiguration ~\n- OK no issues found\n\nRuntime ~\n- OK $VIMRUNTIME: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/share/nvim/runtime\n\nPerformance ~\n- OK Build type: Release\n\nRemote Plugins ~\n- OK Up to date\n\nterminal ~\n- key_backspace (kbs) terminfo entry: `key_backspace=^H`\n- key_dc (kdch1) terminfo entry: `key_dc=\\E[3~`\n- $TERM_PROGRAM=\"tmux\"\n- $COLORTERM=\"truecolor\"\n\ntmux ~\n- OK escape-time: 10\n- OK focus-events: on\n- $TERM: tmux-256color\n\nExternal Tools ~\n- OK ripgrep 14.1.1 (/opt/homebrew/bin/rg)\n\n==============================================================================\nvim.lsp:                                     require(\"vim.lsp.health\").check()\n\n- LSP log level : WARN\n- Log path: /Users/walker/.local/state/nvim/lsp.log\n- Log size: 0 KB\n\nvim.lsp: Active Clients ~\n- No active clients\n\nvim.lsp: Enabled Configurations ~\n\nvim.lsp: File Watcher ~\n- file watching \"(workspace/didChangeWatchedFiles)\" disabled on all clients\n\nvim.lsp: Position Encodings ~\n- No active clients\n\n==============================================================================\nvim.provider:                           require(\"vim.provider.health\").check()\n\nClipboard (optional) ~\n- OK Clipboard tool found: pbcopy\n\nNode.js provider (optional) ~\n- Node.js: v23.7.0\n  \n- WARNING Missing \"neovim\" npm (or yarn, pnpm) package.\n  - ADVICE:\n    - Run in shell: npm install -g neovim\n    - Run in shell (if you use yarn): yarn global add neovim\n    - Run in shell (if you use pnpm): pnpm install -g neovim\n    - You may disable this provider (and warning) by adding `let g:loaded_node_provider = 0` to your init.vim\n\nPerl provider (optional) ~\n- WARNING \"Neovim::Ext\" cpan module is not installed\n  - ADVICE:\n    - See :help |provider-perl| for more information.\n    - You may disable this provider (and warning) by adding `let g:loaded_perl_provider = 0` to your init.vim\n- WARNING No usable perl executable found\n\nPython 3 provider (optional) ~\n- WARNING No Python executable found that can `import neovim`. Using the first available executable for diagnostics.\n- WARNING Could not load Python :\n  /usr/bin/python3 does not have the \"neovim\" module.\n  /opt/homebrew/bin/python3.12 does not have the \"neovim\" module.\n  python3.11 not found in search path or not executable.\n  python3.10 not found in search path or not executable.\n  python3.9 not found in search path or not executable.\n  python3.8 not found in search path or not executable.\n  python3.7 not found in search path or not executable.\n  python not found in search path or not executable.\n  - ADVICE:\n    - See :help |provider-python| for more information.\n    - You may disable this provider (and warning) by adding `let g:loaded_python3_provider = 0` to your init.vim\n- Executable: Not found\n\nPython virtualenv ~\n- OK no $VIRTUAL_ENV\n\nRuby provider (optional) ~\n- Ruby: ruby 2.6.10p210 (2022-04-12 revision 67958) [universal.arm64e-darwin24]\n- WARNING `neovim-ruby-host` not found.\n  - ADVICE:\n    - Run `gem install neovim` to ensure the neovim RubyGem is installed.\n    - Run `gem environment` to ensure the gem bin directory is in $PATH.\n    - If you are using rvm/rbenv/chruby, try \"rehashing\".\n    - See :help |g:ruby_host_prog| for non-standard gem installations.\n    - You may disable this provider (and warning) by adding `let g:loaded_ruby_provider = 0` to your init.vim\n\n==============================================================================\nvim.treesitter:                       require(\"vim.treesitter.health\").check()\n\nTreesitter features ~\n- Treesitter ABI support: min 13, max 15\n- WASM parser support: false\n\nTreesitter parsers ~\n- OK Parser: c                    ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/c.so\n- OK Parser: lua                  ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/lua.so\n- OK Parser: markdown             ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/markdown.so\n- OK Parser: markdown_inline      ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/markdown_inline.so\n- OK Parser: query                ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/query.so\n- OK Parser: vim                  ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/vim.so\n- OK Parser: vimdoc               ABI: 14, path: /opt/homebrew/Cellar/neovim/HEAD-c9a2b16_1/lib/nvim/parser/vimdoc.so\n\n</details>\n\nmy tmux config (`bind-key`s removed):\n\n```tmux\nset -g  focus-events on\nset -s  extended-keys on\nset -g  visual-activity off\nset -gq allow-passthrough on\nset -g  default-terminal 'tmux-256color'\nset -as terminal-features 'xterm*:extkeys'\nset -a  terminal-features 'xterm-256color:RGB'\n\nset -g mouse on\nset -g mode-keys vi\nset -g status-keys vi\n```",
            "created_at": "2025-02-25T08:45:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2681160437",
            "id": 2681160437,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6fz0L1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681160437/reactions"
            },
            "updated_at": "2025-02-25T08:45:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681160437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65963536?v=4",
                "events_url": "https://api.github.com/users/stevalkr/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevalkr/followers",
                "following_url": "https://api.github.com/users/stevalkr/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevalkr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevalkr",
                "id": 65963536,
                "login": "stevalkr",
                "node_id": "MDQ6VXNlcjY1OTYzNTM2",
                "organizations_url": "https://api.github.com/users/stevalkr/orgs",
                "received_events_url": "https://api.github.com/users/stevalkr/received_events",
                "repos_url": "https://api.github.com/users/stevalkr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevalkr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevalkr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevalkr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It seems that these two lines need to be both in `tmux.conf` for this to happen:\n```tmux\nset -s extended-keys on\nset -gq allow-passthrough on\n```\nIf one of these two lines is removed then this bug doesn't happen.",
            "created_at": "2025-02-25T08:53:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2681181607",
            "id": 2681181607,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6fz5Wn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681181607/reactions"
            },
            "updated_at": "2025-02-25T09:02:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681181607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This seems caused by a data race between the OSC52 clipboard provider and the TUI. It isn't reproducible with an ASAN build, and doesn't happen with `nvim --clean --cmd 'let g:termfeatures = #{osc52: v:false}'`.",
            "created_at": "2025-02-25T09:12:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2681231886",
            "id": 2681231886,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6f0FoO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681231886/reactions"
            },
            "updated_at": "2025-02-25T09:13:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681231886",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you for taking the time to look into this.\n\n> `:h clipboard-osc52`\n> When Nvim is running in the |TUI|, it will automatically attempt to determine if\nthe host terminal emulator supports OSC 52. If it does, then Nvim will use OSC\n52 for copying and pasting if no other |clipboard-tool| is found and when\n'clipboard' is unset.\n\nI have installed pbcopy and pbpaste, and I have $TMUX set in a tmux session. Is it a mischoice of the clipboard function? According to the help file, it shouldn’t have been enabled in this case. Or, is it an issue with tmux? If so I'll open an issue there.",
            "created_at": "2025-02-25T09:40:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2681346542",
            "id": 2681346542,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6f0hnu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681346542/reactions"
            },
            "updated_at": "2025-02-25T09:40:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681346542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65963536?v=4",
                "events_url": "https://api.github.com/users/stevalkr/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevalkr/followers",
                "following_url": "https://api.github.com/users/stevalkr/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevalkr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevalkr",
                "id": 65963536,
                "login": "stevalkr",
                "node_id": "MDQ6VXNlcjY1OTYzNTM2",
                "organizations_url": "https://api.github.com/users/stevalkr/orgs",
                "received_events_url": "https://api.github.com/users/stevalkr/received_events",
                "repos_url": "https://api.github.com/users/stevalkr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevalkr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevalkr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevalkr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This bug is not limited to OSC 52. I think it is a bug of tmux. I've reported it at <https://github.com/tmux/tmux/issues/4386>.",
            "created_at": "2025-02-25T11:48:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2681692542",
            "id": 2681692542,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6f12F-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681692542/reactions"
            },
            "updated_at": "2025-02-25T11:48:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681692542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> tmux doesn't know you didn't type the response. You can't realistically use passthrough for anything that requires a response, that is not what it is intended for.\n\nAh... That means the tmux passthrough in `require('vim.termcap').query()` and the default `'termguicolors'` detection are not supposed to work.\n\ncc @gpanders",
            "created_at": "2025-02-25T12:10:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2681752653",
            "id": 2681752653,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6f2ExN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681752653/reactions"
            },
            "updated_at": "2025-02-25T12:10:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2681752653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > tmux doesn't know you didn't type the response. You can't realistically use passthrough for anything that requires a response, that is not what it is intended for.\n> \n> Ah... That means the tmux passthrough in `require('vim.termcap').query()` and the default `'termguicolors'` detection are not supposed to work.\n> \n> cc [@gpanders](https://github.com/gpanders)\n\nIf that's the case, we should remove the special case `$TMUX` handling and escaping and document that these features don't work in tmux.",
            "created_at": "2025-03-04T15:03:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/32609#issuecomment-2697950062",
            "id": 2697950062,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32609",
            "node_id": "IC_kwDOAPphoM6gz3Nu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2697950062/reactions"
            },
            "updated_at": "2025-03-04T15:03:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2697950062",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32609/comments",
    "created_at": "2025-02-24T14:08:51Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32609/events",
    "html_url": "https://github.com/neovim/neovim/issues/32609",
    "id": 2875084086,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is not fixed but can be circumvented until then",
            "id": 435850181,
            "name": "has:workaround",
            "node_id": "MDU6TGFiZWw0MzU4NTAxODE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:workaround"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim startup sequence (`:h startup`)",
            "id": 870629450,
            "name": "startup",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/startup"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32609/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 226,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 30,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-03-10T21:49:00Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "I_kwDOAPphoM6rXk02",
    "number": 32609,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32609/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32609/timeline",
    "title": "Buffer was modified on startup in Tmux",
    "updated_at": "2025-03-06T03:28:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32609",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/65963536?v=4",
        "events_url": "https://api.github.com/users/stevalkr/events{/privacy}",
        "followers_url": "https://api.github.com/users/stevalkr/followers",
        "following_url": "https://api.github.com/users/stevalkr/following{/other_user}",
        "gists_url": "https://api.github.com/users/stevalkr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/stevalkr",
        "id": 65963536,
        "login": "stevalkr",
        "node_id": "MDQ6VXNlcjY1OTYzNTM2",
        "organizations_url": "https://api.github.com/users/stevalkr/orgs",
        "received_events_url": "https://api.github.com/users/stevalkr/received_events",
        "repos_url": "https://api.github.com/users/stevalkr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/stevalkr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/stevalkr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/stevalkr",
        "user_view_type": "public"
    }
}