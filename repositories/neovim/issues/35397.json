{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen using¬†`CTRL-X CTRL-K`¬†and¬†`CTRL-X CTRL-T` to trigger word completions respectively, vim will open all files specified in the¬†`dictionary`¬†and¬†`thesaurus`¬†settings, and **every time** completion is triggered, the following steps are repeated:\n\n1. Reading all files.\n2. Scanning the entire content then compare word line by line.\n3. Closing all opened files.\n\nThis approach has a time complexity of¬†`O(n)`¬†(where¬†`n`¬†is the total number of words in all dictionary files), making it very inefficient. \n\nTypically, the number of lines (which corresponds to the number of words) of files commonly used for English word completion is as follows:\n\n|file|lines|\n|---|---|\n|`/usr/share/dict/words`|104,334|\n|[google-10k-words](https://github.com/first20hours/google-10000-english)|~10,000|\n\nIn the context of completion, using a `trie` tree is more suitable. If a `trie` tree is pre-constructed, the time complexity during completion can be reduced to¬†`O(k)`¬†(where¬†`k`¬†‚â§ 10), which is the length of the currently input word, with a maximum of 10 characters taken into account.\n\n> Vim's spell-checking and suggestion features,¬†`spell`¬†and¬†`spellsuggest`, utilize trie trees.\n\nWord completion solutions in the community as i known:\n\n- `nvim-cmp`¬†[https://github.com/uga-rosa/cmp-dictionary](https://github.com/uga-rosa/cmp-dictionary)¬†uses a `trie` tree.\n- `blink.cmp`¬†[https://github.com/xieyonn/blink-cmp-dat-word](https://github.com/xieyonn/blink-cmp-dat-word)¬†uses a `Double-Array Trie` tree.\n- `phoenix.nvim` https://github.com/nvimdev/phoenix.nvim use `trie` tree for word completion.\n\nIn my opinion, the word completion capability can be integrated into Neovim, implemented in C for maximum efficiency. Moreover, this would align with the evolution roadmap of¬†`vim.completion`. https://github.com/neovim/neovim/issues/25670\n\n> Not sure if this feature needs to be submitted to Vim first.\n\n### Expected behavior\n\nThe following optimization goals can be set:  \n\n1. When Vim starts, construct a trie tree from all files in¬†`dictionary`¬†and¬†`thesaurus`¬†and store it in memory.\n2. Use binary file caching. When Vim starts, determine whether to reconstruct the trie tree based on the last update time of the¬†`dictionary`¬†and¬†`thesaurus`¬†files.\n3. `Trie` trees have relatively low storage efficiency. A variant, the `Double-Array Trie` can be considered, although its construction is more complex.  \n4. Optimize other completions based on line-by-line scanning, such as Keywords (`CTRL-X CTRL-N`)",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "in my plan.. current implementation use a  doubly linked list to store the matches and time complexity of traversing a doubly linked list is O(n) üòÆ‚Äçüí®",
            "created_at": "2025-08-20T05:09:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/35397#issuecomment-3204211454",
            "id": 3204211454,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35397",
            "node_id": "IC_kwDOAPphoM6-_GL-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3204211454/reactions"
            },
            "updated_at": "2025-08-20T05:12:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3204211454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> in my plan.. current implementation use a doubly linked list to store the matches and time complexity of traversing a doubly linked list is O(n) üòÆ‚Äçüí®\n\nYes, and the cache line wants to know your location ! If we're going to miss the cache, let's at least minimize those misses. A trie might be a better option, or another approach that converges quickly to the result, considering the data set will be significantly large.",
            "created_at": "2025-08-20T19:27:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/35397#issuecomment-3207789008",
            "id": 3207789008,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35397",
            "node_id": "IC_kwDOAPphoM6_MvnQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3207789008/reactions"
            },
            "updated_at": "2025-08-20T19:28:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3207789008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The \"Problem\" statement here does not actually describe a problem, just an assumed problem. Under what (common) circumstances does this actually create a user-facing problem? Need a benchmark or something showing user-facing symptoms. And/or, if this would result in code simplification then that would be another justification.",
            "created_at": "2025-08-21T01:04:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/35397#issuecomment-3208589690",
            "id": 3208589690,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35397",
            "node_id": "IC_kwDOAPphoM6_PzF6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3208589690/reactions"
            },
            "updated_at": "2025-08-21T01:05:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3208589690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "After taking a closer look, the main problem is the time spent on collecting. doubly linked list is used build pum to match completion leader, so the rott issue is not with the data structure. Regarding word collection, since it's synchronous and uses regular expressions to match words from the completion sources, the time complexity is  O(m x n), where m is the number of sources and n is the number of words in each source. I am currently implementing asynchronous ins-completion. The source collection will be moved to Lua for asynchronous processing.  title need change to \n`support async ins-completion`",
            "created_at": "2025-08-23T05:48:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/35397#issuecomment-3216325412",
            "id": 3216325412,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35397",
            "node_id": "IC_kwDOAPphoM6_tTsk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3216325412/reactions"
            },
            "updated_at": "2025-08-23T05:49:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3216325412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35397/comments",
    "created_at": "2025-08-19T18:33:47Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35397/events",
    "html_url": "https://github.com/neovim/neovim/issues/35397",
    "id": 3335307287,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "performance, latency, cpu/memory usage",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "futures/promises, async/await, concurrency, task pipelines",
            "id": 5683343649,
            "name": "async",
            "node_id": "LA_kwDOAPphoM8AAAABUsDxIQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/async"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35397/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 289,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 349,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-08-26T02:25:08Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM7GzMAX",
    "number": 35397,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35397/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35397/timeline",
    "title": "async ins-completion (was: use trie search for dictionary/thesaurus completion)",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-23T19:01:03Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35397",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7881849?v=4",
        "events_url": "https://api.github.com/users/xieyonn/events{/privacy}",
        "followers_url": "https://api.github.com/users/xieyonn/followers",
        "following_url": "https://api.github.com/users/xieyonn/following{/other_user}",
        "gists_url": "https://api.github.com/users/xieyonn/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/xieyonn",
        "id": 7881849,
        "login": "xieyonn",
        "node_id": "MDQ6VXNlcjc4ODE4NDk=",
        "organizations_url": "https://api.github.com/users/xieyonn/orgs",
        "received_events_url": "https://api.github.com/users/xieyonn/received_events",
        "repos_url": "https://api.github.com/users/xieyonn/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/xieyonn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xieyonn/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/xieyonn",
        "user_view_type": "public"
    }
}