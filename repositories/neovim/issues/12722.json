{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "- `nvim --version`: NVIM v0.4.2 (RelWithDebInfo) -- also able to reproduce in a local build of `f26df8bb66158baacb79c79822babaf137607cd6` (2 days old at time of writing)\r\n- Operating system/version: CentOS\r\n- Terminal name/version: gnome-terminal\r\n- `$TERM`: xterm-256color\r\n\r\nI was building a plugin which responds to some events using rpcrequests and noticed that when the plugin sends a response to an rpcrequest to nvim, immediately followed by an nvim api command (e.g. nvim_get_cursor), the api command is not getting run. I did some more digging and it looks like when the response to the rpcrequest and the following command are sent in quick succession, the latter is not read off of the wire and therefore is not handled until more messages are sent between neovim and the plugin.\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\nSince the plugin is written in OCaml (and I don’t expect the neovim maintainers to build it in order to repro), I've dumped the raw network traffic that is getting sent back and forth into a file to make this easier for others to reproduce. Socat also allows us to batch the replies up, which guarantees that we see the behaviour that the plugin is experiencing.\r\n\r\n#### Setup the msgpack.in file\r\n\r\nThis file will contain the raw bytes for a response to the rpcrequest we call below, immediately followed by a call to nvim_get_cursor:\r\n\r\n```\r\nxxd -r > /path/to/msgpack.in\r\n00000000: 9401 01c0 c094 000a b36e 7669 6d5f 7769 .........nvim_wi\r\n00000010: 6e5f 6765 745f 6375 7273 6f72 91cd 0437 n_get_cursor...7\r\n```\r\nThis corresponds to the following messages in JSON back-to-back:\r\n```JSON\r\n[ 1, 1, null, null ]\r\n[ 0, 10, \"nvim_win_get_cursor\", [ 1079 ] ]\r\n```\r\n\r\n#### Run nvim and fire off an rpcrequest\r\n\r\nThe request will be responded to with the msgpack.in file that we just created:\r\n\r\n```\r\nnvim -u NORC\r\n\r\n# open a new terminal and run:\r\nsocat -t100 -x -v SYSTEM:\"read -n 1 c; cat /path/to/msgpack.in; read line\" UNIX-CONNECT:$NVIM_LISTEN_ADDRESS\r\n\r\n# note: the reason for the second read is so that the socket stays open and we can see that no new messages have arrived\r\n# in the original neovim, find the channel id for the rpc connection, and run:\r\n:call rpcrequest(chan_id, \"a\", v:null)\r\n\r\n# verify output in socat terminal\r\n```\r\n\r\n### Actual behaviour\r\nSocat shows the following output (there is no response from neovim - i.e. the new request is not being served)\r\n\r\n```\r\n< 2020/08/04 14:41:20.715661 length=7 from=0 to=6\r\n94 00 01 a1 61 91 c0 ....a..\r\n--\r\n> 2020/08/04 14:41:25.218110 length=32 from=0 to=31\r\n94 01 01 c0 c0 94 00 0a ........\r\nb3 6e 76 69 6d 5f 77 69 6e 5f 67 65 74 5f 63 75 .nvim_win_get_cu\r\n72 73 6f 72 91 cd 04 37 rsor...7\r\n--\r\n```\r\nThe corresponding JSON being sent back and forth is:\r\n```JSON\r\n<\r\n[ 0, 1, \"a\", [ null ] ]\r\n>\r\n[ 1, 1, null, null ]\r\n[ 0, 10, \"nvim_win_get_cursor\", [ 1079 ] ]\r\n```\r\n\r\n### Expected behaviour\r\n\r\nSocat should show a response to the api call, something along the lines of:\r\n\r\n```\r\n< 2020/08/04 14:06:23.789820 length=7 from=0 to=6\r\n94 00 01 a1 61 91 c0 ....a..\r\n--\r\n> 2020/08/04 14:06:56.808369 length=32 from=0 to=31\r\n94 01 01 c0 c0 94 00 0a ........\r\nb3 6e 76 69 6d 5f 77 69 6e 5f 67 65 74 5f 63 75 .nvim_win_get_cu\r\n72 73 6f 72 91 cd 04 37 rsor...7\r\n--\r\n< 2020/08/04 14:06:56.835193 length=30 from=7 to=36\r\n94 01 0a ...\r\n92 01 b7 49 6e 76 61 6c 69 64 20 77 69 6e 64 6f ...Invalid windo\r\n77 20 69 64 3a 20 31 30 37 39 c0 w id: 1079.\r\n--\r\n```\r\nAgain, the corresponding JSON is:\r\n```JSON\r\n<\r\n[ 0, 1, \"a\", [ null ] ]\r\n>\r\n[ 1, 1, null, null ]\r\n[ 0, 10, \"nvim_win_get_cursor\", [ 1079 ] ]\r\n<\r\n[ 1, 10, [ 1, \"Invalid window id: 1079\" ], null ]\r\n```\r\n\r\n\r\nNote: `>` indicates a message from the socat stub to neovim, and `<` indicates a message from neovim to the socat stub.\r\n\r\nI'm wondering if this is at all related to #8634, since this explains commands \"not returning\" (or rather, the commands are left on the wire and then processed whenever neovim next processes incoming rpc messages). \r\n\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I played around with things locally, and it looks like the fact that  [parse_msgpack returns when it sees a response](https://github.com/neovim/neovim/blob/22b52dd462e5dc9d5429305215bfb20aa20517c5/src/nvim/msgpack_rpc/channel.c#L265) means that neovim is not reading everything off the wire that it can.\r\n\r\nTesting out my theory, I changed the body of parse_msgpack to look like the following:\r\n```diff\r\n--- a/src/nvim/msgpack_rpc/channel.c\r\n+++ b/src/nvim/msgpack_rpc/channel.c\r\n@@ -262,11 +262,9 @@ static void parse_msgpack(Channel *channel)\r\n         call_set_error(channel, buf, ERROR_LOG_LEVEL);\r\n       }\r\n       msgpack_unpacked_destroy(&unpacked);\r\n-      // Bail out from this event loop iteration\r\n-      return;\r\n+    } else {\r\n+      handle_request(channel, &unpacked.data);\r\n     }\r\n-\r\n-    handle_request(channel, &unpacked.data);\r\n   }\r\n \r\n   if (result == MSGPACK_UNPACK_NOMEM_ERROR) {\r\n```\r\nThis corresponds to not returning when we see a response and continuing the loop as usual and results in the expected behaviour outlined in the bug report (and the correct behaviour in my plugin).\r\n\r\nThis leaves me with a few questions:\r\n\r\n1. Why do we return there? It seems that doing so leaves some gap in time where nothing is watching the channel’s connection and causes messages to be left. Was there a performance reason for breaking once there’s a response? If not, do you think the change that I have is sufficient for fixing this?\r\n\r\n2. Why does returning there cause this behaviour? I am very new to the neovim codebase, but it seems weird that nothing would be listening on the RPC channels for an incoming api command, since plugins are free to send them whenever they want (the fact that it’s immediately following a response probably shouldn’t matter).\r\n",
            "created_at": "2020-08-05T14:28:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/12722#issuecomment-669226453",
            "id": 669226453,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12722",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTIyNjQ1Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/669226453/reactions"
            },
            "updated_at": "2020-08-05T14:28:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/669226453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12086742?v=4",
                "events_url": "https://api.github.com/users/foleyfactor/events{/privacy}",
                "followers_url": "https://api.github.com/users/foleyfactor/followers",
                "following_url": "https://api.github.com/users/foleyfactor/following{/other_user}",
                "gists_url": "https://api.github.com/users/foleyfactor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/foleyfactor",
                "id": 12086742,
                "login": "foleyfactor",
                "node_id": "MDQ6VXNlcjEyMDg2NzQy",
                "organizations_url": "https://api.github.com/users/foleyfactor/orgs",
                "received_events_url": "https://api.github.com/users/foleyfactor/received_events",
                "repos_url": "https://api.github.com/users/foleyfactor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/foleyfactor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/foleyfactor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/foleyfactor",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12722/comments",
    "created_at": "2020-08-05T14:20:37Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/12722/events",
    "html_url": "https://github.com/neovim/neovim/issues/12722",
    "id": 673578579,
    "labels": [
        {
            "color": "c7def8",
            "default": false,
            "description": "channels, RPC, msgpack",
            "id": 242522707,
            "name": "channels-rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channels-rpc"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/12722/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2NzM1Nzg1Nzk=",
    "number": 12722,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 4,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/neovim/neovim/issues/12722/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/12722/timeline",
    "title": "API: responding to rpcrequest and sending command race and leave messages on the wire",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:36:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/12722",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12086742?v=4",
        "events_url": "https://api.github.com/users/foleyfactor/events{/privacy}",
        "followers_url": "https://api.github.com/users/foleyfactor/followers",
        "following_url": "https://api.github.com/users/foleyfactor/following{/other_user}",
        "gists_url": "https://api.github.com/users/foleyfactor/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/foleyfactor",
        "id": 12086742,
        "login": "foleyfactor",
        "node_id": "MDQ6VXNlcjEyMDg2NzQy",
        "organizations_url": "https://api.github.com/users/foleyfactor/orgs",
        "received_events_url": "https://api.github.com/users/foleyfactor/received_events",
        "repos_url": "https://api.github.com/users/foleyfactor/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/foleyfactor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/foleyfactor/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/foleyfactor",
        "user_view_type": "public"
    }
}