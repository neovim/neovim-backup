{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "related: https://github.com/neovim/neovim/issues/396\n\n[I'm just getting this out of my system after reading #396.]\n\nConsuming list-sources should be a built-in feature that is easily accessible to end-users. The usefulness of this is indicated by the popularity of general \"fuzzy finder\" tools such as:\n- [unite.vim](https://github.com/Shougo/unite.vim/tree/master/autoload/unite/filters) \n- https://github.com/tpope/vim-haystack\n- [ctrlp.vim](https://github.com/kien/ctrlp.vim)\n- [YouCompleteMe](https://github.com/Valloric/YouCompleteMe)\n- [fzf](https://github.com/junegunn/fzf) (for bash and zsh)\n- emacs [helm](https://github.com/emacs-helm/helm) consumes numerous list sources and is easily extensible, like unite.vim\n- emacs [ido-flx](https://github.com/lewang/flx) and [grizzl](https://github.com/d11wtq/grizzl) \n- Sublime Text's ctrl-p, et. al. (I don't know if it works with generic list sources)\n\nunite.vim (and ctrlp, helm, ...) has a very nice \"composable\" approach that allows the end-user to choose (and combine/intersect) from a library of _matchers_ (subsequence/fuzzy, glob, frequency) and _sorters_ (alphabetical, ordinal, rank). I suggest looking at this composable approach as a general model for providing list-searching facilities.\n\nPlugins should not have to keep reinventing the \"consume-a-list\" wheel, because the problem domain is arguably arriving at well-defined boundaries with many implementations of equivalent solutions.\n\nAn end-user (or plugin) should be able to say \"select from [list] using [fuzzy-matcher]\", and the editor should have a high-quality fuzzy matching algorithm available. The user (or plugin) should not have to implement a fuzzy-matching algorithm.\n\n_Consuming_ a list and fuzzy-matching against that list using a high-quality algorithm should be available out-of-the-box. \n\n_Providing_ the list is what plugins (and/or external tools) should focus on. E.g., [tmuxcomplete.vim](https://github.com/wellle/tmux-complete.vim/) provides a list of tmux strings; [pt](https://github.com/monochromegane/the_platinum_searcher) provides a list of matched lines; [Omnisharp](https://github.com/nosami/Omnisharp) provides a list of C# symbols or types; etc, etc.\n\nPlugins like unite.vim already make very good use of Vim's buffers to provide a very featureful UI. But they shouldn't need to re-implement fuzzy matching or ranking, just like they don't need to implement regex.\n\n# Proposal\n\n- builtin FZF-like \"frecency\" selector for commands, files, etc. (see also vscode's command palette)\n- primitives (framework) to make it easier for plugins to build this kind of thing, in the spirit of `vim.lsp`\n- LSP mapping: `gr/` ([ref](https://github.com/neovim/neovim/pull/30781#discussion_r1797719176))",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Sounds like an exciting task. I'd like to implement `fuzzy.c` that exposes fuzzy matching to file completion as in `:e <tab>` etc.\n\nLater that funtionality can be expanded to other corners.\n\n(EDIT: Maybe `file_search.c` is a better place.)\n",
            "created_at": "2014-04-30T23:29:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-41864002",
            "id": 41864002,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxODY0MDAy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/41864002/reactions"
            },
            "updated_at": "2024-09-11T08:36:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/41864002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/972014?v=4",
                "events_url": "https://api.github.com/users/mhinz/events{/privacy}",
                "followers_url": "https://api.github.com/users/mhinz/followers",
                "following_url": "https://api.github.com/users/mhinz/following{/other_user}",
                "gists_url": "https://api.github.com/users/mhinz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mhinz",
                "id": 972014,
                "login": "mhinz",
                "node_id": "MDQ6VXNlcjk3MjAxNA==",
                "organizations_url": "https://api.github.com/users/mhinz/orgs",
                "received_events_url": "https://api.github.com/users/mhinz/received_events",
                "repos_url": "https://api.github.com/users/mhinz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mhinz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mhinz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mhinz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@mhinz  Keep in mind that this wouldn't (probably shouldn't) be part of the core, so it could be written in go or lua (unite.vim already has a lua fuzzy-matcher) if you wanted to. But I am suggesting that it should be shipped with Neovim RTM.\n",
            "created_at": "2014-04-30T23:47:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-41865258",
            "id": 41865258,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxODY1MjU4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/41865258/reactions"
            },
            "updated_at": "2024-09-11T08:36:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/41865258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Agree, this is a perfect job for some code running in LuaJIT! And sure, we can probably talk with @shougo about shipping a more generalized/improved/... version of the core unite.vim interfaces/algorithms with neovim.\n",
            "created_at": "2014-05-05T19:47:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-42230077",
            "id": 42230077,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjMwMDc3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42230077/reactions"
            },
            "updated_at": "2024-09-11T08:36:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42230077",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hi, I need more optimized functions for them.\n\n> Keep in mind that this wouldn't (probably shouldn't) be part of the core, so it could be written in go or lua (unite.vim already has a lua fuzzy-matcher) if you wanted to. But I am suggesting that it should be shipped with Neovim RTM.\n\nIf it is not in core (C code), it is not fast.\nYes, lua is fast scripting language.  But it has overhead compared with C.\n",
            "created_at": "2014-07-07T13:25:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-48177247",
            "id": 48177247,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTc3MjQ3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48177247/reactions"
            },
            "updated_at": "2024-09-11T08:36:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48177247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Note that we are planning to make luajit the default interpreter for\nneovim. The vanilla lua interpreter will mostly be used for debugging.\n\nLuajit is not as fast as well written C (yet). But it comes very close.\nJust take a look at the benchmarks of luajit2 all over the web.\n\nEven better, luajit 2.1 will get support for compiling much more string\nhandling functions. Which should really make it competitive with C on that\nfront.\n\nIf you are looking for more ease of use than the default lua stdlib offers,\nI can advise something like https://github.com/rtsisyk/luafun\n\nIf you look at the generated assembly in the luafun readme, it's difficult\nto not cry tears of joy as a performance minded developer.\n\nDo you still think C versions will e necessary?\n\nAm Montag, 7. Juli 2014 schrieb Shougo :\n\n> Hi, I need more optimized functions for them.\n> \n> Keep in mind that this wouldn't (probably shouldn't) be part of the core,\n> so it could be written in go or lua (unite.vim already has a lua\n> fuzzy-matcher) if you wanted to. But I am suggesting that it should be\n> shipped with Neovim RTM.\n> \n> If it is not in core (C code), it is not fast.\n> Yes, lua is fast scripting language. But it has overhead compared with C.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/neovim/neovim/issues/660#issuecomment-48177247.\n",
            "created_at": "2014-07-07T13:34:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-48178284",
            "id": 48178284,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTc4Mjg0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48178284/reactions"
            },
            "updated_at": "2024-09-11T08:36:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48178284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "OK.  If it is optimized than previous implementation, I don't need C implementation.\n\nI think neovim should provide more standard functions for lua in neovim.\nBecause, we cannot install libraries in neovim's lua implementation.\n",
            "created_at": "2014-07-07T13:42:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-48179261",
            "id": 48179261,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTc5MjYx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48179261/reactions"
            },
            "updated_at": "2024-09-11T08:36:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48179261",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "There should probably be a way to configure the ranking of the algorithm, not all sources may want to prefer the same patterns. File paths for example will want to handle directory separators specially, but that may not be true for all sources.\n",
            "created_at": "2014-08-22T12:03:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-53052472",
            "id": 53052472,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDUyNDcy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53052472/reactions"
            },
            "updated_at": "2014-08-22T12:03:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53052472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/465527?v=4",
                "events_url": "https://api.github.com/users/majutsushi/events{/privacy}",
                "followers_url": "https://api.github.com/users/majutsushi/followers",
                "following_url": "https://api.github.com/users/majutsushi/following{/other_user}",
                "gists_url": "https://api.github.com/users/majutsushi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/majutsushi",
                "id": 465527,
                "login": "majutsushi",
                "node_id": "MDQ6VXNlcjQ2NTUyNw==",
                "organizations_url": "https://api.github.com/users/majutsushi/orgs",
                "received_events_url": "https://api.github.com/users/majutsushi/received_events",
                "repos_url": "https://api.github.com/users/majutsushi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/majutsushi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/majutsushi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/majutsushi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We have `vim.ui.select` now which plugins have started using as a generic \"selector UI\". The current default implementation just uses `inputlist()`, so is this ticket effectively tracking a better default?\n\nIf so, @echasnovski's [mini.pick](https://github.com/echasnovski/mini.pick/) is a good starting point/reference (perhaps de-scoped or pared down to a more minimal version).",
            "created_at": "2024-12-17T18:28:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-2549281573",
            "id": 2549281573,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "IC_kwDOAPphoM6X8vMl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2549281573/reactions"
            },
            "updated_at": "2024-12-17T18:28:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2549281573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I am always happy to upstream into core any part of 'mini.nvim' in any shape.\n\nMy initial instinct is that it probably won't be used much over existing plugin alternatives (whenever this argument is made, there will always be better implementation) and `vim.ui.select()` is probably fine. Maybe designing a more capable and documented alternative for user-overridden picker (`vim.ui.pick` ? ) is a more Neovim way?",
            "created_at": "2024-12-17T18:46:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-2549320795",
            "id": 2549320795,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "IC_kwDOAPphoM6X84xb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2549320795/reactions"
            },
            "updated_at": "2024-12-17T18:46:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2549320795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> so is this ticket effectively tracking a better default?\n\nI guess so, but also the \"frecency\" feature is something that could be used in many places. So having some sort of data structure / global storage for that.",
            "created_at": "2024-12-17T19:56:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-2549483878",
            "id": 2549483878,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "IC_kwDOAPphoM6X9glm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2549483878/reactions"
            },
            "updated_at": "2024-12-17T19:56:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2549483878",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The data structure is a bit simple for that; the value core could provide -- if at all -- would be an API for tracking (frequency and recency) information. I am not sure (either way) whether centralizing the scoring function would be useful and worth it?\n\n(Personal feeling: Moving to Lua as a scripting language has \"trivialized\" a lot of features that in the early days would have been considered significant enough to handle by Nvim (in C). This is one of them.)",
            "created_at": "2024-12-17T20:12:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/660#issuecomment-2549516559",
            "id": 2549516559,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/660",
            "node_id": "IC_kwDOAPphoM6X9okP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2549516559/reactions"
            },
            "updated_at": "2024-12-17T20:12:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2549516559",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/660/comments",
    "created_at": "2014-04-30T22:12:04Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/660/events",
    "html_url": "https://github.com/neovim/neovim/issues/660",
    "id": 32578298,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "user experience",
            "id": 151718455,
            "name": "ux",
            "node_id": "MDU6TGFiZWwxNTE3MTg0NTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ux"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "command line, also cmdwin",
            "id": 5826989442,
            "name": "cmdline-mode",
            "node_id": "LA_kwDOAPphoM8AAAABW1DNgg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/cmdline-mode"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 7421978602,
            "name": "editor",
            "node_id": "LA_kwDOAPphoM8AAAABumJn6g",
            "url": "https://api.github.com/repos/neovim/neovim/labels/editor"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/660/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUzMjU3ODI5OA==",
    "number": 660,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 9,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 3,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 12,
        "url": "https://api.github.com/repos/neovim/neovim/issues/660/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/660/timeline",
    "title": "list-processing UI, \"frecency\" + fuzzy match selector UI",
    "updated_at": "2025-01-17T16:19:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/660",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}