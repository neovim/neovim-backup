{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nThe code below will execute the autocmd recursively.\r\nThis is of course a simplified repro. The one I encountered in the wild was not so obvious.\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd(\"User\", {\r\n  once = true,\r\n  pattern = \"test\",\r\n  group = vim.api.nvim_create_augroup(\"test\", { clear = true }),\r\n  callback = function()\r\n    vim.api.nvim_exec_autocmds(\"User\", { pattern = \"test\" })\r\n  end,\r\n})\r\nvim.api.nvim_exec_autocmds(\"User\", { pattern = \"test\" })\r\n```\n\n### Steps to reproduce\n\nrun the repro with `nvim -u bug.lua`\n\n### Expected behavior\n\nthe autocmd should only be ran once\n\n### Neovim version (nvim -v)\n\nnightly\n\n### Vim (not Nvim) behaves the same?\n\nna\n\n### Operating system/version\n\nlinux\n\n### Terminal name/version\n\nkitty\n\n### $TERM environment variable\n\nxterm-256-kitty\n\n### Installation\n\nbob",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Callback is executed before autocmd removal:\r\nhttps://github.com/neovim/neovim/blob/6823fdb20b1330142506410a62474166f646bf13/src/nvim/autocmd.c#L2061-L2086",
            "created_at": "2023-10-08T01:05:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/25526#issuecomment-1751881580",
            "id": 1751881580,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25526",
            "node_id": "IC_kwDOAPphoM5oa5ds",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751881580/reactions"
            },
            "updated_at": "2023-10-08T01:05:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751881580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Running `aucmd_del` before `call_autocmd_callback` breaks the autocmd execution.\r\n\r\nInstead, we can change the autocommand reference before the callback. This way, it is impossible for the lua function to run the autocommand again.\r\n\r\nAfter the callback, just rollback on the changes made and proceed to `aucmd_del` normally.\r\n\r\nThe changes below seem to work well.\r\n\r\n```cpp\r\n  if (ac->exec.type == CALLABLE_CB) {\r\n    AutoCmd ac_copy = *ac;\r\n\r\n    if (oneshot) {\r\n      ac->pat = NULL;  // Assign NULL to prevent calling autocommand with once=true again\r\n    }\r\n\r\n    // Can potentially reallocate kvec_t data and invalidate the ac pointer\r\n    if (call_autocmd_callback(&ac_copy, apc)) {\r\n      // If an autocommand callback returns true, delete the autocommand\r\n      oneshot = true;\r\n    }\r\n\r\n    ac->pat = ac_copy.pat;  // Restore aucmd reference\r\n\r\n    // TODO(tjdevries):\r\n    //\r\n    // Major Hack Alert:\r\n    //  We just return \"not-null\" and continue going.\r\n    //  This would be a good candidate for a refactor. You would need to refactor:\r\n    //      1. do_cmdline to accept something besides a string\r\n    //      OR\r\n    //      2. make where we call do_cmdline for autocmds not have to return anything,\r\n    //      and instead we loop over all the matches and just execute one-by-one.\r\n    //          However, my expectation would be that could be expensive.\r\n    retval = xcalloc(1, 1);\r\n  } else {\r\n    retval = xstrdup(ac->exec.callable.cmd);\r\n  }\r\n\r\n  // Remove one-shot (\"once\") autocmd in anticipation of its execution.\r\n  if (oneshot) {\r\n    aucmd_del(&kv_A(*acs, apc->auidx));\r\n  }\r\n```",
            "created_at": "2024-06-21T18:51:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/25526#issuecomment-2183286345",
            "id": 2183286345,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25526",
            "node_id": "IC_kwDOAPphoM6CIk5J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 4,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2183286345/reactions"
            },
            "updated_at": "2024-06-21T18:51:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2183286345",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/42344207?v=4",
                "events_url": "https://api.github.com/users/Vinschers/events{/privacy}",
                "followers_url": "https://api.github.com/users/Vinschers/followers",
                "following_url": "https://api.github.com/users/Vinschers/following{/other_user}",
                "gists_url": "https://api.github.com/users/Vinschers/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Vinschers",
                "id": 42344207,
                "login": "Vinschers",
                "node_id": "MDQ6VXNlcjQyMzQ0MjA3",
                "organizations_url": "https://api.github.com/users/Vinschers/orgs",
                "received_events_url": "https://api.github.com/users/Vinschers/received_events",
                "repos_url": "https://api.github.com/users/Vinschers/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Vinschers/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Vinschers/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Vinschers",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@Vinschers please send a PR, ideally with a test. ",
            "created_at": "2024-06-24T13:47:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/25526#issuecomment-2186627275",
            "id": 2186627275,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25526",
            "node_id": "IC_kwDOAPphoM6CVUjL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186627275/reactions"
            },
            "updated_at": "2024-06-24T13:47:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186627275",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25526/comments",
    "created_at": "2023-10-06T18:02:15Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25526/events",
    "html_url": "https://github.com/neovim/neovim/issues/25526",
    "id": 1930719021,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "",
            "id": 606691254,
            "name": "has:plan",
            "node_id": "MDU6TGFiZWw2MDY2OTEyNTQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:plan"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25526/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5zFG8t",
    "number": 25526,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25526/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25526/timeline",
    "title": "autocmds with `once=true` can execute more than once",
    "updated_at": "2025-01-19T11:20:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25526",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
        "events_url": "https://api.github.com/users/folke/events{/privacy}",
        "followers_url": "https://api.github.com/users/folke/followers",
        "following_url": "https://api.github.com/users/folke/following{/other_user}",
        "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/folke",
        "id": 292349,
        "login": "folke",
        "node_id": "MDQ6VXNlcjI5MjM0OQ==",
        "organizations_url": "https://api.github.com/users/folke/orgs",
        "received_events_url": "https://api.github.com/users/folke/received_events",
        "repos_url": "https://api.github.com/users/folke/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/folke",
        "user_view_type": "public"
    }
}