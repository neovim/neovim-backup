{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen running `iter_captures` on a query that is uses alternation and predicates no results are returned. However, if I run the query without predicates it returns the expected results, or if I run the individual parts without alternation.\n\n### Steps to reproduce\n\n## Sample Ruby File\n```ruby\nclass Test\n\n  def self.test_class_method\n  end\n\n  def test_instance_method\n  end\n\nend\n```\n\n## Test function\n```lua\nM.test_queries = function()\n  local tree = parse()[1]\n  local query_1 = vim.treesitter.query.parse(\n    'ruby',\n    [[\n      [\n        ((method\n          name: (_) @method_name)\n          (#eq? @method_name \"test_instance_method\")) @instance_method\n        ((singleton_method\n          name: (identifier) @method_name)\n          (#eq? @method_name \"test_class_method\")) @class_method\n      ]\n    ]]\n  )\n  print(\"query 1, with predicates and alternation\")\n  for id, node in query_1:iter_captures(tree:root(), 0) do\n    print(vim.inspect(query_1.captures[id]))\n  end\n\n  local query_2 = vim.treesitter.query.parse(\n    'ruby',\n    [[\n      [\n        ((method\n          name: (_) @method_name)) @instance_method\n        ((singleton_method\n          name: (identifier) @method_name)) @class_method\n      ]\n    ]]\n  )\n  print(\"query 2, no predicates and alternation\")\n  for id, node in query_2:iter_captures(tree:root(), 0) do\n    print(vim.inspect(query_2.captures[id]))\n  end\n\n  local query_3 = vim.treesitter.query.parse(\n    'ruby',\n    [[\n      ((method\n        name: (_) @method_name)\n        (#eq? @method_name \"test_instance_method\")) @instance_method\n    ]]\n  )\n  print(\"query 3, no alternation\")\n  for id, node in query_3:iter_captures(tree:root(), 0) do\n    print(vim.inspect(query_3.captures[id]))\n  end\n\n  local query_4 = vim.treesitter.query.parse(\n    'ruby',\n    [[\n      ((singleton_method\n        name: (identifier) @method_name)\n        (#eq? @method_name \"test_class_method\")) @class_method\n    ]]\n  )\n  print(\"query 4, no alternation\")\n  for id, node in query_4:iter_captures(tree:root(), 0) do\n    print(vim.inspect(query_4.captures[id]))\n  end\nend\n```\n\nPrints out the following\n\n```\nquery 1, with predicates and alternation\nquery 2, no predicates and alternation\n\"class_method\"\n\"method_name\"\n\"instance_method\"\n\"method_name\"\nquery 3, no alternation\n\"instance_method\"\n\"method_name\"\nquery 4, no alternation\n\"class_method\"\n\"method_name\"\n```\n\n### Expected behavior\n\nI expect query 1 to have the same output as query 2:\n\n```\nquery 1, with predicates and alternation\n\"class_method\"\n\"method_name\"\n\"instance_method\"\n\"method_name\"\nquery 2, no predicates and alternation\n\"class_method\"\n\"method_name\"\n\"instance_method\"\n\"method_name\"\nquery 3, no alternation\n\"instance_method\"\n\"method_name\"\nquery 4, no alternation\n\"class_method\"\n\"method_name\"\n```\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0\n\n### Vim (not Nvim) behaves the same?\n\nNot tested in Vim\n\n### Operating system/version\n\nmacOS 14.7.4 \n\n### Terminal name/version\n\nkitty 0.40.1\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nhomebrew",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33232/comments",
    "created_at": "2025-03-31T18:42:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33232/events",
    "html_url": "https://github.com/neovim/neovim/issues/33232",
    "id": 2961281085,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33232/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6wgZA9",
    "number": 33232,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33232/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33232/timeline",
    "title": "Treesitter: iter_captures with alternation and predicates not finding nodes",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-03-31T18:42:47Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33232",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/538226?v=4",
        "events_url": "https://api.github.com/users/robotbill/events{/privacy}",
        "followers_url": "https://api.github.com/users/robotbill/followers",
        "following_url": "https://api.github.com/users/robotbill/following{/other_user}",
        "gists_url": "https://api.github.com/users/robotbill/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/robotbill",
        "id": 538226,
        "login": "robotbill",
        "node_id": "MDQ6VXNlcjUzODIyNg==",
        "organizations_url": "https://api.github.com/users/robotbill/orgs",
        "received_events_url": "https://api.github.com/users/robotbill/received_events",
        "repos_url": "https://api.github.com/users/robotbill/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/robotbill/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/robotbill/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/robotbill",
        "user_view_type": "public"
    }
}