{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nInternal error `E38: Null argument` (and maybe other weirdness) is possible under specific conditions if `nvim_buf_attach`'s `on_detach` callback redraws a window to an unloaded buffer while hlsearch is active.\n\n### Steps to reproduce\n\n```lua\nvim.cmd \"new | silent! /.\"\nvim.bo.bufhidden = \"delete\"\nvim.api.nvim_buf_attach(0, false, {\n  on_detach = function()\n    -- Buffer's ml is gone (buf_freeall called), but it's still in a window.\n    -- Maybe \"on_detach\" should have been called before that point...\n    assert(vim.fn.bufloaded(vim.api.nvim_get_current_buf()) == 0)\n\n    -- This changes the topline from 1 to 0, which dubiously causes win_update\n    -- to attempt to draw a win_line when we redraw.\n    vim.fn.winrestview(vim.empty_dict())\n    vim.cmd \"redraw!\"\n  end,\n})\nvim.cmd \"quit!\"\n```\n\nThe `winrestview` call is needed to screw up the topline so this condition is false:\n\nhttps://github.com/neovim/neovim/blob/bee45fc0e7801396951cd156c82953cbadc256b9/src/nvim/drawscreen.c#L2067\n\n### Expected behavior\n\nNo error.\n\nIt's a bit dubious that `on_detach` is called inside an unloaded buffer, especially when it's still in a window. (At least it's textlocked ðŸ˜Œ)\n\nThat said, `nvim_buf_call` can be used to do the same (except the unloaded buffer is shown in the autocmd window); a bit sus, but I couldn't replicate the same issue via that route.\n\n### Nvim version (nvim -v)\n\n0.12.0-dev-347+gbee45fc0e7\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nN/A\n\n### Terminal name/version\n\nN/A\n\n### $TERM environment variable\n\nN/A\n\n### Installation\n\nSource",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33967/comments",
    "created_at": "2025-05-11T14:03:38Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33967/events",
    "html_url": "https://github.com/neovim/neovim/issues/33967",
    "id": 3055010265,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains minimal reproducing steps",
            "id": 435851959,
            "name": "has:repro",
            "node_id": "MDU6TGFiZWw0MzU4NTE5NTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:repro"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33967/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM62F8HZ",
    "number": 33967,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33967/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33967/timeline",
    "title": "Internal error E38 when redrawing window to unloaded buffer via `on_detach`",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-11T15:02:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33967",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
        "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
        "followers_url": "https://api.github.com/users/seandewar/followers",
        "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
        "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seandewar",
        "id": 6256228,
        "login": "seandewar",
        "node_id": "MDQ6VXNlcjYyNTYyMjg=",
        "organizations_url": "https://api.github.com/users/seandewar/orgs",
        "received_events_url": "https://api.github.com/users/seandewar/received_events",
        "repos_url": "https://api.github.com/users/seandewar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seandewar",
        "user_view_type": "public"
    }
}