{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nI've been tinkering around with nested neovim instances and sending pre-recorded keystrokes to them with `vim.fn.feedkeys`. In order to allow me to send these keys without having to have the nested sessions open in a terminal as my current window, I've been trying to transition my code to use `vim.fn.chansend` instead. But it doesn't seem to have the same effect when sending alt-modified keycodes.\r\n\r\n### Steps to reproduce\r\n\r\nExecute the following script, \"hello\" is not printed as expected:\r\n```lua\r\nmap = \"<A-x>\"\r\njob_id = vim.fn.termopen(\"nvim --cmd 'map \" .. map .. \" :echo \\\"hello\\\"<CR>'\")\r\nvim.defer_fn(function()\r\n  vim.fn.chansend(job_id, vim.api.nvim_replace_termcodes(map, true, true, true))\r\nend, 500)\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe mapping in the nested instance should execute and \"hello\" should be printed, as it does when we use `feedkeys`:\r\n```lua\r\nmap = \"<A-x>\"\r\nvim.fn.termopen(\"nvim --cmd 'map \" .. map .. \" :echo \\\"hello\\\"<CR>'\")\r\nvim.defer_fn(function()\r\n  vim.fn.feedkeys(\"i\" .. vim.api.nvim_replace_termcodes(map, true, true, true))\r\nend, 500)\r\n```\r\nor when we use a different mapping:\r\n```lua\r\nmap = \"<C-q>\"\r\njob_id = vim.fn.termopen(\"nvim --cmd 'map \" .. map .. \" :echo \\\"hello\\\"<CR>'\")\r\nvim.defer_fn(function()\r\n  vim.fn.chansend(job_id, vim.api.nvim_replace_termcodes(map, true, true, true))\r\nend, 500)\r\n```\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nUbuntu 22.04.3\r\n\r\n### Terminal name/version\r\n\r\nAlacritty 0.13.1\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nbuild from repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Actually, considering that the `chansend` function is probably fairly simple and just sends bytes to the child process, I'm not sure if this is a bug rather than a misuse of `vim.api.nvim_replace_termcodes()` on my part. Do you know if there is a different function I should be using?",
            "created_at": "2024-06-12T09:33:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/29299#issuecomment-2162552568",
            "id": 2162552568,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29299",
            "node_id": "IC_kwDOAPphoM6A5e74",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162552568/reactions"
            },
            "updated_at": "2024-06-12T09:33:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162552568",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This sounds more like a feature request than a bug report.",
            "created_at": "2024-06-12T10:03:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/29299#issuecomment-2162614950",
            "id": 2162614950,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29299",
            "node_id": "IC_kwDOAPphoM6A5uKm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162614950/reactions"
            },
            "updated_at": "2024-06-12T10:03:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162614950",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`:help nvim_replace_termcodes()` mentions:\r\n\r\n> Replaces terminal codes and |keycodes| in a string with the internal representation.\r\n\r\nchansend() expects the \"external\" input, not the \"internal representation\". The external form of `<A-x>` would be `ESC x`.",
            "created_at": "2024-06-12T11:37:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/29299#issuecomment-2162789062",
            "id": 2162789062,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29299",
            "node_id": "IC_kwDOAPphoM6A6YrG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162789062/reactions"
            },
            "updated_at": "2024-06-12T11:38:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162789062",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Okay, so it seems that what might be lacking here is a `vim.api.nvim_replace_termcodes()`-like function for getting the external, rather than internal form? Or perhaps one to go from internal to external (which would be more useful in my case as I'm originally getting my keys from recorded macros in registers, where they have an internal representation)?\r\n\r\nFor the record, I've managed to work around this using an RPC session which calls `vim.api.feedkeys()` on the side of the nested instance:\r\n```lua\r\nmap = \"<A-x>\"\r\njob_id = vim.fn.termopen(\"nvim --cmd 'map \" .. map .. \" :echo \\\"hello\\\"<CR>' --listen /tmp/exnvimsock\")\r\nvim.defer_fn(function()\r\n  local sock = vim.fn.sockconnect(\"pipe\", \"/tmp/exnvimsock\", {rpc = true})\r\n  vim.fn.rpcrequest(sock, \"nvim_exec_lua\",\r\n    \"vim.fn.feedkeys(vim.api.nvim_replace_termcodes(..., true, true, true))\", {map})\r\nend, 500)\r\n```\r\nBut obviously that's not a completely general solution (unless you're willing to always execute your automated terminal sessions through an extra layer of nvim).",
            "created_at": "2024-06-12T11:54:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/29299#issuecomment-2162819248",
            "id": 2162819248,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29299",
            "node_id": "IC_kwDOAPphoM6A6gCw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162819248/reactions"
            },
            "updated_at": "2024-06-12T11:54:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162819248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I assume you are using termopen() because you want to see the UI of the nested nvim in a buffer. The :terminal buffer will have `:help $NVIM` env var set, so the child Nvim can open a channel to the parent, and call a function in the parent which adds the channel to a list. Then from the parent, you can call RPC functions such as `nvim_input` on the child. \r\n\r\nThus there is no need to send raw bytes via chansend().\r\n\r\nAlternatively if you _don't_ need to see the nested Nvim in a :terminal...\r\n- you can start it with `nvim --embed`, from jobstart(), which will return the RPC channel.\r\n - you can still view the UI by connecting to the headless, nested nvim via `--remote-ui`\r\n\r\n",
            "created_at": "2024-06-12T13:18:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/29299#issuecomment-2162990966",
            "id": 2162990966,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29299",
            "node_id": "IC_kwDOAPphoM6A7J92",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162990966/reactions"
            },
            "updated_at": "2024-06-12T13:20:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162990966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29299/comments",
    "created_at": "2024-06-12T09:13:31Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29299/events",
    "html_url": "https://github.com/neovim/neovim/issues/29299",
    "id": 2348247986,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29299/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 285,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 339,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-04T21:53:41Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6L92uy",
    "number": 29299,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29299/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29299/timeline",
    "title": "send alt-x keycodes to vim.fn.chansend()",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:57:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29299",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
        "events_url": "https://api.github.com/users/rish987/events{/privacy}",
        "followers_url": "https://api.github.com/users/rish987/followers",
        "following_url": "https://api.github.com/users/rish987/following{/other_user}",
        "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rish987",
        "id": 14950617,
        "login": "rish987",
        "node_id": "MDQ6VXNlcjE0OTUwNjE3",
        "organizations_url": "https://api.github.com/users/rish987/orgs",
        "received_events_url": "https://api.github.com/users/rish987/received_events",
        "repos_url": "https://api.github.com/users/rish987/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rish987",
        "user_view_type": "public"
    }
}