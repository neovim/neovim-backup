{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\n`echo foo bar | xargs nvim` is supposed to run `nvim foo bar`, but the buffer 1 is gone unless the first argument, `foo`, is an existing nonempty file.\n`echo foo | xargs nvim` works as expected.\n\nnvim v0.8.0 (appimages) opens foo and bar as buffers 2 and 3, resp, while v0.9.0 does not.\n\nA workaround is to supply `--open-tty` (non POSIX) to xargs, which reopens stdin for nvim.\n\nrelated? #8561\n\n\n### Steps to reproduce\n\nIt does not matter whether the second argument, bar, exists or not.\n\n#### 1. foo does not exist\n\n```sh\nrm -f foo\necho foo | xargs nvim --clean +ls\n#  1 %a   \"foo\"                          line 0\necho foo bar | xargs nvim --clean +ls\n#  2 %a   \"bar\"                          line 0\n```\n\n#### 2. foo is empty\n\n```sh\necho > foo\necho foo | xargs nvim --clean +ls\n#  1 %a   \"foo\"                          line 0\necho foo bar | xargs nvim --clean +ls\n#  2 %a   \"bar\"                          line 0\n```\n\n#### 3. foo is not empty (works as expected)\n\n```sh\necho 1 > foo\necho foo | xargs nvim --clean +ls\n#  1 %a   \"foo\"                          line 0\necho foo bar | xargs nvim --clean +ls\n#  1 %a   \"foo\"                          line 0\n#  2      \"bar\"                          line 0\n```\n\n### Expected behavior\n\nnvim, invoked by xargs, opens the first argument, foo, that does not exist or is empty.\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-0fa8157\n\n### Vim (not Nvim) behaves the same?\n\nno, vim 9.1.1552\n\n### Operating system/version\n\nEndeavourOS\n\n### Terminal name/version\n\nghostty 1.1.3\n\n### $TERM environment variable\n\nxterm-ghostty\n\n### Installation\n\nbuild from repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "If it's helpful, I bisected this issue to commit 43e8ec92de9e0850e7d202cb7ff9051bc408447e",
            "created_at": "2025-08-14T02:38:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3186554815",
            "id": 3186554815,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM697ve_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3186554815/reactions"
            },
            "updated_at": "2025-08-14T02:38:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3186554815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here's the stacktrace:\n\n```log\nclose_buffer + 348\ndo_buffer + 2200\ndo_bufdel + 276\nex_bunload + 128\nexecute_cmd0 + 948\ndo_one_cmd + 4388\ndo_cmdline + 2568\ndo_cmdline_cmd + 36\nread_stdin + 136\nmain + 2640\n```\n\nLooks like it's related to #8561 and [`read_stdin`](https://github.com/neovim/neovim/blob/bd45e2be634b49f17b86a42359c0218081759f48/src/nvim/main.c#L1619-L1639), specifically because `params.edit_type == EDIT_STDIN`, `read_stdin` is called and, since the buffer is empty, it's unloaded.\n\n`edit_stdin` is returning true because `embedded_mode == 1` and `stdin_fd == 3`:\n\nhttps://github.com/neovim/neovim/blob/bd45e2be634b49f17b86a42359c0218081759f48/src/nvim/main.c#L1033-L1044\n\nbut only at this call (not earlier calls in `command_line_scan`):\n\nhttps://github.com/neovim/neovim/blob/bd45e2be634b49f17b86a42359c0218081759f48/src/nvim/main.c#L401-L422\n\n\n\n\n",
            "created_at": "2025-08-14T18:01:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3189400439",
            "id": 3189400439,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-GmN3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3189400439/reactions"
            },
            "updated_at": "2025-08-14T19:58:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3189400439",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Made more progress. First, xargs isn't necessary as having stdin and file args at the same time drives the bug (where `blah` is just a string, `nonexistantfile` doesn't exist, and `README.md` does exist):\n\n```sh\n# opens with just one buffer\necho blah | nivm --clean nonexistantfile README.md\n\n# opens with two buffers\necho blah | nivm --clean README.md nonexistantfile\n```\n\nI think the issue is in `read_stdin`:\n\nhttps://github.com/neovim/neovim/blob/bd45e2be634b49f17b86a42359c0218081759f48/src/nvim/main.c#L1619-L1639\n\nWhen it calls `open_buffer`, it's assuming it's going to open a buffer from stdin but `curbuf` is already set with the filename from the xargs. Then it checks if `curbuf` is empty (which it is) but that's not the buffer from stdin.\n\nI don't know if it's the right way to fix it, but checking to make sure `curbuf->b_ffname == NULL` does fix it:\n\n```c\n  if (buf_is_empty(curbuf) && curbuf->b_next != NULL && curbuf->b_ffname == NULL) {\n```\n\nBut maybe it shouldn't be trying to read into that buffer in the first place? Maybe `curbuf` needs to be updated somewhere to be a new buffer for stdin instead of using the one for the first file from xargs?\n\nI guess it comes down to what the behavior should be when you have stdin and file arguments:\n\n```sh\necho test | nvim somefile\n```\n\nAnd just in case it's helpful, here's some logging I collected while testing different cases:\n\n[notes.txt](https://github.com/user-attachments/files/21780952/notes.txt)",
            "created_at": "2025-08-14T21:57:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3189975093",
            "id": 3189975093,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-Iyg1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3189975093/reactions"
            },
            "updated_at": "2025-08-15T15:46:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3189975093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thinking about this a little bit more, assuming we don't want to read `stdin` if we have file arguments, maybe we shouldn't call read_stdin here if `curbuf->b_ffname == NULL`:\n\nhttps://github.com/neovim/neovim/blob/bd45e2be634b49f17b86a42359c0218081759f48/src/nvim/main.c#L520-L530",
            "created_at": "2025-08-18T20:48:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3198377083",
            "id": 3198377083,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-o1x7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198377083/reactions"
            },
            "updated_at": "2025-08-18T20:48:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198377083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This looks very related to #7679\n\nI took a stab at creating a test that drives the bug:\n\n```lua\nit('if stdin and file arguments, keep first file even if empty #35269', function()\n    local screen = Screen.new(25, 8)\n    screen._default_attr_ids = nil\n    if is_os('win') then\n      command([[set shellcmdflag=/s\\ /c shellxquote=\\\"]])\n    end\n    -- Running in :terminal\n    fn.jobstart(([[echo foo | ]] .. [[\"%s\" -u NONE -i NONE file1 file2 +ls!]]):format(nvim_prog), {\n      term = true,\n      env = {\n        VIMRUNTIME = os.getenv('VIMRUNTIME'),\n      },\n    })\n    screen:expect([[\n  ^                         |\n    1 %a   \"file1\"         |\n                 line 0    |\n    2      \"file2\"         |\n                 line 0    |\n  Press ENTER or type comma|\n  nd to continue           |\n                           |\n]])\n  end)\n```",
            "created_at": "2025-08-18T23:25:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3198706803",
            "id": 3198706803,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-qGRz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198706803/reactions"
            },
            "updated_at": "2025-08-18T23:52:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198706803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This looks very related to [#7679](https://github.com/neovim/neovim/pull/7679)\n\nYeah I expected that. So is this actually a bug, or will \"fixing\" it regress that?",
            "created_at": "2025-08-19T02:11:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3198980292",
            "id": 3198980292,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-rJDE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198980292/reactions"
            },
            "updated_at": "2025-08-19T02:11:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198980292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35269/comments",
    "created_at": "2025-08-09T14:04:22Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35269/events",
    "html_url": "https://github.com/neovim/neovim/issues/35269",
    "id": 3306400447,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "startup, shutdown, attach, detach",
            "id": 870629450,
            "name": "lifecycle",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lifecycle"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35269/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 289,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 345,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-08-16T22:29:07Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM7FE6q_",
    "number": 35269,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35269/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35269/timeline",
    "title": "`echo foo bar | xargs nvim` does not open foo unless it is nonempty",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-19T02:11:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35269",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11627708?v=4",
        "events_url": "https://api.github.com/users/e-kwsm/events{/privacy}",
        "followers_url": "https://api.github.com/users/e-kwsm/followers",
        "following_url": "https://api.github.com/users/e-kwsm/following{/other_user}",
        "gists_url": "https://api.github.com/users/e-kwsm/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/e-kwsm",
        "id": 11627708,
        "login": "e-kwsm",
        "node_id": "MDQ6VXNlcjExNjI3NzA4",
        "organizations_url": "https://api.github.com/users/e-kwsm/orgs",
        "received_events_url": "https://api.github.com/users/e-kwsm/received_events",
        "repos_url": "https://api.github.com/users/e-kwsm/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/e-kwsm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/e-kwsm/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/e-kwsm",
        "user_view_type": "public"
    }
}