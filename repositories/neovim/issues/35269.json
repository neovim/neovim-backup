{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\n`echo foo bar | xargs nvim` is supposed to run `nvim foo bar`, but the buffer 1 is gone unless the first argument, `foo`, is an existing nonempty file.\n`echo foo | xargs nvim` works as expected.\n\nnvim v0.8.0 (appimages) opens foo and bar as buffers 2 and 3, resp, while v0.9.0 does not.\n\nA workaround is to supply `--open-tty` (non POSIX) to xargs, which reopens stdin for nvim.\n\nrelated? #8561\n\n\n### Steps to reproduce\n\nIt does not matter whether the second argument, bar, exists or not.\n\n#### 1. foo does not exist\n\n```sh\nrm -f foo\necho foo | xargs nvim --clean +ls\n#  1 %a   \"foo\"                          line 0\necho foo bar | xargs nvim --clean +ls\n#  2 %a   \"bar\"                          line 0\n```\n\n#### 2. foo is empty\n\n```sh\necho > foo\necho foo | xargs nvim --clean +ls\n#  1 %a   \"foo\"                          line 0\necho foo bar | xargs nvim --clean +ls\n#  2 %a   \"bar\"                          line 0\n```\n\n#### 3. foo is not empty (works as expected)\n\n```sh\necho 1 > foo\necho foo | xargs nvim --clean +ls\n#  1 %a   \"foo\"                          line 0\necho foo bar | xargs nvim --clean +ls\n#  1 %a   \"foo\"                          line 0\n#  2      \"bar\"                          line 0\n```\n\n### Expected behavior\n\nnvim, invoked by xargs, opens the first argument, foo, that does not exist or is empty.\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-0fa8157\n\n### Vim (not Nvim) behaves the same?\n\nno, vim 9.1.1552\n\n### Operating system/version\n\nEndeavourOS\n\n### Terminal name/version\n\nghostty 1.1.3\n\n### $TERM environment variable\n\nxterm-ghostty\n\n### Installation\n\nbuild from repo",
    "closed_at": "2025-08-21T03:34:50Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "If it's helpful, I bisected this issue to commit 43e8ec92de9e0850e7d202cb7ff9051bc408447e",
            "created_at": "2025-08-14T02:38:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3186554815",
            "id": 3186554815,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM697ve_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3186554815/reactions"
            },
            "updated_at": "2025-08-14T02:38:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3186554815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's the stacktrace:\n\n```log\nclose_buffer + 348\ndo_buffer + 2200\ndo_bufdel + 276\nex_bunload + 128\nexecute_cmd0 + 948\ndo_one_cmd + 4388\ndo_cmdline + 2568\ndo_cmdline_cmd + 36\nread_stdin + 136\nmain + 2640\n```\n\nLooks like it's related to #8561 and [`read_stdin`](https://github.com/neovim/neovim/blob/bd45e2be634b49f17b86a42359c0218081759f48/src/nvim/main.c#L1619-L1639), specifically because `params.edit_type == EDIT_STDIN`, `read_stdin` is called and, since the buffer is empty, it's unloaded.\n\n`edit_stdin` is returning true because `embedded_mode == 1` and `stdin_fd == 3`:\n\nhttps://github.com/neovim/neovim/blob/bd45e2be634b49f17b86a42359c0218081759f48/src/nvim/main.c#L1033-L1044\n\nbut only at this call (not earlier calls in `command_line_scan`):\n\nhttps://github.com/neovim/neovim/blob/bd45e2be634b49f17b86a42359c0218081759f48/src/nvim/main.c#L401-L422\n\n\n\n\n",
            "created_at": "2025-08-14T18:01:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3189400439",
            "id": 3189400439,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-GmN3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3189400439/reactions"
            },
            "updated_at": "2025-08-14T19:58:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3189400439",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Made more progress. First, xargs isn't necessary as having stdin and file args at the same time drives the bug (where `blah` is just a string, `nonexistantfile` doesn't exist, and `README.md` does exist):\n\n```sh\n# opens with just one buffer\necho blah | nivm --clean nonexistantfile README.md\n\n# opens with two buffers\necho blah | nivm --clean README.md nonexistantfile\n```\n\nI think the issue is in `read_stdin`:\n\nhttps://github.com/neovim/neovim/blob/bd45e2be634b49f17b86a42359c0218081759f48/src/nvim/main.c#L1619-L1639\n\nWhen it calls `open_buffer`, it's assuming it's going to open a buffer from stdin but `curbuf` is already set with the filename from the xargs. Then it checks if `curbuf` is empty (which it is) but that's not the buffer from stdin.\n\nI don't know if it's the right way to fix it, but checking to make sure `curbuf->b_ffname == NULL` does fix it:\n\n```c\n  if (buf_is_empty(curbuf) && curbuf->b_next != NULL && curbuf->b_ffname == NULL) {\n```\n\nBut maybe it shouldn't be trying to read into that buffer in the first place? Maybe `curbuf` needs to be updated somewhere to be a new buffer for stdin instead of using the one for the first file from xargs?\n\nI guess it comes down to what the behavior should be when you have stdin and file arguments:\n\n```sh\necho test | nvim somefile\n```\n\nAnd just in case it's helpful, here's some logging I collected while testing different cases:\n\n[notes.txt](https://github.com/user-attachments/files/21780952/notes.txt)",
            "created_at": "2025-08-14T21:57:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3189975093",
            "id": 3189975093,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-Iyg1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3189975093/reactions"
            },
            "updated_at": "2025-08-15T15:46:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3189975093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thinking about this a little bit more, assuming we don't want to read `stdin` if we have file arguments, maybe we shouldn't call read_stdin here if `curbuf->b_ffname == NULL`:\n\nhttps://github.com/neovim/neovim/blob/bd45e2be634b49f17b86a42359c0218081759f48/src/nvim/main.c#L520-L530",
            "created_at": "2025-08-18T20:48:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3198377083",
            "id": 3198377083,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-o1x7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198377083/reactions"
            },
            "updated_at": "2025-08-18T20:48:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198377083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This looks very related to #7679\n\nI took a stab at creating a test that drives the bug:\n\n```lua\nit('if stdin and file arguments, keep first file even if empty #35269', function()\n    local screen = Screen.new(25, 8)\n    screen._default_attr_ids = nil\n    if is_os('win') then\n      command([[set shellcmdflag=/s\\ /c shellxquote=\\\"]])\n    end\n    -- Running in :terminal\n    fn.jobstart(([[echo foo | ]] .. [[\"%s\" -u NONE -i NONE file1 file2 +ls!]]):format(nvim_prog), {\n      term = true,\n      env = {\n        VIMRUNTIME = os.getenv('VIMRUNTIME'),\n      },\n    })\n    screen:expect([[\n  ^                         |\n    1 %a   \"file1\"         |\n                 line 0    |\n    2      \"file2\"         |\n                 line 0    |\n  Press ENTER or type comma|\n  nd to continue           |\n                           |\n]])\n  end)\n```",
            "created_at": "2025-08-18T23:25:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3198706803",
            "id": 3198706803,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-qGRz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198706803/reactions"
            },
            "updated_at": "2025-08-18T23:52:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198706803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This looks very related to [#7679](https://github.com/neovim/neovim/pull/7679)\n\nYeah I expected that. So is this actually a bug, or will \"fixing\" it regress that?",
            "created_at": "2025-08-19T02:11:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3198980292",
            "id": 3198980292,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-rJDE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198980292/reactions"
            },
            "updated_at": "2025-08-19T02:11:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3198980292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "When I change:\nhttps://github.com/neovim/neovim/blob/master/src/nvim/main.c#L520-L530\nto:\n\n```c\n  // Read file (text, not commands) from stdin if:\n  //    - stdin is not a tty\n  //    - -e/-es was not given\n  //    - no file arguments were given\n  //\n  // Do this before starting Raw mode, because it may change things that the\n  // writing end of the pipe doesn't like, e.g., in case stdin and stderr\n  // are the same terminal: \"cat | vim -\".\n  // Using autocommands here may cause trouble...\n  if (params.edit_type == EDIT_STDIN && !recoverymode && curbuf->b_ffname == NULL) {\n    read_stdin();\n  }\n```\n\nIt fixes the issue and passes the test above.\n\nAll of the other unit tests pass (except for `K <esc> kills the buffer for a running 'keywordprg'` and `syntax/shada.vim` but those fail in a clean tree), including the ones that reference 7679:\n\n```\nRUN      T21 startup input from pipe (implicit) #7679: 81.00 ms OK\nRUN      T22 startup input from pipe + file args #7679: 28.00 ms OK\nRUN      T25 startup stdin with -es/-Es #7679: 154.00 ms OK\nRUN      T32 startup -e/-E interactive #7679: 37.00 ms OK\n```\n\nWithout the above change `echo asd | nvim file` was already throwing away stdin (even if `file` didn't exist) so maybe something had already changed since #7679?",
            "created_at": "2025-08-19T03:59:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3199123097",
            "id": 3199123097,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-rr6Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3199123097/reactions"
            },
            "updated_at": "2025-08-19T03:59:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3199123097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Without the above change `echo asd | nvim file` was already throwing away stdin\n\nEr... ok.  PR welcome :) ",
            "created_at": "2025-08-19T15:00:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3201119067",
            "id": 3201119067,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-zTNb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3201119067/reactions"
            },
            "updated_at": "2025-08-19T15:00:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3201119067",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Happy to submit a PR, just want to make sure I get things right.\n\nShould I submit my fix as described in https://github.com/neovim/neovim/issues/35269#issuecomment-3199123097 to fix this issue or should I look into `echo asd | nvim file` throwing away stdin when there are file args (it works fine if there are no file args)?",
            "created_at": "2025-08-19T18:58:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3201880956",
            "id": 3201880956,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-2NN8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3201880956/reactions"
            },
            "updated_at": "2025-08-19T18:58:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3201880956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Should I submit my fix as described in [#35269 (comment)](https://github.com/neovim/neovim/issues/35269#issuecomment-3199123097) to fix this issue\n\nI suggest starting with that, since it fixes a more acute problem. If you add a test case, then the 2nd problem could be looked at without regressing the first one.",
            "created_at": "2025-08-19T20:18:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3202098898",
            "id": 3202098898,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6-3CbS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3202098898/reactions"
            },
            "updated_at": "2025-08-19T20:18:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3202098898",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ok, I think I've figured out the root cause why https://github.com/neovim/neovim/commit/43e8ec92de9e0850e7d202cb7ff9051bc408447e changed the behavior. Before that commit, the stdin buffer was always first (and `-` had to be the first arg):\n\n```bash\n4ace9e7e (the first commit before 43e8ec92 that compiles)\n# It seems like headless requires a - to read from stdin\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE --headless '+ls' README.md\n  1 %a   \"README.md\"                    line 0\n\n# It seems like - has to be first\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE --headless '+ls' README.md -\n  1 %a   \"README.md\"                    line 0\n\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE --headless '+ls' - README.md\n  1 %a + \"[No Name]\"                    line 0\n  2      \"README.md\"                    line 0\n\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE '+ls' README.md\n  1 %a + \"[No Name]\"                    line 0\n  2      \"README.md\"                    line 0\n\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE '+ls' README.md -\n  1 %a + \"[No Name]\"                    line 0\n  2      \"README.md\"                    line 0\n\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE '+ls' - README.md\n  1 %a + \"[No Name]\"                    line 0\n  2      \"README.md\"                    line 0\n\nHEAD:\n# It seems like headless requires a - to read from stdin\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE --headless '+ls' README.md\n  1 %a   \"README.md\"                    line 0\n\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE --headless '+ls' README.md -\n  1 #    \"README.md\"                    line 1\n  2 %a + \"[No Name]\"                    line 0\n\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE --headless '+ls' - README.md\n  1 %a + \"[No Name]\"                    line 0\n  2      \"README.md\"                    line 0\n\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE '+ls' README.md\n  1 #    \"README.md\"                    line 1\n  2 %a + \"[No Name]\"                    line 0\n\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE '+ls' README.md -\n  1 #    \"README.md\"                    line 1\n  2 %a + \"[No Name]\"                    line 0\n\necho 'a' | VIMRUNTIME=./runtime build/bin/nvim -n -u NONE -i NONE '+ls' - README.md\n  1 %a + \"[No Name]\"                    line 0\n  2      \"README.md\"                    line 0\n```\n\nThe unit test didn't catch it because it has the `-` first and that behavior didn't change.\n\nIt seems like `read_stdin` assumed it would also be first, hence why it just uses `curbuf` without checking to see if it already points to a file and it only checks `curbuf->b_next`. To fix, I think we can just do:\n\n1. have `read_stdin` create a buffer if curbuf is already used\n2. if stdin was empty, close that buffer (or the default buffer if there were no files) if either `curbuf->b_next` or `curbuf->b_prev` are set.\n\nI'll submit a PR make sure both cases are covered in the tests.",
            "created_at": "2025-08-20T03:36:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3204070618",
            "id": 3204070618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6--jza",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3204070618/reactions"
            },
            "updated_at": "2025-08-20T03:38:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3204070618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38429?v=4",
                "events_url": "https://api.github.com/users/cameronr/events{/privacy}",
                "followers_url": "https://api.github.com/users/cameronr/followers",
                "following_url": "https://api.github.com/users/cameronr/following{/other_user}",
                "gists_url": "https://api.github.com/users/cameronr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cameronr",
                "id": 38429,
                "login": "cameronr",
                "node_id": "MDQ6VXNlcjM4NDI5",
                "organizations_url": "https://api.github.com/users/cameronr/orgs",
                "received_events_url": "https://api.github.com/users/cameronr/received_events",
                "repos_url": "https://api.github.com/users/cameronr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cameronr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cameronr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cameronr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> root cause why [43e8ec9](https://github.com/neovim/neovim/commit/43e8ec92de9e0850e7d202cb7ff9051bc408447e) changed the behavior. Before that commit, the stdin buffer was always first (and `-` had to be the first arg):\n\nGreat debugging! I kind of like the constraint of requiring `-` as first arg, and IIRC that was intentional. But it looks like your PR can support more flexibility without much trouble, so no objection.",
            "created_at": "2025-08-21T01:51:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/35269#issuecomment-3208664558",
            "id": 3208664558,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35269",
            "node_id": "IC_kwDOAPphoM6_QFXu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3208664558/reactions"
            },
            "updated_at": "2025-08-21T01:51:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3208664558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35269/comments",
    "created_at": "2025-08-09T14:04:22Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35269/events",
    "html_url": "https://github.com/neovim/neovim/issues/35269",
    "id": 3306400447,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "startup, shutdown, attach, detach",
            "id": 870629450,
            "name": "lifecycle",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lifecycle"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35269/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 46,
        "created_at": "2025-07-14T12:16:41Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/52",
        "id": 13265074,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/52/labels",
        "node_id": "MI_kwDOAPphoM4Aymiy",
        "number": 52,
        "open_issues": 20,
        "state": "open",
        "title": "0.11.4",
        "updated_at": "2025-08-24T06:42:11Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/52"
    },
    "node_id": "I_kwDOAPphoM7FE6q_",
    "number": 35269,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35269/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35269/timeline",
    "title": "`echo foo bar | xargs nvim` does not open foo unless it is nonempty",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-21T03:34:50Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35269",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11627708?v=4",
        "events_url": "https://api.github.com/users/e-kwsm/events{/privacy}",
        "followers_url": "https://api.github.com/users/e-kwsm/followers",
        "following_url": "https://api.github.com/users/e-kwsm/following{/other_user}",
        "gists_url": "https://api.github.com/users/e-kwsm/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/e-kwsm",
        "id": 11627708,
        "login": "e-kwsm",
        "node_id": "MDQ6VXNlcjExNjI3NzA4",
        "organizations_url": "https://api.github.com/users/e-kwsm/orgs",
        "received_events_url": "https://api.github.com/users/e-kwsm/received_events",
        "repos_url": "https://api.github.com/users/e-kwsm/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/e-kwsm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/e-kwsm/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/e-kwsm",
        "user_view_type": "public"
    }
}