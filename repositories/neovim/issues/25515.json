{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nI'm trying to conceal Markdown checkboxes _and_ the minus sign in front of them with one conceal character. Here's my query:\r\n\r\n```scm\r\n(\r\n  (list_marker_minus)\r\n  (task_list_marker_unchecked)\r\n) @checkbox (#set! conceal \"ï˜±\")\r\n```\r\n\r\nHowever, only the first sibling, `list_marker_minus` gets concealed.\r\n\r\nHere's a file that I'm using as an example:\r\n\r\n```markdown\r\n- [x] foo\r\n- [ ] bar\r\n  - [ ] baz\r\n```\r\n\r\nHere's what the syntax tree looks like:\r\n\r\n```scm\r\nsection [0, 0] - [3, 0]\r\n  list [0, 0] - [3, 0]\r\n    list_item [0, 0] - [1, 0]\r\n      list_marker_minus [0, 0] - [0, 2]\r\n      task_list_marker_checked [0, 2] - [0, 5]\r\n      ...\r\n    list_item [1, 0] - [3, 0]\r\n      list_marker_minus [1, 0] - [1, 2]\r\n      task_list_marker_unchecked [1, 2] - [1, 5]\r\n      ...\r\n      list [2, 2] - [3, 0]\r\n        list_item [2, 2] - [3, 0]\r\n          list_marker_minus [2, 2] - [2, 4]\r\n          task_list_marker_unchecked [2, 4] - [2, 7]\r\n          ...\r\n```\r\n\r\nI feel like this is a pretty trivial use case. \r\n\r\n### Expected behavior\r\n\r\nThis does seem to be [an issue with treesitter](https://github.com/tree-sitter/tree-sitter/issues/1508). However, one way I see that Neovim could work around this is to add the ability to specify a start and an end to a conceal range with treesitter captures.\r\n\r\n```scm\r\n(\r\n  (list_marker_minus) @conceal_start\r\n  (task_list_marker_unchecked) @conceal_end\r\n)\r\n```\r\n\r\nThen I could through some new conceal API tell Neovim that I want everything between `@conceal_start`s and `@conceal_end`s to be conceald with some character, including (or excluding) the captures.\r\n\r\nWhat do you say?",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "No, we would strongly prefer to let treesitter handle this. After all, that's the whole point of it. ",
            "created_at": "2023-10-05T19:19:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/25515#issuecomment-1749505662",
            "id": 1749505662,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25515",
            "node_id": "IC_kwDOAPphoM5oR1Z-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749505662/reactions"
            },
            "updated_at": "2023-10-05T19:19:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749505662",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> No, we would strongly prefer to let treesitter handle this. After all, that's the whole point of it.\r\n\r\n@clason Could you explain how do you imagine this? The whole current idea of Tree-sitter queries and captures exist around that captures points to distinct and concrete tree nodes and not to a set of some related nodes. At the same time nodes pointed by captures behaves like quick entry points into a tree where additional actions may be done over a nodes' API.\r\n\r\n**Edit:** To don't break the current queries API, it's possible to introduce a concept of _ephemeral_ nodes that would behave like just containers for point ranges and wouldn't allow to use nodes API on them. But I don't think that such additional complexity and concept worth to add just for one this use case, because this makes queries understanding even more harder.",
            "created_at": "2023-10-05T22:37:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/25515#issuecomment-1749749109",
            "id": 1749749109,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25515",
            "node_id": "IC_kwDOAPphoM5oSw11",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749749109/reactions"
            },
            "updated_at": "2023-10-05T22:45:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749749109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14666676?v=4",
                "events_url": "https://api.github.com/users/ahlinc/events{/privacy}",
                "followers_url": "https://api.github.com/users/ahlinc/followers",
                "following_url": "https://api.github.com/users/ahlinc/following{/other_user}",
                "gists_url": "https://api.github.com/users/ahlinc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ahlinc",
                "id": 14666676,
                "login": "ahlinc",
                "node_id": "MDQ6VXNlcjE0NjY2Njc2",
                "organizations_url": "https://api.github.com/users/ahlinc/orgs",
                "received_events_url": "https://api.github.com/users/ahlinc/received_events",
                "repos_url": "https://api.github.com/users/ahlinc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ahlinc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ahlinc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ahlinc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I am referring to the linked tree-sitter issue, which should cover this? If I misunderstood something, please correct me.\r\n\r\nFor this specific instance, though, I don't see why a new feature is needed; can't you just do\r\n```\r\n(\r\n  (list_marker_minus) @conceal (#set! conceal \"\")\r\n  (task_list_marker_unchecked) @conceal (#set! conceal \" \")\r\n)\r\n```",
            "created_at": "2023-10-06T07:12:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/25515#issuecomment-1750095891",
            "id": 1750095891,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25515",
            "node_id": "IC_kwDOAPphoM5oUFgT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750095891/reactions"
            },
            "updated_at": "2023-10-06T07:12:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750095891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@clason That's a good idea that I hadn't thought of. However, when I tried it for some reason the `list_marker_minus` gets the conceal character, and not `task_list_marker_unchecked`:\r\n\r\nI even tried giving the minus a different capture group like this\r\n\r\n```scheme\r\n(\r\n   (list_marker_minus) @minus (#set! conceal \"\")\r\n   (task_list_marker_checked) @conceal (#set! conceal \"ï˜±\")\r\n)\r\n```\r\n\r\nBut I still get the same behaviour:\r\n\r\n![image](https://github.com/neovim/neovim/assets/15816726/81a77bde-d22f-44ba-bfc1-9b4247432628)\r\n",
            "created_at": "2023-10-06T07:51:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/25515#issuecomment-1750142427",
            "id": 1750142427,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25515",
            "node_id": "IC_kwDOAPphoM5oUQ3b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750142427/reactions"
            },
            "updated_at": "2023-10-06T07:51:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750142427",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15816726?v=4",
                "events_url": "https://api.github.com/users/mawkler/events{/privacy}",
                "followers_url": "https://api.github.com/users/mawkler/followers",
                "following_url": "https://api.github.com/users/mawkler/following{/other_user}",
                "gists_url": "https://api.github.com/users/mawkler/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mawkler",
                "id": 15816726,
                "login": "mawkler",
                "node_id": "MDQ6VXNlcjE1ODE2NzI2",
                "organizations_url": "https://api.github.com/users/mawkler/orgs",
                "received_events_url": "https://api.github.com/users/mawkler/received_events",
                "repos_url": "https://api.github.com/users/mawkler/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mawkler/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mawkler/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mawkler",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That could be an issue with multiple directives in a single pattern not working properly, which would be a bug that needs to be fixed. ",
            "created_at": "2023-10-06T07:55:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/25515#issuecomment-1750147961",
            "id": 1750147961,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25515",
            "node_id": "IC_kwDOAPphoM5oUSN5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750147961/reactions"
            },
            "updated_at": "2023-10-06T07:55:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750147961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@mawkler As a workaround, I use something like this:\r\n```scheme\r\n((task_list_marker_unchecked)\r\n @text.todo.unchecked\r\n (#offset! @text.todo.unchecked 0 -2 0 0)\r\n (#set! conceal \"âœ—\")) ;\r\n((task_list_marker_checked)\r\n @text.todo.checked\r\n (#offset! @text.todo.checked 0 -2 0 0)\r\n (#set! conceal \"âœ“\")) ;\r\n```\r\nthe `#offset!` directive will conceal the preceding minus signs. The only caveat is that this will only work properly when there is one space between the minus sign and the checkbox. If you only want this conceal to apply to checkboxes with the minus sign, you should be able to modify the query to make that work.",
            "created_at": "2023-12-18T03:05:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/25515#issuecomment-1859479161",
            "id": 1859479161,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25515",
            "node_id": "IC_kwDOAPphoM5u1WZ5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859479161/reactions"
            },
            "updated_at": "2023-12-18T03:05:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859479161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@ribru17 That works great as a workaround, thank you!",
            "created_at": "2023-12-19T09:56:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/25515#issuecomment-1862450908",
            "id": 1862450908,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25515",
            "node_id": "IC_kwDOAPphoM5vAr7c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1862450908/reactions"
            },
            "updated_at": "2023-12-19T09:56:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1862450908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15816726?v=4",
                "events_url": "https://api.github.com/users/mawkler/events{/privacy}",
                "followers_url": "https://api.github.com/users/mawkler/followers",
                "following_url": "https://api.github.com/users/mawkler/following{/other_user}",
                "gists_url": "https://api.github.com/users/mawkler/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mawkler",
                "id": 15816726,
                "login": "mawkler",
                "node_id": "MDQ6VXNlcjE1ODE2NzI2",
                "organizations_url": "https://api.github.com/users/mawkler/orgs",
                "received_events_url": "https://api.github.com/users/mawkler/received_events",
                "repos_url": "https://api.github.com/users/mawkler/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mawkler/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mawkler/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mawkler",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> That could be an issue with multiple directives in a single pattern not working properly, which would be a bug that needs to be fixed.\r\n\r\nUnless I'm misunderstanding you, I don't think this is a bug.\r\n\r\nThe capture metadata for `#set!` predicates takes the form of a hash/object. It might be different for your bindings, but in `web-tree-sitter`,\r\n\r\n```scm\r\n(\r\n  (list_marker_minus) @conceal (#set! foo \"a\")\r\n  (task_list_marker_unchecked) @conceal (#set! foo \"b\")\r\n)\r\n```\r\n\r\nrun on a single list item would create two capture groups, each of which has a `setProperties` property whose value is `{ foo: \"b\" }`. That's because _both_ `#set!` properties apply to _both_ captures, and the second one overwrites the property set by the first.\r\n\r\nI've sometimes wondered why `#set!`, `#is?`, and `#is-not?` don't accept a capture as their first argument the way that `#match?` and `#eq?` do. That would make this behavior a bit easier to understand. Ideally it'd be backward-compatible such that those predicates would act on a single capture if one is specified as the first argument, or else on all captures if the first argument is a string.",
            "created_at": "2024-01-14T22:01:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/25515#issuecomment-1891084855",
            "id": 1891084855,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25515",
            "node_id": "IC_kwDOAPphoM5wt6o3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1891084855/reactions"
            },
            "updated_at": "2024-01-14T22:01:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1891084855",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3450?v=4",
                "events_url": "https://api.github.com/users/savetheclocktower/events{/privacy}",
                "followers_url": "https://api.github.com/users/savetheclocktower/followers",
                "following_url": "https://api.github.com/users/savetheclocktower/following{/other_user}",
                "gists_url": "https://api.github.com/users/savetheclocktower/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/savetheclocktower",
                "id": 3450,
                "login": "savetheclocktower",
                "node_id": "MDQ6VXNlcjM0NTA=",
                "organizations_url": "https://api.github.com/users/savetheclocktower/orgs",
                "received_events_url": "https://api.github.com/users/savetheclocktower/received_events",
                "repos_url": "https://api.github.com/users/savetheclocktower/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/savetheclocktower/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/savetheclocktower/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/savetheclocktower",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "They do, in Neovim. ",
            "created_at": "2024-01-14T22:57:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/25515#issuecomment-1891101320",
            "id": 1891101320,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25515",
            "node_id": "IC_kwDOAPphoM5wt-qI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1891101320/reactions"
            },
            "updated_at": "2024-01-14T22:57:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1891101320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25515/comments",
    "created_at": "2023-10-05T19:14:56Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25515/events",
    "html_url": "https://github.com/neovim/neovim/issues/25515",
    "id": 1928905256,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25515/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5y-MIo",
    "number": 25515,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25515/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25515/timeline",
    "title": "Concealing range between nodes with one character using treesitter",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:57:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25515",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15816726?v=4",
        "events_url": "https://api.github.com/users/mawkler/events{/privacy}",
        "followers_url": "https://api.github.com/users/mawkler/followers",
        "following_url": "https://api.github.com/users/mawkler/following{/other_user}",
        "gists_url": "https://api.github.com/users/mawkler/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mawkler",
        "id": 15816726,
        "login": "mawkler",
        "node_id": "MDQ6VXNlcjE1ODE2NzI2",
        "organizations_url": "https://api.github.com/users/mawkler/orgs",
        "received_events_url": "https://api.github.com/users/mawkler/received_events",
        "repos_url": "https://api.github.com/users/mawkler/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mawkler/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mawkler/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mawkler",
        "user_view_type": "public"
    }
}