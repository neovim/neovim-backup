{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nRegression introduced by:\n\nhttps://github.com/neovim/neovim/commit/23bf4c0531acef4e8252f4db13fcd90ad5aa91bf\n\nin PR\n\nhttps://github.com/neovim/neovim/pull/33889\n\nIn versions of nvim after this commit, async code in .nvim.lua causes all _prior_ statements in the file _before_ the last async call in that file to be ran multiple times.\n\nThis affects only .nvim.lua (and files called by .nvim.lua). Any async calls in the rest of the config are unaffected\n\n### Steps to reproduce\n\nset `vim.o.exrc = true`\n\nThen put the following code in `./.nvim.lua`\n\n```lua\nprint(\"TESTING\")\nlocal cmd = vim.system({ \"sed\", \"s/Goodbye/Hello/g\" }, { stdin = true, })\ncmd:write(\"Goodbye World\")\ncmd:write(nil)\nprint(cmd:wait().stdout)\n```\n\nAnd then opening nvim and allowing it to run the .nvim.lua will result in\n\n```\nTESTING\nTESTING\nHello World\n```\n\nvim.system does not need to be explicitly used asynchronously like above to make this occur. The following would have the same result\n\n```lua\nprint(\"TESTING\")\nprint(vim.system({ \"sed\", \"s/Goodbye/Hello/g\" }, { stdin = \"Goodbye World\", }):wait().stdout)\n```\n\nOddly, the following behaves even worse\n\n```lua\nprint(\"TESTING\")\nprint(vim.system({ \"echo\", \"Hello World\" }):wait().stdout)\n```\n\nWhich prints\n\n```\nTESTING\nHello World\nTESTING\nHello World\n```\n\n### Expected behavior\n\nit should just print\n```\nTESTING\nHello World\n```\n\nand that is what used to happen before the mentioned commit\n\n### Nvim version (nvim -v)\n\nv0.12.0-nightly+23bf4c0\n\n(and all later versions)\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nlinux (nixos), but this should be irrelevant\n\n### Terminal name/version\n\nalacritty but not relevant\n\n### $TERM environment variable\n\nxterm-256color but not relevant\n\n### Installation\n\nnix, via https://github.com/BirdeeHub/nixCats-nvim but installation method is irrelevant",
    "closed_at": "2025-05-20T17:06:24Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "other notes:\n\nPersonally, I find the addition of searching parent directories to be a security issue (or, well, a bigger security issue than the previous vim.o.exrc implementation anyway), as there is no way to tell it to confine its search to the project directory.\n\nIt could literally run `/.nvim.lua`\n\nAnd it can do this regardless of if you already have an `.nvim.lua` in your project or not.\n\nI feel this is a bad idea, and would be happy to see the change rolled back personally, or to at least allow us to define a root pattern, and (maybe) also a setting to cause it to stop searching after the first one found.\n\nIt does ask for a confirmation which says the path but... yeah... I am still not the biggest fan of that, especially given the fact that the trusted list is in a user modifiable file in the home directory. I am somewhat ok with the change because it does at least show the path when it asks for confirmation if the trust file hasn't been tampered with so... IDK but it still feels like a bad idea, at least without a way to confine the search\n\nRegardless, if the feature is to be kept, it should be fixed.",
            "created_at": "2025-05-18T12:45:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/34079#issuecomment-2888970252",
            "id": 2888970252,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34079",
            "node_id": "IC_kwDOAPphoM6sMjAM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2888970252/reactions"
            },
            "updated_at": "2025-05-18T22:04:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2888970252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85372418?v=4",
                "events_url": "https://api.github.com/users/BirdeeHub/events{/privacy}",
                "followers_url": "https://api.github.com/users/BirdeeHub/followers",
                "following_url": "https://api.github.com/users/BirdeeHub/following{/other_user}",
                "gists_url": "https://api.github.com/users/BirdeeHub/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BirdeeHub",
                "id": 85372418,
                "login": "BirdeeHub",
                "node_id": "MDQ6VXNlcjg1MzcyNDE4",
                "organizations_url": "https://api.github.com/users/BirdeeHub/orgs",
                "received_events_url": "https://api.github.com/users/BirdeeHub/received_events",
                "repos_url": "https://api.github.com/users/BirdeeHub/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BirdeeHub/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BirdeeHub/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BirdeeHub",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for reporting and sorry for introducing the bug. Not sure why I didn't catch that earlier.\n\nThis has nothing to do with aync code, but rather that exrc files in the current directory are read twice (both by `do_exrc_initalization()` in `src/nvim/main.c` and by `_defaults.lua`) due to vim.fs.find() starting in the current directory. Will fix this.\n\nAbout your considerations:\n\n> Personally, I find the addition of searching parent directories to be a security issue (or, well, a bigger security issue than the previous vim.o.exrc implementation anyway), as there is no way to tell it to confine its search to the project directory.\n\nThis is of course only true when a user has enabled the 'exrc' option. The current way to confine the search to the current directory only, would be to disable this default: `:autocmd! nvim.find_exrc`.\n\n> I feel this is a bad idea, and would be happy to see the change rolled back personally, or to at least allow us to define a root pattern, and (maybe) also a setting to cause it to stop searching after the first one found.\n\nThis is what I had implemented first, but later changed it to load all exrc files found in parents directories. The logic was that this would enable 'stacking' configuration files. Maybe @gpanders has an opinion on what action should be taken.\n\nPerhaps it would be better to create a separate issue for it.",
            "created_at": "2025-05-19T13:07:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/34079#issuecomment-2890971448",
            "id": 2890971448,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34079",
            "node_id": "IC_kwDOAPphoM6sULk4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890971448/reactions"
            },
            "updated_at": "2025-05-19T13:07:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2890971448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Personally, I find the addition of searching parent directories to be a security issue (or, well, a bigger security issue than the previous vim.o.exrc implementation anyway), as there is no way to tell it to confine its search to the project directory.\n> \n> It could literally run /.nvim.lua\n\nEvery file will still prompt the user to inspect it before running (or at least it SHOULD, if it does not that's a bug), and the user can choose to deny the file. Nothing will be run without explicit user consent.\n\n> (maybe) also a setting to cause it to stop searching after the first one found.\n\nWe should (experimentally) support un-setting the `'exrc'` option to mean \"stop searching\". @yochem can you add this to your fixup PR as well? Basically after executing any exrc file, make sure that `vim.o.exrc` is still true and if it is not, break from the loop. We also need to document this as a feature in the `'exrc'` docs.\n\n",
            "created_at": "2025-05-19T13:54:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/34079#issuecomment-2891129176",
            "id": 2891129176,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34079",
            "node_id": "IC_kwDOAPphoM6sUyFY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891129176/reactions"
            },
            "updated_at": "2025-05-19T13:54:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891129176",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sounds like a great addition. I'll include it in my PR later today. ",
            "created_at": "2025-05-19T13:56:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/34079#issuecomment-2891136822",
            "id": 2891136822,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34079",
            "node_id": "IC_kwDOAPphoM6sUz82",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891136822/reactions"
            },
            "updated_at": "2025-05-19T13:56:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891136822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> We should (experimentally) support un-setting the `'exrc'` option to mean \"stop searching\". @yochem can you add this to your fixup PR as well? Basically after executing any exrc file, make sure that `vim.o.exrc` is still true and if it is not, break from the loop. We also need to document this as a feature in the `'exrc'` docs.\n\n\nThis works for me! This way one could limit it if they want to but otherwise not worry too hard about setting a possibly inflexible root pattern thing. Great thinking",
            "created_at": "2025-05-19T17:21:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/34079#issuecomment-2891756487",
            "id": 2891756487,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34079",
            "node_id": "IC_kwDOAPphoM6sXLPH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891756487/reactions"
            },
            "updated_at": "2025-05-19T17:21:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891756487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85372418?v=4",
                "events_url": "https://api.github.com/users/BirdeeHub/events{/privacy}",
                "followers_url": "https://api.github.com/users/BirdeeHub/followers",
                "following_url": "https://api.github.com/users/BirdeeHub/following{/other_user}",
                "gists_url": "https://api.github.com/users/BirdeeHub/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BirdeeHub",
                "id": 85372418,
                "login": "BirdeeHub",
                "node_id": "MDQ6VXNlcjg1MzcyNDE4",
                "organizations_url": "https://api.github.com/users/BirdeeHub/orgs",
                "received_events_url": "https://api.github.com/users/BirdeeHub/received_events",
                "repos_url": "https://api.github.com/users/BirdeeHub/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BirdeeHub/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BirdeeHub/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BirdeeHub",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Also I'm not sure I understand entirely how it isn't related to vim.system or async code?\n\nI believe you and I don't necessarily need to understand, but it is confusing me because if I just put a regular print in there it only prints once it seemed to me like putting vim.system in there was the problem.\n\nIs this because when you call vim.system it requires _defaults.lua, and THAT is what causes the re run?\n\nRegardless, I'm glad you knew the issue and are able to fix!",
            "created_at": "2025-05-19T17:25:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/34079#issuecomment-2891766343",
            "id": 2891766343,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34079",
            "node_id": "IC_kwDOAPphoM6sXNpH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891766343/reactions"
            },
            "updated_at": "2025-05-19T17:25:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891766343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85372418?v=4",
                "events_url": "https://api.github.com/users/BirdeeHub/events{/privacy}",
                "followers_url": "https://api.github.com/users/BirdeeHub/followers",
                "following_url": "https://api.github.com/users/BirdeeHub/following{/other_user}",
                "gists_url": "https://api.github.com/users/BirdeeHub/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BirdeeHub",
                "id": 85372418,
                "login": "BirdeeHub",
                "node_id": "MDQ6VXNlcjg1MzcyNDE4",
                "organizations_url": "https://api.github.com/users/BirdeeHub/orgs",
                "received_events_url": "https://api.github.com/users/BirdeeHub/received_events",
                "repos_url": "https://api.github.com/users/BirdeeHub/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BirdeeHub/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BirdeeHub/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BirdeeHub",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> if I just put a regular print in there it only prints once\n\nIt prints twice for me. Are you using the experimental vim._extui by any chance?",
            "created_at": "2025-05-19T17:57:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/34079#issuecomment-2891837740",
            "id": 2891837740,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34079",
            "node_id": "IC_kwDOAPphoM6sXfEs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891837740/reactions"
            },
            "updated_at": "2025-05-19T17:57:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891837740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Are you using the experimental vim._extui by any chance?\n\nI don't think so? Maybe something I am using is? No idea.",
            "created_at": "2025-05-19T18:01:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/34079#issuecomment-2891847846",
            "id": 2891847846,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34079",
            "node_id": "IC_kwDOAPphoM6sXhim",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891847846/reactions"
            },
            "updated_at": "2025-05-19T18:01:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891847846",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85372418?v=4",
                "events_url": "https://api.github.com/users/BirdeeHub/events{/privacy}",
                "followers_url": "https://api.github.com/users/BirdeeHub/followers",
                "following_url": "https://api.github.com/users/BirdeeHub/following{/other_user}",
                "gists_url": "https://api.github.com/users/BirdeeHub/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BirdeeHub",
                "id": 85372418,
                "login": "BirdeeHub",
                "node_id": "MDQ6VXNlcjg1MzcyNDE4",
                "organizations_url": "https://api.github.com/users/BirdeeHub/orgs",
                "received_events_url": "https://api.github.com/users/BirdeeHub/received_events",
                "repos_url": "https://api.github.com/users/BirdeeHub/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BirdeeHub/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BirdeeHub/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BirdeeHub",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "regardless, I just built your version ([like so](https://github.com/BirdeeHub/birdeevim/blob/a4734496a1312dbce3dddeb22022f9ef08f7d058/flake.nix#L19)) and it seems to work so, while the behavior on my end was really weird, it seems you found the correct fix",
            "created_at": "2025-05-19T18:08:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/34079#issuecomment-2891865912",
            "id": 2891865912,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34079",
            "node_id": "IC_kwDOAPphoM6sXl84",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891865912/reactions"
            },
            "updated_at": "2025-05-19T19:35:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2891865912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/85372418?v=4",
                "events_url": "https://api.github.com/users/BirdeeHub/events{/privacy}",
                "followers_url": "https://api.github.com/users/BirdeeHub/followers",
                "following_url": "https://api.github.com/users/BirdeeHub/following{/other_user}",
                "gists_url": "https://api.github.com/users/BirdeeHub/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BirdeeHub",
                "id": 85372418,
                "login": "BirdeeHub",
                "node_id": "MDQ6VXNlcjg1MzcyNDE4",
                "organizations_url": "https://api.github.com/users/BirdeeHub/orgs",
                "received_events_url": "https://api.github.com/users/BirdeeHub/received_events",
                "repos_url": "https://api.github.com/users/BirdeeHub/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BirdeeHub/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BirdeeHub/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BirdeeHub",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Fixed by https://github.com/neovim/neovim/pull/34090",
            "created_at": "2025-05-20T17:06:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/34079#issuecomment-2895225203",
            "id": 2895225203,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34079",
            "node_id": "IC_kwDOAPphoM6skaFz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2895225203/reactions"
            },
            "updated_at": "2025-05-20T17:06:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2895225203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34079/comments",
    "created_at": "2025-05-18T12:13:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34079/events",
    "html_url": "https://github.com/neovim/neovim/issues/34079",
    "id": 3071700073,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": "wrong behavior that was introduced in a previous commit (please bisect)",
            "id": 619474658,
            "name": "bug-regression",
            "node_id": "MDU6TGFiZWw2MTk0NzQ2NTg=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-regression"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "startup, shutdown, attach, detach",
            "id": 870629450,
            "name": "lifecycle",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lifecycle"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue has been tracked to a specific commit",
            "id": 1481421490,
            "name": "has:bisected",
            "node_id": "MDU6TGFiZWwxNDgxNDIxNDkw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:bisected"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34079/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 52,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 65,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-05-23T05:13:34Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM63Fmxp",
    "number": 34079,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34079/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34079/timeline",
    "title": "[regression] async code in .nvim.lua causes prior statements to be ran multiple times",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-20T17:06:25Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34079",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/85372418?v=4",
        "events_url": "https://api.github.com/users/BirdeeHub/events{/privacy}",
        "followers_url": "https://api.github.com/users/BirdeeHub/followers",
        "following_url": "https://api.github.com/users/BirdeeHub/following{/other_user}",
        "gists_url": "https://api.github.com/users/BirdeeHub/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/BirdeeHub",
        "id": 85372418,
        "login": "BirdeeHub",
        "node_id": "MDQ6VXNlcjg1MzcyNDE4",
        "organizations_url": "https://api.github.com/users/BirdeeHub/orgs",
        "received_events_url": "https://api.github.com/users/BirdeeHub/received_events",
        "repos_url": "https://api.github.com/users/BirdeeHub/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/BirdeeHub/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BirdeeHub/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/BirdeeHub",
        "user_view_type": "public"
    }
}