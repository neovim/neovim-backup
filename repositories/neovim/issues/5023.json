{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Implement ability to attach `on_stdout`/`on_stderr`/etc handler to an existing job. Something like this:\r\n\r\n```\r\ncall jobattach({jobid}, {opts})\r\n```\r\n\r\nwhere `{opts}` is a dictionary whose structure is the same as that of `jobstart()`.\r\n\r\nIn fact I think we should deprecate `jobstart()`, rename it `job()`, and if the first argument of `job()` is a job id, operate on the existing job.\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> ability to attach on_stdout/on_stderr/etc handler to an existing job\n\nIs there an intended use case for this? What happens if the job already has an handler of this kind, does it get replaced, or will both fire?\n\n> In fact I think we should deprecate jobstart(), rename it job()\n\nWhy? jobstart is a good descriptive name, why obfuscate it?\n",
            "created_at": "2016-07-08T22:36:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231488998",
            "id": 231488998,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ4ODk5OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231488998/reactions"
            },
            "updated_at": "2016-07-08T22:36:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231488998",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> use case for this?\n\nUse case is listening to `:term` output: http://stackoverflow.com/q/38216231/152142\n\n> What happens if the job already has an handler of this kind, does it get replaced, or will both fire?\n\nIt calls all attached handlers.\n\n> Why? jobstart is a good descriptive name, why obfuscate it?\n\nI won't insist on it. Maybe I am veering into too-clever territory.\n",
            "created_at": "2016-07-08T22:39:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231489520",
            "id": 231489520,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ4OTUyMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231489520/reactions"
            },
            "updated_at": "2016-07-08T22:39:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231489520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Use case is listening to :term output\n\nisn't `:term` is just thin wrapper around `termopen()`, which already would allow this? Could be a naming/documentation issue.\n",
            "created_at": "2016-07-08T22:52:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231491365",
            "id": 231491365,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ5MTM2NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231491365/reactions"
            },
            "updated_at": "2016-07-08T22:52:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231491365",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I forgot about `termopen()`. \r\n\r\nBut then some questions:\r\n-  why do we expose `b:terminal_job_id` _at all_ if we insist on `termopen()` for programmatic control? \r\n- is there much reason _not_ to allow attaching additional handlers to a job?\r\n",
            "created_at": "2016-07-08T23:00:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231492422",
            "id": 231492422,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ5MjQyMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231492422/reactions"
            },
            "updated_at": "2018-02-08T13:21:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231492422",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> why do we expose b:terminal_job_id at all\n\nWhy not? otherwise _any_ repl managing plugin would be forced to reimplement this themselves. (_regardless_ if it only manages terminals it opens itself with `termopen` or it provides functionallity to \"unowned\" terminals opened by the user)\n\n> is there much reason not to allow attaching additional handlers to a job?\n\nNot really, except for making the code more complex, but it shouldn't be too bad (keep a list of self-ufunc_t pairs instead of one on each). I was just curious if this actually was a requested feature.\n",
            "created_at": "2016-07-08T23:06:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231493198",
            "id": 231493198,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ5MzE5OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231493198/reactions"
            },
            "updated_at": "2016-07-08T23:06:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231493198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There is also the slight issue of racyness, if someone does\n\n```\nlet job = jobstart()\ncall job_attach(job, {'on_stdout':...})\n```\n\ndo we promise it to be race-free? Or slightly more relevantly\n\n```\nlet job = jobstart()\ncall do_something()\ncall job_attach(job, {'on_stdout':...})\n```\n\nwhere it is not entirely obvious to what extent `do_something()` invokes event processing.\n",
            "created_at": "2016-07-08T23:10:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231493691",
            "id": 231493691,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ5MzY5MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231493691/reactions"
            },
            "updated_at": "2016-07-08T23:10:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231493691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Why not? otherwise any repl managing plugin would be forced to reimplement this themselves. (regardless if it only manages terminals it opens itself with termopen or it provides functionallity to \"unowned\" terminals opened by the user)\n\nI'd say the same use case of \"providing functionality to unowned terminals\" drives the request for `jobattach()`: if a plugin needs to listen to a `:term` opened by the user or some other plugin.\n\n> do we promise it to be race-free? \n\nDo you mean because `on_stdout` must be evaluated, and can have side-effects? I think it should be treated (in documentation and implementation) the same as autocmd handlers: if multiple `autocmd` handlers are listening to the same event, then:\n- the first such handler is processed, its side-effects are reconciled, \n- then the next handler is processed, (sending the same data as was sent to the first handler)\n- etc...\n\n**edit:** In your sample code, `do_something()` does not have any effect on the handler added after it.\n",
            "created_at": "2016-07-08T23:19:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231494832",
            "id": 231494832,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ5NDgzMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231494832/reactions"
            },
            "updated_at": "2016-07-08T23:20:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231494832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No I meant: could some prefix of the output already be processed before the handler gets registered and thus not seen by the handler? Reasonably not in the first case, but consider if `do_something` does \"unrelated\" event processing.\n",
            "created_at": "2016-07-08T23:24:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231495554",
            "id": 231495554,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ5NTU1NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231495554/reactions"
            },
            "updated_at": "2016-07-08T23:24:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231495554",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> could some prefix of the output already be processed before the handler gets registered and thus not seen by the handler\n\nNot sure I see the problem. Any handler that's added after the first one must expect that it could miss data since the initial call. We can document that to make it extra clear.\n",
            "created_at": "2016-07-08T23:29:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231496159",
            "id": 231496159,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ5NjE1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231496159/reactions"
            },
            "updated_at": "2016-07-08T23:29:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231496159",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Right, it is a problem of documentation and expectation management. But if we include say a streamreader helper for plugins that only are interested in the complete stdout on exit, the question is if we want to allow the interface\n\n```\n    let job = jobstart(...)\n    call util#readstream(job, \"stdout\", \"on_complete_output\")\n```\n\nwhere \"on_complete_output\" is called on exit/stdout-eof with the complete output (with partial lines properly joined)\nor if we are prefer an interface that don't need this:\n\n```\n  let job = jobstart(..., {\"on_stdout\": \"util#streamreader\", \n                          \\ \"on_complete_stdout\":\"callback\"})\n```\n\nor even\n\n```\ncall util#systemlist_async(..., \"exit_callback\", stdin_data)\n```\n\nwhere the exit callback will receive the complete outputs.\nNot saying the first option is the best, just that it is an opportunity to consider.\n",
            "created_at": "2016-07-09T09:34:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231525646",
            "id": 231525646,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTUyNTY0Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231525646/reactions"
            },
            "updated_at": "2016-07-09T09:34:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231525646",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Instead of `on_complete_stdout`, could we send the entire data as an argument to `on_exit`? This could be enabled optionally as a flag in the `{opt}` dictionary, if efficiency is a concern.\n",
            "created_at": "2016-07-09T19:13:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231550745",
            "id": 231550745,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTU1MDc0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231550745/reactions"
            },
            "updated_at": "2016-07-09T19:14:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231550745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This could be enabled optionally as a flag in the {opt} dictionary\n\nThis usecase seems common enough to warrant a simple convenient solution, so sounds reasonable to me.\n",
            "created_at": "2016-07-09T19:19:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/5023#issuecomment-231551063",
            "id": 231551063,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTU1MTA2Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231551063/reactions"
            },
            "updated_at": "2016-07-09T19:19:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/231551063",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/5023/comments",
    "created_at": "2016-07-08T22:31:55Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/5023/events",
    "html_url": "https://github.com/neovim/neovim/issues/5023",
    "id": 164628426,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/5023/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUxNjQ2Mjg0MjY=",
    "number": 5023,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/5023/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/5023/timeline",
    "title": "jobattach() : add handlers to an existing job",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:58:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/5023",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}