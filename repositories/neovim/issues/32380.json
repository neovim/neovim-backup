{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
        "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
        "followers_url": "https://api.github.com/users/luukvbaal/followers",
        "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
        "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/luukvbaal",
        "id": 31730729,
        "login": "luukvbaal",
        "node_id": "MDQ6VXNlcjMxNzMwNzI5",
        "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
        "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
        "repos_url": "https://api.github.com/users/luukvbaal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/luukvbaal",
        "user_view_type": "public"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
            "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
            "followers_url": "https://api.github.com/users/luukvbaal/followers",
            "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luukvbaal",
            "id": 31730729,
            "login": "luukvbaal",
            "node_id": "MDQ6VXNlcjMxNzMwNzI5",
            "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
            "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
            "repos_url": "https://api.github.com/users/luukvbaal/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luukvbaal",
            "user_view_type": "public"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nMessages preceding user input (accompanying to `z=`, `inputlist` and similar) have the same kind as those coming from `:nmap`. Assuming using still only `ext_messages` (without `ext_cmdline`), there is no way to treat \"interactive\" messages in a special way (i.e. not using a timer to remove them, but f.e. `cmdline_hide`, still available). \n\n### Steps to reproduce\n\ninit.lua:\n```lua\nlocal api = vim.api\nlocal ns = api.nvim_create_namespace('messageRedirection')\n\nlocal function log(msg)\n  api.nvim_buf_set_lines(1, -1, -1, true, vim.split(msg, '\\n'))\n  vim.cmd.normal 'G'\nend\n\nlocal function detach()\n  vim.ui_detach(ns)\n  vim.schedule(function ()\n    api.nvim__redraw({flush = true})\n  end)\nend\n\napi.nvim_create_autocmd('CmdlineEnter', {callback = detach})\n\nlocal function attach()\n  api.nvim__redraw({flush = true})\n  vim.ui_attach(ns, {ext_messages = true, ext_cmdline = false}, function (event, kind, content, replace)\n    if event ~= 'msg_show' then return end\n    if kind == 'return_prompt' then\n      api.nvim_input('\\r')\n      return\n    end\n\n    vim.schedule(function ()\n      log(vim.inspect({k = kind or 'none', c = content or 'none'}))\n      api.nvim__redraw({flush = true})\n    end)\n  end)\nend\n```\n- `nvim --clean -u init.lua`\n- see the output from `:nmap x` and `:call inputlist(['x'])`\n\n![Image](https://github.com/user-attachments/assets/4e006472-756c-4c4b-91d7-a2fadcabda44)\n\n### Expected behavior\n\nMessages needed waiting for user input have separate kind(s).\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-1714+g9198368f32\n\n### Vim (not Nvim) behaves the same?\n\nn/a\n\n### Operating system/version\n\nDebian Sid\n\n### Terminal name/version\n\nalacritty\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nfrom repo",
    "closed_at": "2025-02-20T22:04:29Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "IMO similarly to the cases of empty kind it would be good to fix this ambiguity gradually case by case. ",
            "created_at": "2025-02-12T15:29:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/32380#issuecomment-2654062859",
            "id": 2654062859,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32380",
            "node_id": "IC_kwDOAPphoM6eMckL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2654062859/reactions"
            },
            "updated_at": "2025-02-12T15:29:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2654062859",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Keeping in mind that the repro here isn't officially supported, and that proper usage of the ext_ui protocol already allows distinguishing prompt messages while a `cmdline_show->prompt` event is active, I do think making known earlier if a message will be followed by such an event wouldn't hurt.\n\nWe might replace some `list_cmd` kinds (`z=`, `inputlist()`, `tselect`) with `confirm` to that end. What do you think @folke #32521? Might make the handler logic somewhat simpler (and handle the unsupported use-case here).",
            "created_at": "2025-02-20T10:16:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/32380#issuecomment-2671054901",
            "id": 2671054901,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32380",
            "node_id": "IC_kwDOAPphoM6fNRA1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2671054901/reactions"
            },
            "updated_at": "2025-02-20T13:04:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2671054901",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Maybe I'll find a time to handle ext_cmdline too, but I still have few needs for it. On the other side I checked if `prompt` lands to the handler without `ext_cmdline`:\n\n![Image](https://github.com/user-attachments/assets/ffdb1ce4-e54d-40ea-b244-67e30e7b62c6)\n\n<details>\n\n<summary>init.lua</summary>\n\n```lua\nlocal api = vim.api\nlocal ns = api.nvim_create_namespace('messageRedirection')\n\nlocal function log(msg)\n  vim.schedule(function ()\n    api.nvim_buf_set_lines(1, -1, -1, true, vim.split(msg, '\\n'))\n    api.nvim__redraw({flush = true})\n    vim.cmd.normal 'G'\n  end)\nend\n\nlocal function detach()\n  vim.ui_detach(ns)\n  vim.schedule(function ()\n    api.nvim__redraw({flush = true})\n  end)\nend\n\napi.nvim_create_autocmd('CmdlineEnter', {callback = detach})\n\nlocal function handleMessages(kind, content, replace)\n  if kind == 'return_prompt' then\n    api.nvim_input('\\r')\n    return\n  end\n\n  log(vim.inspect({k = kind or 'none', c = content or 'none'}))\nend\n\n-- local function handleCmdline(content, pos, firstc, prompt, indent, level, hlId)\nlocal function handleCmdline(...)\n  log(vim.inspect({...}))\nend\n\nlocal function attach()\n  api.nvim__redraw({flush = true})\n  vim.ui_attach(ns, {ext_messages = true, ext_cmdline = false}, function (event, ...)\n    if event == 'msg_show' then\n      handleMessages(...)\n    elseif event == 'cmdline_show' then\n      handleCmdline(...)\n    end\n  end)\nend\n\napi.nvim_create_autocmd({'CmdlineLeave'}, {callback = attach})\napi.nvim_create_autocmd({'UIEnter'}, {callback = attach})\n```\n\n</details>",
            "created_at": "2025-02-20T12:59:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/32380#issuecomment-2671427976",
            "id": 2671427976,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32380",
            "node_id": "IC_kwDOAPphoM6fOsGI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2671427976/reactions"
            },
            "updated_at": "2025-02-20T12:59:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2671427976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32380/comments",
    "created_at": "2025-02-09T15:49:07Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32380/events",
    "html_url": "https://github.com/neovim/neovim/issues/32380",
    "id": 2840766598,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "needs a clear design proposal",
            "id": 124510010,
            "name": "needs:design",
            "node_id": "MDU6TGFiZWwxMjQ1MTAwMTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:design"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "UI messages, log messages, errors, warnings, feedback",
            "id": 5637083595,
            "name": "messages",
            "node_id": "LA_kwDOAPphoM8AAAABT_8Ryw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/messages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32380/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6pUqiG",
    "number": 32380,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32380/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32380/timeline",
    "title": "separate \"kind\" for messages preceding user input",
    "updated_at": "2025-02-20T22:04:29Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32380",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia",
        "user_view_type": "public"
    }
}