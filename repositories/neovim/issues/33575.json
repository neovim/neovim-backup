{
    "active_lock_reason": "resolved",
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nNvim doesn't include configs for common languages, so users must install nvim-lspconfig or add configs manually.\n\n### Expected behavior\n\n1. Implement https://github.com/neovim/neovim/issues/33577\n2. Upstream a subset of nvim-lspconfig configs (open to discussion, but no more than 20-40):\n    - lua\n    - typescript\n    - jdtls (java)\n    - c\n    - ... \n3. Introduce a CI job similar to `.github/workflows/vim_patches.yml` which auto-creates a PR that syncs the selected configs from nvim-lspconfig. That allows nvim-lspconfig to be the source of truth.\n    - Because of vim.lsp.config's \"merge\" feature, the \"redundant\" configs in nvim-lspconfig (should) be harmless.",
    "closed_at": "2025-07-10T18:52:57Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "What if I don't _want_ to merge? What if -- for whatever reason -- a default setting just doesn't work for me and I want to use my own config without any chance of interference?\n\n(I understand that this is not the scenario to optimize for, but it's a scenario that should definitely be supported.)",
            "created_at": "2025-04-22T13:08:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2821280126",
            "id": 2821280126,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oKVF-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821280126/reactions"
            },
            "updated_at": "2025-04-22T13:08:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821280126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What if I don't _want_ to merge? What if -- for whatever reason -- a default setting just doesn't work for me and I want to use my own config without any chance of interference?\n\nMaybe this goes without saying, but if merging does end up being required, the docs should make it abundantly clear that users must override settings in default configurations that they don't want. Otherwise, I would expect a ton of questions here, on Reddit, on Matrix, and elsewhere along the lines of \"Why does LSP for <lang-name> work in such-and-such a way when I didn't ask for that?\"\n",
            "created_at": "2025-04-22T13:20:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2821313405",
            "id": 2821313405,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oKdN9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821313405/reactions"
            },
            "updated_at": "2025-04-22T13:20:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821313405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> users must install nvim-lspconfig or add configs manually.\n\n> , but no more than 20-40)\n\nNot a fan of this.\n\n- Users using any language servers not included still have to install nvim-lspconfig, or configure these manually.\n- Opens up potentially endless debates if XY should be included in core. Especially if we don't have any clear criteria for inclusion.\n\nHow will we deal with the off-spec extensions? E.g. clangd is arguably popular but lspconfig includes off-spec stuff. So far we have a strict \"no off-spec rule\". If we soften that up, we open another flood gate. Keeping in mind that features often trickle in slowly. Each addition looks reasonably small and before you know we have 10+ extra commands for 30 of those 40 configs.\n\nIf we don't add off-spec (which I think we really shouldn't), then you have another difference, and upstreaming the configs from lspconfig becomes more difficult - unless we remove them there too.\n\nAnd it will further add to user confusion in regards to what contains what.  (E.g. java users will then have neovim core, lspconfig, nvim-jdtls, and nvim-java and try to reason about the differences somehow. And as author of nvim-jdtls I'd have to consider config merge behavior between nvim-jdtls and only core, nvim-jdtls and core+lspconfig; Especially the `on_attach` merge behavior will be problematic (run all) )\n",
            "created_at": "2025-04-22T13:49:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2821398496",
            "id": 2821398496,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oKx_g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 10,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821398496/reactions"
            },
            "updated_at": "2025-04-22T13:49:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821398496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think \n1. built-in plugin manager combined with\n2. a one-line command to specifically install nvim-lspconfig using it (and possibly nvim-treesitter etc.)\n\nwould be higher leverage.",
            "created_at": "2025-04-22T13:52:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2821410341",
            "id": 2821410341,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oK04l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 16,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 16,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821410341/reactions"
            },
            "updated_at": "2025-04-22T13:52:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821410341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Users using any language servers not included still have to install nvim-lspconfig, or configure these manually.\n\nThat's the case for any core functionality where the \"long tail\" isn't served by core features. Doesn't mean that the core OOTB experience can't be improved for the common case.\n\n> Opens up potentially endless debates if XY should be included in core. Especially if we don't have any clear criteria for inclusion.\n\nI'm happy to handle all of those requests. I already do so in nvim-lspconfig. And we'll be able to form clear criteria after some initial churn.\n\n> How will we deal with the off-spec extensions? E.g. clangd is arguably popular but lspconfig includes off-spec stuff. \n\nUseful off-spec stuff is exactly where a default config can provide value. Expecting each user to manually research and configure that is a costly tradeoff.\n\n> * built-in plugin manager combined with\n> * a one-line command to specifically install nvim-lspconfig using it\n\nIf nvim-lspconfig is our answer for users that don't want to manually configure lsp configs, then that implies that some of those configs can be upstreamed. \n\nIt is a logical contradiction to raise all of these concerns but then also recommend nvim-lspconfig, which has exactly the same potential problems.",
            "created_at": "2025-04-22T14:26:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2821518267",
            "id": 2821518267,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oLPO7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821518267/reactions"
            },
            "updated_at": "2025-04-22T14:27:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821518267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It is a logical contradiction to raise all of these concerns but then also recommend nvim-lspconfig, which has exactly the same potential problems.\n\nNo, it's not, since this solves the problem of preventing unwanted conflicts, which unconditionally bundled configs will create.\n\n> Useful off-spec stuff is exactly where a default config can provide value.\n\nSure, but it directly goes against our consistent and vocal policy of supporting the specification _and nothing else_. This would be a significant shift (and IMO not to the better).",
            "created_at": "2025-04-22T14:29:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2821528960",
            "id": 2821528960,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oLR2A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821528960/reactions"
            },
            "updated_at": "2025-04-22T14:31:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821528960",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Useful off-spec stuff is exactly where a default config can provide value.\n> \n> Sure, but it directly goes against our consistent and vocal policy of supporting the specification _and nothing else_. This would be a significant shift (and IMO not to the better).\n\nConfigs are different than the core lsp framework. Similarly, ftplugins contain a lot of \"ugliness\" that deals with per-filetype quirks.",
            "created_at": "2025-04-22T14:33:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2821540129",
            "id": 2821540129,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oLUkh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821540129/reactions"
            },
            "updated_at": "2025-04-22T14:34:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821540129",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Configs are different than the core lsp framework\n\nStuff like https://github.com/neovim/nvim-lspconfig/blob/5af60bbb835d5b6efdc64cdff2a5b27cde4120de/lsp/clangd.lua#L17 is _not_ configuration.\n\nOr if it is, you also need to look at 2000-3000 lines of jdtls extension logic that is just as useful, if not more.\n\n> That's the case for any core functionality where the \"long tail\" isn't served by core features. Doesn't mean that the core OOTB experience can't be improved for the common case.\n\nSure, but it does mean that your problem statement (users need to install lspconfig) is not solved.\nYou'd have to include all configs for that. Which imho would be less problematic and less confusing if we'd to that (but without off-spec extensions). Then at least the rules are clear for users and contributors. But I still think the plugin manager + easy install of lspconfig would be the better route. The configs would stay optional, which removes a lot of complexity in regards to merging (https://github.com/neovim/neovim/issues/33577) and people who want can get them and can receive updates decoupled from nvim's release cycle.\n\n",
            "created_at": "2025-04-22T14:45:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2821577956",
            "id": 2821577956,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oLdzk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821577956/reactions"
            },
            "updated_at": "2025-04-22T14:50:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821577956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> your problem statement (users need to install lspconfig) is not solved.\n\nWe are nitpicking here. nvim-lspconfig also doesn't support every LS under the sun, but it solves the common case for a reasonable subset. It has a defined \"scope\"; and for Nvim builtin lsp configs, we can further constrain that scope.\n\n> But I still think the plugin manager + easy install of lspconfig would be the better route.\n\nThat's on the roadmap, but it's orthogonal. And farther away on the timeline.\n\nLua LS support in Nvim should look like this:\n\n```\n[install luals]\nnvim --clean\n:lua vim.lsp.enable('luals')\n:edit foo.lua\n```\n\nWithout builtin configs, we miss out on a very high-leverage improvement to OOTB experience for  a specific, common subset. Just deciding to ignore that is a costly \"unforced error\".",
            "created_at": "2025-04-22T15:44:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2821746692",
            "id": 2821746692,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oMHAE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821746692/reactions"
            },
            "updated_at": "2025-04-22T15:49:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2821746692",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> And farther away on the timeline.\n\n@echasnovski mentioned wanting to start working on it in a couple weeks if I'm not mistaken. Maybe not that far away. \n\n> Lua LS support in Nvim should look like this:\n\nBut if you only include a subset with unknown criteria the reality is that users will first need to learn which are included, check if all they use are, learn their names (luals for example packaged as lua-language-server in some distributions). Depending on that they either still need to install lspconfig or decide to configure the missing ones manually. Or attempt to create a PR and learn that because of maintainer gut feeling their server doesn't qualify. \n\nI don't get why you want this subset restriction.  If out-of-box support is high leverage that should apply to all servers. Either include all, or none\n",
            "created_at": "2025-04-22T20:56:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2822465747",
            "id": 2822465747,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oO2jT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 13,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 13,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2822465747/reactions"
            },
            "updated_at": "2025-04-22T20:56:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2822465747",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "just a thought, could we consider an explicit \"extends\" (like treesitter queries have) for people that really want that? It could also serve the benefit to infer the `vim.lsp.Config` type (for autocomplete etc of the config itself), and wouldn't break anyone's existing configs on upgrading.\n\ne.g. today I do...\n```lua\n--- @type vim.lsp.Config\nreturn {\n  cmd = {\n```\n\nwhat if there was some option like this to \"extend\" ?\n```lua\n-- requesting to explicitly extends the defaults\nreturn vim.lsp.extends(\"jdtls\", {\n  cmd = {\n```\n",
            "created_at": "2025-04-22T21:44:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2822549271",
            "id": 2822549271,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oPK8X",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2822549271/reactions"
            },
            "updated_at": "2025-04-22T21:44:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2822549271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/504194?v=4",
                "events_url": "https://api.github.com/users/rmuir/events{/privacy}",
                "followers_url": "https://api.github.com/users/rmuir/followers",
                "following_url": "https://api.github.com/users/rmuir/following{/other_user}",
                "gists_url": "https://api.github.com/users/rmuir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rmuir",
                "id": 504194,
                "login": "rmuir",
                "node_id": "MDQ6VXNlcjUwNDE5NA==",
                "organizations_url": "https://api.github.com/users/rmuir/orgs",
                "received_events_url": "https://api.github.com/users/rmuir/received_events",
                "repos_url": "https://api.github.com/users/rmuir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rmuir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rmuir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rmuir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > And farther away on the timeline.\n> \n> @echasnovski mentioned wanting to start working on it in a couple weeks if I'm not mistaken. Maybe not that far away\n\nYes, I do plan to have something reviewable in single digit May. **Edit**: well, there is a significant progress, but not quite reviewable yet. Will try to work on it every day until it is in good shape for PR.\n\nAnd for what it's worth going the \"built-in plugin manager plus install specialized plugin\" seems like a more robust long term alternative. I would even go as far as to suggest introducing specialized language plugins which could contain at least both tree-sitter and LSP data, but it is a bit early for that.\n\n",
            "created_at": "2025-04-23T06:05:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2823160093",
            "id": 2823160093,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oRgEd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 11,
                "total_count": 16,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2823160093/reactions"
            },
            "updated_at": "2025-05-09T14:23:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2823160093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I would even go as far as to suggest introducing specialized language plugins which could contain at least both tree-sitter and LSP data\n\nThat's basically the point of this issue: there are some use-cases that are important enough that we want to upstream a subset of LSP \"plugins\".",
            "created_at": "2025-04-23T11:57:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2824041958",
            "id": 2824041958,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oU3Xm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2824041958/reactions"
            },
            "updated_at": "2025-04-23T11:57:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2824041958",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That's basically the point of this issue: there are some use-cases that are important enough that we want to upstream a subset of LSP \"plugins\".\n\nI am mostly all for a better out of the box experience. I guess my personal issue here is that bundling LSP configs still won't make it truly an \"out of the box\" experience, since users still need to install LSP servers themselves. So if enabling LSP would still require manual actions, then adding a potential one-liner to download LSP configs shouldn't be asking too much. In exchange it leaves all the usual benefits of \"plugin-vs-bundle\": enabling faster reactions after LSP server updates, allowing to delegate more when making decisions, etc.\n\nThis, for example, is different from tree-sitter parsers which do work out of the box if bundled in Nvim itself (at least on clean install).",
            "created_at": "2025-04-23T12:35:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2824143846",
            "id": 2824143846,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oVQPm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 13,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 13,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2824143846/reactions"
            },
            "updated_at": "2025-04-23T12:37:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2824143846",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Neovim already ships the following Tree-sitter parsers: C, Lua, Markdown, Vimscript & Vimdoc (according to the `treesitter` help doc) .\n\nShipping 20 (or more) default LSP configs does seem excessive.\nShipping nothing seems too spartan.\n\nAs an outsider, repeating the Tree-sitter methodology seems reasonable, a minimal set of LSP configs somewhat matching the minimal set of Tree-sitter parsers feels nice to me. Maybe LSP configs for the following languages: C, Lua, Python & JavaScript / Typescript. JS/TS & Python being the most used languages these days and C/Lua because they are the linga-franca of the Neovim source.\n\nMaybe Python is complicated since I am not sure there is one ideal LSP? I don't use Python to know what the LSP state is in that space.\n\nGo, Rust, Ruby, HTML, CSS, Bash, PHP etc should require a small amount of manual action in my opinion.\n\nIf you ship 20 LSP configs then users will complain why their language missed out.\n\nMy 2cents.",
            "created_at": "2025-04-24T06:20:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2826506226",
            "id": 2826506226,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oeQ_y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2826506226/reactions"
            },
            "updated_at": "2025-04-24T06:20:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2826506226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> JS/TS & Python being the most used languages these days and C/Lua because they are the linga-franca of the Neovim source.\n\n> Maybe Python is complicated since I am not sure there is one ideal LSP? I don't use Python to know what the LSP state is in that space.\n\n> Go, Rust, Ruby, HTML, CSS, Bash, PHP etc should require a small amount of manual action in my opinion.\n\n\nDepending on which programming language statistics you look at (https://survey.stackoverflow.co/2024/technology#most-popular-technologies, https://www.index.dev/blog/most-popular-programming-languages-, https://spectrum.ieee.org/top-programming-languages-2024) you'd also have to include html, css, sql, bash, java if you wanted to include js/typescript.\n\nAnd how will this even work long-term? Would we replace bundled configs once another language becomes more popular? Or do we end up with the 20-40 configs anyway in the next 10 years?\n\nThis all sounds a lot like \"_My_ used servers should be included, I'm okay if others require configuration\"\n\nFor tree-sitter parsers the criteria is that they're used as building blocks for other functionality within nvim. `:help` uses vimdoc, lua, c for syntax highlighting, toc and jump functionality. The query parser is used for `:EditQuery`, LSP hover uses markdown.\n\n\nWith the plugin manager addition we're talking about saving **1** additional line of config if some configs were bundled, and that's _only_ for those who use the matching subset if that matches their requirements.\n",
            "created_at": "2025-04-24T08:12:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2826746047",
            "id": 2826746047,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6ofLi_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 9,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2826746047/reactions"
            },
            "updated_at": "2025-04-24T08:12:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2826746047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Absolutely difficult to document what should be included in nvim and what should be included in nvim-lspconfig, but perhaps there is a vague consensus to consider whether nvim can bundle it. The following is just an example based on my thoughts.\n\nPriority can be given to bundling these language servers, as they are almost bundled with their corresponding toolchains:\n\n* clangd, which is included in clang-tools. On Linux distributions like archlinux where packaging granularity is not very fine, or on Windows, as long as the user has installed clang, clangd will be installed;\n* rust-analyzer, which is already regarded as an official \"component\" of Rust, can be added via rustup.\n* gopls, similar to rust-analyzer, is the official tool for Go.\n* tsserver, which is part of TypeScript, is included in any project that depends on TypeScript. Although it currently uses a private protocol, its next major version, rewritten in Go, will be an LSP.\n* lua-language-server, although it is entirely a community project, it is the standard implementation of the type annotations (LuaCATS) used by nvim.\n\nFor the above LSP servers, they are either directly included with the corresponding language toolchain or can be obtained through the toolchain commands, even on Windows. Even the out-of-the-box vscode just calls their SDKs in the background to install them, and this installation method can be shared across all editors, including neovim.\n\nSome language servers that are unrelated to the official toolchain but have good support can also be considered, though this is controversial:\n\n* html/css/json/eslint language servers, supported by vscode, the de facto official LSP implementation.\n\nLanguage popularity is a necessary condition because the point of bundling them is to benefit the majority. But this is not a sufficient condition; for example, these languages are very popular but are not recommended to be bundled directly:\n\n* pyright, which is a M$ stripped version of pylance and requires Node.js available on the system to use;\n* jdtls, although it is maintained by a large organization, has no direct connection with the Java development team itself. Moreover, even starting it is highly personalized, such as setting the available heap size or whether to use lombok. Bundling it within nvim won't contribute much to out-of-the-box usability;\n\nAnyway, I think this is not choosing 0 or 256, choosing 16 or 32 is also possible. Package managers often provide different levels of support, which is very common. Take Arch Linux as an example. It has two repositories, core and extra, both officially maintained. Similarly, it makes sense for nvim to provide \"core\" support built-in and \"extra\" support via nvim-lspconfig. Maintainers can require that every LSP configuration included in nvim must be \"promoted\" from nvim-lspconfig. If someone asks why the LSP configuration they need is not bundled, it is reasonable to ask them to start a PR from lspconfig or refuse to bundle it as it already exists in lspconfig.",
            "created_at": "2025-04-24T09:09:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2826911978",
            "id": 2826911978,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6of0Dq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2826911978/reactions"
            },
            "updated_at": "2025-04-24T09:09:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2826911978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Would agree with @mfussenegger, shipping just some configs from lspconfig is pointless. The value of lpsconfig is not only in the configurations part, but the other more complex integration that it does with the native lsp API. Handling and registering workspaceFolders and workspaces, and many more etc. \n\nI my self would like to see a rewrite of lspconfig to make it more robust, useful and self sufficient, to be the primary lsp plugin people need to install to have a working lsp enviroment, and not 10 different plugins, also to handle common pain points and make it more streamlined. To be more robust in handling workspaceFolders and workspaces for language clients, to be able to load lsp settings automatically from the project directory, to provide a good reasonable api, to define how a project directories, workspace folders and workspaces are discovered and more. It should handle things like https://github.com/tamago324/nlsp-settings.nvim - a reasonable implementation of something like this should exist in nvim lsp config. \n\nPlugins like nvim-jdtls should be considered to be upstreamed, the current configuration for jdtls in nvim-lspconfig is useless, covers less than 20% of the features one needs on a daily basis, or rewrite the nvim lspconfig in such a way that it could work with/link git sub module to link to external plugin repos which are approved by core, follow the guide lines and are maintained - like nvim-jdtls for example. Or have something like a actively maintained schema of lsp plugins which lspconfig pulls when a certain language server is configured, like what mason does, there are many options here to choose from, but sticking them into core is the worst imo. There are as mentioned below things like jdtls which are way too fluent and way too offspec to go in there, and yet a primary server for a widely used language.\n\nLspconfig or core should expose some API, that plugins like **nvim-jdtls** (not picking on it, just have the most experience with its code base) can adhere to, to register themselves because at the moment it is a wild wild west, the way certain lsp plugins work is vastly different than others, and it is a mess.\n\nJtls is the pinnacle of messy/bad language server 'spec', with its extensions and offspec implementation details, and can be used as a testing/verification ground for certain design decisions\n\n- [nvim-jdtls](https://github.com/mfussenegger/nvim-jdtls) - is registred through its own api which is called in a filetype autocommand\n- [tstools](https://github.com/pmizio/typescript-tools.nvim) - uses its own .setup to configure itself, like may others\n\n**The way VSCode's extensions API works is extremely well thought out - https://code.visualstudio.com/api/references/vscode-api. Gives a good control over extensions and their lifetime, allows one extension to activate another, or wait for another to be activated, restart itself and also call the api of one extension from another one in a well defined way.\n\nThis should be considered imo as a general way to improve the plugin ecosystem altogether, in the long run, not just specifically targeting LSP. To give the plugins, like vscode's extension a more robust framework to adhere to, most are already doing this by design, with simple things like the .setup function, but that should be enhanced.**\n\nThis has been an issue for some language servers like sonarlint which require the primary server to be first started, and sonarlint has to then be notified that that has happened, because it has to query the primary server for information. Or if the didChangeConfiguration of the primary server changes and so on.",
            "created_at": "2025-04-24T10:10:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2827070992",
            "id": 2827070992,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oga4Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827070992/reactions"
            },
            "updated_at": "2025-04-24T10:19:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827070992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It should handle things like https://github.com/tamago324/nlsp-settings.nvim - a reasonable implementation of something like this should exist in nvim lsp config.\n\nSo you want to configure LSP in JSON?",
            "created_at": "2025-04-24T10:25:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2827112856",
            "id": 2827112856,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oglGY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827112856/reactions"
            },
            "updated_at": "2025-04-24T13:46:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827112856",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > It should handle things like https://github.com/tamago324/nlsp-settings.nvim - a reasonable implementation of something like this should exist in nvim lsp config.\n> \n> So you want to configure LSP in JSON?\n\nThis is for configuring dynamic `language server settings`, so yes, also it does not need to be json. `Not the client-server's entire configuraton obviously, which will remain defined in lua by the respective language server plugin`. Certain workspaces require different language server settings for the same language server this is combined with the `didChangeConfiguration` to facilitate that. \n\n",
            "created_at": "2025-04-24T10:31:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2827132810",
            "id": 2827132810,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6ogp-K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827132810/reactions"
            },
            "updated_at": "2025-04-24T10:33:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827132810",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This is for configuring dynamic `language server settings`, so yes, also it does not need to be json. `Not the client-server's entire configuraton obviously, which will remain defined in lua by the respective language server plugin`. Certain workspaces require different language server settings for the same language server this is combined with the `didChangeConfiguration` to facilitate that.\n\nThis doesn't necessarily require JSON. I think `vim.lsp.config` leaves room to implement `didChangeConfiguration`, and I happen to be looking into how to do it, https://github.com/neovim/neovim/issues/33577 is related. But this conversation is getting off-topic.\n\n",
            "created_at": "2025-04-24T10:39:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2827154926",
            "id": 2827154926,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6ogvXu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827154926/reactions"
            },
            "updated_at": "2025-04-24T10:43:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827154926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Plugins like nvim-jdtls should be considered to be upstreamed\n\n*No*, absolutely not. Nvim-jdtls is a prime example for why some things are too complex to be in core and need to be dedicated plugins maintained by people _very_ familiar with this specific ecosystem. \n\nInstead, the (non-exclusive) goal should be to provide a robust API in core so that such \"language plugins\" can be self-contained (including -- if necessary and as far as feasible -- server installation and setup) This means you should only have to install *one* plugin to get _full_ support for _one_ language (as equivalent to a VS Code extension) without needing lspconfig or mason (or nvim-treesitter).",
            "created_at": "2025-04-24T11:37:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2827308684",
            "id": 2827308684,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6ohU6M",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 9,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827308684/reactions"
            },
            "updated_at": "2025-04-24T11:37:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827308684",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> would like to see a rewrite of lspconfig to make it more robust, useful and self sufficient ... more robust in handling workspaceFolders ... load lsp settings automatically from the project directory, to provide a good reasonable api, to define how a project directories, workspace folders and workspaces are discovered and more.\n\nThose are potential *core* features. The diametric opposite of nvim-lspconfig. We just spent the last few months *unwinding* nvim-lspconfig's \"framework\" and upstreaming the good parts to Nvim core. ",
            "created_at": "2025-04-24T12:53:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2827515460",
            "id": 2827515460,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6oiHZE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827515460/reactions"
            },
            "updated_at": "2025-04-24T12:53:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2827515460",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Given that even VSCode only ships out-of-the-box supports for [JavaScript, TypeScript, JSON, HTML, CSS, SCSS, and Less](https://code.visualstudio.com/docs/editing/intellisense#_intellisense-for-your-programming-language), which I believe are languages used to make VSCode itself, I think it makes sense for Nvim to ship OOTB LSP config for languages used inside Nvim, namely C and Lua (the one for Vimscript seems abandoned)\n\n- Regarding C, Vim has always had unusually good support for C, with `cscope`, `termdebug`, and even `<cexpr>`, so I think this one would not be controversial.\n- Lua is first class scripting language of Nvim, that any Nvim users have to go through, so I think it makes sense if Nvim makes it easier to for users to set up an environment to write Lua config. Maybe the built-in Lua-LS config should be named `nvim_lua_ls` to hint that it is meant for Nvim development?",
            "created_at": "2025-06-07T07:05:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2951996590",
            "id": 2951996590,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6v8-Su",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2951996590/reactions"
            },
            "updated_at": "2025-06-07T07:05:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2951996590",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "What about doing a survey about what LSPs people use day to day and then choose the top 10 most used or something. I think it's important to try and make Neovim more approachable \"out of the box\" for the most popular languages. LSP config is more complicated / confusing for new users than people give it credit.",
            "created_at": "2025-06-07T14:00:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2952520215",
            "id": 2952520215,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6v--IX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952520215/reactions"
            },
            "updated_at": "2025-06-07T14:23:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952520215",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What about doing a survey about what LSPs people use day to day and then choose the top 10 most used or something\n\nFrom https://github.com/neovim/neovim/issues/33575#issuecomment-2826746047 :\n\n> And how will this even work long-term? Would we replace bundled configs once another language becomes more popular? Or do we end up with the 20-40 configs anyway in the next 10 years?",
            "created_at": "2025-06-07T14:05:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2952524109",
            "id": 2952524109,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6v-_FN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952524109/reactions"
            },
            "updated_at": "2025-06-07T14:23:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952524109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Given that `vim.pack` is likely to land in 0.12, this topic is low priority for now. With `vim.pack`, we have a good OOTB story:\n\n```\nvim.pack.add('https://github.com/neovim/nvim-lspconfig')\nvim.lsp.enable({ 'lua_ls', 'clangd' })\n\n:restart\n```",
            "created_at": "2025-06-07T14:12:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2952528974",
            "id": 2952528974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6v_ARO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952528974/reactions"
            },
            "updated_at": "2025-06-07T14:13:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952528974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> With vim.pack, we have a good OOTB story:\n\n> vim.pack.add('https://github.com/neovim/nvim-lspconfig')\n> vim.lsp.enable({ 'lua_ls', 'clangd' })\n:restart\n\nNot really, at least for `lua_ls`, if you don't want warning that `vim` is global, and you want to get completion and document hover for Nvim stdlib, and more accurate `go-to-definition`\n\nI agree that built-in Clangd config may not be necessary though",
            "created_at": "2025-06-07T14:15:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2952535513",
            "id": 2952535513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6v_B3Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952535513/reactions"
            },
            "updated_at": "2025-06-07T14:23:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952535513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> at least for `lua_ls`, if you don't want warning that `vim` is global, and you want to get completion and document hover for Nvim stdlib, and accurate `go-to-definition`\n\nThat should be solved in https://github.com/neovim/nvim-lspconfig . Shipping Nvim with a different default lua_ls config doesn't solve anything.",
            "created_at": "2025-06-07T14:23:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2952547887",
            "id": 2952547887,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6v_E4v",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952547887/reactions"
            },
            "updated_at": "2025-07-10T18:52:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952547887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> That should be solved in https://github.com/neovim/nvim-lspconfig .\n\nThen I think Nvim should mention `nvim-lspconfig` in `:h lsp-quickstart`",
            "created_at": "2025-06-07T14:41:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2952589445",
            "id": 2952589445,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6v_PCF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952589445/reactions"
            },
            "updated_at": "2025-06-07T14:51:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952589445",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Then I think Nvim should mention `nvim-lspconfig` in `:h lsp-quickstart`\n\n\nit does https://github.com/neovim/neovim/pull/33687 . and we will update nvim.txt to show a `vim.pack.add()` recipe. and `example_init.lua`.",
            "created_at": "2025-06-07T14:51:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2952598307",
            "id": 2952598307,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6v_RMj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952598307/reactions"
            },
            "updated_at": "2025-07-10T18:52:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952598307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Oh, I see it now. It is mentioned like this\n\n> see https://github.com/neovim/nvim-lspconfig for examples\n\nBut I don't think I really understand the purpose of this sentence. If \"examples\" here means configs inside `lsp/` directory of the plugin, then I think the link should just take users to that directory, because I think Nvim beginners will likely don't know where things in a Nvim plugins are located.\n\nAnd I have a feeling that the sentence tells users to go to `nvim-lspconfig` and copy those \"examples\" to their config, instead of just using `vim.lsp.enable()`.\n\nSo I think the reference to [nvim-lspconfig](https://github.com/neovim/nvim-lspconfig) in `:h lsp-quickstart` should gives a hint what `nvim-lspconfig` is for. Similar to this reference to `nvim-treesitter` in `:h treesitter.txt`\n```help\nYou can install more parsers manually, or with a plugin like\nhttps://github.com/nvim-treesitter/nvim-treesitter .\n```",
            "created_at": "2025-06-07T15:12:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-2952637788",
            "id": 2952637788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM6v_a1c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952637788/reactions"
            },
            "updated_at": "2025-07-10T18:52:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2952637788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nvim 0.12 [includes `vim.pack`](https://github.com/neovim/neovim/issues/33575#issuecomment-2952528974), so we can skip this idea.",
            "created_at": "2025-07-10T18:52:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/33575#issuecomment-3058584961",
            "id": 3058584961,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33575",
            "node_id": "IC_kwDOAPphoM62Tk2B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3058584961/reactions"
            },
            "updated_at": "2025-07-10T18:52:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3058584961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 33,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33575/comments",
    "created_at": "2025-04-22T12:25:13Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33575/events",
    "html_url": "https://github.com/neovim/neovim/issues/33575",
    "id": 3010929042,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "discussion has run its course, need decision how to proceed",
            "id": 83851236,
            "name": "needs:decision",
            "node_id": "MDU6TGFiZWw4Mzg1MTIzNg==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:decision"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "user experience",
            "id": 151718455,
            "name": "ux",
            "node_id": "MDU6TGFiZWwxNTE3MTg0NTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ux"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33575/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 286,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 338,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-13T19:57:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6zdyGS",
    "number": 33575,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 18,
        "-1": 12,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 30,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33575/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33575/timeline",
    "title": "LSP: upstream a subset of configs from nvim-lspconfig",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-10T18:53:12Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33575",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}