{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Feature already in Vim?\n\nNo\n\n### Feature description\n\nHello everyone, I would like to propose the addition of more default highlight groups to Neovim\r\n\r\n## Motivation\r\n\r\nOver the years more and more plugins have been adding their own highlight groups and colour schemes have been implementing these custom groups to make the plugins look fancy. However, this creates a problem where themes now have to add all sorts of extensions, which are potentially redundant because different plugins use different names for what should be the same highlight group. This creates additional maintenance burden for theme authors and users now have a huge checklist they need to cross-compare with their plugins list.\r\n\r\nFor this reason I propose adding more default highlight groups to Neovim. These groups should have reasonable fallbacks defined in Neovim itself.\r\n\r\n## Proposed highlight groups\r\n\r\n### Rainbow\r\n\r\nRainbow parentheses are an obvious one, but rainbow colours are useful for any context in which we want to put different levels or markers, such as indent guide lines. Rainbow groups could also be used by some sort of manual highlighting plugin to create different groups of highlighting.\r\n\r\n#### Proposal\r\n\r\nI suggest going with the seven modern colours:\r\n\r\n- `RainbowRed`\r\n- `RainbowOrange`\r\n- `RainbowYellow`\r\n- `RainbowGreen`\r\n- `RainbowCyan`\r\n- `RainbowBlue`\r\n- `RainbowViolet`\r\n\r\nhttps://en.wikipedia.org/wiki/Rainbow#Number_of_colours_in_a_spectrum_or_a_rainbow\r\n\r\nColour schemes do not need to implement the exact colours, it is up to the\r\ntheme which colours will actually be used. The only requirement is that the\r\ncolours gradually transition (i.e. `RainbowOrange` is somewhere in between `RaindbowRed` and `RainbowYellow`) and that the colours loop around (i.e. `RainbowViolet` is between `RainbowBlue` and `RainbowRed`).\r\n\r\nIt is up to plugins whether they want to use these colours in their gradual\r\norder or whether they prefer to order them so that the colours differ.\r\n\r\n#### Precedent plugins\r\n\r\n- Any rainbow plugin (e.g. https://github.com/p00f/nvim-ts-rainbow)\r\n- https://github.com/lukas-reineke/indent-blankline.nvim\r\n\r\n\r\n### Mode indicators\r\n\r\nNeovim can display the current mode via the `showmode` option, but doing so requires on extra vertical line an I need to move the focus of my eyes to the lower-left corner. We can display the current mode in the status line, but I still need to move my eyes. A visual highlight of the mode indicator allows me to immediately tell the current mode from the corner of my eye; my peripheral vision cannot detect text, but it can detect colour.\r\n\r\nStatus line plugins already offer a status indicator component with coloured\r\nbackground, but the highlight groups are non-standard. A standard group would allow consistency across themes and users could apply the group to other status line components like the line number and save some horizontal space.\r\n\r\n#### Proposal\r\n\r\nHere is a compact proposal:\r\n\r\n- `ModeIndicatorNormal`\r\n- `ModeIndicatorInsert`\r\n- `ModeIndicatorReplace`\r\n- `ModeIndicatorVisual`\r\n- `ModeIndicatorSelect`\r\n- `ModeIndicatorCmd`\r\n\r\nAlternatively there would be an indicator for every possible mode that can be returned by the `mode()` function, but then the other highlight groups should link to one of the above by default.\r\n\r\n#### Precedent plugins\r\n\r\n- Any status line plugin out there\r\n\r\n### Panels\r\n\r\nA panel is a window whose buffer is not an actual text buffer, but some sort of UI, such as a file system tree. Panels cannot be edited and tend to have their own special bindings. Since they are not editable text they should be displayed with a subdued (darker? lighter?) background.\r\n\r\n#### Proposal\r\n\r\n- `Panel`\r\n\r\n#### Precedent plugins\r\n\r\n- Any tree side panel plugin\r\n- https://github.com/rcarriga/nvim-dap-ui\r\n\r\n____________\r\n\r\nThese are the highlight groups I can think of, but I am sure there are many others. Please let me know what you think and what should be added. The groups should be as generic as possible and not tied to a particular plugin, even if only one plugin will use that group. We should limit ourselves to actual cases from existing plugins, that is why for each proposal I have a list of precedent cases.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Where do you draw the line here? Including custom highlight groups from plugins is a very slippery slope as no matter what you add, someone will be cross that you omitted their favorite. Essentially, you are proposing that Neovim-the-project enforces a standard for Neovim-the-ecosystem, which is not really how things work: We define _only_ those highlight groups that Nvim-the-editor uses itself.\r\n\r\n----\r\n\r\nAlso, you haven't really made it clear what the actual problem is with the current approach, which I recall is\r\n1. Plugins create their custom highlight groups (**if** they need them), say `MyColor`.\r\n2. Plugins link them to one of the default highlight groups, say, `Title` (whatever makes sense from context).\r\n\r\nThis ensures a reasonable experience out of the box while still allowing customization by users. (If a plugin skips step 2, they should be reminded gently in an issue.)\r\n\r\nRegarding color schemes: Of course they are free to use custom colors for specific plugin highlight groups if that makes for a more pleasing visual experience given the colors they use for the default groups. One also shouldn't forget that \"supporting many plugins\" (or \"tree-sitter\"...) is a marketing claim more often than not. In particular, your claim\r\n\r\n> However, this creates a problem where themes now have to add all sorts of extensions\r\n\r\nis factually incorrect (they don't _have_ to, they _want_ to).\r\n\r\n",
            "created_at": "2022-09-01T06:04:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/20030#issuecomment-1233783086",
            "id": 1233783086,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20030",
            "node_id": "IC_kwDOAPphoM5Jigku",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1233783086/reactions"
            },
            "updated_at": "2022-09-01T07:01:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1233783086",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Your proposal also leaves open the trickiest part: _how_ to enforce this new standardization across the ecosystem -- including for the bundled colorschemes that are ported from Vim! (Nothing is gained if plugins still need to use links to \"legacy\" groups for the default color schemes.)\r\n\r\nSo I would recommend to start your push for more color groups over at https://github.com/vim/colorschemes, where these default schemes are developed.",
            "created_at": "2022-09-01T06:36:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/20030#issuecomment-1233810208",
            "id": 1233810208,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20030",
            "node_id": "IC_kwDOAPphoM5JinMg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1233810208/reactions"
            },
            "updated_at": "2022-09-01T06:36:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1233810208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Where do you draw the line here? Including custom highlight groups from plugins is a very slippery slope as no matter what you add, someone will be cross that you omitted their favorite.\r\n\r\nI think you got it backwards, I don't want to add highlight groups from particular plugins, I want to add generic highlight groups which would be useful for many plugins. Let's take the rainbow proposal above: I have two plugins [nvim-ts-rainbow](https://github.com/p00f/nvim-ts-rainbow) and [indent-blankline.nvim](https://github.com/lukas-reineke/indent-blankline.nvim), both of which have some sort of \"rainbow\" pattern going on. But since there is no default rainbow pattern each one has to come up with its own highlight groups.\r\n\r\nIf I then want to use both plugins my theme has to implement both of the plugin groups. To make matters worse, if I want to switch between themes (e.g. depending on the time of day and lighting conditions) each theme hast to support each rainbow plugin, resulting in an `n*m` problem. Yes, existing plugins and themes will need to be updated, but that's a gradual process, it does not need to happen over night.\r\n\r\nProviding a default set of rainbow highlight groups would reduce the problem to `n+m` complexity. Each rainbow plugin and each theme only implements the standard groups, and everything works out of the box.\r\n\r\n> Your proposal also leaves open the trickiest part: how to enforce this new standardization across the ecosystem -- including for the bundled colorschemes that are ported from Vim! (Nothing is gained if plugins still need to use links to \"legacy\" groups for the default color schemes.)\r\n\r\nHow are the LSP highlight groups handled? They aren't, if I invoke Neovim as `nvim -u NONE` none of the `Lsp...` highlight groups are defined. So I don't see how leaving them undefined by default would be any worse than what we already have now. Or we could could come up with reasonable defaults. Or link them to `Normal` by default. There are lots of possibilities.\r\n\r\n> So I would recommend to start your push for more color groups over at https://github.com/vim/colorschemes, where these default schemes are developed.\r\n\r\nI don't see from the project description that they are open to new highlight groups, but I can try if no one is interested in the topic here.\r\n\r\n> We define only those highlight groups that Nvim-the-editor uses itself.\r\n\r\nI think that's reasonable, but on the other hand there is no hurt in providing a reasonable amount of generally useful highlight groups that plugins can use even if Neovim itself does not use them at the moment. Tree-sitter for example is only useful for plugin authors, Neovim out of the box cannot do anything with Tree-sitter. Outside Neovim, Python has multidimensional slices as a feature, even though that feature is not used anywhere in the standard library, it exists only for 3rd party libraries.",
            "created_at": "2022-09-01T20:45:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/20030#issuecomment-1234762596",
            "id": 1234762596,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20030",
            "node_id": "IC_kwDOAPphoM5JmPtk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1234762596/reactions"
            },
            "updated_at": "2022-09-01T20:47:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1234762596",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4954650?v=4",
                "events_url": "https://api.github.com/users/HiPhish/events{/privacy}",
                "followers_url": "https://api.github.com/users/HiPhish/followers",
                "following_url": "https://api.github.com/users/HiPhish/following{/other_user}",
                "gists_url": "https://api.github.com/users/HiPhish/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HiPhish",
                "id": 4954650,
                "login": "HiPhish",
                "node_id": "MDQ6VXNlcjQ5NTQ2NTA=",
                "organizations_url": "https://api.github.com/users/HiPhish/orgs",
                "received_events_url": "https://api.github.com/users/HiPhish/received_events",
                "repos_url": "https://api.github.com/users/HiPhish/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HiPhish/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HiPhish/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HiPhish",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@HiPhish I'm not sure I'm on board with the `Rainbow**` naming, but I do agree something like this would be useful. I just posted [a similar suggestion on reddit](https://www.reddit.com/r/neovim/comments/11b8j72/standardization_of_neovim_plugins_hl_groups/).",
            "created_at": "2023-02-25T18:58:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/20030#issuecomment-1445182365",
            "id": 1445182365,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20030",
            "node_id": "IC_kwDOAPphoM5WI7ud",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1445182365/reactions"
            },
            "updated_at": "2023-02-25T18:58:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1445182365",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19226858?v=4",
                "events_url": "https://api.github.com/users/joeveiga/events{/privacy}",
                "followers_url": "https://api.github.com/users/joeveiga/followers",
                "following_url": "https://api.github.com/users/joeveiga/following{/other_user}",
                "gists_url": "https://api.github.com/users/joeveiga/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/joeveiga",
                "id": 19226858,
                "login": "joeveiga",
                "node_id": "MDQ6VXNlcjE5MjI2ODU4",
                "organizations_url": "https://api.github.com/users/joeveiga/orgs",
                "received_events_url": "https://api.github.com/users/joeveiga/received_events",
                "repos_url": "https://api.github.com/users/joeveiga/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/joeveiga/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/joeveiga/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/joeveiga",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20030/comments",
    "created_at": "2022-08-31T21:36:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/20030/events",
    "html_url": "https://github.com/neovim/neovim/issues/20030",
    "id": 1357899666,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim defaults for options, colorscheme/theme, autocmds/events, etc.",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "issue needs attention from an expert, or PR proposes significant changes to architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1786207367,
            "name": "highlight",
            "node_id": "MDU6TGFiZWwxNzg2MjA3MzY3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/highlight"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/20030/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5Q7-eS",
    "number": 20030,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 8,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 3,
        "total_count": 11,
        "url": "https://api.github.com/repos/neovim/neovim/issues/20030/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/20030/timeline",
    "title": "More default highlighting groups",
    "updated_at": "2025-01-17T15:33:01Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/20030",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4954650?v=4",
        "events_url": "https://api.github.com/users/HiPhish/events{/privacy}",
        "followers_url": "https://api.github.com/users/HiPhish/followers",
        "following_url": "https://api.github.com/users/HiPhish/following{/other_user}",
        "gists_url": "https://api.github.com/users/HiPhish/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/HiPhish",
        "id": 4954650,
        "login": "HiPhish",
        "node_id": "MDQ6VXNlcjQ5NTQ2NTA=",
        "organizations_url": "https://api.github.com/users/HiPhish/orgs",
        "received_events_url": "https://api.github.com/users/HiPhish/received_events",
        "repos_url": "https://api.github.com/users/HiPhish/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/HiPhish/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/HiPhish/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/HiPhish",
        "user_view_type": "public"
    }
}