{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nAdjusting 'runtimepath' inside plugin files (i.e. files that are located in 'plugin/' directory) does not have effect on startup loading.\n\nHere is an example:\n\n- In file '~/.config/nvim/pack/bundle/opt/other-plug/plugin/other.lua' put `_G.other_loaded = true`.\n- In file '~/.config/nvim/plugin/myplug.lua' put `vim.cmd('packadd! other-plugin')`.\n\nStarting with this setup leads to `_G.other_loaded` bing `nil`. Although the 'runtimepath' includes `~/.config/nvim/pack/bundle/opt/other-plug` *after* the currently traversed config directory. The expected behavior of sourcing 'other.lua' plugin can be seen if:\n- Command is changed to `packadd` (i.e. force 'plugin/' source).\n- Command `packadd!` is placed in the 'init.lua'.\n\nThe original source of the issue is [putting `vim.pack.add()` inside 'plugin/' files](https://github.com/neovim/neovim/pull/35270#issuecomment-3180056509).\n\n### Expected behavior\n\nAdjusting 'runtimepath' during 'plugin/' files execution in such a way that it adds entries *after* currently traversed entry should just work. For example, when sourcing a 'plugin/' file:\n- Detect if there was a change in 'runtimepath' value. If no - proceed without any special actions.\n- Locate currently executed path inside new value of 'runtimepath'. Not sure what to do If there is none. Probably, continue with the previous \"valid\" 'runtimepath' value.\n- Start traversing the next item in the new value of 'runtimepath'.\n\nAlternatives that can resolve the original `vim.pack.add()` issue:\n- Traverse newly added 'runtimepath' entries only if they were added via `:packadd!`. \n- Have `:packadd!` work as `:packadd` when inside 'plugin/' sourcing stage of startup.\n- Have a way to know the current startup stage. Like there is `v:vim_did_enter` to tell if it is inside startup or not, but more granular. This can then be used for a better `opts.load` default in `vim.pack.add()`.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35314/comments",
    "created_at": "2025-08-12T17:28:18Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35314/events",
    "html_url": "https://github.com/neovim/neovim/issues/35314",
    "id": 3315187284,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "startup, shutdown, attach, detach",
            "id": 870629450,
            "name": "lifecycle",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lifecycle"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35314/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7Fmb5U",
    "number": 35314,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35314/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35314/timeline",
    "title": "Allow adjusting 'runtimepath' inside 'plugin/' files",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-12T17:28:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35314",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}