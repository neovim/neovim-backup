{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
        "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
        "followers_url": "https://api.github.com/users/MariaSolOs/followers",
        "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
        "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MariaSolOs",
        "id": 62502207,
        "login": "MariaSolOs",
        "node_id": "MDQ6VXNlcjYyNTAyMjA3",
        "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
        "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
        "repos_url": "https://api.github.com/users/MariaSolOs/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MariaSolOs",
        "user_view_type": "public"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs",
            "user_view_type": "public"
        }
    ],
    "author_association": "NONE",
    "body": "### Problem\n\nHello,\n\nLSP Rename stopped working for Pyright in the recent version. Pyright is configured just with `vim.lsp.enable(\"pyright\")` \n\nI'm getting the following error:\n\n```lua\nvim.schedule callback: ...nwrapped-nightly/share/nvim/runtime/lua/vim/lsp/util.lua:411: change_annotations must be provided for annotated text edits\nstack traceback:\n        [C]: in function 'assert'\n        ...nwrapped-nightly/share/nvim/runtime/lua/vim/lsp/util.lua:411: in function 'apply_text_edits'\n        ...nwrapped-nightly/share/nvim/runtime/lua/vim/lsp/util.lua:527: in function 'apply_text_document_edit'\n        ...nwrapped-nightly/share/nvim/runtime/lua/vim/lsp/util.lua:709: in function 'apply_workspace_edit'\n        ...pped-nightly/share/nvim/runtime/lua/vim/lsp/handlers.lua:320: in function 'handler'\n        ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/buf.lua:714: in function 'handler'\n        ...rapped-nightly/share/nvim/runtime/lua/vim/lsp/client.lua:726: in function ''\n        vim/_editor.lua: in function <vim/_editor.lua:0>\n```\n\nCould the issue be due to https://github.com/neovim/neovim/pull/34508 ?\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\n1. Use the following config:\n\n```lua\n\nlocal pattern = \"python\"\nlocal cmd = { \"pyright-langserver\", \"--stdio\" }\nlocal root_markers = { \".git\", \".editorconfig\" }\nlocal settings = {}\n\nvim.api.nvim_create_autocmd(\"FileType\", {\n\tpattern = pattern,\n\tcallback = function(args)\n\t\tvim.lsp.start({\n\t\t\tcmd = { \"pyright-langserver\", \"--stdio\" },\n\t\t\tfiletypes = { \"python\" },\n\t\t})\n\tend,\n})\n\n```\n\n2. Create a new python file\n\n```python\nbroken = 1\nprint(broken)\n```\n\n3. Try to rename the variable\n\n### Expected behavior\n\n_No response_\n\n### Nvim version (nvim -v)\n\nv0.12.0-nightly+807bc00\n\n### Language server name/version\n\npyright 1.1.400\n\n### Operating system/version\n\nUbuntu 24.04.2 LTS\n\n### Log file\n\n_No response_",
    "closed_at": "2025-07-02T21:02:56Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Please bisect before you \"blame\" a PR. (Rename works fine with luals on master, so this looks to be pyright specific. Make sure the server follows the spec -- you can check the logs to see the payloads.)",
            "created_at": "2025-07-02T10:51:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027392878",
            "id": 3027392878,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60cllu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027392878/reactions"
            },
            "updated_at": "2025-07-02T10:51:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027392878",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Please bisect before you \"blame\" a PR. (Rename works fine with luals on master, so this looks to be pyright specific. Make sure the server follows the spec -- you can check the logs to see the payloads.)\n\nDidn't mean to come across as belligerent, I only the mentioned the PR to help pinpoint the problem not to cast blame. Is there a way to bisect without building from source?  I can confirm that rename works in typescript with the `ts_ls` LSP. It does indeed seem to be a `pyright` (and `basedpyright`) specific issue.",
            "created_at": "2025-07-02T12:23:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027676127",
            "id": 3027676127,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60dqvf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027676127/reactions"
            },
            "updated_at": "2025-07-02T12:23:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027676127",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/184211113?v=4",
                "events_url": "https://api.github.com/users/latifboubyan/events{/privacy}",
                "followers_url": "https://api.github.com/users/latifboubyan/followers",
                "following_url": "https://api.github.com/users/latifboubyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/latifboubyan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/latifboubyan",
                "id": 184211113,
                "login": "latifboubyan",
                "node_id": "U_kgDOCvrWqQ",
                "organizations_url": "https://api.github.com/users/latifboubyan/orgs",
                "received_events_url": "https://api.github.com/users/latifboubyan/received_events",
                "repos_url": "https://api.github.com/users/latifboubyan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/latifboubyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/latifboubyan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/latifboubyan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here are the debug logs from the LSP:\n\n```\n[DEBUG][2025-07-02 15:36:18] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.send\"\t{ id = 4, jsonrpc = \"2.0\", method = \"textDocument/rename\", params = { newName = \"fixed\", position = { character = 6, line = 2 }, textDocument = { uri = \"file:///home/latif/Dotfiles/test.py\" } } }\n[DEBUG][2025-07-02 15:36:18] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ id = 4, jsonrpc = \"2.0\", result = { documentChanges = { { edits = { { annotationId = \"default\", newText = \"fixed\", range = { [\"end\"] = { character = 6, line = 0 }, start = { character = 0, line = 0 } } }, { annotationId = \"default\", newText = \"fixed\", range = { [\"end\"] = { character = 12, line = 2 }, start = { character = 6, line = 2 } } } }, textDocument = { uri = \"file:///home/latif/Dotfiles/test.py\" } } } } }\n```\n\nIt seems that they do not provide a `changeAnnotations` field in the message, which is causing the issue. ",
            "created_at": "2025-07-02T12:37:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027717867",
            "id": 3027717867,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60d07r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027717867/reactions"
            },
            "updated_at": "2025-07-02T12:42:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027717867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/184211113?v=4",
                "events_url": "https://api.github.com/users/latifboubyan/events{/privacy}",
                "followers_url": "https://api.github.com/users/latifboubyan/followers",
                "following_url": "https://api.github.com/users/latifboubyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/latifboubyan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/latifboubyan",
                "id": 184211113,
                "login": "latifboubyan",
                "node_id": "U_kgDOCvrWqQ",
                "organizations_url": "https://api.github.com/users/latifboubyan/orgs",
                "received_events_url": "https://api.github.com/users/latifboubyan/received_events",
                "repos_url": "https://api.github.com/users/latifboubyan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/latifboubyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/latifboubyan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/latifboubyan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Didn't mean to come across as belligerent, I only the mentioned the PR to help pinpoint the problem not to cast blame. \n\nDidn't mean to imply that, hence the quotes. But guessing really does not help much.\n\n> Is there a way to bisect without building from source? \n\nNo, but since you are building from source, that should not be an issue? `git bisect` makes this fairly painless.",
            "created_at": "2025-07-02T12:43:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027735911",
            "id": 3027735911,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60d5Vn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027735911/reactions"
            },
            "updated_at": "2025-07-02T12:43:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027735911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Here are the debug logs from the LSP:\n> \n> ```\n> [DEBUG][2025-07-02 15:36:18] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.send\"\t{ id = 4, jsonrpc = \"2.0\", method = \"textDocument/rename\", params = { newName = \"fixed\", position = { character = 6, line = 2 }, textDocument = { uri = \"file:///home/latif/Dotfiles/test.py\" } } }\n> [DEBUG][2025-07-02 15:36:18] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ id = 4, jsonrpc = \"2.0\", result = { documentChanges = { { edits = { { annotationId = \"default\", newText = \"fixed\", range = { [\"end\"] = { character = 6, line = 0 }, start = { character = 0, line = 0 } } }, { annotationId = \"default\", newText = \"fixed\", range = { [\"end\"] = { character = 12, line = 2 }, start = { character = 6, line = 2 } } } }, textDocument = { uri = \"file:///home/latif/Dotfiles/test.py\" } } } } }\n> ```\n> \n> It seems that they do not provide a `changeAnnotations` field in the message, which is causing the issue.\n\nDoes `pyright` advertise the `changeAnnotation` capability?",
            "created_at": "2025-07-02T12:45:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027742797",
            "id": 3027742797,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60d7BN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027742797/reactions"
            },
            "updated_at": "2025-07-02T12:45:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027742797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It does not pass `workspace.workspaceEdit.changeAnnotationSupport` as as seen in this log:\n\n```\n[DEBUG][2025-07-02 15:53:33] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ id = 1, jsonrpc = \"2.0\", result = { capabilities = { callHierarchyProvider = true, codeActionProvider = { codeActionKinds = { \"quickfix\", \"source.organizeImports\" }, workDoneProgress = true }, completionProvider = { completionItem = { labelDetailsSupport = true }, resolveProvider = true, triggerCharacters = { \".\", \"[\", '\"', \"'\" }, workDoneProgress = true }, declarationProvider = { workDoneProgress = true }, definitionProvider = { workDoneProgress = true }, documentHighlightProvider = { workDoneProgress = true }, documentSymbolProvider = { workDoneProgress = true }, executeCommandProvider = { commands = {}, workDoneProgress = true }, hoverProvider = { workDoneProgress = true }, inlayHintProvider = true, notebookDocumentSync = { notebookSelector = { { cells = { { language = \"python\" } }, notebook = { notebookType = \"jupyter-notebook\", scheme = \"file\" } } }, save = true }, referencesProvider = { workDoneProgress = true }, renameProvider = { prepareProvider = true, workDoneProgress = true }, semanticTokensProvider = { full = true, legend = { tokenModifiers = { \"definition\", \"declaration\", \"async\", \"readonly\", \"defaultLibrary\", \"builtin\" }, tokenTypes = { \"class\", \"parameter\", \"typeParameter\", \"function\", \"method\", \"decorator\", \"property\", \"namespace\", \"variable\", \"type\", \"keyword\", \"selfParameter\", \"clsParameter\" } } }, signatureHelpProvider = { triggerCharacters = { \"(\", \",\", \")\" }, workDoneProgress = true }, textDocumentSync = { change = 2, openClose = true, willSave = true }, typeDefinitionProvider = { workDoneProgress = true }, workspace = { fileOperations = { willRename = { filters = { { pattern = { glob = \"**/*\" } } } } }, workspaceFolders = { changeNotifications = true, supported = true } }, workspaceSymbolProvider = { workDoneProgress = true } }, serverInfo = { name = \"basedpyright\", version = \"1.29.4\" } } }\n```\n\nBut the text edits it returns are [AnnotatedTextEdits](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#annotatedTextEdit) rather than [TextEdits](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textEdit) which might be the crux of the issue. ",
            "created_at": "2025-07-02T13:02:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027809090",
            "id": 3027809090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60eLNC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027809090/reactions"
            },
            "updated_at": "2025-07-02T13:02:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027809090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/184211113?v=4",
                "events_url": "https://api.github.com/users/latifboubyan/events{/privacy}",
                "followers_url": "https://api.github.com/users/latifboubyan/followers",
                "following_url": "https://api.github.com/users/latifboubyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/latifboubyan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/latifboubyan",
                "id": 184211113,
                "login": "latifboubyan",
                "node_id": "U_kgDOCvrWqQ",
                "organizations_url": "https://api.github.com/users/latifboubyan/orgs",
                "received_events_url": "https://api.github.com/users/latifboubyan/received_events",
                "repos_url": "https://api.github.com/users/latifboubyan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/latifboubyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/latifboubyan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/latifboubyan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah, that sounds like a pyright bug. Could you raise the issue there? No matter what happens here, pyright should be complaint with the specification (otherwise it's not an \"LSP server\", and we don't support anything else).",
            "created_at": "2025-07-02T13:07:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027824513",
            "id": 3027824513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60eO-B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027824513/reactions"
            },
            "updated_at": "2025-07-02T13:07:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027824513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yeah that makes sense, thanks.",
            "created_at": "2025-07-02T13:09:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027829793",
            "id": 3027829793,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60eQQh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027829793/reactions"
            },
            "updated_at": "2025-07-02T13:09:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027829793",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/184211113?v=4",
                "events_url": "https://api.github.com/users/latifboubyan/events{/privacy}",
                "followers_url": "https://api.github.com/users/latifboubyan/followers",
                "following_url": "https://api.github.com/users/latifboubyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/latifboubyan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/latifboubyan",
                "id": 184211113,
                "login": "latifboubyan",
                "node_id": "U_kgDOCvrWqQ",
                "organizations_url": "https://api.github.com/users/latifboubyan/orgs",
                "received_events_url": "https://api.github.com/users/latifboubyan/received_events",
                "repos_url": "https://api.github.com/users/latifboubyan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/latifboubyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/latifboubyan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/latifboubyan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm, looks like pyright in fact supports that -- maybe the capability negotiation fails for some reason. Also, please test the latest version (1.1.402) -- just to make sure.",
            "created_at": "2025-07-02T13:10:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027834514",
            "id": 3027834514,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60eRaS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027834514/reactions"
            },
            "updated_at": "2025-07-02T13:10:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027834514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Would be good if you could provide full logs from a minimal sesson. (Your minimal config is messed up, by the way -- it mixes manual `vim.lsp.start` with `vim.lsp.enable`.)",
            "created_at": "2025-07-02T13:12:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027841132",
            "id": 3027841132,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60eTBs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027841132/reactions"
            },
            "updated_at": "2025-07-02T13:13:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027841132",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sure thing here, is a clean LSP log. I opened the file, renamed, then closed. Also I used the minimal config from the issue template, would it affect the result do you think?\n\n```\n[START][2025-07-02 16:15:19] LSP logging initiated\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"Starting RPC client\"\t{ cmd = { \"pyright-langserver\", \"--stdio\" }, extra = {} }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.send\"\t{ id = 1, jsonrpc = \"2.0\", method = \"initialize\", params = { capabilities = { general = { positionEncodings = { \"utf-8\", \"utf-16\", \"utf-32\" } }, textDocument = { callHierarchy = { dynamicRegistration = false }, codeAction = { codeActionLiteralSupport = { codeActionKind = { valueSet = { \"\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" } } }, dataSupport = true, disabledSupport = true, dynamicRegistration = true, honorsChangeAnnotations = true, isPreferredSupport = true, resolveSupport = { properties = { \"edit\", \"command\" } } }, codeLens = { dynamicRegistration = false, resolveSupport = { properties = { \"command\" } } }, colorProvider = { dynamicRegistration = true }, completion = { completionItem = { commitCharactersSupport = false, deprecatedSupport = true, documentationFormat = { \"markdown\", \"plaintext\" }, preselectSupport = false, resolveSupport = { properties = { \"additionalTextEdits\", \"command\" } }, snippetSupport = true, tagSupport = { valueSet = { 1 } } }, completionItemKind = { valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 } }, completionList = { itemDefaults = { \"editRange\", \"insertTextFormat\", \"insertTextMode\", \"data\" } }, contextSupport = true, dynamicRegistration = false }, declaration = { linkSupport = true }, definition = { dynamicRegistration = true, linkSupport = true }, diagnostic = { dataSupport = true, dynamicRegistration = false, tagSupport = { valueSet = { 1, 2 } } }, documentHighlight = { dynamicRegistration = false }, documentSymbol = { dynamicRegistration = false, hierarchicalDocumentSymbolSupport = true, symbolKind = { valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 } } }, foldingRange = { dynamicRegistration = false, foldingRange = { collapsedText = true }, foldingRangeKind = { valueSet = { \"comment\", \"imports\", \"region\" } }, lineFoldingOnly = true }, formatting = { dynamicRegistration = true }, hover = { contentFormat = { \"markdown\", \"plaintext\" }, dynamicRegistration = true }, implementation = { linkSupport = true }, inlayHint = { dynamicRegistration = true, resolveSupport = { properties = { \"textEdits\", \"tooltip\", \"location\", \"command\" } } }, publishDiagnostics = { dataSupport = true, tagSupport = { valueSet = { 1, 2 } } }, rangeFormatting = { dynamicRegistration = true, rangesSupport = true }, references = { dynamicRegistration = false }, rename = { dynamicRegistration = true, honorsChangeAnnotations = true, prepareSupport = true }, selectionRange = { dynamicRegistration = false }, semanticTokens = { augmentsSyntaxTokens = true, dynamicRegistration = false, formats = { \"relative\" }, multilineTokenSupport = true, overlappingTokenSupport = true, requests = { full = { delta = true }, range = false }, serverCancelSupport = false, tokenModifiers = { \"declaration\", \"definition\", \"readonly\", \"static\", \"deprecated\", \"abstract\", \"async\", \"modification\", \"documentation\", \"defaultLibrary\" }, tokenTypes = { \"namespace\", \"type\", \"class\", \"enum\", \"interface\", \"struct\", \"typeParameter\", \"parameter\", \"variable\", \"property\", \"enumMember\", \"event\", \"function\", \"method\", \"macro\", \"keyword\", \"modifier\", \"comment\", \"string\", \"number\", \"regexp\", \"operator\", \"decorator\" } }, signatureHelp = { dynamicRegistration = false, signatureInformation = { activeParameterSupport = true, documentationFormat = { \"markdown\", \"plaintext\" }, parameterInformation = { labelOffsetSupport = true } } }, synchronization = { didSave = true, dynamicRegistration = false, willSave = true, willSaveWaitUntil = true }, typeDefinition = { linkSupport = true } }, window = { showDocument = { support = true }, showMessage = { messageActionItem = { additionalPropertiesSupport = true } }, workDoneProgress = true }, workspace = { applyEdit = true, configuration = true, didChangeConfiguration = { dynamicRegistration = false }, didChangeWatchedFiles = { dynamicRegistration = false, relativePatternSupport = true }, inlayHint = { refreshSupport = true }, semanticTokens = { refreshSupport = true }, symbol = { dynamicRegistration = false, symbolKind = { valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 } } }, workspace = { refreshSupport = false }, workspaceEdit = { changeAnnotationSupport = { groupsOnLabel = true }, normalizesLineEndings = true, resourceOperations = { \"rename\", \"create\", \"delete\" } }, workspaceFolders = true } }, clientInfo = { name = \"Neovim\", version = \"0.12.0-dev\" }, processId = 17534, rootPath = vim.NIL, rootUri = vim.NIL, trace = \"off\", workDoneToken = \"1\", workspaceFolders = vim.NIL } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"window/logMessage\", params = { message = \"Pyright language server 1.1.400 starting\", type = 3 } }\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"Pyright language server 1.1.400 starting\"\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"window/logMessage\", params = { message = \"Server root directory: file:///nix/store/17cxjsyiqrkinnq8gqabq75al8zaw6y0-pyright-1.1.400/lib/node_modules/pyright/dist\", type = 3 } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ id = 1, jsonrpc = \"2.0\", result = { capabilities = { callHierarchyProvider = true, codeActionProvider = { codeActionKinds = { \"quickfix\", \"source.organizeImports\" }, workDoneProgress = true }, completionProvider = { completionItem = { labelDetailsSupport = true }, resolveProvider = true, triggerCharacters = { \".\", \"[\", '\"', \"'\" }, workDoneProgress = true }, declarationProvider = { workDoneProgress = true }, definitionProvider = { workDoneProgress = true }, documentHighlightProvider = { workDoneProgress = true }, documentSymbolProvider = { workDoneProgress = true }, executeCommandProvider = { commands = {}, workDoneProgress = true }, hoverProvider = { workDoneProgress = true }, referencesProvider = { workDoneProgress = true }, renameProvider = { prepareProvider = true, workDoneProgress = true }, signatureHelpProvider = { triggerCharacters = { \"(\", \",\", \")\" }, workDoneProgress = true }, textDocumentSync = 2, typeDefinitionProvider = { workDoneProgress = true }, workspace = { workspaceFolders = { changeNotifications = true, supported = true } }, workspaceSymbolProvider = { workDoneProgress = true } } } }\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"Server root directory: file:///nix/store/17cxjsyiqrkinnq8gqabq75al8zaw6y0-pyright-1.1.400/lib/node_modules/pyright/dist\"\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.send\"\t{ jsonrpc = \"2.0\", method = \"initialized\", params = vim.empty_dict() }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.send\"\t{ jsonrpc = \"2.0\", method = \"textDocument/didOpen\", params = { textDocument = { languageId = \"python\", text = \"broken = 1\\n\\nprint(broken)\\n\", uri = \"file:///home/latif/Dotfiles/test.py\", version = 0 } } }\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"LSP[pyright-langserver]\"\t\"server_capabilities\"\t{ server_capabilities = { callHierarchyProvider = true, codeActionProvider = { codeActionKinds = { \"quickfix\", \"source.organizeImports\" }, workDoneProgress = true }, completionProvider = { completionItem = { labelDetailsSupport = true }, resolveProvider = true, triggerCharacters = { \".\", \"[\", '\"', \"'\" }, workDoneProgress = true }, declarationProvider = { workDoneProgress = true }, definitionProvider = { workDoneProgress = true }, documentHighlightProvider = { workDoneProgress = true }, documentSymbolProvider = { workDoneProgress = true }, executeCommandProvider = { commands = {}, workDoneProgress = true }, hoverProvider = { workDoneProgress = true }, referencesProvider = { workDoneProgress = true }, renameProvider = { prepareProvider = true, workDoneProgress = true }, signatureHelpProvider = { triggerCharacters = { \"(\", \",\", \")\" }, workDoneProgress = true }, textDocumentSync = { change = 2, openClose = true, save = { includeText = false }, willSave = false, willSaveWaitUntil = false }, typeDefinitionProvider = { workDoneProgress = true }, workspace = { workspaceFolders = { changeNotifications = true, supported = true } }, workspaceSymbolProvider = { workDoneProgress = true } } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"window/logMessage\", params = { message = 'Starting service instance \"<default>\"', type = 3 } }\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t'Starting service instance \"<default>\"'\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ id = 0, jsonrpc = \"2.0\", method = \"workspace/configuration\", params = { items = { { section = \"python\" } } } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"server_request: callback result\"\t{ result = { vim.NIL }, status = true }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.send\"\t{ id = 0, jsonrpc = \"2.0\", result = { vim.NIL } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ id = 1, jsonrpc = \"2.0\", method = \"workspace/configuration\", params = { items = { { section = \"python.analysis\" } } } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"server_request: callback result\"\t{ result = { vim.NIL }, status = true }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.send\"\t{ id = 1, jsonrpc = \"2.0\", result = { vim.NIL } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ id = 2, jsonrpc = \"2.0\", method = \"workspace/configuration\", params = { items = { { section = \"pyright\" } } } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"server_request: callback result\"\t{ result = { vim.NIL }, status = true }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.send\"\t{ id = 2, jsonrpc = \"2.0\", result = { vim.NIL } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"window/logMessage\", params = { message = \"No include entries specified; assuming /<default workspace root>\", type = 3 } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"window/logMessage\", params = { message = \"Auto-excluding **/node_modules\", type = 3 } }\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"No include entries specified; assuming /<default workspace root>\"\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"window/logMessage\", params = { message = \"Auto-excluding **/__pycache__\", type = 3 } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"window/logMessage\", params = { message = \"Auto-excluding **/.*\", type = 3 } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"window/logMessage\", params = { message = \"Assuming Python version 3.12.11.final.0\", type = 3 } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"window/logMessage\", params = { message = 'File or directory \"/<default workspace root>\" does not exist.', type = 1 } }\n[DEBUG][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"window/logMessage\", params = { message = \"No source files found.\", type = 3 } }\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"Auto-excluding **/node_modules\"\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"Auto-excluding **/__pycache__\"\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"Auto-excluding **/.*\"\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"Assuming Python version 3.12.11.final.0\"\n[ERROR][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t'File or directory \"/<default workspace root>\" does not exist.'\n[INFO][2025-07-02 16:15:19] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"No source files found.\"\n[DEBUG][2025-07-02 16:15:20] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ jsonrpc = \"2.0\", method = \"textDocument/publishDiagnostics\", params = { diagnostics = {}, uri = \"file:///home/latif/Dotfiles/test.py\", version = 0 } }\n[DEBUG][2025-07-02 16:15:20] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"LSP[pyright-langserver]\"\t\"client.request\"\t1\t\"textDocument/prepareRename\"\t{ position = { character = 0, line = 0 }, textDocument = { uri = \"file:///home/latif/Dotfiles/test.py\" } }\t<function 1>\t1\n[DEBUG][2025-07-02 16:15:20] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.send\"\t{ id = 2, jsonrpc = \"2.0\", method = \"textDocument/prepareRename\", params = { position = { character = 0, line = 0 }, textDocument = { uri = \"file:///home/latif/Dotfiles/test.py\" } } }\n[DEBUG][2025-07-02 16:15:20] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ id = 2, jsonrpc = \"2.0\", result = { [\"end\"] = { character = 6, line = 0 }, start = { character = 0, line = 0 } } }\n[DEBUG][2025-07-02 16:15:22] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"LSP[pyright-langserver]\"\t\"client.request\"\t1\t\"textDocument/rename\"\t{ newName = \"fixed\", position = { character = 0, line = 0 }, textDocument = { uri = \"file:///home/latif/Dotfiles/test.py\" } }\t<function 1>\t1\n[DEBUG][2025-07-02 16:15:22] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.send\"\t{ id = 3, jsonrpc = \"2.0\", method = \"textDocument/rename\", params = { newName = \"fixed\", position = { character = 0, line = 0 }, textDocument = { uri = \"file:///home/latif/Dotfiles/test.py\" } } }\n[DEBUG][2025-07-02 16:15:22] ...unwrapped-nightly/share/nvim/runtime/lua/vim/lsp/log.lua:151\t\"rpc.receive\"\t{ id = 3, jsonrpc = \"2.0\", result = { documentChanges = { { edits = { { annotationId = \"default\", newText = \"fixed\", range = { [\"end\"] = { character = 6, line = 0 }, start = { character = 0, line = 0 } } }, { annotationId = \"default\", newText = \"fixed\", range = { [\"end\"] = { character = 12, line = 2 }, start = { character = 6, line = 2 } } } }, textDocument = { uri = \"file:///home/latif/Dotfiles/test.py\" } } } } }\n\n``` ",
            "created_at": "2025-07-02T13:18:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3027858929",
            "id": 3027858929,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60eXXx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027858929/reactions"
            },
            "updated_at": "2025-07-02T13:19:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3027858929",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/184211113?v=4",
                "events_url": "https://api.github.com/users/latifboubyan/events{/privacy}",
                "followers_url": "https://api.github.com/users/latifboubyan/followers",
                "following_url": "https://api.github.com/users/latifboubyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/latifboubyan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/latifboubyan",
                "id": 184211113,
                "login": "latifboubyan",
                "node_id": "U_kgDOCvrWqQ",
                "organizations_url": "https://api.github.com/users/latifboubyan/orgs",
                "received_events_url": "https://api.github.com/users/latifboubyan/received_events",
                "repos_url": "https://api.github.com/users/latifboubyan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/latifboubyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/latifboubyan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/latifboubyan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Debugged this and it does look like a server issue. `pyright` is sending us a text edit with an annotation ID of `default`, but the workspace edit result doesn't have the annotation ID-metadata map that we need to handle those.\n\n<img width=\"1022\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4d9cc6c7-5547-40f2-9ba2-126942183808\" />\n\nAs the spec says [here](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#changeAnnotation), \"the actual change annotations together with their identifiers are managed by the workspace edit via the new property `changeAnnotations`\".\n\nNote how `rust-analyzer` sends that information over: https://github.com/rust-lang/rust-analyzer/blob/11d45c881389dae90b0da5a94cde52c79d0fc7ef/crates/rust-analyzer/src/lsp/to_proto.rs#L1381",
            "created_at": "2025-07-02T19:13:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3029046310",
            "id": 3029046310,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60i5Qm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3029046310/reactions"
            },
            "updated_at": "2025-07-02T19:13:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3029046310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The problematic ID is https://github.com/microsoft/pyright/blob/5ba9dcf9802382b4db529221ba353ae3edc597ad/packages/pyright-internal/src/common/workspaceEditUtils.ts#L60, which seems to be set in https://github.com/microsoft/pyright/blob/5ba9dcf9802382b4db529221ba353ae3edc597ad/packages/pyright-internal/src/common/workspaceEditUtils.ts#L252. The fix would be to only include the ID if `changeAnnotations` is defined.",
            "created_at": "2025-07-02T19:16:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3029053836",
            "id": 3029053836,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60i7GM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3029053836/reactions"
            },
            "updated_at": "2025-07-02T19:16:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3029053836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Turns out this was already reported and fixed in basedpyright:\n\nhttps://github.com/DetachHead/basedpyright/pull/1352\n\n",
            "created_at": "2025-07-02T19:47:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/34731#issuecomment-3029123838",
            "id": 3029123838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34731",
            "node_id": "IC_kwDOAPphoM60jML-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 3,
                "rocket": 3,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3029123838/reactions"
            },
            "updated_at": "2025-07-02T19:47:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3029123838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/184211113?v=4",
                "events_url": "https://api.github.com/users/latifboubyan/events{/privacy}",
                "followers_url": "https://api.github.com/users/latifboubyan/followers",
                "following_url": "https://api.github.com/users/latifboubyan/following{/other_user}",
                "gists_url": "https://api.github.com/users/latifboubyan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/latifboubyan",
                "id": 184211113,
                "login": "latifboubyan",
                "node_id": "U_kgDOCvrWqQ",
                "organizations_url": "https://api.github.com/users/latifboubyan/orgs",
                "received_events_url": "https://api.github.com/users/latifboubyan/received_events",
                "repos_url": "https://api.github.com/users/latifboubyan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/latifboubyan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/latifboubyan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/latifboubyan",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34731/comments",
    "created_at": "2025-07-02T10:48:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34731/events",
    "html_url": "https://github.com/neovim/neovim/issues/34731",
    "id": 3195469566,
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "Needs a third-party / external change or fix",
            "id": 101945532,
            "name": "status:blocked-external",
            "node_id": "MDU6TGFiZWwxMDE5NDU1MzI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/status:blocked-external"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34731/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 90,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 70,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-07-07T17:05:04Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM6-dv7-",
    "number": 34731,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34731/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34731/timeline",
    "title": "LSP: rename broken with pyright (change_annotations)",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T21:02:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34731",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/184211113?v=4",
        "events_url": "https://api.github.com/users/latifboubyan/events{/privacy}",
        "followers_url": "https://api.github.com/users/latifboubyan/followers",
        "following_url": "https://api.github.com/users/latifboubyan/following{/other_user}",
        "gists_url": "https://api.github.com/users/latifboubyan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/latifboubyan",
        "id": 184211113,
        "login": "latifboubyan",
        "node_id": "U_kgDOCvrWqQ",
        "organizations_url": "https://api.github.com/users/latifboubyan/orgs",
        "received_events_url": "https://api.github.com/users/latifboubyan/received_events",
        "repos_url": "https://api.github.com/users/latifboubyan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/latifboubyan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/latifboubyan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/latifboubyan",
        "user_view_type": "public"
    }
}