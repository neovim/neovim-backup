{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nAI/LLM works by ingesting text with lots of detail. Including relevant details and excluding irrelevant details helps LLMs work much better.\n\nCurrently, most Nvim AI plugins currently are gigantic buckets of code with their own custom UI and calls to AI services. But all of that is just a totally irrelevant waste of time.\n\nWhat's actually needed is a way to generate a \"digest\" of the useful state from the editor, workspace, and system environment.\n\nThis plugin shows an example of that: https://github.com/0xrusowsky/nvim-ctx-ingest\n\n### Expected behavior\n\nProvide stdlib functions for use in LLM prompts:\n\n- `vim.ctx.get_state()` returns the useful editor state\n    - see https://github.com/0xrusowsky/nvim-ctx-ingest for ideas, especially:\n        - project file structure digest (ideally with some intelligence to avoid noise files, truncate if there are too many files, and include the most important files such as package.json etc)\n- `vim.ctx.get_llm_prompt()` returns the state in a LLM prompt-friendly way\n  ```\n  Directory structure:\n  project\n  ├── src\n  │   ├── main.lua\n  │   └── utils.lua\n  ├── tests\n  │   └── test_main.lua\n  └── README.md\n  ```\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32949/comments",
    "created_at": "2025-03-18T00:07:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32949/events",
    "html_url": "https://github.com/neovim/neovim/issues/32949",
    "id": 2926679261,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "save/restore editor state: shada, context, ctx, sessions, mksession",
            "id": 4449264023,
            "name": "editor-state",
            "node_id": "LA_kwDOAPphoM8AAAABCTJhlw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/editor-state"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32949/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6ucZTd",
    "number": 32949,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32949/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32949/timeline",
    "title": "AI primitive: produce a well-formatted \"digest\" including the project tree",
    "updated_at": "2025-03-18T00:07:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32949",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}