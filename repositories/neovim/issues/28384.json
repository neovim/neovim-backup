{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nSee https://github.com/neovim/neovim/issues/16957 for some of the existing issues with using a Unix shell in Neovim on Windows. \r\n\r\nI've dug into it now, seeing as no workaround really managed to fully take, and here's what I was able to find.\r\n\r\nThe root of evil is the fact that `CreateProcessA` takes some long string as the command line. The Microsoft C runtime takes that string, runs it through splitting logic described [here](https://learn.microsoft.com/en-us/cpp/c-language/parsing-c-command-line-arguments?view=msvc-170), then passes the processed result to `main`. The result of that processing is what `'shell'` ultimately receives.\r\n\r\nVim on the other hand, wants to be able to think about running programs in terms of regular C `argv` arrays.\r\n\r\nAssuming `shell=bash`, `shellcmdflag=-c` and `shellxquote=\"`, running `!ls -l`, produces the argument vector `[bash, -c, \"ls -l\"]` (note the quotes around `ls -l`). The resulting argument vector is then [passed to libuv](https://github.com/neovim/neovim/blob/master/src/nvim/event/libuv_process.c#L22), which then [reconstitutes the entire thing back to a single string](https://github.com/libuv/libuv/blob/v1.x/src/win/process.c#L521) so it can pass it to `CreateProcessA`.\r\n\r\nThis is where the issue arises. libuv expects an *unquoted* argument vector (`[bash, -c, ls -l]`, no quotes), as you would pass to `execve` on Unix, but gets `[bash, -c, \"ls -l\"]` instead. This causes it to *quote the quoted string* on Windows, which ultimately causes bash to receive the command `\"ls -l\"` (one shell word, with quotes) instead of `ls -l` (two shell words, no quotes).\r\n\r\nSo, basically, there are two places in the chain that are trying to make the argument vector \"windows-friendly\": Vim's `shell_build_argv`, and libuv's `make_program_args`. Only one of the two should be done. To only use vim's behaviour, it is probably sufficient to change [libuv_process_spawn](https://github.com/neovim/neovim/blob/master/src/nvim/event/libuv_process.c#L32) to always pass `UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS`. Since `cmd.exe` already has to use this behaviour since its argument parsing does *not* follow that of the C runtime (i.e. all other programs), this seems like it will cause the least amount of breakage.\r\n\r\nTo only follow libuv's behaviour (an arguably more sound strategy but that may not work with cmd.exe), we'd simply need to skip `shell_xescape_xquote` (or set both `shellxescape` and `shellxquote` to the empty string?).\r\n\r\nWhichever the case may be, it's pretty clear that Neovim's current behaviour on Windows is incorrect. Double quoting like this shouldn't occur, and having two completely different implementations both doing argv-sanitation depending on context is bound to lead to issues. (As it did very recently for Rust)\r\n\r\nThere's also some other issues. For example, Neovim tries to pass `2>&1 | tee <tempfile>` to the shell. However, the Windows-style backslash-using tempfile path will cause the shell to misinterpret something like `C:\\somedir\\tmp\\` to contain a `\\t` (tab) (at least in zsh) and cause it to spit out the file in the wrong place, causing errors in `:make`, `:grep`, etc. Easiest solution would be to change the path to use `/` as the separator (possibly in accordance with `'shellslash'`, which doesn't apply to the temporary file arguments currently) (though this will also not work for UNC paths), or to use something like `cygpath` if available (most unix shells on Windows are cygwin/msys2 based).\r\n\n\n### Steps to reproduce\n\nnvim --clean\r\n:set shell=C:/path/to/bash.exe shellcmdflag=-c\r\n:!echo test <- fails\r\n:set shellxquote=\r\n:!echo test <- works\r\n(and many other such cases)\n\n### Expected behavior\n\nWe should figure out a way to fix this properly, once and for all.\n\n### Neovim version (nvim -v)\n\nmaster\n\n### Vim (not Nvim) behaves the same?\n\nHave not verified, but it seems to be Neovim specific\n\n### Operating system/version\n\nWindows 10/11\n\n### Terminal name/version\n\nwezterm, but doesn't matter (not TUI related)\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nGitHub nightly releases",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "For the record, being more restrictive (and explicit) about which \"shells\" we support on Windows is an option here (though maybe not for 0.10). ",
            "created_at": "2024-04-17T07:09:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2060535302",
            "id": 2060535302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM560UYG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060535302/reactions"
            },
            "updated_at": "2024-04-17T07:09:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060535302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "In the sense of saying \"we only support cmd.exe and powershell\", or \"we eventually stop supporting cmd.exe\"?\r\n\r\nI use Neovim on Windows exclusively through an MSYS2 environment, and while I understand it's not an officially supported use case/\"platform\", I would really like for unix shells to be supported and working. Lots of people use Git Bash on Windows for example.\r\n\r\nI think, generally speaking:\r\n\r\nFor non-cmd.exe, we should completely ignore shellquote/shellxquote/shellxescape/etc, not do any quoting/escaping of our own, and instead let libuv handle it for us. This will work correctly with any program that uses the regular C runtime argument handling (including, I believe, powershell/pwsh).\r\n\r\nFor cmd.exe, we could continue using the existing code paths and tell libuv to pass the arguments verbatim as we do now. libuv does not handle cmd.exe specially in any way, so this seems reasonable if it's important that the edge cases are handled proper.\r\n\r\nI could imagine a future where Neovim simply doesn't support cmd.exe as a shell anymore, and defaults to powershell. I can't think of anything that would definitely break, since users are already free to change the shell settings away from cmd.exe, so nothing inside of Neovim should really have a hard dependency on it, but I still imagine it may cause *some* churn.\r\n\r\nEither way, that decision should not stand in the way of fixing the existing use cases today.",
            "created_at": "2024-04-17T07:30:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2060571893",
            "id": 2060571893,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM560dT1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060571893/reactions"
            },
            "updated_at": "2024-04-17T07:30:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060571893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I could imagine a future where Neovim simply doesn't support cmd.exe as a shell anymore, and defaults to powershell.\r\n\r\nThat's what I was thinking, yes, _if_ it allows things to work better on other platforms (including win shells) and the alternatives are reasonable.\r\n\r\nIn any case, it would be helpful to gather some data on 1. which shells/platforms are actually used on Windows and 2. the issues each have (what works, what doesn't, what requires jumping through hoops).",
            "created_at": "2024-04-17T07:45:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2060598847",
            "id": 2060598847,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM560j4_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060598847/reactions"
            },
            "updated_at": "2024-04-17T07:49:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060598847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nice analysis!\r\n\r\n>  \"we eventually stop supporting cmd.exe\"\r\n\r\nSeems like a separate topic. Based on this thread, I don't see a reason to drop support for a particular shell?\r\n\r\n> So, basically, there are two places in the chain that are trying to make the argument vector \"windows-friendly\": Vim's `shell_build_argv`, and libuv's `make_program_args`. Only one of the two should be done. To only use vim's behaviour, it is probably sufficient to change [libuv_process_spawn](https://github.com/neovim/neovim/blob/master/src/nvim/event/libuv_process.c#L32) to always pass `UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS`. Since `cmd.exe` already has to use this behaviour since its argument parsing does _not_ follow that of the C runtime (i.e. all other programs), this seems like it will cause the least amount of breakage\r\n\r\nBased on the git logs, I don't see a rationale for why  https://github.com/neovim/neovim/commit/f3cc843755a6d638ada77dc31721aa53b3ff2364 special-cased \"cmd.exe\", I assume it was just conservative.\r\n\r\n\r\n\r\n> For non-cmd.exe, we should completely ignore shellquote/shellxquote/shellxescape/etc, not do any quoting/escaping of our own, and instead let libuv handle it for us.\r\n\r\nSure, let's try it. Existing tests are here: https://github.com/neovim/neovim/blob/8e5c48b08dad54706500e353c58ffb91f2684dd3/test/functional/vimscript/system_spec.lua#L130\r\n\r\n",
            "created_at": "2024-04-17T10:42:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2060962509",
            "id": 2060962509,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM5618rN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060962509/reactions"
            },
            "updated_at": "2024-04-17T10:42:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060962509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "One thing I'd definitely like to fix is this\r\n\r\n```vim\r\n:make\r\n:!cargo  2>&1| tee F:\\msys2\\tmp\\nvim.0\\cn0m97\\2\r\ncargo  2>&1| tee F:\\msys2       mp\r\nvim.0error\r\n...\r\nE40: Can't open errorfile F:\\msys2\\tmp\\nvim.0\\cn0m97\\2\r\n```\r\nThe weird printing seems to be zsh specific, but even with bash it still doesn't write the correct file, so quickfix is broken.\r\n\r\nI think the temporary file path should be obeying `'shellslash'`:\r\n\r\n> When set, a forward slash is used when expanding file names.  This is\r\n> useful when a Unix-like shell is used instead of cmd.exe.  Backward\r\n> slashes can still be typed, but they are changed to forward slashes by\r\n\r\nI'm not sure how involved of a fix that is, but seeing as Neovim doesn't currently use UNC paths, I don't see a big issue.",
            "created_at": "2024-04-17T11:58:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2061091469",
            "id": 2061091469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM562cKN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061091469/reactions"
            },
            "updated_at": "2024-04-17T11:58:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061091469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think the temporary file path should be obeying 'shellslash':\r\n\r\nOr `'shellslash'` should be removed and forward slashes be used unconditionally. The point here is that we are fine making breaking changes for legacy systems that are no longer officially supported, _if_ that helps fixing bugs on supported systems.",
            "created_at": "2024-04-17T12:02:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2061098998",
            "id": 2061098998,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM562d_2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061098998/reactions"
            },
            "updated_at": "2024-04-17T12:02:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061098998",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That would be a more radical if for my purposes equally workable solution. \r\n\r\n~~I am slightly worried about breaking the ability to use [UNC Paths](https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats#unc-paths), which are used for referring to files on networked devices without assigning them a drive letter (so it could be worked around within limits).~~ After testing, it seems one can write UNC paths with forward slashes too!\r\n\r\nThe [`\\\\?\\`/`\\\\.\\` format for paths](https://learn.microsoft.com/en-us/windows/win32/fileio/naming-a-file#win32-file-namespaces) (which mandates backslashes) used to be the only way to get around the `MAX_PATH` limitations on Windows, but as of Windows 10 1607 [this is no longer the case](https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=registry#enable-long-paths-in-windows-10-version-1607-and-later). Windows 10 1607 has been end of life since April 2019, so *all currently officially supported versions of Windows* support the registry setting.\r\n\r\nThere are still weird edge cases that use the \"DOS device\" path format, like named pipes. I don't know that we care about this, but for the sake of completeness I'm mentioning it.",
            "created_at": "2024-04-17T12:23:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2061138001",
            "id": 2061138001,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM562nhR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061138001/reactions"
            },
            "updated_at": "2024-04-17T12:27:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061138001",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(Again, this is just opening a door to more options for a solution to these issues, not a push to do that.)\r\n\r\nNote we claim support for Windows >= 8, but that, too, can be revisited. We need to distinguish platform tiers (`:h supported`) by version anyway.",
            "created_at": "2024-04-17T12:36:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2061161484",
            "id": 2061161484,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM562tQM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061161484/reactions"
            },
            "updated_at": "2024-04-17T12:37:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061161484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We use named pipes. Does it not support forward slashes? In any case I'm not sure we need to care, because we don't treat named pipes as filesystem paths.",
            "created_at": "2024-04-17T13:38:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2061285288",
            "id": 2061285288,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM563Leo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061285288/reactions"
            },
            "updated_at": "2024-04-17T13:38:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061285288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Note we claim support for Windows >= 8, but that, too, can be revisited.\r\n\r\nI will one-up you and claim we already don't support anything older than Windows 10 \"Version 1809\" as the `:terminal` feature does not work for those systems. It depends on how one interprets what \"support\" means, but I personally interpret it to mean ALL editor features are supported, rather than that some parts happen to work.\r\n\r\nOne might argue that this quasi-bump in minimum version was accidental and that it should therefore count more as a bug/accident than intentional. I personally think this is a bit weak stance as documenting this problem is already an admission from our side that we don't see this being resolved soon.\r\n\r\nI propose we simply bite the bullet and officially only support Windows 10 \"Version 1809\" to simplify the question on which windows version we support (which is brought up surprisingly frequently).",
            "created_at": "2024-04-17T13:42:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2061293704",
            "id": 2061293704,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM563NiI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061293704/reactions"
            },
            "updated_at": "2024-04-17T13:42:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061293704",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  It depends on how one interprets what \"support\" means, but I personally interpret it to mean ALL editor features are supported, rather than that some parts happen to work.\r\n\r\nYes. The current wording implies that \":terminal\" is not covered by \"support\". It's a slippery slope I would like to get off of. It strikes me as weird that we support significantly more versions than our core dependencies (libuv; would have to check tree-sitter).",
            "created_at": "2024-04-17T15:06:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2061490860",
            "id": 2061490860,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM5639qs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061490860/reactions"
            },
            "updated_at": "2024-04-17T15:06:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061490860",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Linking https://github.com/neovim/neovim/pull/28395 since the topic of slash handling got brought up here.\r\n\r\nTreating this as a sort of \"tracking issue\" while the details of what we want to change/fix aren't fully decided yet.\r\n\r\nIf/when that PR lands, I would try and take stock of what works/doesn't on Windows with various shells and try to implement the \"let's have libuv alone handle non-cmd shells\" strategy, unless there are strong objections or other things to try first.",
            "created_at": "2024-04-18T13:30:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2063874683",
            "id": 2063874683,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM57BDp7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2063874683/reactions"
            },
            "updated_at": "2024-04-18T13:30:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2063874683",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "If I run `:!ls` in neovim (installed with scoop) in bash (from Git for Windows, installed with scoop), I get:\r\n```\r\n:!ls\r\n/usr/bin/bash: /s: No such file or directory\r\n\r\nshell returned 127\r\n```\r\n\r\n@LunarLambda, is this the same error in this issue?\r\n\r\nThe error message above reminds me of a cmd-bash thing where in bash, to run cmd commands, you need to escape the forward slashes that prefix flags for cmd commands. For example:\r\nIn cmd you would run: `tasklist /fo csv`\r\nIn bash you could run: `taskkill //fo csv`\r\n\r\nIn bash, if you run `tasklist /fo csv`, you get the error:\r\n```sh\r\n$ tasklist /fo csv\r\nERROR: Invalid argument/option - 'C:/Users/USERNAME/scoop/apps/git/2.45.1/fo'.\r\nType \"TASKLIST /?\" for usage.\r\n```",
            "created_at": "2024-05-28T18:52:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2135908692",
            "id": 2135908692,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM5_T2FU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2135908692/reactions"
            },
            "updated_at": "2024-05-28T18:52:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2135908692",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51864191?v=4",
                "events_url": "https://api.github.com/users/ykhan21/events{/privacy}",
                "followers_url": "https://api.github.com/users/ykhan21/followers",
                "following_url": "https://api.github.com/users/ykhan21/following{/other_user}",
                "gists_url": "https://api.github.com/users/ykhan21/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ykhan21",
                "id": 51864191,
                "login": "ykhan21",
                "node_id": "MDQ6VXNlcjUxODY0MTkx",
                "organizations_url": "https://api.github.com/users/ykhan21/orgs",
                "received_events_url": "https://api.github.com/users/ykhan21/received_events",
                "repos_url": "https://api.github.com/users/ykhan21/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ykhan21/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ykhan21/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ykhan21",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It is the same error. For a workaround, you can set the following: `:set shellcmdflag=-c shellxquote= shellxescape=`\r\n\r\nThis is enough to get git bash and other posix-ish shells working on Windows. It might not be a perfect solution, because as described in this issue, Neovim is currently doing things in a very roundabout way.",
            "created_at": "2024-05-28T19:01:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2135921829",
            "id": 2135921829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM5_T5Sl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2135921829/reactions"
            },
            "updated_at": "2024-05-28T19:01:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2135921829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This fixes `:!...` commands, but not `:'<,'>!...` commands.\r\nFor example, in vim, you could highlight some text with visual mode and run `:!wc` (which actually runs `:'<,'>!wc`).",
            "created_at": "2024-05-28T20:55:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2136089001",
            "id": 2136089001,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM5_UiGp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2136089001/reactions"
            },
            "updated_at": "2024-05-28T20:55:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2136089001",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51864191?v=4",
                "events_url": "https://api.github.com/users/ykhan21/events{/privacy}",
                "followers_url": "https://api.github.com/users/ykhan21/followers",
                "following_url": "https://api.github.com/users/ykhan21/following{/other_user}",
                "gists_url": "https://api.github.com/users/ykhan21/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ykhan21",
                "id": 51864191,
                "login": "ykhan21",
                "node_id": "MDQ6VXNlcjUxODY0MTkx",
                "organizations_url": "https://api.github.com/users/ykhan21/orgs",
                "received_events_url": "https://api.github.com/users/ykhan21/received_events",
                "repos_url": "https://api.github.com/users/ykhan21/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ykhan21/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ykhan21/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ykhan21",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Quite possible, input redirections done by neovim when calling the shell are often broken due to shells intepreting the \\\\ path separator incorrectly.",
            "created_at": "2024-05-28T21:00:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2136095889",
            "id": 2136095889,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM5_UjyR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2136095889/reactions"
            },
            "updated_at": "2024-05-28T21:00:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2136095889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, it seems like it. This is the error:\r\n```\r\n:'<,'>!wc\r\nshell returned 1\r\n\r\nE485: Can't read file C:\\Users\\USERNAME\\AppData\\Local\\Temp\\nvim.0\\olxDWI\\1\r\n```",
            "created_at": "2024-05-28T21:02:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2136098337",
            "id": 2136098337,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM5_UkYh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2136098337/reactions"
            },
            "updated_at": "2024-05-28T21:02:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2136098337",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51864191?v=4",
                "events_url": "https://api.github.com/users/ykhan21/events{/privacy}",
                "followers_url": "https://api.github.com/users/ykhan21/followers",
                "following_url": "https://api.github.com/users/ykhan21/following{/other_user}",
                "gists_url": "https://api.github.com/users/ykhan21/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ykhan21",
                "id": 51864191,
                "login": "ykhan21",
                "node_id": "MDQ6VXNlcjUxODY0MTkx",
                "organizations_url": "https://api.github.com/users/ykhan21/orgs",
                "received_events_url": "https://api.github.com/users/ykhan21/received_events",
                "repos_url": "https://api.github.com/users/ykhan21/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ykhan21/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ykhan21/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ykhan21",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes. This is already explained in some of the initial comments to this issue. There is a linked PR that would fix this by making Neovim use / always on Windows, but it is currently stalled.",
            "created_at": "2024-05-28T21:07:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2136104970",
            "id": 2136104970,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM5_UmAK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2136104970/reactions"
            },
            "updated_at": "2024-05-28T21:07:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2136104970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@LunarLambda  @ykhan21 \r\n\r\nFor people who want to use git-bash for `:!` or `:ter` on Windows, the following config works.\r\n\r\nFor zsh or other unix shell, setting `opts.shellslash = true` might also help.\r\n\r\n ```lua\r\nif vim.fn.has(\"win32\") == 1 or vim.fn.has(\"win64\") == 1 then\r\n  local opt = vim.opt\r\n  -- use git-bash for `:!`, `:ter`\r\n  -- windows only, convert \\ to / when expanding file names\r\n  opt.shellslash = true\r\n  -- defaults to cmd.exe\r\n  opt.shell = vim.fs.normalize(\"~/scoop/apps/git/current/bin/bash.exe\")\r\n  -- opt.shell = \"bash.exe\" -- WARN: sometimes mistakenly points to wsl bash\r\n\r\n  -- defaults to \"/s /c\" for cmd.exe\r\n  opt.shellcmdflag = \"-c\"\r\n  -- default value works\r\n  opt.shellpipe = \"2>&1| tee\"\r\n  -- Windows: may default to \"\\\"\" when 'shell' contains 'sh'\r\n  opt.shellquote = \"\"\r\n  opt.shellxquote = \"\"\r\n  -- defaults to \">\", 'bash' uses:\r\n  opt.shellredir = \">%s 2>&1\"\r\n  -- defualt value works\r\n  opt.shellxescape = \"\"\r\nend\r\n```",
            "created_at": "2024-08-29T03:10:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/28384#issuecomment-2316629775",
            "id": 2316629775,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28384",
            "node_id": "IC_kwDOAPphoM6KFPcP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2316629775/reactions"
            },
            "updated_at": "2024-08-29T12:35:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2316629775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61672396?v=4",
                "events_url": "https://api.github.com/users/xudyang1/events{/privacy}",
                "followers_url": "https://api.github.com/users/xudyang1/followers",
                "following_url": "https://api.github.com/users/xudyang1/following{/other_user}",
                "gists_url": "https://api.github.com/users/xudyang1/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xudyang1",
                "id": 61672396,
                "login": "xudyang1",
                "node_id": "MDQ6VXNlcjYxNjcyMzk2",
                "organizations_url": "https://api.github.com/users/xudyang1/orgs",
                "received_events_url": "https://api.github.com/users/xudyang1/received_events",
                "repos_url": "https://api.github.com/users/xudyang1/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xudyang1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xudyang1/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xudyang1",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 19,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28384/comments",
    "created_at": "2024-04-17T07:04:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28384/events",
    "html_url": "https://github.com/neovim/neovim/issues/28384",
    "id": 2247541547,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "d4c5f9",
            "default": false,
            "description": null,
            "id": 109461219,
            "name": "platform:windows",
            "node_id": "MDU6TGFiZWwxMDk0NjEyMTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/platform:windows"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "",
            "id": 606691254,
            "name": "has:plan",
            "node_id": "MDU6TGFiZWw2MDY2OTEyNTQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:plan"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28384/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 138,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 57,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-01-17T23:02:36Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "I_kwDOAPphoM6F9sMr",
    "number": 28384,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 7,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 7,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28384/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28384/timeline",
    "title": "Fixing `'shell'` on Windows, properly",
    "updated_at": "2025-01-19T11:19:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28384",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
        "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
        "followers_url": "https://api.github.com/users/LunarLambda/followers",
        "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
        "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/LunarLambda",
        "id": 38919842,
        "login": "LunarLambda",
        "node_id": "MDQ6VXNlcjM4OTE5ODQy",
        "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
        "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
        "repos_url": "https://api.github.com/users/LunarLambda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/LunarLambda",
        "user_view_type": "public"
    }
}