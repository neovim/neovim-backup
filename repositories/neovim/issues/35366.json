{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "## Problem\n\n(Extracted from https://github.com/neovim/neovim/pull/34285#issuecomment-3194613064 )\n\nThe main reason that new autocmds are a pain is because they execute code in completely random low-level places where it's not expected that user-defined script can be executed.\n\n\n\n## Expected behavior\n\nInstead of immediately executing the autocmd handlers, don't execute handlers until a known safe-state. ~~That could be [here](https://github.com/neovim/neovim/blob/7eb9badd9384ee5970245e2c6f25f170dea91ce8/src/nvim/state.c#L298-L308) perhaps.~~ (Edit: `SafeState` is [too limited](https://github.com/neovim/neovim/pull/34285#issuecomment-3194653155)).\n\nThe safe-state can just be \"the next time we're about to execute user code\". Anything more \"immediate\" than that is just out of scope for all new events going forward.\n\nWe don't necessarily need to migrate all autocmds to use this approach, but:\n\n- use it as the default approach going forward\n- migrate some existing autocmds where it makes sense to do so\n\n## Implementation\n\nunless you know better, here's a proposed approach:\n\n1. append to a global \"pending queue\" (like [ch_before_blocking_events](https://github.com/neovim/neovim/blob/126b2d8a17e70b5f1b251a04b39abf133cfa2b0a/src/nvim/os/input.c#L512)), with allocated data as needed.\n    - allocate its state (`v:event`, `event-data`, window-id, buffer-id, ...)\n2. when we reach the safe-state, unwind all of the pending events on the event-loop\n    - if *their* handlers trigger deferred events, those new deferred events get queued for the next safe-state \"tick\"...",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk @seandewar I'm not sure I totally followed the end of your conversation in #34285. If we want to have MarkSet be the first of these new \"safe autocmds\", what's limiting about SafeState? i.e., what can happen between \"immediately\" and SafeState?",
            "created_at": "2025-08-20T06:40:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/35366#issuecomment-3204401083",
            "id": 3204401083,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35366",
            "node_id": "IC_kwDOAPphoM6-_0e7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3204401083/reactions"
            },
            "updated_at": "2025-08-20T06:40:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3204401083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5677971?v=4",
                "events_url": "https://api.github.com/users/nathanmsmith/events{/privacy}",
                "followers_url": "https://api.github.com/users/nathanmsmith/followers",
                "following_url": "https://api.github.com/users/nathanmsmith/following{/other_user}",
                "gists_url": "https://api.github.com/users/nathanmsmith/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nathanmsmith",
                "id": 5677971,
                "login": "nathanmsmith",
                "node_id": "MDQ6VXNlcjU2Nzc5NzE=",
                "organizations_url": "https://api.github.com/users/nathanmsmith/orgs",
                "received_events_url": "https://api.github.com/users/nathanmsmith/received_events",
                "repos_url": "https://api.github.com/users/nathanmsmith/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nathanmsmith/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nathanmsmith/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nathanmsmith",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> what's limiting about SafeState?\n\nIt \"doesn't trigger during mappings for example (nor in all modes)\".\n\nBut we can worry about that later. Moving the trigger somewhere else is something we can decide after you have the shape/approach in place.",
            "created_at": "2025-08-20T16:41:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/35366#issuecomment-3207188338",
            "id": 3207188338,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35366",
            "node_id": "IC_kwDOAPphoM6_Kc9y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3207188338/reactions"
            },
            "updated_at": "2025-08-20T16:41:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3207188338",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Okay! With a queue, our unwind logic should be pretty straightforward:\n```\nfor autocmd in autocmds_queue:\n  apply_autocmds_group(autocmd)\n```\n\nThis suggests that our queue's data type should be a struct of the `apply_autocmds_group` arguments:\n\n```c\nstruct PendingAutocommand {\n  event_T event,\n  char *fname,\n  char *fname_io,\n  // Thoughts on omitting `force`? If you're okay with queuing the autocmd, you probably don't need it.\n  bool force,\n  int group,\n  buf_T *buf,\n  exarg_T *eap,\n  Object *data\n}\n```\n\n@justinmk, to clarify were you thinking of creating a new global queue for these pending autocommands? Like `ch_before_blocking_events`, should this be a child queue off the main loop?\n\nAlso - where should this logic live? Inside `src/nvim/autocmd.c` or elsewhere?",
            "created_at": "2025-08-26T05:50:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/35366#issuecomment-3222715178",
            "id": 3222715178,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35366",
            "node_id": "IC_kwDOAPphoM7AFrsq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222715178/reactions"
            },
            "updated_at": "2025-08-26T05:51:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222715178",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5677971?v=4",
                "events_url": "https://api.github.com/users/nathanmsmith/events{/privacy}",
                "followers_url": "https://api.github.com/users/nathanmsmith/followers",
                "following_url": "https://api.github.com/users/nathanmsmith/following{/other_user}",
                "gists_url": "https://api.github.com/users/nathanmsmith/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nathanmsmith",
                "id": 5677971,
                "login": "nathanmsmith",
                "node_id": "MDQ6VXNlcjU2Nzc5NzE=",
                "organizations_url": "https://api.github.com/users/nathanmsmith/orgs",
                "received_events_url": "https://api.github.com/users/nathanmsmith/received_events",
                "repos_url": "https://api.github.com/users/nathanmsmith/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nathanmsmith/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nathanmsmith/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nathanmsmith",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Like `ch_before_blocking_events`, should this be a child queue off the main loop?\n\nYeah, and that makes \"unwinding\" trivial: just call `multiqueue_process_events` :)\n\n> This suggests that our queue's data type should be a struct of the `apply_autocmds_group` arguments:\n\nThe DS can start very minimal. Avoid pointers, since they need to be either copied or managed (avoid accidental early free), unless they already have a \"ref increment\" concept.\n\nLater we may want something like `Object *internal_data`, where we could \"serialize\" less common data without worrying about the types and lifetimes (though that is potentially slow, if the event is frequent).",
            "created_at": "2025-08-26T19:24:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/35366#issuecomment-3225449188",
            "id": 3225449188,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35366",
            "node_id": "IC_kwDOAPphoM7AQHLk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225449188/reactions"
            },
            "updated_at": "2025-08-26T20:30:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225449188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The DS can start very minimal.\n\nSo something like this?\n\n```c\nstruct PendingAutocommand {\n  event_T event;  \n  char *fname;\n  char *fname_io;\n}\n```\n\nI suppose we could even cut `fname` and `fname_io` since many autocommands don't use them, but it doesn't seem too difficult to copy those strings over into this new structure. \n\n`buf` seems like the next most valuable argument, but `buf_T` looks like a much more complex data structure where we will have to start worrying about memory management.\n\nI'm happy to code up this simple version with event and fname if that'd be a good starting point! I'd argue that `buf` and `internal_data` are requirements in order for `MarkSet` to be useful, so we'll definitely want to have a plan forward there.",
            "created_at": "2025-08-27T01:31:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/35366#issuecomment-3226405052",
            "id": 3226405052,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35366",
            "node_id": "IC_kwDOAPphoM7ATwi8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3226405052/reactions"
            },
            "updated_at": "2025-08-27T01:31:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3226405052",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5677971?v=4",
                "events_url": "https://api.github.com/users/nathanmsmith/events{/privacy}",
                "followers_url": "https://api.github.com/users/nathanmsmith/followers",
                "following_url": "https://api.github.com/users/nathanmsmith/following{/other_user}",
                "gists_url": "https://api.github.com/users/nathanmsmith/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nathanmsmith",
                "id": 5677971,
                "login": "nathanmsmith",
                "node_id": "MDQ6VXNlcjU2Nzc5NzE=",
                "organizations_url": "https://api.github.com/users/nathanmsmith/orgs",
                "received_events_url": "https://api.github.com/users/nathanmsmith/received_events",
                "repos_url": "https://api.github.com/users/nathanmsmith/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nathanmsmith/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nathanmsmith/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nathanmsmith",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `buf` seems like the next most valuable argument, but `buf_T` looks like a much more complex data structure\n\nJust pass the buffer number instead of the `*buf`. Autocommands only need the buffer number.\n\nIf `MarkSet` needs specific parts of the buffer, then we will need to decide if it cares about the \"immediate\" values or if we can just get those on-demand at event-execution time.\n\nThe other fields in your original proposal look fine, just make sure to allocate and copy the strings. I don't know if there's a function to copy a `exarg_T` object, so maybe drop the `eap` field for now.",
            "created_at": "2025-08-27T01:41:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/35366#issuecomment-3226437401",
            "id": 3226437401,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35366",
            "node_id": "IC_kwDOAPphoM7AT4cZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3226437401/reactions"
            },
            "updated_at": "2025-08-27T01:44:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3226437401",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35366/comments",
    "created_at": "2025-08-17T19:50:57Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35366/events",
    "html_url": "https://github.com/neovim/neovim/issues/35366",
    "id": 3328619508,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 520282574,
            "name": "event-loop",
            "node_id": "MDU6TGFiZWw1MjAyODI1NzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/event-loop"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 4457150369,
            "name": "architecture",
            "node_id": "LA_kwDOAPphoM8AAAABCaq3oQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/architecture"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35366/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 741,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 631,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-09-01T20:43:39Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM7GZrP0",
    "number": 35366,
    "parent_issue_url": "https://api.github.com/repos/neovim/neovim/issues/34399",
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 2,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35366/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35366/timeline",
    "title": "architecture: execute autocmds (event handlers) in safe state",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-27T01:44:25Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35366",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}