{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
            "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
            "followers_url": "https://api.github.com/users/echasnovski/followers",
            "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
            "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/echasnovski",
            "id": 24854248,
            "login": "echasnovski",
            "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
            "organizations_url": "https://api.github.com/users/echasnovski/orgs",
            "received_events_url": "https://api.github.com/users/echasnovski/received_events",
            "repos_url": "https://api.github.com/users/echasnovski/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/echasnovski",
            "user_view_type": "public"
        }
    ],
    "author_association": "MEMBER",
    "body": "Make `vim.pack` respect [packspec](https://github.com/neovim/packspec). I.e. if plugin contains 'pkg.json' file, `vim.pack` should install dependencies, verify Neovim version, etc.\n\nRequires finalized `packspec` specification and discussions about the scope.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm lukewarm on packspec, but if we are going to support \"dependencies\" then I'm zealous about it. I don't see any other way, except maybe luarocks.",
            "created_at": "2025-07-04T13:54:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/34778#issuecomment-3036359491",
            "id": 3036359491,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34778",
            "node_id": "IC_kwDOAPphoM60-ytD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3036359491/reactions"
            },
            "updated_at": "2025-07-04T13:54:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3036359491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, right now I find the following usages of 'pkg.json' which would be great to have `vim.pack` support:\n- Declare dependencies for `vim.pack` to automatically resolve and install/update. This will be hard but I think worth it at least in some simplified form.\n- Declare actions/hooks to be executed on install/update/delete.\n- Declare Neovim version constraints.\n- Declare plugin's name to be used during install. Like maybe 'plugin.nvim' wants to be named 'plugin'. Or for cases like [catppuccin/nvim](https://github.com/catppuccin/nvim) to not have the plugin named 'nvim'.",
            "created_at": "2025-07-04T14:01:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/34778#issuecomment-3036386809",
            "id": 3036386809,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34778",
            "node_id": "IC_kwDOAPphoM60-5X5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 5,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3036386809/reactions"
            },
            "updated_at": "2025-07-04T14:02:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3036386809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Apologies in advance and feel free to mark this comment as off-topic if it's really worth it, but I genuinely have some concerns about adopting a custom format based-off json for plugin management. Wouldn't it be better to wait a bit and adopt Luarocks through Lux instead? Having something more robust with better UX/DX seems more cost-effective and would mean less code to maintain. It would also prevent repeating the same old mistake and ending up with a sort of decentralized MELPA...",
            "created_at": "2025-07-06T00:30:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/34778#issuecomment-3040481853",
            "id": 3040481853,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34778",
            "node_id": "IC_kwDOAPphoM61OhI9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3040481853/reactions"
            },
            "updated_at": "2025-07-06T00:30:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3040481853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36456999?v=4",
                "events_url": "https://api.github.com/users/NTBBloodbath/events{/privacy}",
                "followers_url": "https://api.github.com/users/NTBBloodbath/followers",
                "following_url": "https://api.github.com/users/NTBBloodbath/following{/other_user}",
                "gists_url": "https://api.github.com/users/NTBBloodbath/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/NTBBloodbath",
                "id": 36456999,
                "login": "NTBBloodbath",
                "node_id": "MDQ6VXNlcjM2NDU2OTk5",
                "organizations_url": "https://api.github.com/users/NTBBloodbath/orgs",
                "received_events_url": "https://api.github.com/users/NTBBloodbath/received_events",
                "repos_url": "https://api.github.com/users/NTBBloodbath/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/NTBBloodbath/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/NTBBloodbath/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/NTBBloodbath",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> have some concerns about adopting a custom format based-off json for plugin management. Wouldn't it be better to wait a bit and adopt Luarocks through Lux instead?\n\nThe purpose of packspec is to be a strict subset of NPM package.json, thus intentionally *not* a \"custom format\". It's also designed to be declarative (data-only), which allows \"roundtripping\" (e.g. `:packinstall` writes to the user's local packspec), and generating a UI from the data. Seems less feasible with turing-complete formats like rockspec. Happy to be proven wrong / does Lux help with that?\n\n> prevent repeating the same old mistake and ending up with a sort of decentralized MELPA...\n\nDecentralized is an intentional outcome, why is it a mistake? A centralized registry also [planned](https://github.com/neovim/neovim/issues/24221#issuecomment-1616009906) but surely we want to keep the door open for the decentralized, ad-hoc, URI-based way of specifying a dependency?",
            "created_at": "2025-07-06T14:39:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/34778#issuecomment-3041831100",
            "id": 3041831100,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34778",
            "node_id": "IC_kwDOAPphoM61Tqi8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3041831100/reactions"
            },
            "updated_at": "2025-07-06T14:40:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3041831100",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Seems less feasible with turing-complete formats like rockspec. Happy to be proven wrong / does Lux help with that?\n\nFor projects, Lux uses [a subset of the rockspec specification in a TOML format](https://nvim-neorocks.github.io/guides/lux-toml), which can be extended with a Lua `extra.rockspec` for more complex packages if needed. \nSo with Lux, you can edit the `lux.toml` using commands like `lx add`, `lx remove`, `lx pin`, ...\n\n> but surely we want to keep the door open for the decentralized, ad-hoc, URI-based way of specifying a dependency?\n\nTo add my two cents: (please correct me if I'm mistaken) transitive dependencies are a lot more challenging without a centralised registry.\nThe notion that \"upstream dependencies don't need to be 'compliant'\" is only true without transitive dependencies.\nFor instance, if a package depends on a luarocks library that doesn't additionally maintain a `pkg.json`, you won't pull its dependencies.\nAdditionally, you'll have to pull all packages (in a branch, sequentially) to fully resolve a dependency tree.",
            "created_at": "2025-07-07T22:24:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/34778#issuecomment-3046673741",
            "id": 3046673741,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34778",
            "node_id": "IC_kwDOAPphoM61mI1N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3046673741/reactions"
            },
            "updated_at": "2025-07-07T22:57:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3046673741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The notion that \"upstream dependencies don't need to be 'compliant'\" is only true without transitive dependencies.\n> For instance, if a package depends on a luarocks library that doesn't additionally maintain a `pkg.json`, you won't pull its dependencies.\n\nYes. A [real package manager](https://medium.com/@sdboyer/so-you-want-to-write-a-package-manager-4ae9c17d9527) like luarocks/lux is a complex affair, presumably  we would need to ship lux/luarocks, or reimplement them. A \"dumb\" spec like packspec (pkg.json) avoids that and outsources most of the decisions to git.\n\nSo the way I see it, the door is open for some day pulling in the jungle of a \"real package manager\", while meanwhile having a low-cost answer that rides the current state of the vim/nvim package ecosystem.\n\nMeanwhile, `vim.pack` and [vim.net.request()](https://github.com/neovim/neovim/pull/34140) open the door for users (and maybe our `example_init.lua` mentioned in `:help nvim-quickstart`), to pull in Lux by adding 1 line to their config. \n\nMy sense is that we can gain a lot with a little by keeping things simple. If we want to consider shipping rockspec/`lux.toml`, that's a much bigger scope that is likely to stall. \n\nI could be proven wrong by a PR that implements the necessary parts in 1000 lines or so.\n\n> which can be extended with a Lua `extra.rockspec`\n\nThis would just need to be dropped, since I assume it brings in the entire scope of luarocks.",
            "created_at": "2025-07-08T00:03:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/34778#issuecomment-3046899998",
            "id": 3046899998,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34778",
            "node_id": "IC_kwDOAPphoM61nAEe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3046899998/reactions"
            },
            "updated_at": "2025-07-08T00:09:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3046899998",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34778/comments",
    "created_at": "2025-07-04T13:26:29Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34778/events",
    "html_url": "https://github.com/neovim/neovim/issues/34778",
    "id": 3202749896,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34778/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6-5hXI",
    "number": 34778,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 6,
        "-1": 6,
        "confused": 0,
        "eyes": 2,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 14,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34778/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34778/timeline",
    "title": "Add `packspec` support to `vim.pack`",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-08T00:09:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34778",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}