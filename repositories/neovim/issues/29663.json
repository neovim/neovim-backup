{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "`vim.lsp.util.open_floating_preview` creates a new buffer each time it's called, which can drive up the buffer numbers pretty aggressively, esp. for diagnostics, where the window and buffer tend to be pretty transient. Can some logic be added to allow an existing buffer to be passed through that will be overwritten instead of a fresh one being created?\r\n\r\nhttps://github.com/neovim/neovim/blob/45b7a2c50335e1943a36715101e40eda5a1423f3/runtime/lua/vim/lsp/util.lua#L1606",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Well 20 lines or so down you have this - `vim.bo[floating_bufnr].bufhidden = 'wipe'`. Which means that the buffer will be cleaned up immediately after it goes hidden.\r\n\r\nhttps://github.com/neovim/neovim/blob/45b7a2c50335e1943a36715101e40eda5a1423f3/runtime/lua/vim/lsp/util.lua#L1646",
            "created_at": "2024-07-12T03:40:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2224367124",
            "id": 2224367124,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6ElSYU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2224367124/reactions"
            },
            "updated_at": "2024-07-12T03:40:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2224367124",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Correct, but the buffer ids will still tick upward. I don't like buffer ids in the thousands.",
            "created_at": "2024-07-12T04:02:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2224437198",
            "id": 2224437198,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6EljfO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2224437198/reactions"
            },
            "updated_at": "2024-07-12T04:02:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2224437198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't like buffer ids in the thousands.\n\nCould you elaborate why this is a problem? It'd help to know what specific pain points you have.",
            "created_at": "2024-07-12T13:32:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2225601969",
            "id": 2225601969,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6Ep_2x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2225601969/reactions"
            },
            "updated_at": "2024-07-12T13:32:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2225601969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Aesthetically when I'm viewing the buffer list I don't like the really large prefixes. And if I decide to manually interact with buffers by number, I'd like those numbers to be smaller.",
            "created_at": "2024-07-12T17:51:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2226091424",
            "id": 2226091424,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6Er3Wg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2226091424/reactions"
            },
            "updated_at": "2024-07-12T17:51:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2226091424",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I suppose that since you tell a buffer is a 'scratch' type through the api at the moment of creation, and those are usually the ones used for utility purposes, such as the one presented in this issue, nvim could internally treat these buffers a bit different, and assign those buffers different id/seed/starting id compared to regular non-scratch buffers.",
            "created_at": "2024-07-14T12:21:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2227327887",
            "id": 2227327887,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6EwlOP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227327887/reactions"
            },
            "updated_at": "2024-07-14T12:21:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227327887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think that would be a lot more complicated than my proposal of letting\r\nyou pass through a buffer to use. Also you can toggle whether a buffer is a\r\nscratch buffer through these settings - https://neovim.io/doc/user/windows.html#scratch-buffer\r\n\r\nOn Sun, Jul 14, 2024 at 8:22 AM Svetlozar Iliev ***@***.***>\r\nwrote:\r\n\r\n> I suppose that since you tell a buffer is a 'scratch' type through the api\r\n> at the moment of creation, and those are usually the ones used for utility\r\n> purposes, such as the one presented in this issue, nvim could internally\r\n> treat these buffers a bit different, and assign those buffers different\r\n> id/seed/starting id compared to regular non-scratch buffers.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/neovim/neovim/issues/29663#issuecomment-2227327887>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAGD5T6NR2UHSC3GXAQNJTLZMJUOVAVCNFSM6AAAAABKXOQ6M2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDEMRXGMZDOOBYG4>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>\r\n",
            "created_at": "2024-07-14T13:37:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2227352601",
            "id": 2227352601,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6EwrQZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227352601/reactions"
            },
            "updated_at": "2024-07-14T14:52:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227352601",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I was thinking a general solution, to a problem, that is a pretty common pattern across many plugins and builtin functionalities. But yeah if you wish this solved only for floating windows you can either pass it in, or have the implementation changed to reuse a buffer.",
            "created_at": "2024-07-14T14:27:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2227368404",
            "id": 2227368404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6EwvHU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227368404/reactions"
            },
            "updated_at": "2024-07-14T14:28:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227368404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think a general solution to this would be pretty hard, and it's not clear what it would look like. There's a lot of value in being able to uniquely identify windows and buffers for a vim session, so without surrounding context that lets you know you can confidently recycle a buffer doing so would lead to bugs. The signal of whether a buffer is a scratch buffer wouldn't work for this for the reason I gave. Even if you were to do something like enable the reuse of buffer ids of buffers that are wiped out (not just deleted), you still could introduce bugs where plugins store buffer-specific state outside of buffer variables that they would begin applying to the new buffer that claims the id.\r\n\r\nAlso, I've updated the original post that suggested reusing an existing buffer behind the scenes as one of two options, since thinking more about this I'm more worried about that being correct in all uses of this function. Letting a buffer be passed through pushes the responsibility for the correctness to the caller.",
            "created_at": "2024-07-14T14:59:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2227378230",
            "id": 2227378230,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6Ewxg2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227378230/reactions"
            },
            "updated_at": "2024-07-14T15:02:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2227378230",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Even if you were to do something like enable the reuse of buffer ids of buffers that are wiped out (not just deleted), you still could introduce bugs where plugins store buffer-specific state\r\n\r\nYeah that's a risk.\r\n\r\nThere is precedent for reusing a scratch buffer to avoid excessive buffer id \"pollution\": that's how `inccommand=split` works internally. \r\n\r\nHowever, it should also be emphasized that buffer ids in general must not be thought of as precious. Buffers are the fundamental editor data structure, and it must be expected and encouraged for plugins to be able to use them as throwaway objects, just like strings, dicts, etc.\r\n\r\n# Proposal\r\n\r\n*Update: prefer https://github.com/neovim/neovim/issues/29663#issuecomment-2333424835 instead.*\r\n\r\nAFAICT, in this case it seems to make sense for `open_floating_preview` to keep a circular queue (`vim.ringbuf()`) of scratch buffers, instead of calling `nvim_create_buf` every single time. Whenever a `open_floating_preview` is closed, the buffer is added back to the list of scratch buffers.\r\n\r\nIf this doesn't add much code, it seems acceptable. It would be even simpler if `open_floating_preview` isn't intended to show more than one float at a time.",
            "created_at": "2024-09-05T11:10:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2331248332",
            "id": 2331248332,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6K9AbM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2331248332/reactions"
            },
            "updated_at": "2024-09-06T10:28:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2331248332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Re: buffer ids not being precious, I think there are some things that just become less ergonomic as the ids climb. For example, buffer commands such as `:sb` and `:bw` when an ID is passed. Though I'm not claiming that a workflow that is heavily reliant on buffer ids even being exposed is a good idea.\r\n\r\nPerhaps related - what is the max possible value for a buffer, window, and tab page id? If it's int32 or uint32, what happens when the id reaches its max value? If buffers and windows are seen as throwaway objects that are discarded and recreated rapidly I could see these limits being reached in a long-lived editor session w/ a plugin that churns through buffers / windows very carelessly.",
            "created_at": "2024-09-05T22:21:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2332728506",
            "id": 2332728506,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6LCpy6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2332728506/reactions"
            },
            "updated_at": "2024-09-05T22:27:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2332728506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> what happens when the id reaches its max value?\r\n\r\nNo one knows. At int32, if a plugin creates 1 buffer/s, that's 2 billion seconds = ~60 years :)",
            "created_at": "2024-09-05T22:57:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2332818739",
            "id": 2332818739,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6LC_0z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2332818739/reactions"
            },
            "updated_at": "2024-09-05T22:57:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2332818739",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sure, but I think it's a bit more likely to be something like N<10 buffers at 100ms (say, per keystroke). Maybe N = 1, but I'm not sure how much we should rely on that -- you've got completions, diagnostics, and you could imagine people having a few more in more custom configs. If we cut by 2 orders of magnitude, it's still unlikely to be hit, but it's not as comfortable as an int64. Sorry for derailing the discussion though -- your proposal above sounds good to me.",
            "created_at": "2024-09-05T23:46:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2332909346",
            "id": 2332909346,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6LDV8i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2332909346/reactions"
            },
            "updated_at": "2024-09-05T23:46:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2332909346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Adding some so far not mentioned aspects here:\r\n\r\n- `open_floating_preview` is a candidate for removal with a replacement that's not in `lsp.util`: https://github.com/neovim/neovim/issues/25272 and https://github.com/neovim/neovim/issues/25514 (My preference would be to do that first, and basically block `open_floating_preview` for any extension whatsoever)\r\n- There'd be the previewwindow feature for cases where you want to have one unique preview. We could consider using that instead in a few places. There is also a PR to extend it to support float: https://github.com/neovim/neovim/pull/26799\r\n- `open_floating_preview` is currently used for different features - hover, diagnostics, signature_help. If we recycle buffers we need to make sure that any state set from one feature is always reset. Should be doable, just to have it mentioned for the complexity assessment. And I don't know if this wouldn't be in some ways breaking if people relied on certain autocmd's. Or plugins could've cached the bufnr and relied on it becoming invalid if its gone.\r\n- I have in mind to change hover & signature help to support being moved from float to non-float, and if done, no longer auto-close on move to allow users to keep it open to be able to keep reading the docs while they're typing/moving around. Shouldn't conflict with any buffer recycling idea - but just to have it mentioned. ",
            "created_at": "2024-09-06T07:29:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/29663#issuecomment-2333424835",
            "id": 2333424835,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29663",
            "node_id": "IC_kwDOAPphoM6LFTzD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2333424835/reactions"
            },
            "updated_at": "2024-09-06T07:29:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2333424835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29663/comments",
    "created_at": "2024-07-11T17:50:59Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29663/events",
    "html_url": "https://github.com/neovim/neovim/issues/29663",
    "id": 2403738234,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "save/restore editor state: shada, context, ctx, sessions, mksession",
            "id": 4449264023,
            "name": "editor-state",
            "node_id": "LA_kwDOAPphoM8AAAABCTJhlw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/editor-state"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29663/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 285,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 339,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-04T21:53:41Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6PRiJ6",
    "number": 29663,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29663/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29663/timeline",
    "title": "vim.lsp.util.open_floating_preview should recycle its buffer(s)",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:57:47Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29663",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
        "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
        "followers_url": "https://api.github.com/users/ddickstein/followers",
        "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
        "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ddickstein",
        "id": 802511,
        "login": "ddickstein",
        "node_id": "MDQ6VXNlcjgwMjUxMQ==",
        "organizations_url": "https://api.github.com/users/ddickstein/orgs",
        "received_events_url": "https://api.github.com/users/ddickstein/received_events",
        "repos_url": "https://api.github.com/users/ddickstein/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ddickstein",
        "user_view_type": "public"
    }
}