{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "- `nvim --version`: 0.4.4\r\n- Operating system/version: fedora 32\r\n- Terminal name/version: kitty 0.18.3\r\n- `$TERM`: xterm-kitty\r\n\r\nKitty terminal created a [protocol for graphic support](https://sw.kovidgoyal.net/kitty/graphics-protocol.html) using escape characters, we could display images in neovim by supporting the protocol.\r\nI would love to see this feature implemented as it would enable full notebook (R notebook, jupyter notebook, also markdown) experience in neovim as well as many other applications.\r\nWhile Kitty is (as far as I know) the only terminal to support graphics at the moment, their protocol is designed to integrate well with current terminal architectures. ",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I would love to have protocol in Neovim that pretty much tells GUIs: you can render this region as image/html/markdown instead of the alt-text that's actually there.",
            "created_at": "2020-09-27T14:12:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-699640575",
            "id": 699640575,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTY0MDU3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 2,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/699640575/reactions"
            },
            "updated_at": "2020-09-27T14:12:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/699640575",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, this would be really neat, making neovim stand up against modern IDEs on every level!  \r\nGUIs just need to support this protocol if neovim supports it.\r\nThis protocol is a neat way of supporting graphics for terminal based applications running in a GUI, like terminal emulator or a GUI wrapper around neovim for example.",
            "created_at": "2020-09-27T14:40:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-699643778",
            "id": 699643778,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTY0Mzc3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/699643778/reactions"
            },
            "updated_at": "2020-09-27T14:49:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/699643778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44670538?v=4",
                "events_url": "https://api.github.com/users/nscotto/events{/privacy}",
                "followers_url": "https://api.github.com/users/nscotto/followers",
                "following_url": "https://api.github.com/users/nscotto/following{/other_user}",
                "gists_url": "https://api.github.com/users/nscotto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nscotto",
                "id": 44670538,
                "login": "nscotto",
                "node_id": "MDQ6VXNlcjQ0NjcwNTM4",
                "organizations_url": "https://api.github.com/users/nscotto/orgs",
                "received_events_url": "https://api.github.com/users/nscotto/received_events",
                "repos_url": "https://api.github.com/users/nscotto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nscotto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nscotto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nscotto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I am looking at the source code trying to understand where this would fit, can anyone point at me the files/function to look at?",
            "created_at": "2020-09-29T18:17:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-700893383",
            "id": 700893383,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDg5MzM4Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/700893383/reactions"
            },
            "updated_at": "2020-09-29T18:17:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/700893383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44670538?v=4",
                "events_url": "https://api.github.com/users/nscotto/events{/privacy}",
                "followers_url": "https://api.github.com/users/nscotto/followers",
                "following_url": "https://api.github.com/users/nscotto/following{/other_user}",
                "gists_url": "https://api.github.com/users/nscotto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nscotto",
                "id": 44670538,
                "login": "nscotto",
                "node_id": "MDQ6VXNlcjQ0NjcwNTM4",
                "organizations_url": "https://api.github.com/users/nscotto/orgs",
                "received_events_url": "https://api.github.com/users/nscotto/received_events",
                "repos_url": "https://api.github.com/users/nscotto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nscotto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nscotto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nscotto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Guess that's a question for @bfredl or @justinmk ",
            "created_at": "2020-09-30T11:14:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-701325142",
            "id": 701325142,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTMyNTE0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/701325142/reactions"
            },
            "updated_at": "2020-09-30T11:14:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/701325142",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4117685?v=4",
                "events_url": "https://api.github.com/users/KillTheMule/events{/privacy}",
                "followers_url": "https://api.github.com/users/KillTheMule/followers",
                "following_url": "https://api.github.com/users/KillTheMule/following{/other_user}",
                "gists_url": "https://api.github.com/users/KillTheMule/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KillTheMule",
                "id": 4117685,
                "login": "KillTheMule",
                "node_id": "MDQ6VXNlcjQxMTc2ODU=",
                "organizations_url": "https://api.github.com/users/KillTheMule/orgs",
                "received_events_url": "https://api.github.com/users/KillTheMule/received_events",
                "repos_url": "https://api.github.com/users/KillTheMule/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KillTheMule/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KillTheMule/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KillTheMule",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "maybe we want some kind of concept for representing images in GUI:s in general. then a kitty-protocol implementation in TUI would just follow, as TUI is just another GUI already.",
            "created_at": "2020-09-30T16:40:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-701507804",
            "id": 701507804,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTUwNzgwNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/701507804/reactions"
            },
            "updated_at": "2020-09-30T16:40:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/701507804",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Not too sure about the extent of what you mean by concept.\r\nAs a first draft of what could be done:\r\n- we could have commands for inserting images under cursor\r\n- internally the images would be represented using kitty protocol, i.e. using the graphic escape code, GUIs would implement the protocol in order to render the images.\r\n- maybe having an option for enabling the feature",
            "created_at": "2020-10-01T18:47:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-702328640",
            "id": 702328640,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjMyODY0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/702328640/reactions"
            },
            "updated_at": "2020-10-01T18:47:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/702328640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44670538?v=4",
                "events_url": "https://api.github.com/users/nscotto/events{/privacy}",
                "followers_url": "https://api.github.com/users/nscotto/followers",
                "following_url": "https://api.github.com/users/nscotto/following{/other_user}",
                "gists_url": "https://api.github.com/users/nscotto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nscotto",
                "id": 44670538,
                "login": "nscotto",
                "node_id": "MDQ6VXNlcjQ0NjcwNTM4",
                "organizations_url": "https://api.github.com/users/nscotto/orgs",
                "received_events_url": "https://api.github.com/users/nscotto/received_events",
                "repos_url": "https://api.github.com/users/nscotto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nscotto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nscotto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nscotto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@nscotto I guess what bfredl is trying to say is that implementing special escape sequences shouldn't live in the main TUI client and in this repo. There could be kitty-client in a separate repo that could display images. For that it must be able to ask nvim where there are actually images (and meta data like size etc.). This could implemented by nvim lua module that places extmarks at ranges where images can be displayed. The kitty client can just ask the lua module for the images and then output the escape codes. This way there would be virtually no code in the main repo and each client can implement the rendering of the meta data their way.",
            "created_at": "2020-10-02T08:14:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-702592452",
            "id": 702592452,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjU5MjQ1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/702592452/reactions"
            },
            "updated_at": "2020-10-02T08:14:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/702592452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just wanted to note that there's already image support in Markdown; some LSP servers use that to get VS Code to show hover previews with images, e.g., as\r\n```markdown\r\n![preview](data:image/png;base64, .... )\r\n```\r\nI second the suggestion of @theHamsta to start with extending the floating window protocol to include \"rich\" content so you can indicate that the buffer is in fact Markdown or HTML that should be interpreted rather than shown literally (which a GUI can then do, while the TUI may instead strip the markup and do its best with conceal, like the current LSP hover/signature help code). The next step would then be \"extended language injection\" to allow applying this to specific regions of a buffer.",
            "created_at": "2020-10-02T08:41:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-702604122",
            "id": 702604122,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjYwNDEyMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/702604122/reactions"
            },
            "updated_at": "2020-10-02T08:43:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/702604122",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We don't want to hard code the kitty sequences in the versioned ui protocol (`:help ui.txt`) itself, but it is not completely out of the picture to have tui/tui.c support if it is not far too complex (also: neovim 0.6 will decouple \"core\" from \"tui\" more formally).",
            "created_at": "2020-10-02T12:36:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-702709581",
            "id": 702709581,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjcwOTU4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/702709581/reactions"
            },
            "updated_at": "2020-10-02T12:36:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/702709581",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'd love to have something like this in neovim, but I am having a hard time imagining what an API for this would look like - you'd definitely want to have a way for programatically drawing images, not just a file on a disk. Maybe an API where you could specify a framebuffer to draw at a specific position on the buffer? And then different UIs would implement it differently - the TUI could implement it if it detects a compatible terminal, for example.",
            "created_at": "2020-10-04T21:31:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-703319074",
            "id": 703319074,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzMxOTA3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/703319074/reactions"
            },
            "updated_at": "2020-10-04T21:31:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/703319074",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7443916?v=4",
                "events_url": "https://api.github.com/users/pta2002/events{/privacy}",
                "followers_url": "https://api.github.com/users/pta2002/followers",
                "following_url": "https://api.github.com/users/pta2002/following{/other_user}",
                "gists_url": "https://api.github.com/users/pta2002/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pta2002",
                "id": 7443916,
                "login": "pta2002",
                "node_id": "MDQ6VXNlcjc0NDM5MTY=",
                "organizations_url": "https://api.github.com/users/pta2002/orgs",
                "received_events_url": "https://api.github.com/users/pta2002/received_events",
                "repos_url": "https://api.github.com/users/pta2002/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pta2002/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pta2002/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pta2002",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Another alternative to kitty's protocol, which I think only kitty supports, is [sixel](https://saitoha.github.io/libsixel/) which IIRC was recently implemented by vte-ng, which gnome-terminal and termite use.\r\n\r\nOf course, the best option here would really be to just have a way for plugins to implement the details of the graphics protocol themselves, while neovim just forwards a buffer with raw pixel data.",
            "created_at": "2020-10-15T14:35:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-709368807",
            "id": 709368807,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTM2ODgwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/709368807/reactions"
            },
            "updated_at": "2020-10-15T14:36:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/709368807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7443916?v=4",
                "events_url": "https://api.github.com/users/pta2002/events{/privacy}",
                "followers_url": "https://api.github.com/users/pta2002/followers",
                "following_url": "https://api.github.com/users/pta2002/following{/other_user}",
                "gists_url": "https://api.github.com/users/pta2002/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pta2002",
                "id": 7443916,
                "login": "pta2002",
                "node_id": "MDQ6VXNlcjc0NDM5MTY=",
                "organizations_url": "https://api.github.com/users/pta2002/orgs",
                "received_events_url": "https://api.github.com/users/pta2002/received_events",
                "repos_url": "https://api.github.com/users/pta2002/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pta2002/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pta2002/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pta2002",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I tried to understand sixel from the available documentation but I think I failed ",
            "created_at": "2020-10-15T15:11:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-709392878",
            "id": 709392878,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTM5Mjg3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/709392878/reactions"
            },
            "updated_at": "2020-10-15T15:11:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/709392878",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It makes sense. In this [discussion](https://github.com/kovidgoyal/kitty/issues/33) kitty's author explain why he wrote a new protocol, worth checking out.\r\nSo yes it is definitely good to be able to support different protocol using another layer of abstraction.",
            "created_at": "2020-10-15T15:12:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-709393113",
            "id": 709393113,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTM5MzExMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/709393113/reactions"
            },
            "updated_at": "2020-10-15T15:12:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/709393113",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44670538?v=4",
                "events_url": "https://api.github.com/users/nscotto/events{/privacy}",
                "followers_url": "https://api.github.com/users/nscotto/followers",
                "following_url": "https://api.github.com/users/nscotto/following{/other_user}",
                "gists_url": "https://api.github.com/users/nscotto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nscotto",
                "id": 44670538,
                "login": "nscotto",
                "node_id": "MDQ6VXNlcjQ0NjcwNTM4",
                "organizations_url": "https://api.github.com/users/nscotto/orgs",
                "received_events_url": "https://api.github.com/users/nscotto/received_events",
                "repos_url": "https://api.github.com/users/nscotto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nscotto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nscotto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nscotto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bfredl The problem with Sixel sadly is, that the amount of grid cells involved depends on the font metrics and size being used.\r\nKitty's (and iTerm2's) image protocol are a little better in that regard, they *both* support specifying the amount of rows/cols to use for rendering. Caveats are (to my research) that it is also the by far most complex image protocol available.\r\n\r\nBefore going to \"just implement\" one image protocol, I think we've to admit there is some fragmentation and it would make sense to whatever image protocol is going to be supported by (Neo)?vim it should probably made in a more abstract way to support not just one image protocol (NB: there's great work from @csdvrx to display pixmaps via a [unicode rasterizer](https://github.com/microsoft/terminal/issues/448#issuecomment-744192801), a great way to work around non-supporting terminals).\r\n\r\nThere is (or was) quite some heat discussions on a future image protocol in the terminal-wg forum however, that I think is worth keeping an eye on: [12](https://gitlab.freedesktop.org/terminal-wg/specifications/-/issues/12) and [16](https://gitlab.freedesktop.org/terminal-wg/specifications/-/issues/26).\r\n\r\np.s.: I'd love to see that happening in a somewhat terminal-independant manner at *some* point so that when I'm editing latex, my latex plugin can render math formulas in little popup windows :D",
            "created_at": "2020-12-15T07:31:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-745109939",
            "id": 745109939,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTEwOTkzOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/745109939/reactions"
            },
            "updated_at": "2020-12-15T07:31:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/745109939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
                "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
                "followers_url": "https://api.github.com/users/christianparpart/followers",
                "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
                "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/christianparpart",
                "id": 56763,
                "login": "christianparpart",
                "node_id": "MDQ6VXNlcjU2NzYz",
                "organizations_url": "https://api.github.com/users/christianparpart/orgs",
                "received_events_url": "https://api.github.com/users/christianparpart/received_events",
                "repos_url": "https://api.github.com/users/christianparpart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/christianparpart",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "\r\nIn addition to kitty and libsixel, there is also [imgcat in iTerm2](https://iterm2.com/documentation-images.html) and [tycat in terminology](https://www.enlightenment.org/docs/apps/terminology.md#Other_Useful_Features).\r\n\r\nWithout understanding how involved these different approaches would be to implement in Neovim, from a user's perspective I think it seems reasonable to focus on supporting just one solution to start out, so that people who are really keen on viewing images could use that setup. kitty seems like a good choice based on that it is available on both Linux and MacOs. Maybe there could also be a fallback mode using half blocks similar to [the image viewer viu](https://github.com/atanunq/viu)?\r\n\r\nI tried displaying images using kitty's icat in [the floatterm plugin](https://github.com/voldikss/vim-floaterm), but ran into issue #8259. Viu works with floatterm, but only in fallback mode.\r\n",
            "created_at": "2021-03-03T07:13:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-789494586",
            "id": 789494586,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTQ5NDU4Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/789494586/reactions"
            },
            "updated_at": "2021-03-03T07:13:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/789494586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4560057?v=4",
                "events_url": "https://api.github.com/users/joelostblom/events{/privacy}",
                "followers_url": "https://api.github.com/users/joelostblom/followers",
                "following_url": "https://api.github.com/users/joelostblom/following{/other_user}",
                "gists_url": "https://api.github.com/users/joelostblom/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/joelostblom",
                "id": 4560057,
                "login": "joelostblom",
                "node_id": "MDQ6VXNlcjQ1NjAwNTc=",
                "organizations_url": "https://api.github.com/users/joelostblom/orgs",
                "received_events_url": "https://api.github.com/users/joelostblom/received_events",
                "repos_url": "https://api.github.com/users/joelostblom/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/joelostblom/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/joelostblom/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/joelostblom",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> In addition to kitty and libsixel, there is also [imgcat in iTerm2](https://iterm2.com/documentation-images.html) and [tycat in terminology](https://www.enlightenment.org/docs/apps/terminology.md#Other_Useful_Features).\r\n> \r\n> Without understanding how involved these different approaches would be to implement in Neovim, from a user's perspective I think it seems reasonable to focus on supporting just one solution to start out, so that people who are really keen on viewing images could use that setup. kitty seems like a good choice based on that it is available on both Linux and MacOs. Maybe there could also be a fallback mode using half blocks similar to [the image viewer viu](https://github.com/atanunq/viu)?\r\n> \r\n> I tried displaying images using kitty's icat in [the floatterm plugin](https://github.com/voldikss/vim-floaterm), but ran into issue #8259. Viu works with floatterm, but only in fallback mode.\r\n\r\nI am sorry, that would be a really hard choice - trying to be objective here... But the kitty image protocol is implemented by only one terminal emulator and was already said to be easy to complex to be adopted by the general public. It is not a bad protocol, just to have that said, but only implementing half of it would make it so. \r\n\r\nI am not a fan of either, but (again, objectively speaking) i think Sixel is, despite all all odds of complains, the one implemented by most TEs.",
            "created_at": "2021-03-03T08:47:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-789545835",
            "id": 789545835,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTU0NTgzNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/789545835/reactions"
            },
            "updated_at": "2021-03-03T08:47:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/789545835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
                "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
                "followers_url": "https://api.github.com/users/christianparpart/followers",
                "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
                "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/christianparpart",
                "id": 56763,
                "login": "christianparpart",
                "node_id": "MDQ6VXNlcjU2NzYz",
                "organizations_url": "https://api.github.com/users/christianparpart/orgs",
                "received_events_url": "https://api.github.com/users/christianparpart/received_events",
                "repos_url": "https://api.github.com/users/christianparpart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/christianparpart",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> that do not depend on the conceal feature.\r\n\r\nwe can do that already by using virtual text which can be placed anywhere on the buffer.",
            "created_at": "2021-03-21T02:33:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-803501734",
            "id": 803501734,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzUwMTczNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803501734/reactions"
            },
            "updated_at": "2023-05-27T05:33:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803501734",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51877647?v=4",
                "events_url": "https://api.github.com/users/elianiva/events{/privacy}",
                "followers_url": "https://api.github.com/users/elianiva/followers",
                "following_url": "https://api.github.com/users/elianiva/following{/other_user}",
                "gists_url": "https://api.github.com/users/elianiva/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elianiva",
                "id": 51877647,
                "login": "elianiva",
                "node_id": "MDQ6VXNlcjUxODc3NjQ3",
                "organizations_url": "https://api.github.com/users/elianiva/orgs",
                "received_events_url": "https://api.github.com/users/elianiva/received_events",
                "repos_url": "https://api.github.com/users/elianiva/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elianiva/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elianiva/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elianiva",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/edluffy/hologram.nvim\r\n\r\n",
            "created_at": "2022-08-13T11:42:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-1214143449",
            "id": 1214143449,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "IC_kwDOAPphoM5IXlvZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 8,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 5,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 13,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1214143449/reactions"
            },
            "updated_at": "2022-08-13T11:42:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1214143449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Konsole in kde also supports the kitty image protocol. When I try to use the same command inside of a neovim `term://` it says `Error: Terminal does not support reporting screen sizes in pixels, use a terminal such as kitty, WezTerm, Konsole, etc. that does.`\r\n\r\n",
            "created_at": "2023-04-08T17:08:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-1500935763",
            "id": 1500935763,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "IC_kwDOAPphoM5ZdnZT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1500935763/reactions"
            },
            "updated_at": "2023-04-08T17:08:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1500935763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2125828?v=4",
                "events_url": "https://api.github.com/users/traverseda/events{/privacy}",
                "followers_url": "https://api.github.com/users/traverseda/followers",
                "following_url": "https://api.github.com/users/traverseda/following{/other_user}",
                "gists_url": "https://api.github.com/users/traverseda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/traverseda",
                "id": 2125828,
                "login": "traverseda",
                "node_id": "MDQ6VXNlcjIxMjU4Mjg=",
                "organizations_url": "https://api.github.com/users/traverseda/orgs",
                "received_events_url": "https://api.github.com/users/traverseda/received_events",
                "repos_url": "https://api.github.com/users/traverseda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/traverseda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/traverseda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/traverseda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "- https://github.com/dankamongmen/notcurses\r\n- https://github.com/romgrk/kui.nvim\r\n- https://github.com/romgrk/kirby.nvim",
            "created_at": "2023-07-22T14:55:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-1646601028",
            "id": 1646601028,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "IC_kwDOAPphoM5iJSNE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1646601028/reactions"
            },
            "updated_at": "2023-07-22T14:55:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1646601028",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/42114817?v=4",
                "events_url": "https://api.github.com/users/cathaysia/events{/privacy}",
                "followers_url": "https://api.github.com/users/cathaysia/followers",
                "following_url": "https://api.github.com/users/cathaysia/following{/other_user}",
                "gists_url": "https://api.github.com/users/cathaysia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cathaysia",
                "id": 42114817,
                "login": "cathaysia",
                "node_id": "MDQ6VXNlcjQyMTE0ODE3",
                "organizations_url": "https://api.github.com/users/cathaysia/orgs",
                "received_events_url": "https://api.github.com/users/cathaysia/received_events",
                "repos_url": "https://api.github.com/users/cathaysia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cathaysia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cathaysia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cathaysia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> https://github.com/dankamongmen/notcurses\r\n\r\n@cathaysia Although, one forgot to mention how amazed dankamongmen is about the blazingly fast performance of the Kitty image protocol. From an adopters point of view, that must be considered as well. ;-)",
            "created_at": "2023-09-05T10:34:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-1706364969",
            "id": 1706364969,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "IC_kwDOAPphoM5ltRAp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1706364969/reactions"
            },
            "updated_at": "2023-09-05T10:34:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1706364969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/56763?v=4",
                "events_url": "https://api.github.com/users/christianparpart/events{/privacy}",
                "followers_url": "https://api.github.com/users/christianparpart/followers",
                "following_url": "https://api.github.com/users/christianparpart/following{/other_user}",
                "gists_url": "https://api.github.com/users/christianparpart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/christianparpart",
                "id": 56763,
                "login": "christianparpart",
                "node_id": "MDQ6VXNlcjU2NzYz",
                "organizations_url": "https://api.github.com/users/christianparpart/orgs",
                "received_events_url": "https://api.github.com/users/christianparpart/received_events",
                "repos_url": "https://api.github.com/users/christianparpart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/christianparpart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/christianparpart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/christianparpart",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It would be better if Neovim core could provide a set of APIs/protocol for graphics instead of just supporting a specific terminal graphics protocol, so that all plugins and GUI fontends can benifit from that:\r\n```\r\n+---------+       +------+       +--------------------------------+\r\n| plugins | <---> |      | <---> | terminals (kitty/iTerm2/Sixel) |\r\n+---------+       |      |       +--------------------------------+\r\n                  | nvim |\r\n                  |      |       +------+\r\n                  |      | <---> | GUIs |\r\n                  +------+       +------+\r\n```",
            "created_at": "2024-05-31T07:36:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/12991#issuecomment-2141397479",
            "id": 2141397479,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12991",
            "node_id": "IC_kwDOAPphoM5_oyHn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2141397479/reactions"
            },
            "updated_at": "2024-05-31T07:43:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2141397479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/115389762?v=4",
                "events_url": "https://api.github.com/users/brg1ng/events{/privacy}",
                "followers_url": "https://api.github.com/users/brg1ng/followers",
                "following_url": "https://api.github.com/users/brg1ng/following{/other_user}",
                "gists_url": "https://api.github.com/users/brg1ng/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brg1ng",
                "id": 115389762,
                "login": "brg1ng",
                "node_id": "U_kgDOBuC1Qg",
                "organizations_url": "https://api.github.com/users/brg1ng/orgs",
                "received_events_url": "https://api.github.com/users/brg1ng/received_events",
                "repos_url": "https://api.github.com/users/brg1ng/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brg1ng/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brg1ng/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brg1ng",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 22,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12991/comments",
    "created_at": "2020-09-27T14:02:48Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/12991/events",
    "html_url": "https://github.com/neovim/neovim/issues/12991",
    "id": 709745839,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/12991/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3MDk3NDU4Mzk=",
    "number": 12991,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 80,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 80,
        "url": "https://api.github.com/repos/neovim/neovim/issues/12991/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/12991/timeline",
    "title": "Kitty's graphic protocol support",
    "updated_at": "2025-01-17T16:01:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/12991",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/44670538?v=4",
        "events_url": "https://api.github.com/users/nscotto/events{/privacy}",
        "followers_url": "https://api.github.com/users/nscotto/followers",
        "following_url": "https://api.github.com/users/nscotto/following{/other_user}",
        "gists_url": "https://api.github.com/users/nscotto/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nscotto",
        "id": 44670538,
        "login": "nscotto",
        "node_id": "MDQ6VXNlcjQ0NjcwNTM4",
        "organizations_url": "https://api.github.com/users/nscotto/orgs",
        "received_events_url": "https://api.github.com/users/nscotto/received_events",
        "repos_url": "https://api.github.com/users/nscotto/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nscotto/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nscotto/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nscotto",
        "user_view_type": "public"
    }
}