{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nCurrently, the documentation [states](https://github.com/neovim/neovim/blob/5cdfa3324f4cafe2ac98d2e9ec4e812aa9c0598e/runtime/lua/vim/fs.lua#L251) paths are not allowed, but they do appear to work:\n\n```\n:e /home/aktau/tmp/myfile\n:lua =vim.fs.find({\"/home/aktau/tmp\"}, { upward = true, path = vim.api.nvim_buf_get_name(0) })\n{  \"/home/aktau/tmp\" }\n```\n\nThat may appear to do the right thing, but that depends on ones' expectations. In truth, it is relative. If there was a `/home/aktau/tmp/home/aktau/tmp`, it would return that instead:\n\n```bash\n$ mkdir -vp $HOME/tmp/home/aktau/tmp\n/home/aktau/tmp/home/aktau/tmp\n```\n\n```\n:lua =vim.fs.find({\"/home/aktau/tmp\"}, { upward = true, path = vim.api.nvim_buf_get_name(0) })\n{  \"/home/aktau/tmp/home/aktau/tmp\" }\n```\n\nSimilarly, if I'm asking for a marker that is not a prefix, but **is** an existing path, it happily returns it:\n\n```\n:e /home/aktau/tmp/myfile\n:lua =vim.fs.find({\"/media/root\"}, { upward = true, path = vim.api.nvim_buf_get_name(0) })\n{  \"/media/root\" }\n```\n\nThe behaviour is surprising though, due to concatenation, this is actually relative at each level.\n\nThe context of this is that I'd like to use absolute `root_markers` to simplify my very specific LSP configuration, see #31552 for my use case).\n\nBut even if that's undesirable to support (which I'd understand), the fact that `vim.fs.find` and by extension `vim.fs.root` accept absolute path markers is probably something that should either be explicitly supported or rejected.\n\n**If the answer is to support it in a more intuitive fashion**, then it can perhaps[^1] be implemented by short-circuiting the path walk.\n\n[^1]: Symlinks...\n\n### Expected behavior\n\nMy preference would be to have:\n\n```\n$ mkdir -p /home/aktau/tmp/home\n$ ls -1 /home/jane/tmp\n/home/jane/tmp\n$ pwd\n/home/aktau/tmp\n$ nvim myfile\n:lua =vim.fs.find({\"/home\"}, { upward = true, path = vim.api.nvim_buf_get_name(0) })\n{ \"/home\" }\n:lua =vim.fs.find({\"/home/jane\"}, { upward = true, path = vim.api.nvim_buf_get_name(0) })\nnil\n```",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33292/comments",
    "created_at": "2025-04-03T13:45:41Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33292/events",
    "html_url": "https://github.com/neovim/neovim/issues/33292",
    "id": 2969649235,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "file metadata/attributes, filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33292/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6xAUBT",
    "number": 33292,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33292/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33292/timeline",
    "title": "vim.fs.find: support paths and short-circuit if marker is absolute, or explicitly disallow paths",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-03T14:28:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33292",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
        "events_url": "https://api.github.com/users/aktau/events{/privacy}",
        "followers_url": "https://api.github.com/users/aktau/followers",
        "following_url": "https://api.github.com/users/aktau/following{/other_user}",
        "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/aktau",
        "id": 189413,
        "login": "aktau",
        "node_id": "MDQ6VXNlcjE4OTQxMw==",
        "organizations_url": "https://api.github.com/users/aktau/orgs",
        "received_events_url": "https://api.github.com/users/aktau/received_events",
        "repos_url": "https://api.github.com/users/aktau/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/aktau",
        "user_view_type": "public"
    }
}