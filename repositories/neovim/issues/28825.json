{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "## Request\r\nI'd like to have an external program trigger opening neovim for a file at the given line and column, reusing any open instances of neovim or creating a new one.\r\n\r\nExample integrations that would be benefit from this:\r\n[Godot](https://docs.godotengine.org/en/stable/tutorials/editor/external_editor.html)\r\n[Unity3d](https://docs.unity3d.com/Manual/Preferences.html#external-tools)\r\n[Wezterm](https://wezfurlong.org/wezterm/config/lua/config/hyperlink_rules.html)\r\n\r\n## What I tried\r\n\r\n### Failed Attempt 1\r\nCurrently you can open a file in an existing instance or open a new instance with that file using:\r\n```\r\nnvim --server --remote-silent \"/home/paul/test.txt\" \r\n```\r\n**Problem**: This does not support line numbers\r\n\r\n### Failed Attempt 2\r\nCurrently you can open a file at the given line:column in an existing nvim instance using:\r\n```\r\nnvim --listen ~/.cache/nvim/server.pipe\r\nnvim --server --remote-send \":e /home/paul/test.txt|100G20|<CR>\" \r\n```\r\n**Problem**: This does nothing if there isn't an existing instance.\r\n\r\n### Expected behavior\r\n\r\nVim supported this with\r\n```\r\nvim --server --remote-silent +\"normal 100G5|\" \"/home/paul/test.txt\" \r\n```\r\nSo I expected that to work, but the `[+{cmd]]` part of `--remote-silent` is unimplemented in Neovim [as mentioned by the documentation](https://neovim.io/doc/user/remote.html). I don't need it to be implemented the same way as Vim though.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "This would be really nice. And the documentation is confusing and made me think I was doing something wrong as it describes the argument as, e.g., `--remote [+{cmd}] {file} ...`, which makes it seem that `+{cmd}` is supported.\n\nNot the ideal solution, but my workaround was to create the script:\n```sh\n#!/bin/sh\n\nTERM_EXEC=\"alacritty -e\"\n\nif [ $# -ne 4 ]; then\n    echo \"USAGE: $0 <socket> <file> <line> <column>\"\n    exit 1\nfi\n\nSOCKET=\"$1\"\nFILE=\"$2\"\nLINE=\"$3\"\nCOL=\"$4\"\n\n[ -S \"$SOCKET\" ] &&\n    # Connect to running nvim server if socket exists\n    nvim --server \"$SOCKET\" --remote-send \"<C-\\><C-N>:n +call\\ cursor($LINE,$COL) $FILE<CR>\" || (\n    # Create new server if socket doesn't exist\n    tty -s && # Test if shell session is interactive, or alacritty should be opened\n        nvim --listen \"$SOCKET\" \"+call cursor($LINE,$COL)\" \"$FILE\" || (\n        nohup $TERM_EXEC nvim --listen \"$SOCKET\" \"+call cursor($LINE,$COL)\" \"$FILE\" > /dev/null 2>&1 & ) )\n```\n\n\n---\n\n**Extra:** For Godot (one of your listed integrations, and the one that motivated me to do this), I set \"Exec Path\" to `sh` and \"Exec Flags\" to `-c \"~/Scripts/nvim-or-remote.sh ~/.cache/nvim/godot-$(basename {project}).socket {file} {line} {col}\"`",
            "created_at": "2025-01-03T17:04:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/28825#issuecomment-2569548998",
            "id": 2569548998,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28825",
            "node_id": "IC_kwDOAPphoM6ZKDTG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2569548998/reactions"
            },
            "updated_at": "2025-01-03T17:04:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2569548998",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/45897447?v=4",
                "events_url": "https://api.github.com/users/flip-rossi/events{/privacy}",
                "followers_url": "https://api.github.com/users/flip-rossi/followers",
                "following_url": "https://api.github.com/users/flip-rossi/following{/other_user}",
                "gists_url": "https://api.github.com/users/flip-rossi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/flip-rossi",
                "id": 45897447,
                "login": "flip-rossi",
                "node_id": "MDQ6VXNlcjQ1ODk3NDQ3",
                "organizations_url": "https://api.github.com/users/flip-rossi/orgs",
                "received_events_url": "https://api.github.com/users/flip-rossi/received_events",
                "repos_url": "https://api.github.com/users/flip-rossi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/flip-rossi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/flip-rossi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/flip-rossi",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28825/comments",
    "created_at": "2024-05-17T23:36:38Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28825/events",
    "html_url": "https://github.com/neovim/neovim/issues/28825",
    "id": 2303689161,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "remote UI, --remote commands, p2p / peer-to-peer",
            "id": 2269137131,
            "name": "remote",
            "node_id": "MDU6TGFiZWwyMjY5MTM3MTMx",
            "url": "https://api.github.com/repos/neovim/neovim/labels/remote"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28825/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6JT4HJ",
    "number": 28825,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28825/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28825/timeline",
    "title": "remote: open file at line:column in existing or new nvim",
    "updated_at": "2025-01-17T15:26:50Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28825",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7019130?v=4",
        "events_url": "https://api.github.com/users/paul-hansen/events{/privacy}",
        "followers_url": "https://api.github.com/users/paul-hansen/followers",
        "following_url": "https://api.github.com/users/paul-hansen/following{/other_user}",
        "gists_url": "https://api.github.com/users/paul-hansen/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/paul-hansen",
        "id": 7019130,
        "login": "paul-hansen",
        "node_id": "MDQ6VXNlcjcwMTkxMzA=",
        "organizations_url": "https://api.github.com/users/paul-hansen/orgs",
        "received_events_url": "https://api.github.com/users/paul-hansen/received_events",
        "repos_url": "https://api.github.com/users/paul-hansen/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/paul-hansen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paul-hansen/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/paul-hansen",
        "user_view_type": "public"
    }
}