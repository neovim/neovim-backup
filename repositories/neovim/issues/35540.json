{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\n(read title)\n\n### Steps to reproduce\n\nThis is quite tricky to replicate and it seems to be heavily dependent on a buffer's undo state, but I managed to find a repro with a relatively shallow undo tree.\n\nSteps:\n\n- download [this undo file](https://github.com/user-attachments/files/22047776/undofile.zip) and unzip it as `undofile`;\n- create this `minimal.lua` next to the `undofile`;\n\n```lua\n-- Returns the number of bytes in the buffer.\nlocal get_byte_count = function(bufnr)\n  return vim.api.nvim_buf_get_offset(bufnr, vim.api.nvim_buf_line_count(bufnr))\nend\n\n-- Set the text expected by the undo file.\nvim.api.nvim_buf_set_text(0, 0, 0, 0, 0, {\n  \"Hello, World\",\n  \"This is a test file.\",\n})\n\n-- Load the undo file.\nvim.cmd(\"rundo ./undofile\")\n\nlocal byte_count = get_byte_count(0)\n\nvim.api.nvim_buf_attach(0, false, {\n  on_bytes = function(\n      _,\n      _,\n      _,\n      start_row,\n      start_col,\n      start_byte_offset,\n      old_end_row,\n      old_end_col,\n      old_end_byte_len,\n      new_end_row,\n      new_end_col,\n      new_end_byte_len\n  )\n    print(\"----------\")\n    print(\"start_row: \" .. start_row)\n    print(\"start_col: \" .. start_col)\n    print(\"start_byte_offset: \" .. start_byte_offset)\n    print(\"old_end_row: \" .. old_end_row)\n    print(\"old_end_col: \" .. old_end_col)\n    print(\"old_end_len: \" .. old_end_byte_len)\n    print(\"new_end_row: \" .. new_end_row)\n    print(\"new_end_col: \" .. new_end_col)\n    print(\"new_end_len: \" .. new_end_byte_len)\n\n    local old_byte_count = byte_count\n    byte_count = get_byte_count(0)\n\n    -- The total byte delta of the edit. Positive if more bytes were added than\n    -- deleted, negative otherwise.\n    local byte_delta = new_end_byte_len - old_end_byte_len\n\n    local expected_byte_count = old_byte_count + byte_delta\n    assert(\n      byte_count == expected_byte_count,\n      (\"current byte count is %s, expected is %s\"):format(\n        byte_count,\n        expected_byte_count\n      )\n    )\n  end,\n})\n\n-- ðŸ’¥ undoing in this state makes the byte count assertion fail.\nvim.cmd(\"normal u\")\n```\n\n- run `nvim --clean -u minimal.lua`;\n\n### Expected behavior\n\nThe initial text is `Hello, World\\nThis is a test file.\\n`, and in that state `u`ndoing will delete `This is a test file.`, leaving the buffer with `Hello, World\\n\\n`.\n\nI would expect the `on_bytes` handler to be called once with these arguments:\n\n```\nstart_row: 1\nstart_col: 0\nstart_byte_offset: 13\nold_end_row: 0\nold_end_col: 20\nold_end_len: 20\nnew_end_row: 0\nnew_end_col: 0\nnew_end_len: 0\n```\n\nInstead it's called twice, first with:\n\n```\nstart_row: 1\nstart_col: 20\nstart_byte_offset: 33\nold_end_row: 0\nold_end_col: 0\nold_end_len: 0\nnew_end_row: 0\nnew_end_col: 1\nnew_end_len: 1\n```\n\nthen with:\n\n```\nstart_row: 1\nstart_col: 0\nstart_byte_offset: 13\nold_end_row: 0\nold_end_col: 21\nold_end_len: 21\nnew_end_row: 0\nnew_end_col: 0\nnew_end_len: 0\n```\n\nThe assertion fails on the first call.\n\n### Nvim version (nvim -v)\n\nNVIM v0.12.0-nightly+19f2e5c\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nmacOS 15.5\n\n### Terminal name/version\n\nalacritty 0.15.1 (0c405d5)\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nNix flake",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/issues/26499 has some analysis that may provide hints about where to look in the C code.",
            "created_at": "2025-08-29T15:41:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/35540#issuecomment-3237473718",
            "id": 3237473718,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35540",
            "node_id": "IC_kwDOAPphoM7A9-22",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3237473718/reactions"
            },
            "updated_at": "2025-08-29T15:41:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3237473718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35540/comments",
    "created_at": "2025-08-29T14:05:46Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35540/events",
    "html_url": "https://github.com/neovim/neovim/issues/35540",
    "id": 3366993721,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "save/restore editor state: shada, context, ctx, sessions, mksession",
            "id": 4449264023,
            "name": "editor-state",
            "node_id": "LA_kwDOAPphoM8AAAABCTJhlw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/editor-state"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35540/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7IsD85",
    "number": 35540,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35540/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35540/timeline",
    "title": "Undoing causes `on_bytes` to be called with incorrect arguments",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-29T15:41:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35540",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/59321248?v=4",
        "events_url": "https://api.github.com/users/noib3/events{/privacy}",
        "followers_url": "https://api.github.com/users/noib3/followers",
        "following_url": "https://api.github.com/users/noib3/following{/other_user}",
        "gists_url": "https://api.github.com/users/noib3/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/noib3",
        "id": 59321248,
        "login": "noib3",
        "node_id": "MDQ6VXNlcjU5MzIxMjQ4",
        "organizations_url": "https://api.github.com/users/noib3/orgs",
        "received_events_url": "https://api.github.com/users/noib3/received_events",
        "repos_url": "https://api.github.com/users/noib3/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/noib3/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/noib3/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/noib3",
        "user_view_type": "public"
    }
}