{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nIs it reasonable that `vim.fs.root()` search falls back to Nvim's current-directory for unnamed and special buffers? If for example, current-directory is `/` or `~` and a marker matches, we might end up with `/` or `~` as `root_dir`. To have a `root_dir` with so many files could be problematic depending on the language server and configuration?\n\nI'd be happy to make a pull request if agreement is reached.\n\n### Expected behavior\n\n`vim.fs.root()` returns `nil` when `source` is an unnamed or a special buffer.",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "yes, for the `bufnr` case of `vim.fs.root`, it should not match against a buffer that doesn't actually have a file. (except if the buffer is a URI that can be meaningfully mapped to a filesystem path, e.g. `file://...` or [nvim://...](https://github.com/neovim/neovim/issues/34102), but that's off-topic here )\n\npr welcome",
            "created_at": "2025-06-01T16:43:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2927517245",
            "id": 2927517245,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6ufl49",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927517245/reactions"
            },
            "updated_at": "2025-06-01T16:44:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927517245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Not sure I understand, but it's good that you brought up the uri buffer names. I was planning to create another issue/PR for that.\n\nHow about this?\n\n- For the bufnr case:\n  - If `buftype` is not empty, return `nil`\n- For both string and bufnr cases:\n  - If `path` is empty, return `nil`\n  - If `path` does not correspond to a valid filesystem path, return `nil`\n    Unfortunately, I don't know how to handle this logic in an easy way. Any ideas? Perhaps there are too many edge cases.\n    One lazy alternative could be to return `nil` for all uris (except for `file://...` and what else?) That would at least handle plugin buffers such as `fugitive://...`",
            "created_at": "2025-06-01T18:26:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2927654594",
            "id": 2927654594,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6ugHbC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927654594/reactions"
            },
            "updated_at": "2025-06-01T18:26:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927654594",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/136635201?v=4",
                "events_url": "https://api.github.com/users/Mo-tmd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Mo-tmd/followers",
                "following_url": "https://api.github.com/users/Mo-tmd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mo-tmd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Mo-tmd",
                "id": 136635201,
                "login": "Mo-tmd",
                "node_id": "U_kgDOCCTjQQ",
                "organizations_url": "https://api.github.com/users/Mo-tmd/orgs",
                "received_events_url": "https://api.github.com/users/Mo-tmd/received_events",
                "repos_url": "https://api.github.com/users/Mo-tmd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Mo-tmd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mo-tmd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Mo-tmd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Unfortunately, I don't know how to handle this logic in an easy way.\n\n`vim.uv.fs_stat(vim.fs.normalize(...))` ?\n\n> One lazy alternative could be to return nil for all uris\n\nthere is `vim.uri_to_fname()`. if it's missing anything, it can be fixed later. out of scope here.\n\nalso, not everything needs to be fixed at once. the `bufnr` case seems like the most important",
            "created_at": "2025-06-01T18:35:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2927670718",
            "id": 2927670718,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6ugLW-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927670718/reactions"
            },
            "updated_at": "2025-06-01T18:35:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927670718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> vim.uv.fs_stat(vim.fs.normalize(...)) ?\n\nThat was my initial idea, but it has undesired effects in this use case:\n- `:e /some/file_that_doesnt_exist_yet`\n- New LSP client with `nil` root_dir attaches to the buffer\n- `:w`\n- Now the LSP client for this \"valid\" file has wrong root_dir",
            "created_at": "2025-06-01T19:15:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2927730750",
            "id": 2927730750,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6ugaA-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927730750/reactions"
            },
            "updated_at": "2025-06-01T19:15:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927730750",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/136635201?v=4",
                "events_url": "https://api.github.com/users/Mo-tmd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Mo-tmd/followers",
                "following_url": "https://api.github.com/users/Mo-tmd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mo-tmd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Mo-tmd",
                "id": 136635201,
                "login": "Mo-tmd",
                "node_id": "U_kgDOCCTjQQ",
                "organizations_url": "https://api.github.com/users/Mo-tmd/orgs",
                "received_events_url": "https://api.github.com/users/Mo-tmd/received_events",
                "repos_url": "https://api.github.com/users/Mo-tmd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Mo-tmd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mo-tmd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Mo-tmd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That was my initial idea, but it has undesired effects in this use case:\n\nis that any worse than the current behavior? \n\nanyway, we are only discussing `vim.fs.root()`. behavior of lsp attach must be decided in the lsp module, and is unrelated to the topic here.",
            "created_at": "2025-06-01T19:29:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2927744696",
            "id": 2927744696,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6ugda4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927744696/reactions"
            },
            "updated_at": "2025-06-01T19:30:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927744696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> is that any worse than the current behavior?\n\nYes, I think so. In the current behavior, we end up with the \"correct dir\"\n\n> anyway, we are only discussing `vim.fs.root()`. behavior of lsp attach must be decided in the lsp module, and is unrelated to the topic here.\n\nI agree that touching LSP is out of scope. It's just that `vim.fs.root()` is used by LSP and any modifications to `vim.fs.root()` will affect LSP.\n\nThis part is easy, I can start with it:\n- For the bufnr case:\n  - If `buftype` is not empty, return `nil`\n- For both string and bufnr cases:\n  - If `path` is empty, return `nil`\n\nI can create a separate issue/PR for deciding invalid or uri paths.",
            "created_at": "2025-06-01T19:56:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2927795208",
            "id": 2927795208,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6ugpwI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927795208/reactions"
            },
            "updated_at": "2025-06-01T19:56:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927795208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/136635201?v=4",
                "events_url": "https://api.github.com/users/Mo-tmd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Mo-tmd/followers",
                "following_url": "https://api.github.com/users/Mo-tmd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mo-tmd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Mo-tmd",
                "id": 136635201,
                "login": "Mo-tmd",
                "node_id": "U_kgDOCCTjQQ",
                "organizations_url": "https://api.github.com/users/Mo-tmd/orgs",
                "received_events_url": "https://api.github.com/users/Mo-tmd/received_events",
                "repos_url": "https://api.github.com/users/Mo-tmd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Mo-tmd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mo-tmd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Mo-tmd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This would be sort of a Verschlimmbesserung for people like me who:\n\n- Tend to start nvim from within the directory of the project they're working on\n- Use scratch buffers/non-file buffers with lsp attached.\n\nIf `vim.fs.root(0, patterns)` started returning `nil`, it would lead to a second language server being started that's not having the right workspace.\n\nCan adjust that of course, but so could you to avoid the scenario you outlined. Not sure this warrants a breaking change.\n\nNote also that the PR adding this behavior was classified as fix https://github.com/neovim/neovim/pull/28964",
            "created_at": "2025-06-01T20:22:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2927840480",
            "id": 2927840480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6ug0zg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927840480/reactions"
            },
            "updated_at": "2025-06-01T21:08:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927840480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@mfussenegger it's good that you raised that, I didn't think this would be a problem because...\n\n> Tend to start nvim from within the directory of the project they're working on\n\nisn't that rather \"working by accident\" ? does `:tcd` break it?\n\nHowever, thinking about this more, I don't quite understand the problem. The original \"Expected behavior\" here was not framed with the *semantic* change. \n\n@Mo-tmd  Is the \"Expected behavior\" that you do *not* want lsp clients to attach to matching filetypes just because they happen to not have a backing file? That definitely seems like a regression.\n\n\n\n> Is it reasonable that `vim.fs.root()` search falls back to Nvim's current-directory for unnamed and special buffers?\n\nIt's not a \"fallback\", it's a feature. Without that behavior, lsp just would never work for non-file buffers, which is clearly a regression for many use-cases.",
            "created_at": "2025-06-01T21:09:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2927910089",
            "id": 2927910089,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6uhFzJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927910089/reactions"
            },
            "updated_at": "2025-06-01T21:10:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927910089",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "No, I think if `vim.fs.root()` returns `nil` like I suggested, LSP would attach a new client/server with `nil` as `root_dir`",
            "created_at": "2025-06-01T22:11:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2927995377",
            "id": 2927995377,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6uhanx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927995377/reactions"
            },
            "updated_at": "2025-06-01T22:11:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2927995377",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/136635201?v=4",
                "events_url": "https://api.github.com/users/Mo-tmd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Mo-tmd/followers",
                "following_url": "https://api.github.com/users/Mo-tmd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mo-tmd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Mo-tmd",
                "id": 136635201,
                "login": "Mo-tmd",
                "node_id": "U_kgDOCCTjQQ",
                "organizations_url": "https://api.github.com/users/Mo-tmd/orgs",
                "received_events_url": "https://api.github.com/users/Mo-tmd/received_events",
                "repos_url": "https://api.github.com/users/Mo-tmd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Mo-tmd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mo-tmd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Mo-tmd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> if `vim.fs.root()` returns `nil` like I suggested, LSP would attach a new client/server with `nil` as `root_dir`\n\nyes, my mistake.\n\n> If `vim.fs.root(0, patterns)` started returning `nil`, it would lead to a second language server being started that's not having the right workspace.\n\nthe use-case for the current behavior (above), in the \"common case\", is that the user expects new buffers to apply to the \"current workspace\". it would indeed be strange if the user needed to save a buffer before getting lsp features relative to their current/most-recent workspace for that filetype.\n\nmaybe there's a way to address all of this, but it will need some thought.",
            "created_at": "2025-06-01T22:20:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2928011356",
            "id": 2928011356,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6uhehc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2928011356/reactions"
            },
            "updated_at": "2025-06-01T22:20:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2928011356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I guess the main question is: how should LSP handle \"special buffers\" such as scratch or plugin buffers (e.g. `fugitive://...` when doing `:Gvdiffsplit`)?\n\n- Current behavior: LSP searches for the root directory from current-directory and tries to reuse the \"current workspace\". I guess this works well for people who work on one project at a time and start nvim from the project's directory as [mfussenegger](https://github.com/mfussenegger) pointed out. It doesn't work well for people who work with files from multiple projects and start nvim from random directories. I also think it's strange that LSP would behave differently depending on where nvim is started from.\n- Suggested behavior: LSP runs the file in \"single file mode\"",
            "created_at": "2025-06-01T22:59:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2928061250",
            "id": 2928061250,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6uhqtC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2928061250/reactions"
            },
            "updated_at": "2025-06-01T22:59:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2928061250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/136635201?v=4",
                "events_url": "https://api.github.com/users/Mo-tmd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Mo-tmd/followers",
                "following_url": "https://api.github.com/users/Mo-tmd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mo-tmd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Mo-tmd",
                "id": 136635201,
                "login": "Mo-tmd",
                "node_id": "U_kgDOCCTjQQ",
                "organizations_url": "https://api.github.com/users/Mo-tmd/orgs",
                "received_events_url": "https://api.github.com/users/Mo-tmd/received_events",
                "repos_url": "https://api.github.com/users/Mo-tmd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Mo-tmd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mo-tmd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Mo-tmd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "imo, `vim.uri_to_fname()` should gain support for `fugitive://...` and any other uri that maps to a file. I don't have a perfect plan for how we will do that, but starting with common URIs (`fugitive://`) seems low-risk and valuable.\n\n> doesn't work well for people who work with files from multiple projects and start nvim from random directories.\n\nsetting `nil` root-dir doesn't help with that, does it? there probably needs to be a way to easily (interactively) change the root-dir for the current buffer. `:Lsp rootdir` or something.",
            "created_at": "2025-06-01T23:35:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2928117105",
            "id": 2928117105,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6uh4Vx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2928117105/reactions"
            },
            "updated_at": "2025-06-01T23:35:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2928117105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> imo, `vim.uri_to_fname()` should gain support for `fugitive://...` and any other uri that maps to a file. I don't have a perfect plan for how we will do that, but starting with common URIs (`fugitive://`) seems low-risk and valuable.\n\nI guess many plugin URIs don't map to a file?\n\n> > doesn't work well for people who work with files from multiple projects and start nvim from random directories.\n> \n> setting `nil` root-dir doesn't help with that, does it? there probably needs to be a way to easily (interactively) change the root-dir for the current buffer. `:Lsp rootdir` or something.\n\nYes it helps as that makes LSP runs the file in \"single file mode\" so to speak (which is more reasonable since the buffer could be completely unrelated to the current directory/workspace).",
            "created_at": "2025-06-01T23:55:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2928144479",
            "id": 2928144479,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6uh_Bf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2928144479/reactions"
            },
            "updated_at": "2025-06-01T23:55:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2928144479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/136635201?v=4",
                "events_url": "https://api.github.com/users/Mo-tmd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Mo-tmd/followers",
                "following_url": "https://api.github.com/users/Mo-tmd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mo-tmd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Mo-tmd",
                "id": 136635201,
                "login": "Mo-tmd",
                "node_id": "U_kgDOCCTjQQ",
                "organizations_url": "https://api.github.com/users/Mo-tmd/orgs",
                "received_events_url": "https://api.github.com/users/Mo-tmd/received_events",
                "repos_url": "https://api.github.com/users/Mo-tmd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Mo-tmd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mo-tmd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Mo-tmd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I guess many plugin URIs don't map to a file?\n\nmy suggestion was only about those that do.\n\n> Yes it helps as that makes LSP runs the file in \"single file mode\" so to speak\n\nNeed a concrete example of where this matters. Anyway, it sounds like an interactive way to override that (`:Lsp rootdir`), will help. Because the choice is kind of arbtirary.",
            "created_at": "2025-06-02T00:15:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2928178887",
            "id": 2928178887,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6uiHbH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2928178887/reactions"
            },
            "updated_at": "2025-06-02T00:15:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2928178887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hey folks,\n\nWhile I can agree that there are some use cases for the current behavior, its implementation is incorrect: neovim is reporting the [wrong workspace info](https://github.com/tailwindlabs/tailwindcss-intellisense/pull/1396#issuecomment-2935953552) for non-file buffers (when `root_dir` uses `vim.fs.root`). Most servers don't care about that, but it's causing issues (at least) with the Tailwind LSP: it tries to use `/` as a workspace directory (which is consistent with the info neovim is reporting).\n\nCan we reopen this discussion?",
            "created_at": "2025-06-04T00:28:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2937861850",
            "id": 2937861850,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6vHDba",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2937861850/reactions"
            },
            "updated_at": "2025-06-04T00:28:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2937861850",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/84649544?v=4",
                "events_url": "https://api.github.com/users/igorlfs/events{/privacy}",
                "followers_url": "https://api.github.com/users/igorlfs/followers",
                "following_url": "https://api.github.com/users/igorlfs/following{/other_user}",
                "gists_url": "https://api.github.com/users/igorlfs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/igorlfs",
                "id": 84649544,
                "login": "igorlfs",
                "node_id": "MDQ6VXNlcjg0NjQ5NTQ0",
                "organizations_url": "https://api.github.com/users/igorlfs/orgs",
                "received_events_url": "https://api.github.com/users/igorlfs/received_events",
                "repos_url": "https://api.github.com/users/igorlfs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/igorlfs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/igorlfs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/igorlfs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "from https://github.com/neovim/nvim-lspconfig/pull/3875#issuecomment-2940894877\n\n> the behavior of falling back to neovim's `cwd` returns a relative path (in this case `.`; which is why we see the folder URI as `file://.`) instead of an absolute path.\n\nWould it help if root() returns an absolute path instead of `''` or `'.'` ?\n\nIt does seem inconsistent that root() sometimes returns absolute path and sometimes relative path.",
            "created_at": "2025-06-06T12:34:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2949131383",
            "id": 2949131383,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6vyCx3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2949131383/reactions"
            },
            "updated_at": "2025-06-06T12:34:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2949131383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Would it help if root() returns an absolute path instead of '' or '.' ?\n\nFrom my testing with tailwind, it should work with an absolute path.",
            "created_at": "2025-06-08T16:21:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2954160927",
            "id": 2954160927,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6wFOsf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2954160927/reactions"
            },
            "updated_at": "2025-06-08T16:21:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2954160927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/84649544?v=4",
                "events_url": "https://api.github.com/users/igorlfs/events{/privacy}",
                "followers_url": "https://api.github.com/users/igorlfs/followers",
                "following_url": "https://api.github.com/users/igorlfs/following{/other_user}",
                "gists_url": "https://api.github.com/users/igorlfs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/igorlfs",
                "id": 84649544,
                "login": "igorlfs",
                "node_id": "MDQ6VXNlcjg0NjQ5NTQ0",
                "organizations_url": "https://api.github.com/users/igorlfs/orgs",
                "received_events_url": "https://api.github.com/users/igorlfs/received_events",
                "repos_url": "https://api.github.com/users/igorlfs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/igorlfs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/igorlfs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/igorlfs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sounds low-risk, let's start with that. Any concerns @mfussenegger  ?",
            "created_at": "2025-06-08T22:04:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2954296664",
            "id": 2954296664,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6wFv1Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2954296664/reactions"
            },
            "updated_at": "2025-06-08T22:04:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2954296664",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Need a concrete example of where this matters. Anyway, it sounds like an interactive way to override that (`:Lsp rootdir`), will help. Because the choice is kind of arbtirary.\n\nTo reproduce the issue that I'm running into:\n\n1. Create a file `~/minimal_init.lua`:\n\n    ```\n    vim.lsp.config(\"luals\", {\n    cmd = {\"lua-language-server\"},\n    filetypes = {\"lua\"},\n    root_markers = {\n      \"some_root_marker\"\n    }\n    })\n\n    vim.lsp.enable(\"luals\")\n    ```\n\n2. Start neovim with the minimal config:\n\n    ```\n    cd ~\n    touch some_root_marker\n    nvim --clean\n    :source ~/minimal_init.lua\n    ```\n\n3. Create a non-file buffer:\n\n    ```\n    :e someuri://sdfdsfsdf/dsfsdf.lua\n    ```\n\nThen I get this error:\n```\nLSP[luals] Your workspace is set to `/home/<USER>`. Lua language server refused to load this directory. Please check your configuration.[learn more here](https://luals.github.io/wiki/faq#why-is-the-server-scanning-the-wrong-folder)\n```",
            "created_at": "2025-06-09T22:52:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2957218743",
            "id": 2957218743,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6wQ5O3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2957218743/reactions"
            },
            "updated_at": "2025-06-10T02:56:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2957218743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/136635201?v=4",
                "events_url": "https://api.github.com/users/Mo-tmd/events{/privacy}",
                "followers_url": "https://api.github.com/users/Mo-tmd/followers",
                "following_url": "https://api.github.com/users/Mo-tmd/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mo-tmd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Mo-tmd",
                "id": 136635201,
                "login": "Mo-tmd",
                "node_id": "U_kgDOCCTjQQ",
                "organizations_url": "https://api.github.com/users/Mo-tmd/orgs",
                "received_events_url": "https://api.github.com/users/Mo-tmd/received_events",
                "repos_url": "https://api.github.com/users/Mo-tmd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Mo-tmd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mo-tmd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Mo-tmd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Sounds low-risk, let's start with that. Any concerns [@mfussenegger](https://github.com/mfussenegger) ?\n\nMaking sure it never returns relative paths sounds good to me.",
            "created_at": "2025-06-12T12:51:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/34208#issuecomment-2966593060",
            "id": 2966593060,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34208",
            "node_id": "IC_kwDOAPphoM6w0p4k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2966593060/reactions"
            },
            "updated_at": "2025-06-12T12:51:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2966593060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 20,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34208/comments",
    "created_at": "2025-05-27T20:59:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34208/events",
    "html_url": "https://github.com/neovim/neovim/issues/34208",
    "id": 3095207260,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "file metadata/attributes, filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34208/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 71,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 68,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-06-15T10:55:03Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM64fR1c",
    "number": 34208,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34208/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34208/timeline",
    "title": "Skip `vim.fs.root()` fallback to Nvim's current-directory",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-12T12:51:03Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34208",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/136635201?v=4",
        "events_url": "https://api.github.com/users/Mo-tmd/events{/privacy}",
        "followers_url": "https://api.github.com/users/Mo-tmd/followers",
        "following_url": "https://api.github.com/users/Mo-tmd/following{/other_user}",
        "gists_url": "https://api.github.com/users/Mo-tmd/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Mo-tmd",
        "id": 136635201,
        "login": "Mo-tmd",
        "node_id": "U_kgDOCCTjQQ",
        "organizations_url": "https://api.github.com/users/Mo-tmd/orgs",
        "received_events_url": "https://api.github.com/users/Mo-tmd/received_events",
        "repos_url": "https://api.github.com/users/Mo-tmd/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Mo-tmd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Mo-tmd/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Mo-tmd",
        "user_view_type": "public"
    }
}