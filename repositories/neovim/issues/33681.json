{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nFor some reason, `b:undo_ftplugin` is not executed when entering a new file\n(e.g. `:edit $VIMRUNTIME/ftplugin.vim`) when `bufname()` is empty while\n`&modified` is false (such as when `nvim` is opened without arguments and no\nedits are made to the initial empty and unnamed buffer). Thus any window-local\nsettings (like `foldmethod`) set by the previouse ftplugin but not set by the\ncurrent ftplugin will still retain the values that were set by the previouse\nftplugin (it seems buffer-local settings are not carried over into the new file\nregardless if `b:undo_ftplugin` is executed or not, despite the buffer of the\nnew file having the same `bufnr()` as the empty buffer it was entered from).\n\nThis was previously an issue in \"regular\" `vim` as well (see vim/vim#17113), but that issue has since been fixed.\n\n### Steps to reproduce\n\nHere are two unix shell scripts to reproduce the issue:\n\n```\n#!/bin/sh -euf\n\n# $VIMRUNTIME/ftplugin/vdf.vim contails the following two lines:\n#     setl foldmethod=syntax\n#     let b:undo_ftplugin = 'setl com< cms< fdm<'\n\n# 'foldmethod' ('fdm' for short) has a default value of \"manual\" and\n# $VIMRUNTIME/ftplugin/vim.vim does not change 'foldmethod' from its default.\n\n# Thus the following two commands should have the same output:\n\nnvim --clean --headless \\\n  -c 'edit $VIMRUNTIME/ftplugin.vim' \\\n  -c 'setfiletype vdf' \\\n  -c 'setfiletype vim' \\\n  -c 'echo printf(\"filetype: %s | foldmethod: %s\\n\", &filetype, &foldmethod)' \\\n  -c 'quit'\n\nnvim --clean --headless \\\n  -c 'setfiletype vdf' \\\n  -c 'edit $VIMRUNTIME/ftplugin.vim' \\\n  -c 'echo printf(\"filetype: %s | foldmethod: %s\\n\", &filetype, &foldmethod)' \\\n  -c 'quit'\n\n# However, below is the result:\n#     filetype: vim | foldmethod: manual\n#     filetype: vim | foldmethod: syntax\n\n# The first command produced the expected output, but in the second command,\n# the b:undo_ftplugin variable of the vdf ftplugin did not result in reverting\n# the 'foldmethod' setting for some reason.\n```\n\n```\n#!/bin/sh -euf\n\n# We can modify the experiment to show that the contents of the\n# b:undo_ftplugin variable are never executed when the second command runs:\n\nnvim --clean --headless \\\n  -c 'let g:plugin_undone = \"plugin not undone\"' \\\n  -c 'edit $VIMRUNTIME/ftplugin.vim' \\\n  -c 'setfiletype vdf' \\\n  -c 'let b:undo_ftplugin .= \"|let g:plugin_undone = \\\"plugin undone\\\"\"' \\\n  -c 'setfiletype vim' \\\n  -c 'echo g:plugin_undone . \"\\n\"' \\\n  -c 'quit'\n\nnvim --clean --headless \\\n  -c 'let g:plugin_undone = \"plugin not undone\"' \\\n  -c 'setfiletype vdf' \\\n  -c 'let b:undo_ftplugin .= \"|let g:plugin_undone = \\\"plugin undone\\\"\"' \\\n  -c 'edit $VIMRUNTIME/ftplugin.vim' \\\n  -c 'echo g:plugin_undone . \"\\n\"' \\\n  -c 'quit'\n\n# The results are:\n#     plugin undone\n#     plugin not undone\n```\n\nThis also demonstrates what I mean by \"the buffer of the new file\nhaving the same `bufnr()` as the empty buffer it was entered from\":\n```\n#!/bin/sh -euf\n\n# Also of note (and perhaps relevant) is that when we switch from the initial\n# empty buffer to $VIMRUNTIME/defaults.vim, the buffer number stays the same:\n\nnvim --clean --headless \\\n  -c 'let g:buf_a = printf(\"bufnr: %s | bufname: %s\\n\", bufnr(), bufname())' \\\n  -c 'edit $VIMRUNTIME/ftplugin.vim' \\\n  -c 'let g:buf_b = printf(\"bufnr: %s | bufname: %s\\n\", bufnr(), bufname())' \\\n  -c 'echo g:buf_a' \\\n  -c 'echo g:buf_b' \\\n  -c 'quit'\n\n# The results are:\n#     bufnr: 1 | bufname:\n#     bufnr: 1 | bufname: /usr/local/share/nvim/runtime/ftplugin.vim\n```\n\n### Expected behavior\n\nThe expected output of the **first shell script** is\n```\nfiletype: vim | foldmethod: manual\nfiletype: vim | foldmethod: manual\n```\nbut instead the follow is produced:\n```\nfiletype: vim | foldmethod: manual\nfiletype: vim | foldmethod: syntax\n```\n\n\\\nThe expected output of the **second shell** script is\n```\nplugin undone\nplugin undone\n```\nbut instead the follow is produced:\n```\nplugin undone\nplugin not undone\n```\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-243+g82b844fefe\n\n### Vim (not Nvim) behaves the same?\n\nNo,  9.1.1349\n\n### Operating system/version\n\nDebian 12\n\n### Terminal name/version\n\nxterm 379\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nCompiled from source.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33681/comments",
    "created_at": "2025-04-27T19:57:11Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33681/events",
    "html_url": "https://github.com/neovim/neovim/issues/33681",
    "id": 3023290877,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is fixed in vim and patch needs to be ported",
            "id": 152276149,
            "name": "has:vim-patch",
            "node_id": "MDU6TGFiZWwxNTIyNzYxNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:vim-patch"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33681/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM60M8H9",
    "number": 33681,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33681/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33681/timeline",
    "title": "`b:undo_ftplugin` not called when re-using buffers",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-27T22:50:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33681",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/26029938?v=4",
        "events_url": "https://api.github.com/users/archy3/events{/privacy}",
        "followers_url": "https://api.github.com/users/archy3/followers",
        "following_url": "https://api.github.com/users/archy3/following{/other_user}",
        "gists_url": "https://api.github.com/users/archy3/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/archy3",
        "id": 26029938,
        "login": "archy3",
        "node_id": "MDQ6VXNlcjI2MDI5OTM4",
        "organizations_url": "https://api.github.com/users/archy3/orgs",
        "received_events_url": "https://api.github.com/users/archy3/received_events",
        "repos_url": "https://api.github.com/users/archy3/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/archy3/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/archy3/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/archy3",
        "user_view_type": "public"
    }
}