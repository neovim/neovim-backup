{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nIn Julia, it is possible to open and locate a file in the error stack trace.\r\nHowever, using this frequently is slow (language server initialization...).\r\nIt will be much faster if the Julia script is opened in a long-running vim instance; and locating an error just reuses the instance.\r\n\r\nMore generally, it will be convenient if users are allowed to choose whether to use a new vim instance or to reuse an existing vim instance (that opened the target file).\n\n### Expected behavior\n\nCurrently, when opening a file that is already opened, nvim displays:\r\n\r\n```\r\n...\r\n        process ID: 769509 (STILL RUNNING)\r\n...\r\n[O]pen Read-Only, (E)dit anyway, (R)ecover, (Q)uit, (A)bort:\r\n```\r\n\r\nIt knows which process (thus the server address) opened the file.\r\nSo it is possible to remote open (and locate lines) this file.\r\nI expect a prompt like:\r\n\r\n```\r\n[O]pen Read-Only, (E)dit anyway, (R)ecover, (Q)uit, (A)bort, O(p)en remote:\r\n```\r\n\r\nSo that when debugging Julia, I can simply choose (p), without any special configurations.",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/77616593?v=4",
        "events_url": "https://api.github.com/users/goulf-3m/events{/privacy}",
        "followers_url": "https://api.github.com/users/goulf-3m/followers",
        "following_url": "https://api.github.com/users/goulf-3m/following{/other_user}",
        "gists_url": "https://api.github.com/users/goulf-3m/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/goulf-3m",
        "id": 77616593,
        "login": "goulf-3m",
        "node_id": "MDQ6VXNlcjc3NjE2NTkz",
        "organizations_url": "https://api.github.com/users/goulf-3m/orgs",
        "received_events_url": "https://api.github.com/users/goulf-3m/received_events",
        "repos_url": "https://api.github.com/users/goulf-3m/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/goulf-3m/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/goulf-3m/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/goulf-3m",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "The swap dialog is a particular case, and not really relevant to the actual request here, which is to be able to \"open (or share?) a buffer from a peer Nvim\"?\r\n\r\nWhat exactly do you expect to happen with `Open remote` is selected? Will the current Nvim open a buffer that is \"owned\" by the remote peer? \r\n\r\nIn a GUI, the \"cheap\" way to do this (which vscode also does) is to focus the remote instance.\r\n\r\n# Proposal\r\n\r\n1. swapfiles should also store the Nvim server address, not only the PID\r\n    - Not technically necessary, because the (default) Nvim listen address includes the PID in its name: https://github.com/neovim/neovim/blob/0c0be09eab66975e62c67522620fee10f82663d2/src/nvim/msgpack_rpc/server.c#L99-L100\r\n2. provide a command that spawns a new UI connected to a server address: `:gui <address>`\r\n    - if the server is on the same machine, optionally tries to focus (bring to foreground) the existing UI instead of spawning a new UI?",
            "created_at": "2024-03-27T15:38:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/28040#issuecomment-2023089081",
            "id": 2023089081,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28040",
            "node_id": "IC_kwDOAPphoM54leO5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023089081/reactions"
            },
            "updated_at": "2024-03-27T15:46:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023089081",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> The swap dialog is a particular case, and not really relevant to the actual request here, which is to be able to \"open (or share?) a buffer from a peer Nvim\"?\r\n\r\nIn my opinion, swap file, swap dialog, and buffer share are quite relevant.\r\nIn certain (even most of the) situations, the only correct choice when the swap file already exists is to connect to a peer.\r\nSo a builtin shortcut would be quite helpful; or otherwise I have to quite and manually find the peer instance.\r\n\r\n> What exactly do you expect to happen with Open remote is selected? Will the current Nvim open a buffer that is \"owned\" by the remote peer?\r\n\r\nI expect something similar to the `Switch to Tab` feature in Firefox:\r\nwhen the URL has been opened in an existing tab, I can choose to open a new tab or jump to the existing tab.\r\n\r\nI noticed there is a `macros/editexisting.vim` script for this. But: It does not work in nvim out of the box and needs tweaking.",
            "created_at": "2024-03-30T04:42:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/28040#issuecomment-2027913803",
            "id": 2027913803,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28040",
            "node_id": "IC_kwDOAPphoM5434JL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027913803/reactions"
            },
            "updated_at": "2024-03-30T04:42:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027913803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/77616593?v=4",
                "events_url": "https://api.github.com/users/goulf-3m/events{/privacy}",
                "followers_url": "https://api.github.com/users/goulf-3m/followers",
                "following_url": "https://api.github.com/users/goulf-3m/following{/other_user}",
                "gists_url": "https://api.github.com/users/goulf-3m/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/goulf-3m",
                "id": 77616593,
                "login": "goulf-3m",
                "node_id": "MDQ6VXNlcjc3NjE2NTkz",
                "organizations_url": "https://api.github.com/users/goulf-3m/orgs",
                "received_events_url": "https://api.github.com/users/goulf-3m/received_events",
                "repos_url": "https://api.github.com/users/goulf-3m/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/goulf-3m/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/goulf-3m/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/goulf-3m",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "See: [flatten.nvim](https://github.com/willothy/flatten.nvim) for remote opening needs",
            "created_at": "2024-05-09T10:53:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/28040#issuecomment-2102434531",
            "id": 2102434531,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28040",
            "node_id": "IC_kwDOAPphoM59UJrj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2102434531/reactions"
            },
            "updated_at": "2024-05-09T10:53:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2102434531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5981889?v=4",
                "events_url": "https://api.github.com/users/IndianBoy42/events{/privacy}",
                "followers_url": "https://api.github.com/users/IndianBoy42/followers",
                "following_url": "https://api.github.com/users/IndianBoy42/following{/other_user}",
                "gists_url": "https://api.github.com/users/IndianBoy42/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/IndianBoy42",
                "id": 5981889,
                "login": "IndianBoy42",
                "node_id": "MDQ6VXNlcjU5ODE4ODk=",
                "organizations_url": "https://api.github.com/users/IndianBoy42/orgs",
                "received_events_url": "https://api.github.com/users/IndianBoy42/received_events",
                "repos_url": "https://api.github.com/users/IndianBoy42/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/IndianBoy42/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/IndianBoy42/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/IndianBoy42",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Reading above it looks like two distinct options would be of use:\n\n* Open File in **Existing** `nvim` instance\n  * in TUI environment this could be complicated and not quite intuitive, but definitely worth exploring for GUI. In other words having some mechanism to notify running instances would be good.  VSCode uses `-r` for this so it could be interesting preserving the same nomenclature for easy switch between editors.\n* Open new \"view\" instance using already running instance as a server.  \n\nalso, personally, I have not come across an instance where I'd want to open file already opened by another `nvim` instance outside of the above two... but perhaps leaving `read-only` option as another alternative is needed for compatibility purposes. ",
            "created_at": "2024-12-09T22:51:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/28040#issuecomment-2529705618",
            "id": 2529705618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28040",
            "node_id": "IC_kwDOAPphoM6WyD6S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2529705618/reactions"
            },
            "updated_at": "2024-12-09T23:59:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2529705618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1248187?v=4",
                "events_url": "https://api.github.com/users/droopy4096/events{/privacy}",
                "followers_url": "https://api.github.com/users/droopy4096/followers",
                "following_url": "https://api.github.com/users/droopy4096/following{/other_user}",
                "gists_url": "https://api.github.com/users/droopy4096/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/droopy4096",
                "id": 1248187,
                "login": "droopy4096",
                "node_id": "MDQ6VXNlcjEyNDgxODc=",
                "organizations_url": "https://api.github.com/users/droopy4096/orgs",
                "received_events_url": "https://api.github.com/users/droopy4096/received_events",
                "repos_url": "https://api.github.com/users/droopy4096/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/droopy4096/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/droopy4096/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/droopy4096",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28040/comments",
    "created_at": "2024-03-26T10:05:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28040/events",
    "html_url": "https://github.com/neovim/neovim/issues/28040",
    "id": 2207800125,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "remote UI, --remote commands, p2p / peer-to-peer",
            "id": 2269137131,
            "name": "remote",
            "node_id": "MDU6TGFiZWwyMjY5MTM3MTMx",
            "url": "https://api.github.com/repos/neovim/neovim/labels/remote"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28040/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6DmFs9",
    "number": 28040,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28040/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28040/timeline",
    "title": "Remote open if swap exists",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:58:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28040",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/77616593?v=4",
        "events_url": "https://api.github.com/users/goulf-3m/events{/privacy}",
        "followers_url": "https://api.github.com/users/goulf-3m/followers",
        "following_url": "https://api.github.com/users/goulf-3m/following{/other_user}",
        "gists_url": "https://api.github.com/users/goulf-3m/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/goulf-3m",
        "id": 77616593,
        "login": "goulf-3m",
        "node_id": "MDQ6VXNlcjc3NjE2NTkz",
        "organizations_url": "https://api.github.com/users/goulf-3m/orgs",
        "received_events_url": "https://api.github.com/users/goulf-3m/received_events",
        "repos_url": "https://api.github.com/users/goulf-3m/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/goulf-3m/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/goulf-3m/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/goulf-3m",
        "user_view_type": "public"
    }
}