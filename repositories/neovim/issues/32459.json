{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nIf i create a file named 'testfile' from netrw using the '%' binding, write something into it, then delete it from netrw using the 'D' binding, and then try to create the file again with the same name in the same directory using '%' it throws this error:\n\nE211: File \"testfile\" no longer available\n\n### Steps to reproduce\n\nStep to reproduce:\n\n1. nvim --clean\n2. :Ex and in netrw\n3. Create a file with the '%' binding and save it\n4. :Ex\n5. From netrw use the 'D' binding to create the deleted file\n7. Use the '%' binding from the same directory to create a file with the same name\nThe error reproducible on master and 10.4.\n\n### Expected behavior\n\nIt shouldn't give any error. I should see a new empty file like it happens in vim.\n\n### Nvim version (nvim -v)\n\n10.4 and v0.11.0-dev-1761+g8e4b77134a\n\n### Vim (not Nvim) behaves the same?\n\nvim doesn't behave the same way\n\n### Operating system/version\n\nvoid linux\n\n### Terminal name/version\n\nfoot\n\n### $TERM environment variable\n\nscreen-256color\n\n### Installation\n\nxbps-install and building from source",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Hi, I wanted to contribute and I was looking into this issue, I found the problem to be in ex_cmds.c in the do_ecmd function call:\n```\n    if (buf->b_ml.ml_mfp == NULL) {\n      // No memfile yet.\n      oldbuf = false;\n    } else {\n      // Existing memfile.\n      oldbuf = true;\n      set_bufref(&bufref, buf);\n      buf_check_timestamp(buf);\n      // Check if autocommands made buffer invalid or changed the current\n      // buffer.\n      if (!bufref_valid(&bufref) || curbuf != old_curbuf.br_buf) {\n        goto theend;\n      }\n      if (aborting()) {\n        // Autocmds may abort script processing.\n        goto theend;\n      }\n    }\n```\nThere is no case if the memfile exists and the file hasn't been written,i.e in case of a recently deleted file. My proposed solution:\n```\n    FileInfo file_info;\n    bool file_info_ok;\n    file_info_ok = os_fileinfo(buf->b_ffname, &file_info)\n\n    if (buf->b_ml.ml_mfp == NULL || !file_info_ok) {\n      // No memfile yet.\n      oldbuf = false;\n// Code continues as normal here\n```\nThis throws a soft warning 'W325: Ignoring swapfile from Nvim process %d', which I think is okay.\nThis isn't the most elegant solution and I am open to understand/try another solution for the issue.",
            "created_at": "2025-06-09T06:47:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/32459#issuecomment-2954838584",
            "id": 2954838584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32459",
            "node_id": "IC_kwDOAPphoM6wH0I4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2954838584/reactions"
            },
            "updated_at": "2025-06-10T14:38:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2954838584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22520440?v=4",
                "events_url": "https://api.github.com/users/dheerajd5/events{/privacy}",
                "followers_url": "https://api.github.com/users/dheerajd5/followers",
                "following_url": "https://api.github.com/users/dheerajd5/following{/other_user}",
                "gists_url": "https://api.github.com/users/dheerajd5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dheerajd5",
                "id": 22520440,
                "login": "dheerajd5",
                "node_id": "MDQ6VXNlcjIyNTIwNDQw",
                "organizations_url": "https://api.github.com/users/dheerajd5/orgs",
                "received_events_url": "https://api.github.com/users/dheerajd5/received_events",
                "repos_url": "https://api.github.com/users/dheerajd5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dheerajd5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dheerajd5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dheerajd5",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That sounds like a more low-level issue. Is Vim's `do_ecmd` implementation different than Nvim's in that area?",
            "created_at": "2025-06-09T14:09:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/32459#issuecomment-2955911452",
            "id": 2955911452,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32459",
            "node_id": "IC_kwDOAPphoM6wL6Ec",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2955911452/reactions"
            },
            "updated_at": "2025-06-10T14:38:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2955911452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There is nothing wrong with the `do_ecmd()` function. This is a netrw \"bug\" (although I don't think the old E211 behavior was wrong either) that was fixed in <https://github.com/saccarosium/netrw.vim/commit/718b2491fcbcf7c788424964cc8fa4449e304ed5>. And it also doesn't happen with `'nohidden'` (the default in Vim).",
            "created_at": "2025-06-10T05:03:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/32459#issuecomment-2957687529",
            "id": 2957687529,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32459",
            "node_id": "IC_kwDOAPphoM6wSrrp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2957687529/reactions"
            },
            "updated_at": "2025-06-11T00:26:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2957687529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The error is actually being sent by function call `buf_check_timestamp()` in fileio.c, but I couldn't think of a way to resolve the issue in that function itself.",
            "created_at": "2025-06-10T06:00:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/32459#issuecomment-2957776983",
            "id": 2957776983,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32459",
            "node_id": "IC_kwDOAPphoM6wTBhX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2957776983/reactions"
            },
            "updated_at": "2025-06-10T06:00:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2957776983",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22520440?v=4",
                "events_url": "https://api.github.com/users/dheerajd5/events{/privacy}",
                "followers_url": "https://api.github.com/users/dheerajd5/followers",
                "following_url": "https://api.github.com/users/dheerajd5/following{/other_user}",
                "gists_url": "https://api.github.com/users/dheerajd5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dheerajd5",
                "id": 22520440,
                "login": "dheerajd5",
                "node_id": "MDQ6VXNlcjIyNTIwNDQw",
                "organizations_url": "https://api.github.com/users/dheerajd5/orgs",
                "received_events_url": "https://api.github.com/users/dheerajd5/received_events",
                "repos_url": "https://api.github.com/users/dheerajd5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dheerajd5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dheerajd5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dheerajd5",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32459/comments",
    "created_at": "2025-02-15T16:03:31Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32459/events",
    "html_url": "https://github.com/neovim/neovim/issues/32459",
    "id": 2855563031,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is fixed in vim and patch needs to be ported",
            "id": 152276149,
            "name": "has:vim-patch",
            "node_id": "MDU6TGFiZWwxNTIyNzYxNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:vim-patch"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "wrong behavior inherited from vim",
            "id": 154310492,
            "name": "bug-vim",
            "node_id": "MDU6TGFiZWwxNTQzMTA0OTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-vim"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "fuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu",
            "id": 2745063166,
            "name": "netrw",
            "node_id": "MDU6TGFiZWwyNzQ1MDYzMTY2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/netrw"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32459/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 283,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 328,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-06-16T11:54:24Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6qNG8X",
    "number": 32459,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32459/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32459/timeline",
    "title": "Deleting a file from netrw and then recreating it causes an error",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-11T00:26:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32459",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/113293653?v=4",
        "events_url": "https://api.github.com/users/Doodler8888/events{/privacy}",
        "followers_url": "https://api.github.com/users/Doodler8888/followers",
        "following_url": "https://api.github.com/users/Doodler8888/following{/other_user}",
        "gists_url": "https://api.github.com/users/Doodler8888/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Doodler8888",
        "id": 113293653,
        "login": "Doodler8888",
        "node_id": "U_kgDOBsC5VQ",
        "organizations_url": "https://api.github.com/users/Doodler8888/orgs",
        "received_events_url": "https://api.github.com/users/Doodler8888/received_events",
        "repos_url": "https://api.github.com/users/Doodler8888/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Doodler8888/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Doodler8888/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Doodler8888",
        "user_view_type": "public"
    }
}