{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nThere is a number of heuristics the Neovim TUI performs on startup to detect terminal features like CSI-u/Kitty protocol/modifyOtherKeys, truecolor/24-bit color support, and a few other modes/features.\n\nSome examples from `terminfo_start` and friends:\n<https://github.com/neovim/neovim/blob/master/src/nvim/tui/tui.c#L407>\n<https://github.com/neovim/neovim/blob/master/src/nvim/tui/tui.c#L441>\n<https://github.com/neovim/neovim/blob/master/src/nvim/tui/tui.c#L453>\n<https://github.com/neovim/neovim/blob/master/src/nvim/tui/tui.c#L459>\n\nFor a lot of these, there isn't a good way to test that they are actually working, beyond things like 'try mapping `<C-S-Tab>` and see if it works' or 'try using a highlight group with extended underline styles'.\n\nThe fact the Neovim [FAQ](https://neovim.io/doc/user/faq.html) lists a large number of potential TUI issues indicates to me that some of this information/these checks could/should have a place in checkhealth.\n\n### Expected behavior\n\nIt would be valuable troubleshooting information if the healthcheck could show information about what Neovim knows and expects about the terminal based on the information available to it.\n\nI don't have a comprehensive list, but at minimum, I think it would be good to show the input mode (legacy/modifyOtherKeys/CSI u/kitty) and the detected terminal type (to see if e.g. the detection fell back to something generic like `xterm` when it shouldn't have), and ideally any other features that directly affect the functionality of the TUI but aren't exposed through options (e.g. extended underline support), though that's more for-the-users-interest than for debugging.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This may be a bit complicated, as multiple TUI clients can be attached to a Nvim server.",
            "created_at": "2024-11-08T08:59:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/31113#issuecomment-2464169452",
            "id": 2464169452,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31113",
            "node_id": "IC_kwDOAPphoM6S4D3s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464169452/reactions"
            },
            "updated_at": "2024-11-08T08:59:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464169452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yeah, this intersects somewhat with the work that's been happening towards allowing TUI clients to be differentiated/detached and possibly having per-TUI settings for things like `termguicolors`.\n\nI think the TUI client could 'just' report these things via set_client_info, which the TUI calls since https://github.com/neovim/neovim/pull/30397\n\nThough this also would require some way to figure out 'which client did this command/input come from' so that checkhealth can retrieve the specific client's info, which is one of the TODOs in https://github.com/neovim/neovim/pull/30319",
            "created_at": "2024-11-08T09:16:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/31113#issuecomment-2464202297",
            "id": 2464202297,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31113",
            "node_id": "IC_kwDOAPphoM6S4L45",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464202297/reactions"
            },
            "updated_at": "2024-11-08T09:16:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464202297",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Which of these are not indicated by `nvim -v3` (verbose=3)? \n\n> I think the TUI client could 'just' report these things via set_client_info, which the TUI calls since [#30397](https://github.com/neovim/neovim/pull/30397)\n\nTrue, a programmatic interface might be useful.",
            "created_at": "2024-11-16T02:39:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/31113#issuecomment-2480346381",
            "id": 2480346381,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31113",
            "node_id": "IC_kwDOAPphoM6T1xUN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2480346381/reactions"
            },
            "updated_at": "2024-11-16T02:39:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2480346381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31113/comments",
    "created_at": "2024-11-08T08:56:12Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31113/events",
    "html_url": "https://github.com/neovim/neovim/issues/31113",
    "id": 2643357668,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31113/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6djm_k",
    "number": 31113,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31113/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31113/timeline",
    "title": "checkhealth: show detected terminal features",
    "updated_at": "2025-01-17T15:26:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31113",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
        "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
        "followers_url": "https://api.github.com/users/LunarLambda/followers",
        "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
        "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/LunarLambda",
        "id": 38919842,
        "login": "LunarLambda",
        "node_id": "MDQ6VXNlcjM4OTE5ODQy",
        "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
        "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
        "repos_url": "https://api.github.com/users/LunarLambda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/LunarLambda",
        "user_view_type": "public"
    }
}