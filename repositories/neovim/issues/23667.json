{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nCurrently, there is a nice internal history for `search`,`input`,`cmdline` user input. These are lists that all plugins changing the end user experience have to copy (`fzf-lua`,`telescope`,`dressing`...), creating a history file for each plugin in user's cache although they don't change functionality but only looks.\r\n\r\n(The only way to access the history of any kind is with `:his` which is user-only, not usable for plugins)\r\n\r\n### Expected behavior\r\n\r\nIt would be nice, if there were functions in the API that would allow for querying the respective histories and also add to them, just like the builtin behaviour does. In theory this should just mean exposing the internal functions and in return have a unified access to history for each respective function, making transition between different interfaces keep the history.\r\n\r\nAn extra benefit could be if a history type could be added by a plugin (I am not sure how the internal saving works and if this would be possible), acting basically as a simple database.",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`:h history-functions`",
            "created_at": "2023-05-17T21:44:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/23667#issuecomment-1552124098",
            "id": 1552124098,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23667",
            "node_id": "IC_kwDOAPphoM5cg4jC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552124098/reactions"
            },
            "updated_at": "2023-05-17T21:44:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552124098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "From what I understand, none of these functions provide a `contains` search for a given string, like it works in `vim.ui.input`. Which would be simple enough if, let's say, `histget` worked like user command `:his`, meaning we could retrieve a list of all entries, (I understand they would have to remain read-only). But as of now, retrieving values from history can be done only one-by-one, which could get slow for larger histories.\r\nI may be wrong here, but I haven't managed to use history indexing there like described - only the first number gets read if a string is provided (`vim.fn.histget(\"@\", \"1,5\")`), and more arguments are not accepted.",
            "created_at": "2023-05-18T07:19:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/23667#issuecomment-1552620796",
            "id": 1552620796,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23667",
            "node_id": "IC_kwDOAPphoM5cixz8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552620796/reactions"
            },
            "updated_at": "2023-05-18T07:39:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552620796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54900518?v=4",
                "events_url": "https://api.github.com/users/litoj/events{/privacy}",
                "followers_url": "https://api.github.com/users/litoj/followers",
                "following_url": "https://api.github.com/users/litoj/following{/other_user}",
                "gists_url": "https://api.github.com/users/litoj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/litoj",
                "id": 54900518,
                "login": "litoj",
                "node_id": "MDQ6VXNlcjU0OTAwNTE4",
                "organizations_url": "https://api.github.com/users/litoj/orgs",
                "received_events_url": "https://api.github.com/users/litoj/received_events",
                "repos_url": "https://api.github.com/users/litoj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/litoj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/litoj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/litoj",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23667/comments",
    "created_at": "2023-05-17T21:34:25Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23667/events",
    "html_url": "https://github.com/neovim/neovim/issues/23667",
    "id": 1714684821,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23667/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5mNAOV",
    "number": 23667,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23667/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23667/timeline",
    "title": "API for cmdline history",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:58:59Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23667",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/54900518?v=4",
        "events_url": "https://api.github.com/users/litoj/events{/privacy}",
        "followers_url": "https://api.github.com/users/litoj/followers",
        "following_url": "https://api.github.com/users/litoj/following{/other_user}",
        "gists_url": "https://api.github.com/users/litoj/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/litoj",
        "id": 54900518,
        "login": "litoj",
        "node_id": "MDQ6VXNlcjU0OTAwNTE4",
        "organizations_url": "https://api.github.com/users/litoj/orgs",
        "received_events_url": "https://api.github.com/users/litoj/received_events",
        "repos_url": "https://api.github.com/users/litoj/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/litoj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/litoj/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/litoj",
        "user_view_type": "public"
    }
}