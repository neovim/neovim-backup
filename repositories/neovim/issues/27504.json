{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nAfter #24738 is merged, the behavior for all directives bar `#set!` is to only trigger if the capture is 1 node only. I believe there can be improvements here.\r\n\r\nAs currently, `TSMetadata` is a `{lang, range, ...}` table + `capture_id, TSMetadata` pairs. Each capture of the list of quantified captures may have different metadata (i.e. different range). Because of that, with a `capture_id->metadata` table, we cannot store the relevant information for those captures.\r\n\r\n\r\n### Expected behavior\r\n\r\nI would like to ask for some methods for, i.e., `#offset!` to be applied to all quantified captures. An example would be, again, C injections in Go:\r\n\r\n```go\r\n(\r\n  (comment)+ @injection.content \r\n  .\r\n  (import_declaration\r\n    (import_spec \r\n      path: (interpreted_string_literal) @_import_c))\r\n  (#eq? @_import_c \"\\\"C\\\"\")\r\n  (#lua-match? @injection.content \"^//\")\r\n  (#set! injection.language \"c\")\r\n  (#offset! @injection.content 0 2 0 0)\r\n  (#set! injection.combined))\r\n```\r\n\r\nThe example source code can be\r\n```go\r\n// #define FOO BAR\r\n// #define FOO BAR\r\n// #define FOO BAR\r\n// #define FOO BAR\r\n// #define FOO BAR\r\n// #define FOO BAR\r\nimport \"C\";\r\n```\r\n\r\nUpon opening a go file with go parser + the injection query above, we get the intended error\r\n```\r\nError in decoration provider treesitter/highlighter.win:                                       \r\nError executing lua: /usr/local/share/nvim/runtime/lua/vim/treesitter/query.lua:573: #offset! d\r\noes not support captures on multiple nodes                                                     \r\nstack traceback:                                                                               \r\n        [C]: in function 'assert'                                                              \r\n        /usr/local/share/nvim/runtime/lua/vim/treesitter/query.lua:573: in function 'handler'  \r\n        /usr/local/share/nvim/runtime/lua/vim/treesitter/query.lua:823: in function 'apply_dire\r\nctives'                                                                                        \r\n        /usr/local/share/nvim/runtime/lua/vim/treesitter/query.lua:966: in function '(for gener\r\nator)'                                                                                         \r\n        ...l/share/nvim/runtime/lua/vim/treesitter/languagetree.lua:849: in function 'f'       \r\n        ...l/share/nvim/runtime/lua/vim/treesitter/languagetree.lua:192: in function 'tcall'   \r\n        ...l/share/nvim/runtime/lua/vim/treesitter/languagetree.lua:383: in function '_add_inje\r\nctions'                                                                                        \r\n        ...l/share/nvim/runtime/lua/vim/treesitter/languagetree.lua:446: in function 'parse'   \r\n        ...al/share/nvim/runtime/lua/vim/treesitter/highlighter.lua:350: in function <...al/sha\r\nre/nvim/runtime/lua/vim/treesitter/highlighter.lua:345>\r\n```\r\n\r\nI think there can be a way to also handle directives to all captures, but this will require breaking the `TSMetadata` structure completely",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Should this be implemented in the form of another directive (perhaps `#offset-each!`)? That way it would still be possible to, in the future, do something like the following:\r\nSay for some language we have\r\n```scm\r\n(variable)+ @offsetme\r\n```\r\nand our code to parse is\r\n```\r\nvar foo\r\nvar bar\r\nvar baz\r\n```\r\n\r\nwith `#offset-each! @offsetme 0 1 0 -1` we would have ranges like the following:\r\n\r\n```\r\nv*****o\r\nv*****r\r\nv*****z\r\n```\r\n\r\nthen with `#offset! @offsetme 0 1 0 -1` we can have:\r\n\r\n```\r\nv******\r\n*******\r\n******z\r\n```\r\n",
            "created_at": "2024-02-28T03:13:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/27504#issuecomment-1968120000",
            "id": 1968120000,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27504",
            "node_id": "IC_kwDOAPphoM51TyDA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1968120000/reactions"
            },
            "updated_at": "2024-02-28T03:16:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1968120000",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The problem is not really \"offset or not\", but rather that the current metadata table is a `capture_id -> metadata` table, so it logically cannot support multiple captures. ",
            "created_at": "2024-02-28T03:50:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/27504#issuecomment-1968166080",
            "id": 1968166080,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27504",
            "node_id": "IC_kwDOAPphoM51T9TA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1968166080/reactions"
            },
            "updated_at": "2024-02-28T03:50:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1968166080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah, I see",
            "created_at": "2024-02-28T06:02:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/27504#issuecomment-1968293153",
            "id": 1968293153,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27504",
            "node_id": "IC_kwDOAPphoM51UcUh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1968293153/reactions"
            },
            "updated_at": "2024-02-28T06:02:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1968293153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> with #offset-each! @offsetme 0 1 0 -1 we would have ranges like the following:\r\n>\r\n> ```\r\n> v*****o\r\n> v*****r\r\n> v*****z\r\n> ```\r\n\r\nGiven how treesitter provides information and how the code is structured, this is how offset will need to work for quantified captures and how it is implemented in #28062\r\n\r\nWe'll need to put some additional thought if we want support:\r\n\r\n> then with #offset! @offsetme 0 1 0 -1 we can have:\r\n>\r\n> ```\r\n> v******\r\n> *******\r\n> ******z\r\n> ```\r\n\r\nThough I'm not sure if we want/need this.",
            "created_at": "2024-03-27T17:45:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/27504#issuecomment-2023409449",
            "id": 2023409449,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27504",
            "node_id": "IC_kwDOAPphoM54mscp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023409449/reactions"
            },
            "updated_at": "2024-03-27T17:45:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023409449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27504/comments",
    "created_at": "2024-02-17T10:21:15Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27504/events",
    "html_url": "https://github.com/neovim/neovim/issues/27504",
    "id": 2139931782,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27504/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5_jMSG",
    "number": 27504,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27504/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27504/timeline",
    "title": "Treesitter directives should apply to all captures.",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27504",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
        "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
        "followers_url": "https://api.github.com/users/lucario387/followers",
        "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
        "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lucario387",
        "id": 29790821,
        "login": "lucario387",
        "node_id": "MDQ6VXNlcjI5NzkwODIx",
        "organizations_url": "https://api.github.com/users/lucario387/orgs",
        "received_events_url": "https://api.github.com/users/lucario387/received_events",
        "repos_url": "https://api.github.com/users/lucario387/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lucario387",
        "user_view_type": "public"
    }
}