{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "As mentioned in https://github.com/neovim/neovim/issues/356 would be great to have external spellchecking.\r\n\r\nI noticed there was some work on hunspell https://github.com/vim/vim/pull/2500 , but nothing finished.\r\n\r\nIs any chance to integrate enchant or nuspell https://nuspell.github.io/ (or at least older hunspell) as an option to Neovim?\r\n\r\nPlease keep this at least as placeholder to track progress. @mcepl ",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Wouldn't this be something that would be best to implement as a language server plugin for natural languages?",
            "created_at": "2020-04-02T12:22:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-607812573",
            "id": 607812573,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzgxMjU3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/607812573/reactions"
            },
            "updated_at": "2020-04-02T12:22:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/607812573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13387304?v=4",
                "events_url": "https://api.github.com/users/xylix/events{/privacy}",
                "followers_url": "https://api.github.com/users/xylix/followers",
                "following_url": "https://api.github.com/users/xylix/following{/other_user}",
                "gists_url": "https://api.github.com/users/xylix/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xylix",
                "id": 13387304,
                "login": "xylix",
                "node_id": "MDQ6VXNlcjEzMzg3MzA0",
                "organizations_url": "https://api.github.com/users/xylix/orgs",
                "received_events_url": "https://api.github.com/users/xylix/received_events",
                "repos_url": "https://api.github.com/users/xylix/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xylix/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xylix/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xylix",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Wouldn't this be something that would be best to implement as a language server plugin for natural languages?\r\n\r\nI don’t think so, because then you get quite often into horrible business of two language servers on one document. Also, I wonder whether it wouldn't be too slow.",
            "created_at": "2020-04-02T13:54:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-607861149",
            "id": 607861149,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzg2MTE0OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/607861149/reactions"
            },
            "updated_at": "2022-09-24T13:53:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/607861149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "There's already a integrated spell checker in upstream vim, the spelling dictionary files are located under runtime/spell. To enable it you just run `:set spell spellang=<LANG>`, replacing \\<LANG\\> with your language code eg. en_US for American English\r\n\r\nBut I noticed that these language files have been removed in Neovim but the spelling checking engine component has been left in",
            "created_at": "2020-05-08T08:33:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-625706358",
            "id": 625706358,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTcwNjM1OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/625706358/reactions"
            },
            "updated_at": "2022-09-24T13:53:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/625706358",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38069888?v=4",
                "events_url": "https://api.github.com/users/txk2048/events{/privacy}",
                "followers_url": "https://api.github.com/users/txk2048/followers",
                "following_url": "https://api.github.com/users/txk2048/following{/other_user}",
                "gists_url": "https://api.github.com/users/txk2048/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/txk2048",
                "id": 38069888,
                "login": "txk2048",
                "node_id": "MDQ6VXNlcjM4MDY5ODg4",
                "organizations_url": "https://api.github.com/users/txk2048/orgs",
                "received_events_url": "https://api.github.com/users/txk2048/received_events",
                "repos_url": "https://api.github.com/users/txk2048/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/txk2048/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/txk2048/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/txk2048",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> There's already a integrated spell checker in upstream vim, the spelling dictionary files are located under runtime/spell. To enable it you just run `:set spell spellang=<LANG>`, replacing <LANG> with your language code eg. en_US for American English\r\n\r\nSorry, you completely missed the point of this ticket. Of course, we all know about the Bram’s spellchecker, I use it (in neovim, of course, it works perfectly fine) all the time (including now), but I, the reporter of this issue, and many many others consider it stupid that contrary to the UNIX philosophy (do one thing and do it well) and contrary to every other program in Linux, vim does spellchecking on its own and doesn’t use the system spellchecker (on Linux it is hunspell, most of the time). Internal vim spellchecker is old, basically unmaintained (because almost unmaintainable) code in the biggest C file in the project, which should go and be replaced by the binding to the external spellchecker. One attempt to do so was ignored by Bram in https://github.com/vim/vim/pull/2500, other option would be to make spellchecker as a [remote plugin](https://neovim.io/doc/user/remote_plugin.html), but currently everybody who took a look at ``spell.c`` run away crying and nothing has changed.",
            "created_at": "2020-05-08T09:30:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-625729395",
            "id": 625729395,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTcyOTM5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 14,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 14,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/625729395/reactions"
            },
            "updated_at": "2022-09-24T13:53:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/625729395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It wasn't actually ignored. It just wasn't ready to be merged and you mentioned you had no interest in making it fit. ",
            "created_at": "2020-05-29T20:46:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-636184788",
            "id": 636184788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjE4NDc4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/636184788/reactions"
            },
            "updated_at": "2020-05-29T20:46:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/636184788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/244927?v=4",
                "events_url": "https://api.github.com/users/chrisbra/events{/privacy}",
                "followers_url": "https://api.github.com/users/chrisbra/followers",
                "following_url": "https://api.github.com/users/chrisbra/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrisbra/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chrisbra",
                "id": 244927,
                "login": "chrisbra",
                "node_id": "MDQ6VXNlcjI0NDkyNw==",
                "organizations_url": "https://api.github.com/users/chrisbra/orgs",
                "received_events_url": "https://api.github.com/users/chrisbra/received_events",
                "repos_url": "https://api.github.com/users/chrisbra/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chrisbra/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrisbra/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chrisbra",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It wasn't actually ignored. It just wasn't ready to be merged and you mentioned you had no interest in making it fit.\r\n\r\nYes, it was ignored. I was asking for help, and nobody seemed to care, so I gave up. I was trying most of what I can do (I am not a C programmer myself), and only reply was Bram’s smug persuasion how vim internal spellchecker is the best thing since the sliced bread.",
            "created_at": "2020-05-29T21:22:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-636197885",
            "id": 636197885,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjE5Nzg4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 3,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 2,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/636197885/reactions"
            },
            "updated_at": "2022-09-24T13:52:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/636197885",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": ">  One attempt to do so was ignored by Bram in vim/vim#2500, \r\n\r\nFor the record, You explicitly said that. But Bram did not ignore it, he commented on that PR. Yes sometimes it takes until a patch is included. But that doesn't mean we are ignoring others work. \r\n\r\nIt's open source. If you want to have it done, do it yourself (or pay someone to do it).\r\n\r\n> Bram’s smug persuasion how vim internal spellchecker is the best thing since the sliced bread.\r\n\r\nwhich was true, if you compared the state of spell checkers back when it was written and included in Vim with Version 7.\r\n\r\nBTW: I am not a C programmer myself and had to learn it myself as well. Such is life.",
            "created_at": "2020-05-29T21:26:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-636199638",
            "id": 636199638,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjE5OTYzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/636199638/reactions"
            },
            "updated_at": "2022-09-24T13:52:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/636199638",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/244927?v=4",
                "events_url": "https://api.github.com/users/chrisbra/events{/privacy}",
                "followers_url": "https://api.github.com/users/chrisbra/followers",
                "following_url": "https://api.github.com/users/chrisbra/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrisbra/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chrisbra",
                "id": 244927,
                "login": "chrisbra",
                "node_id": "MDQ6VXNlcjI0NDkyNw==",
                "organizations_url": "https://api.github.com/users/chrisbra/orgs",
                "received_events_url": "https://api.github.com/users/chrisbra/received_events",
                "repos_url": "https://api.github.com/users/chrisbra/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chrisbra/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrisbra/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chrisbra",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's open source. If you want to have it done, do it yourself (or pay someone to do it).\r\n\r\nYes, I know it, and I just gave up, so I haven’t complained about it until provoked. It doesn’t change a bit on the fact, that my effort has been ignored.\r\n\r\nAnd that pull request was created from older Red Hat patch on 26 Dec 2017. Yes, vim’s internal spellchecker might be a good idea when it was introduced (the earliest tag I found on the GitHub repo was v7.0131 from 2005-08-07), but circumstances has changed since then. Everybody and their dog have some kind of packaging system, so it is not that big deal to depend on the external library/program.\r\n\r\nThat pull request (if finished, it never really completely worked) would be better than what we have now, but the ideal situation would be IMHO some kind of the remote plugin API, so we can have plugins for even unforeseen spellchecker, because the development in that area seems to be still in flux (I have just learned about existence of https://github.com/nuspell/nuspell and there are certainly others).",
            "created_at": "2020-05-30T10:07:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-636309093",
            "id": 636309093,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjMwOTA5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/636309093/reactions"
            },
            "updated_at": "2022-09-24T13:52:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/636309093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mcepl they didn't ignore your effort.  They answered clearly and repeatedly. They simply have other more urgent priorities than changing a working spellcheck engine. If your PR didn't even work, it will take time to fix; probably they'll have to redo it from scratch, who knows? Replacing the internal sp with hunspell won't really achieve anything, as hunspell sucks for many languages. Replacing it with enchant was attempted 2 years ago following your pull request, and given up because it requires redoing vim's api, that is, a ton of work and time.\r\nOne thing is a working PR, another something that is only a rough first draft meant to induce other people to do the work for you (\"I am not a C programmer, so the main purpose of this PR is to attract other people to finish this\"). You can't really expect people to drop everything and run to fix your PR.",
            "created_at": "2020-05-31T07:35:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-636434811",
            "id": 636434811,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjQzNDgxMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/636434811/reactions"
            },
            "updated_at": "2022-09-24T13:52:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/636434811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Fighting over the status of that closed PR doesn't really accomplish anything.  Especially since it looks like that PR was specifically adding support for hunspell, and I agree with @mcepl that the correct way to do this is either to support a something like a remote-plugin API for spelling, or use something like enchant that supports multiple spelling engines (including hunspell and nuspell) as backends.\r\n\r\n> Replacing it with enchant was attempted 2 years ago following your pull request, and given up because it requires redoing vim's api, that is, a ton of work and time.\r\n\r\nHow far did this get? Is there enough there to salvage and create a new (working) PR adding enchant support?\r\n\r\nOne question I have is, what should happen to the internal spell checker if support is added for an external/system spell checker? Should it remain for complete backwards compatibility, and in case a system spell checker isn't available? Or should it be removed completely in favor of the new system?",
            "created_at": "2020-06-07T05:33:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-640160408",
            "id": 640160408,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDE2MDQwOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640160408/reactions"
            },
            "updated_at": "2022-09-24T13:52:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640160408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> How far did this get? Is there enough there to salvage and create a new (working) PR adding enchant support?\r\n\r\nidk, this is the source: https://github.com/vim/vim/pull/2500#pullrequestreview-86001998\r\nIt seems the branch was never made available.\r\n\r\n> what should happen to the internal spell checker\r\n\r\nIdeally it would be removed to further lighten the code base, but I guess some long time vimers will be opposed (though, those are probably still using the original vim).\r\n",
            "created_at": "2020-06-07T07:18:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-640169568",
            "id": 640169568,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDE2OTU2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640169568/reactions"
            },
            "updated_at": "2022-09-24T13:54:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640169568",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Especially since it looks like that PR was specifically adding support for hunspell, and I agree with @mcepl that the correct way to do this is either to support a something like a remote-plugin API for spelling, or use something like enchant that supports multiple spelling engines (including hunspell and nuspell) as backends.\r\n\r\nWell, better still supported and maintained hunspell than internal spellchecker. Problem with enchant is that it brings glib as additional external dependency and that is probably unacceptable to both Bram and neovim maintainers.\r\n\r\n> One question I have is, what should happen to the internal spell checker if support is added for an external/system spell checker? Should it remain for complete backwards compatibility, and in case a system spell checker isn't available? Or should it be removed completely in favor of the new system?\r\n\r\nIt should certainly be removed. If somebody want to rewrite the internal vim spellchecker into an independent library/independent program which could be bundled with vim as its default spellchecker, no problem with that.",
            "created_at": "2020-06-08T14:09:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-640635234",
            "id": 640635234,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDYzNTIzNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640635234/reactions"
            },
            "updated_at": "2020-06-08T14:09:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640635234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> idk, this is the source: [vim/vim#2500 (review)](https://github.com/vim/vim/pull/2500#pullrequestreview-86001998)\r\n\r\nThat's my hunspell PR, he was asking about the enchant one.",
            "created_at": "2020-06-08T14:10:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-640636008",
            "id": 640636008,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDYzNjAwOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640636008/reactions"
            },
            "updated_at": "2020-06-08T14:10:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640636008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Problem with enchant is that it brings glib as additional external dependency and that is probably unacceptable to both Bram and neovim maintainers.\r\n\r\ngood point. \r\n\r\nwhat if instead of designing a new neovim-specific msgpack protocol, we do something similar to the clipboard provider, where we just run an external program that uses the ispell pipe format (which enchant, hunspell, aspell, etc. all support).",
            "created_at": "2020-06-08T16:45:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-640744114",
            "id": 640744114,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDc0NDExNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640744114/reactions"
            },
            "updated_at": "2020-06-08T16:45:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640744114",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> what if instead of designing a new neovim-specific msgpack protocol, we do something similar to the clipboard provider, where we just run an external program that uses the ispell pipe format (which enchant, hunspell, aspell, etc. all support).\r\n\r\nI am a big fan of the original vi logic of filtering through pipe, and I think that’s the best way how to do it. The only problem is that Windows (and less importantly, Solaris) users will hate us, because all creating new processes is horribly slow. Can ``ispell -a`` (or its aspell, hunspell, etc. equivalents) be run as a daemon in background?",
            "created_at": "2020-06-08T17:16:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-640761349",
            "id": 640761349,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDc2MTM0OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640761349/reactions"
            },
            "updated_at": "2020-06-08T17:16:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640761349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Can ispell -a (or its aspell, hunspell, etc. equivalents) be run as a daemon in background?\r\n\r\nDepends on what you mean by that. It would be straightforward to start the process once for a single vim process, and communicate with it using stdin/stdout over the lifetime of the process. However, I'm not sure how difficult it would be to have a shared daemon across multiple vim processes.",
            "created_at": "2020-06-08T19:55:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-640852897",
            "id": 640852897,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDg1Mjg5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640852897/reactions"
            },
            "updated_at": "2020-06-08T19:55:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640852897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Depends on what you mean by that. It would be straightforward to start the process once for a single vim process, and communicate with it using stdin/stdout over the lifetime of the process. However, I'm not sure how difficult it would be to have a shared daemon across multiple vim processes.\r\n\r\nThe former, just to avoid creating too many processes on Windows/Solaris.",
            "created_at": "2020-06-08T22:42:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-640925249",
            "id": 640925249,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDkyNTI0OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640925249/reactions"
            },
            "updated_at": "2020-06-08T22:42:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/640925249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Let me put here some previous pieces of art on the theme of using external spellcheckers:\r\n\r\n* [Page on Vim wiki](https://vim.fandom.com/wiki/Using_Ispell_on_a_highlighted_region)\r\n* Various vim plugins:\r\n    * https://github.com/vim-scripts/spellcheck.vim\r\n    * https://github.com/vim-scripts/vim-spell.tar.gz (development version on http://hermitte.free.fr/vim/ressources/vimfiles/macros/vim-spell-dev.tar.gz)\r\n    * https://github.com/vim-scripts/spell.vim\r\n    * https://github.com/vim-scripts/Vimchant (note that using external program doesn’t include the glib dependency)\r\n    * https://github.com/vim-scripts/vimspell\r\n\r\nIt would be probably useful to go through those plugins (and any other found elsewhere), and find out which of them work.\r\n\r\nOther important work would be to analyze [spell.c](https://github.com/neovim/neovim/blob/master/src/nvim/spell.c) and find out which symbols it exports to the rest of the editor, and which one of them would have to be replaced.",
            "created_at": "2020-06-09T12:36:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-641261503",
            "id": 641261503,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTI2MTUwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641261503/reactions"
            },
            "updated_at": "2020-06-09T12:36:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641261503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Wouldn't this be something that would be best to implement as a language server plugin for natural languages? @xylix \r\n\r\nI find that this suggestion was insightful yet rapidly dismissed, maybe it deserves more attention?\r\n\r\nIf the file is just a plain `.txt` draft, then it should not be a problem running 1 dedicated LSP for spellchecking.\r\n\r\nIf the file is a `.tex`, a `.rs` or a `.py`, then care should be taken not to mix up the language commands and the actual words, which is a complicated task that only the currently running `tex`-, `rs`- or `py`-LSP can legitimately tackle, and it is up to this.\r\n\r\nIn other words, I would find it DRY and meaningful that the running LSP be responsible for spell checking, taking into account all specificities of the various programming languages, and responsible for featuring any spellchecker the end user eventually likes. Would it be useful to drop a line at [`LSP`](https://github.com/Microsoft/language-server-protocol) about it?",
            "created_at": "2020-06-09T14:40:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-641342021",
            "id": 641342021,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTM0MjAyMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641342021/reactions"
            },
            "updated_at": "2020-06-09T14:40:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641342021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4",
                "events_url": "https://api.github.com/users/iago-lito/events{/privacy}",
                "followers_url": "https://api.github.com/users/iago-lito/followers",
                "following_url": "https://api.github.com/users/iago-lito/following{/other_user}",
                "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iago-lito",
                "id": 10091387,
                "login": "iago-lito",
                "node_id": "MDQ6VXNlcjEwMDkxMzg3",
                "organizations_url": "https://api.github.com/users/iago-lito/orgs",
                "received_events_url": "https://api.github.com/users/iago-lito/received_events",
                "repos_url": "https://api.github.com/users/iago-lito/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iago-lito",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> In other words, I would find it DRY and meaningful that the running LSP be responsible for spell checking, taking into account all specificities of the various programming languages, and responsible for featuring any spellchecker the end user eventually likes. Would it be useful to drop a line at [`LSP`](https://github.com/Microsoft/language-server-protocol) about it?\r\n\r\nhttps://www.joelonsoftware.com/2001/04/21/dont-let-architecture-astronauts-scare-you/\r\n\r\nCould we start with fixing those vimscript plugins first? http://wiki.c2.com/?DoTheSimplestThingThatCouldPossiblyWork",
            "created_at": "2020-06-09T15:41:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-641388898",
            "id": 641388898,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTM4ODg5OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641388898/reactions"
            },
            "updated_at": "2020-06-09T15:41:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641388898",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I would find it DRY and meaningful that the running LSP be responsible for spell checking\r\n\r\nI'm not sure how that is DRY, it seems WET to me, because now every language server will be responsible for knowing how to do spell check, and different language servers may do so in incompatible ways (like use different personal wordlists).  Now, I think it does make sense for an LSP server to indicate which regions of the file are eligible for spell checking (ex comments and strings), possibly tied in with [semantic syntax highlighting](https://github.com/microsoft/language-server-protocol/issues/18). And possibly have a mechanism for the LSP server to give the editor a list of words that should be considered correctly spelled for that file. But I don't think the spell checking and recommendations themselves should be the responsibility of the LSP.  Not to mention, what if you are editing a file that doesn't have an LSP server, or the LSP server doesn't support spellcheck, and you still want to run spell check?",
            "created_at": "2020-06-09T19:46:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-641531818",
            "id": 641531818,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTUzMTgxOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641531818/reactions"
            },
            "updated_at": "2020-06-09T19:46:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641531818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "btw, vim syntax files have a way to specify which parts of a file should be spell checked.",
            "created_at": "2020-06-09T19:47:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-641532432",
            "id": 641532432,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTUzMjQzMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641532432/reactions"
            },
            "updated_at": "2020-06-09T19:47:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641532432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": ">  it seems WET to me, because now every language server will be responsible for knowing how to do spell check, and different language servers may do so in incompatible ways (like use different personal wordlists). Now, I think it does make sense for an LSP server to indicate which regions of the file are eligible for spell checking (ex comments and strings)\r\n\r\n@tmccombs Yeah, sorry, that's what I meant (although I wasn't clear maybe): the only spellcheck-related role of the LSP is to isolate these regions, then forward to the actual spellchecker. This way no spellchecker has to be written twice.\r\n\r\n> what if you are editing a file that doesn't have an LSP server?\r\n\r\nWell, there must be at least 1 lightweight, spellcheck-only LSP, whose only job is to forward the file to the spellcheker and return the linting information. The linting logic is already shared with other LSPs, and the actual analysis of the file is very basic (it's just 1 big region to spellcheck).\r\n\r\n> or the LSP server doesn't support spellcheck, and you still want to run spell check?\r\n\r\nMy point is that such a server would *not* be considered LSP-compliant if spellchecking were actually part of the [protocol](https://github.com/Microsoft/language-server-protocol). This is why I think about dropping them a line. If spellchecking is added to LSP, then all LSP servers will have to integrate their share of language-specific spellchecking logic. I'll open a thread there, just to take the temperature on that.  \r\nIn the meantime, yeah, there will exist incomplete LSP-servers with no spellchecking support yet. In this transient situation, maybe it's good enough to run the lightweight, spellcheck-only LSP server in parallel? I have to admit that I don't know how difficult it is to accept two parallel sources of linting.\r\n\r\n> btw, vim syntax files have a way to specify which parts of a file should be spell checked.\r\n\r\nI personally find this WET, since the vim syntax file and the LSP server internal parsing logic are duplicates of each other.",
            "created_at": "2020-06-10T07:33:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-641792831",
            "id": 641792831,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTc5MjgzMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641792831/reactions"
            },
            "updated_at": "2020-06-10T07:33:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641792831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4",
                "events_url": "https://api.github.com/users/iago-lito/events{/privacy}",
                "followers_url": "https://api.github.com/users/iago-lito/followers",
                "following_url": "https://api.github.com/users/iago-lito/following{/other_user}",
                "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iago-lito",
                "id": 10091387,
                "login": "iago-lito",
                "node_id": "MDQ6VXNlcjEwMDkxMzg3",
                "organizations_url": "https://api.github.com/users/iago-lito/orgs",
                "received_events_url": "https://api.github.com/users/iago-lito/received_events",
                "repos_url": "https://api.github.com/users/iago-lito/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iago-lito",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> then forward to the actual spellchecker\r\n\r\nmy concern is, how does that happen? if it just returns the regions to the editor, and then the editor does spell check using the \"system\" spell checker, all well and good. But if the LSP server is responsible for return spell check results to the editor, that means the LSP server has to deal with issues like determining which spellchecker to use, cross-platform compatibility etc. and that work will have to be done for each LSP server.\r\n\r\n> My point is that such a server would not be considered LSP-compliant if spellchecking were actually part of the protocol. \r\n\r\nThat would break backwards-compatibility. And it doesn't solve the problem that not all languages have an LSP server (or the user may not want to use the LSP server). \r\n\r\n> I personally find this WET, since the vim syntax file and the LSP server internal parsing logic are duplicates of each other.\r\n\r\nMy point here, is that the regions to do spell check on are tightly tied to the syntax. So if/when LSP allows sending syntax highlighting information, ideally, it could send info about spelling regions as well. Then spellcheck could work basically the same way with an LSP server as without one.",
            "created_at": "2020-06-10T08:14:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-641822538",
            "id": 641822538,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTgyMjUzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641822538/reactions"
            },
            "updated_at": "2020-06-10T08:14:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641822538",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well, thank you for discussing this :)\r\n\r\n---\r\n\r\n> >   then forward to the actual spellchecker\r\n\r\n> my concern is, how does that happen?\r\n\r\nI'd say it ideally happens the way you eventually describe:\r\n\r\n> So if/when LSP allows sending syntax highlighting information, ideally, it could send info about spelling regions as well. Then spellcheck could work basically the same way with an LSP server as without one.\r\n\r\n---\r\n\r\nAbout compatibility..\r\n\r\n> That would break backwards-compatibility.\r\n\r\nI'm sorry I don't understand why, or which compatibility.\r\n\r\n---\r\n\r\nAbout which spellchecker to use..\r\n\r\n> the LSP server has to deal with issues like determining which spellchecker to use, cross-platform compatibility etc.\r\n\r\nMaybe this is better tackled by the client. LSP clients have config files dedicated to explicit these choices with entries like `spellchecker-to-use: \"path/to/my/favourite/spellchecker\"`, and clients know platform specificities.\r\n\r\n---\r\n\r\nThis said, I understand that there is still something blurry in the process:\r\n\r\n- client sends buffer content to LSP server\r\n- server parses and delimitates spellcheck regions\r\n- ..what next? Either:\r\n  - server returns regions to client\r\n  - client passes corresponding pieces of text to the spellchecker\r\n  - spellchecker processes and returns lints\r\n  - client displays lints? It feels duplicate because the spellchecker acts like a small, adventice LSP server in this case, and there is already a lint-information exchange between the LSP server and the client. Also, the interface between each possible \\<client, spellchecker\\> pair has to be determined (a matrix problem?).\r\n- .. or:\r\n  - client informs server of which spellchecker to use\r\n  - server passes regions to spellchecker chosen by client\r\n  - spellchecker processes and returns lints\r\n  - server returns lints to client like ordinary LSP lints. This feels less duplicate, but it still implies that each \\<spellchecker\\> gets involved in correctly interfacing with LSP on demand.\r\n\r\nI don't know whether spellcheckers output are already standardized in any way. If they are, then the latter interfacing is a one-shot standardizing effort from LSP, then implementation repercuted on each LSP server. If they are not, then it also imply that one LSP-specific interface needs be featured by each spellchecker, in addition to how they already work. This sounds like a long-run effort indeed.\r\n\r\nAnyway, as an appointed \"astronaut\", I agree that there is nothing neovim-specific left in this piece of the discussion, so maybe we should better move it [there](https://github.com/microsoft/language-server-protocol/issues/1017).",
            "created_at": "2020-06-10T09:18:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-641869892",
            "id": 641869892,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTg2OTg5Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641869892/reactions"
            },
            "updated_at": "2020-06-10T09:18:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/641869892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4",
                "events_url": "https://api.github.com/users/iago-lito/events{/privacy}",
                "followers_url": "https://api.github.com/users/iago-lito/followers",
                "following_url": "https://api.github.com/users/iago-lito/following{/other_user}",
                "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iago-lito",
                "id": 10091387,
                "login": "iago-lito",
                "node_id": "MDQ6VXNlcjEwMDkxMzg3",
                "organizations_url": "https://api.github.com/users/iago-lito/orgs",
                "received_events_url": "https://api.github.com/users/iago-lito/received_events",
                "repos_url": "https://api.github.com/users/iago-lito/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iago-lito",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just to revive this a little, there is [enchant](https://github.com/AbiWord/enchant) library form AbiWord that supports many backends. Maybe it would be worth reviewing as a spell checking backend library.",
            "created_at": "2020-12-05T20:17:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-739398256",
            "id": 739398256,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczOTM5ODI1Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/739398256/reactions"
            },
            "updated_at": "2020-12-05T20:17:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/739398256",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4",
                "events_url": "https://api.github.com/users/hauleth/events{/privacy}",
                "followers_url": "https://api.github.com/users/hauleth/followers",
                "following_url": "https://api.github.com/users/hauleth/following{/other_user}",
                "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hauleth",
                "id": 291639,
                "login": "hauleth",
                "node_id": "MDQ6VXNlcjI5MTYzOQ==",
                "organizations_url": "https://api.github.com/users/hauleth/orgs",
                "received_events_url": "https://api.github.com/users/hauleth/received_events",
                "repos_url": "https://api.github.com/users/hauleth/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hauleth",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think the decision which backend to use (enchant, hunspell directly, nuspell, or creating API for remote plugins) is less important, than actually hewing API from the swamp of `spell.c` and separating all functionality required from such backend.",
            "created_at": "2020-12-05T22:03:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-739422128",
            "id": 739422128,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQyMjEyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/739422128/reactions"
            },
            "updated_at": "2020-12-05T22:03:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/739422128",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Just to revive this a little, there is [enchant](https://github.com/AbiWord/enchant) library form AbiWord that supports many backends.\r\n\r\nFWIW, I did [try](https://github.com/jamessan/vim/tree/pu/enchant-fallback) to integrate enchant into Vim awhile back.  While I got it to be superficially functional, I came to realize that much of the remaining work needed to take advantage of Vim's internal heuristics for improving suggestions relies on Hunspell like APIs.\r\n\r\nIf/when I get the time to finish this work, it would be using Hunspell (or a library with similar APIs), even though I too think that Enchant provides better end-user flexibility.",
            "created_at": "2020-12-06T01:24:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-739440354",
            "id": 739440354,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczOTQ0MDM1NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/739440354/reactions"
            },
            "updated_at": "2020-12-06T01:24:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/739440354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> FWIW, I did [try](https://github.com/jamessan/vim/tree/pu/enchant-fallback) to integrate enchant into Vim awhile back. While I got it to be superficially functional, I came to realize that much of the remaining work needed to take advantage of Vim's internal heuristics for improving suggestions relies on Hunspell like APIs.\r\n\r\nAnd you still get hit with the glib dependency, which is probably unacceptable. It would have to be a truly remote plugin.",
            "created_at": "2021-05-05T09:42:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-832555628",
            "id": 832555628,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjU1NTYyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/832555628/reactions"
            },
            "updated_at": "2021-05-05T09:42:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/832555628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> There's already a integrated spell checker in upstream vim, the spelling dictionary files are located under runtime/spell. To enable it you just run `:set spell spellang=<LANG>`, replacing <LANG> with your language code eg. en_US for American English\r\n> \r\n> But I noticed that these language files have been removed in Neovim but the spelling checking engine component has been left in\r\n\r\nSo right now in neovim it is impossible to set up spell checking for any language other than english?",
            "created_at": "2021-11-10T20:45:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-965731645",
            "id": 965731645,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM45j-U9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965731645/reactions"
            },
            "updated_at": "2021-11-10T21:46:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965731645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46892933?v=4",
                "events_url": "https://api.github.com/users/0rtz/events{/privacy}",
                "followers_url": "https://api.github.com/users/0rtz/followers",
                "following_url": "https://api.github.com/users/0rtz/following{/other_user}",
                "gists_url": "https://api.github.com/users/0rtz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0rtz",
                "id": 46892933,
                "login": "0rtz",
                "node_id": "MDQ6VXNlcjQ2ODkyOTMz",
                "organizations_url": "https://api.github.com/users/0rtz/orgs",
                "received_events_url": "https://api.github.com/users/0rtz/received_events",
                "repos_url": "https://api.github.com/users/0rtz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0rtz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0rtz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0rtz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, of course not -- the dictionaries are just not shipped by default. See `:h spell-load`.",
            "created_at": "2021-11-10T20:49:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-965734316",
            "id": 965734316,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM45j--s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965734316/reactions"
            },
            "updated_at": "2021-11-10T21:46:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965734316",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@clason well for me it prints that ```spellfile#LoadFile(): Nread command is not available.``` relating to spellfile.vim that is specifed in ```:h spell-load```. can it be the cause why spell files not loading?",
            "created_at": "2021-11-10T21:32:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-965762287",
            "id": 965762287,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM45kFzv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965762287/reactions"
            },
            "updated_at": "2021-11-10T21:46:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965762287",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46892933?v=4",
                "events_url": "https://api.github.com/users/0rtz/events{/privacy}",
                "followers_url": "https://api.github.com/users/0rtz/followers",
                "following_url": "https://api.github.com/users/0rtz/following{/other_user}",
                "gists_url": "https://api.github.com/users/0rtz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0rtz",
                "id": 46892933,
                "login": "0rtz",
                "node_id": "MDQ6VXNlcjQ2ODkyOTMz",
                "organizations_url": "https://api.github.com/users/0rtz/orgs",
                "received_events_url": "https://api.github.com/users/0rtz/received_events",
                "repos_url": "https://api.github.com/users/0rtz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0rtz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0rtz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0rtz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It should prompt you to download them on enabling spellchecking. When I move my config to a new computer and try to activate a spellchecking with my keymaps it prompts (Y/n)",
            "created_at": "2021-11-10T21:38:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-965768628",
            "id": 965768628,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM45kHW0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965768628/reactions"
            },
            "updated_at": "2021-11-10T21:46:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965768628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/58222655?v=4",
                "events_url": "https://api.github.com/users/yar-fed/events{/privacy}",
                "followers_url": "https://api.github.com/users/yar-fed/followers",
                "following_url": "https://api.github.com/users/yar-fed/following{/other_user}",
                "gists_url": "https://api.github.com/users/yar-fed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yar-fed",
                "id": 58222655,
                "login": "yar-fed",
                "node_id": "MDQ6VXNlcjU4MjIyNjU1",
                "organizations_url": "https://api.github.com/users/yar-fed/orgs",
                "received_events_url": "https://api.github.com/users/yar-fed/received_events",
                "repos_url": "https://api.github.com/users/yar-fed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yar-fed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yar-fed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yar-fed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@yar-fed I do\r\n```\r\nnvim -u NONE -V2 Makefile\r\n:set spelllang=en,ru\r\n:set spell\r\nnot found in runtime path: \"spell/en.utf-8.add.spl\"\r\nnot found in runtime path: \"spell/ru.utf-8.spl\"\r\nnot found in runtime path: \"spell/ru.ascii.spl\"\r\nWarning: Cannot find word list \"ru.utf-8.spl\" or \"ru.ascii.spl\"\r\nPress ENTER or type command to continue\r\n```\r\nNo prompts or any downloads. nvim version is v0.6.0-dev+409-gf6a9f0bfc\r\nShould i fill a bug report?",
            "created_at": "2021-11-10T21:43:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-965773389",
            "id": 965773389,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM45kIhN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965773389/reactions"
            },
            "updated_at": "2021-11-10T21:46:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965773389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46892933?v=4",
                "events_url": "https://api.github.com/users/0rtz/events{/privacy}",
                "followers_url": "https://api.github.com/users/0rtz/followers",
                "following_url": "https://api.github.com/users/0rtz/following{/other_user}",
                "gists_url": "https://api.github.com/users/0rtz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/0rtz",
                "id": 46892933,
                "login": "0rtz",
                "node_id": "MDQ6VXNlcjQ2ODkyOTMz",
                "organizations_url": "https://api.github.com/users/0rtz/orgs",
                "received_events_url": "https://api.github.com/users/0rtz/received_events",
                "repos_url": "https://api.github.com/users/0rtz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/0rtz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0rtz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/0rtz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`-u NONE` disables _all_ builtin plugins, including the one for downloading spell files. And I don't know what `-V2` is supposed to do.\r\n\r\nBut, yes, this is unrelated to this issue, so it would be better to ask on Matrix or Discourse. (I don't think there's a bug here, so I wouldn't jump straight to opening an issue.)",
            "created_at": "2021-11-10T21:46:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-965774936",
            "id": 965774936,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM45kI5Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965774936/reactions"
            },
            "updated_at": "2021-11-10T21:47:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965774936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hi, I am reviving this issue after some comments on vim/vim about hunspell integration (especially for french dictionnaries, which are horrible).\r\n\r\nThe main arguments in vim/vim (which are all valid in vim/vim's context) are:\r\n1. VimSpell, at the time, was faster than any other spellchecking library\r\n2. VimSpell is licenced under the same terms as vim, which allows distributions along with it without hastle\r\n3. VimSpell requires no extra dependency\r\n4. VimSpell can detect rare words (`SpellRare`), and words from other variants of a language (`SpellLocal`)\r\n\r\nNow to answer to those points one by one:\r\n1. It looks like, after some experiments that follow [these guidelines](https://github.com/hunspell/hunspell/tree/master/tests/suggestiontest) VimSpell is actually _slower_ than hunspell at both spellchecking (~0.02 secs for hunspell, ~0.03 secs for VimSpell, may be a fluke) and suggestions (many times, VimSpell took ~25 minutes, hunspell did the whole list in 2 minutes)\r\n2. In neovim, this licencing problem seems to have disappear: we already rely on libraries that use different licences than us.\r\n3. See answer to 2.: we already rely on external libraries\r\n4. This one is trickier, since version 1.3.0, hunspell can report rare words, so `SpellRare` is supported. I did not look into haw `SpellLocal` is implemented, but if it is an extension to the dictionnary format, then it is quite probably not supported. In the contrary, if this is part of the MySpell specification then hunspell probably silently supports it, as it supports MySpell dictionnaries.\r\n\r\nOn a side note, using hunspell should allow us to stop us from using the weird dictionnary management setup that vim/vim uses (download dictionnary files and such) and only use the system dictionnaries, which seems a lot better (to me at least).",
            "created_at": "2022-09-09T06:25:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1241552108",
            "id": 1241552108,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5KAJTs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 8,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1241552108/reactions"
            },
            "updated_at": "2022-09-09T06:31:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1241552108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> On a side note, using hunspell should allow us to stop us from using the weird dictionnary management setup that vim/vim uses (download dictionnary files and such) and only use the system dictionnaries, which seems a lot better (to me at least).\n\nThis would be very good!",
            "created_at": "2022-09-09T08:22:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1241662255",
            "id": 1241662255,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5KAkMv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1241662255/reactions"
            },
            "updated_at": "2022-09-09T08:22:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1241662255",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Status\r\n\r\n- Did we rule out aspell?\r\n  - aspell apparently has better suggestions for English than hunspell (which has bad suggestions for English)\r\n      - https://github.com/vim/vim/pull/2500#issuecomment-364658974\r\n        > Vim has its own spell code, which (at the time I wrote it) is vastly superior to all existing spell libraries.  aspell comes closest\r\n  - aspell's benchmarks: http://aspell.net/test/cur/\r\n  - license: LGPL\r\n  - seems like it has a github repo? https://github.com/GNUAspell/aspell\r\n- Regarding performance: a point raised in https://github.com/neovim/neovim/issues/356#issuecomment-37732087 and also by @lewis6991 elsewhere:\r\n- Regarding \"pluggable interface\", 'spellfunc', etc: we already have LSP, why do we need 'spellfunc'?\r\n\r\n>  spellchecking while redrawing is a terrible idea. I mean, really terrible. Awful. Seriously.\r\n\r\nReworking the internals to avoid that may be costly, but in general it seems like a strange architecture: why do spell higlights need to be synchronous? A cheap alternative could be to defer to LSP...",
            "created_at": "2022-09-24T13:37:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1256971257",
            "id": 1256971257,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K69v5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1256971257/reactions"
            },
            "updated_at": "2022-09-25T12:12:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1256971257",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I did take a quick look at Aspell and it does seem to provide better suggestions for English, including the ones mentioned here.\n\nWe should also look at enchant which is just a wrapper around many backends (including aspell and hunspell).",
            "created_at": "2022-09-24T13:47:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1256973154",
            "id": 1256973154,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K6-Ni",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1256973154/reactions"
            },
            "updated_at": "2022-09-24T13:47:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1256973154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> We should also look at enchant which is just a wrapper around many backends (including aspell and hunspell).\r\n\r\nenchant requires dependency on glib.",
            "created_at": "2022-09-24T21:40:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257069709",
            "id": 1257069709,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K7VyN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257069709/reactions"
            },
            "updated_at": "2022-09-24T21:40:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257069709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "A couple potential issues with aspell:\r\n\r\n1. It is no longer maintained\r\n2. If I remember correctly from a project I did several years ago where I needed a spellchecker, the hunspell dictionaries are more complete, even for English. So, while aspell might give better suggestions, it will also mark more correctly spelled words as misspelled .\r\n\r\nThere is also nuspell, but it is newer, and I'm not sure how good the suggestions are, although it does support hunspell dictionaries.\r\n\r\nI think the ideal would be a way to make the spell checker pluggable. \r\n\r\n",
            "created_at": "2022-09-24T22:38:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257076981",
            "id": 1257076981,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K7Xj1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257076981/reactions"
            },
            "updated_at": "2022-09-25T12:10:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257076981",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> aspell:  It is no longer maintained\r\n\r\nbased on what? Last release on http://aspell.net/ is 2019, and https://github.com/GNUAspell/aspell seems to be alive.\r\n\r\n>  the hunspell dictionaries are more complete, even for English. \r\n\r\nThat is proving to be a minor concern. It is a one-time cost to convert dictionaries from one format to another (plus it's easy to hit `zg`). Whereas the suggestion algorithm is the main feature that actually needs to work well.\r\n\r\n> I think the ideal would be a way to make the spell checker pluggable.\r\n\r\nDoesn't really solve anything if all the backends suck.",
            "created_at": "2022-09-25T00:10:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257087674",
            "id": 1257087674,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K7aK6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257087674/reactions"
            },
            "updated_at": "2022-09-25T12:10:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257087674",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> \r\n\r\n> > aspell:  It is no longer maintained\r\n> \r\n> based on what?  Last release on http://aspell.net/ is 2019\r\nMultiple places discussing why hunspell is preferred over aspell. Although, it looks like maybe those sources are outdated, and there has been at least one release since then.  Although there weren't any releases between 2011 and 2019. \r\n\r\n\r\n\r\n> and https://github.com/GNUAspell/aspell seems to be alive.\r\n\r\nDoes it? The only change in the last two years was to the manual.  I'll concede it might not be completely unmaintained, but it  definitely has significantly less activity than hunspell, and relatedly, is used by fewer downstream projects. \r\n\r\n>  It is a one-time cost to convert dictionaries from one format to another \r\n\r\n\r\nPerhaps. Although, as far as I know there aren't existing tools to do that conversion, and I'm not even sure it is possible without data loss. \r\n\r\n> (plus it's easy to hit `zg`). \r\n\r\nAs long as you are confident you spelled it correctly 😉. \r\n\r\n\r\n\r\n> > I think the ideal would be a way to make the spell checker pluggable.\r\n> \r\n> Doesn't really solve anything if all the backends suck.\r\n\r\nOn the contrary, if they all suck, but in different ways, you can pick the one that works best for you.  If you can switch engines at runtime you could even do something like use hunspell by default, but if it doesn't give good suggestions, switch to aspell to see if that gives you better suggestions. \r\n\r\n",
            "created_at": "2022-09-25T04:21:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257116839",
            "id": 1257116839,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K7hSn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257116839/reactions"
            },
            "updated_at": "2022-09-25T12:10:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257116839",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> but it definitely has significantly less activity than hunspell\r\n\r\nThen why is the unspell suggest algorithm so bad? That is the main job of a spellchecker.\r\n\r\n> On the contrary, if they all suck, but in different ways, you can pick the one that works best for you.\r\n\r\nThat is a cop-out that doesn't change the game for 98% of Nvim users. We need something that we can ship. Also what does a pluggable interface gain over LSP?",
            "created_at": "2022-09-25T11:57:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257178834",
            "id": 1257178834,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K7wbS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257178834/reactions"
            },
            "updated_at": "2022-09-25T12:09:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257178834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Then why is the unspell suggest algorithm so bad?\r\n\r\nIDK. From what I understand, hunspell is supposed to work better for several non-english languages.  Perhaps that comes at the cost of an engine that doesn't work quite as well for English (because it wasn't specifically designed for English)?\r\n\r\n> That is the main job of a spellchecker.\r\n\r\nIt's called a spellchecker not a spellsuggester. Identifying which words are misspelled is at least as important for a spellchecker.\r\n\r\n> Also what does a pluggable interface gain over LSP?\r\n\r\nI would consider LSP to be a \"pluggable Interface\", by which I mean the specific spell checking engine isn't hard coded and can easily be replaced by something else.  Either because of user preference, or because a new better engine becomes available. I'm not sure LSP is the best fit, because that isn't exactly what it was designed for. But I definitely think using LSP would be better than embedding or linking directly against aspell or hunspell.",
            "created_at": "2022-09-25T18:53:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257255361",
            "id": 1257255361,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K8DHB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257255361/reactions"
            },
            "updated_at": "2022-09-26T10:26:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257255361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > but it definitely has significantly less activity than hunspell\r\n> \r\n> Then why is the unspell suggest algorithm so bad? That is the main job of a spellchecker.\r\n\r\nIt is not bad, it at least works for other languages than `en`, aspell doesn’t. And if you want to make an universal system spellchecker (or spellchecker for Google Chrome, Firefox, LibreOffice, Mac OS X) the reality crashes on you heavily that English is not language of majority of humankind. Yes, I know, I was trying to use aspell for `cs_CZ` … you wouldn’t believe how that was bad.",
            "created_at": "2022-09-25T19:22:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257260999",
            "id": 1257260999,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K8EfH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257260999/reactions"
            },
            "updated_at": "2022-09-26T10:26:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257260999",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think the ideal would be a way to make the spell checker pluggable.\n\nLike enchant does?",
            "created_at": "2022-09-26T00:16:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257319754",
            "id": 1257319754,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K8S1K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257319754/reactions"
            },
            "updated_at": "2022-09-26T00:16:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257319754",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > I think the ideal would be a way to make the spell checker pluggable.\r\n> \r\n> Like enchant does?\r\n\r\nYes, but the best is enemy of good. Let’s have hunspell first, and we can think about more sophisticated solution.",
            "created_at": "2022-09-26T05:53:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257515763",
            "id": 1257515763,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K9Crz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257515763/reactions"
            },
            "updated_at": "2022-09-26T10:26:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257515763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yes, but the best is enemy of good. Let’s have hunspell first, and we can think about more sophisticated solution.\r\n\r\nDon't forget that we have time to make a decision here: I'd rather go for a solution we _know_ will be good for the long-term rather than a half-baked one which will be regretted later.\r\n\r\nThe thing is that the hunspell PR is also an occasion to rework the spell code around an external library.\r\n\r\nAs others noted, hunspell also does not seem to be the all around best alternative.",
            "created_at": "2022-09-26T05:57:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257517870",
            "id": 1257517870,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K9DMu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257517870/reactions"
            },
            "updated_at": "2022-09-26T05:57:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257517870",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The thing is that the hunspell PR is also an occasion to rework the spell code around an external library.\r\n> \r\n> As others noted, hunspell also does not seem to be the all around best alternative.\r\n\r\nI refer back to https://github.com/neovim/neovim/issues/12064#issuecomment-739422128 and although I clearly accept that hunspell is not the best spellchecker for some languages and it will quite certainly won’t be the best spellchecker forever, I think with the stress of “all around” it could be the best all around alternative right now.\r\n\r\nAnd yes, I believe that the value of this PR (aside from neovim using the standard spellchecker on my system and every other Linux/Unix/Mac OS(?) I know about) is more in separating spellchecking into external module. It is [the simplest thing that could possibly work](http://xp.c2.com/DoTheSimplestThingThatCouldPossiblyWork.html) and I think we should start with it. When we have something which people are actually capable of using, we get feedback and time to prepare some better solution. We may quite possibly [not need](http://xp.c2.com/YouArentGonnaNeedIt.html) anything more complicated or we will do something completely different.",
            "created_at": "2022-09-26T08:21:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1257670759",
            "id": 1257670759,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5K9ohn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257670759/reactions"
            },
            "updated_at": "2022-09-26T10:27:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257670759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "hi, I am working on this, with the built in spell-check, just making it a bit easier to use. could you assign it to me? (I need this for the project I am working on for University) ",
            "created_at": "2023-04-18T20:55:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1513784190",
            "id": 1513784190,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5aOoN-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1513784190/reactions"
            },
            "updated_at": "2023-04-18T21:00:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1513784190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59129127?v=4",
                "events_url": "https://api.github.com/users/faded-giant/events{/privacy}",
                "followers_url": "https://api.github.com/users/faded-giant/followers",
                "following_url": "https://api.github.com/users/faded-giant/following{/other_user}",
                "gists_url": "https://api.github.com/users/faded-giant/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faded-giant",
                "id": 59129127,
                "login": "faded-giant",
                "node_id": "MDQ6VXNlcjU5MTI5MTI3",
                "organizations_url": "https://api.github.com/users/faded-giant/orgs",
                "received_events_url": "https://api.github.com/users/faded-giant/received_events",
                "repos_url": "https://api.github.com/users/faded-giant/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faded-giant/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faded-giant/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faded-giant",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Did we rule out the idea of converting hunspell or aspell dictionaries into Vim spell format? Don't see any [discussion](https://github.com/neovim/neovim/issues/12064#issuecomment-1241552108) of that.",
            "created_at": "2023-09-13T17:16:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1718018635",
            "id": 1718018635,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5mZuJL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718018635/reactions"
            },
            "updated_at": "2023-09-13T17:16:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718018635",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think the problem is that the suggestion algorithm for certain languages is much better in hunspell. vimspell seems to be only optimised for English.",
            "created_at": "2023-09-13T19:12:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1718175667",
            "id": 1718175667,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5maUez",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718175667/reactions"
            },
            "updated_at": "2023-09-13T19:12:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718175667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And Dutch.",
            "created_at": "2023-09-13T19:21:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1718186429",
            "id": 1718186429,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5maXG9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718186429/reactions"
            },
            "updated_at": "2023-09-13T19:21:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718186429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(and yes, it's not about the dictionaries , either way.)",
            "created_at": "2023-09-13T19:23:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-1718188407",
            "id": 1718188407,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM5maXl3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718188407/reactions"
            },
            "updated_at": "2023-09-13T19:23:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718188407",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Reading the last several comments (that have not been marked as resolved or off-topic), it’s not clear to me what the external blocker is. Was this blocker resolved? If not, what is the blocker?",
            "created_at": "2024-03-20T01:16:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-2008486430",
            "id": 2008486430,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM53txIe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2008486430/reactions"
            },
            "updated_at": "2024-03-20T08:54:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2008486430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/177659?v=4",
                "events_url": "https://api.github.com/users/Freso/events{/privacy}",
                "followers_url": "https://api.github.com/users/Freso/followers",
                "following_url": "https://api.github.com/users/Freso/following{/other_user}",
                "gists_url": "https://api.github.com/users/Freso/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Freso",
                "id": 177659,
                "login": "Freso",
                "node_id": "MDQ6VXNlcjE3NzY1OQ==",
                "organizations_url": "https://api.github.com/users/Freso/orgs",
                "received_events_url": "https://api.github.com/users/Freso/received_events",
                "repos_url": "https://api.github.com/users/Freso/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Freso/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Freso/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Freso",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The existence of a suitable external spelling library that can replace the built-in spell-checker.",
            "created_at": "2024-03-20T07:54:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-2008975340",
            "id": 2008975340,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM53vofs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2008975340/reactions"
            },
            "updated_at": "2024-03-20T08:57:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2008975340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If we're ok with a cpp dep, then [enchant](https://abiword.github.io/enchant/) is worth looking at.",
            "created_at": "2024-03-20T07:58:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-2008980742",
            "id": 2008980742,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM53vp0G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2008980742/reactions"
            },
            "updated_at": "2024-03-20T08:57:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2008980742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Status\r\n\r\nCurrent status is at https://github.com/neovim/neovim/issues/12064#issuecomment-1256971257 and https://github.com/neovim/neovim/issues/12064#issuecomment-1718018635\r\n\r\n> If we're ok with a cpp dep, then [enchant](https://abiword.github.io/enchant/) is worth looking at.\r\n\r\nAccording to above comments it would also introduce a dependency on glib.",
            "created_at": "2024-03-20T08:54:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-2009059657",
            "id": 2009059657,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM53v9FJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009059657/reactions"
            },
            "updated_at": "2024-03-20T11:22:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009059657",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We could also dynamically load it as a lib at runtime:\r\n\r\nPros:\r\n- No build changes\r\n\r\nCons:\r\n- Optional. Though I don't see this as a problem if we keep the vim spell checker, which I'll say again is very good for English.\r\n\r\n(feel free to hide this comment)",
            "created_at": "2024-03-20T09:12:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-2009088115",
            "id": 2009088115,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM53wEBz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009088115/reactions"
            },
            "updated_at": "2024-03-20T09:12:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009088115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The \"Con\" is a general question of where to draw the line: we don't want Vim's `+foo` spaghetti, but we already have some optional features like clipboard providers. We'll run into a similar issue with a WASM runtime required for binary tree-sitter parser integration.",
            "created_at": "2024-03-20T09:15:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-2009093470",
            "id": 2009093470,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM53wFVe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009093470/reactions"
            },
            "updated_at": "2024-03-20T09:15:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009093470",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Vim's main problem with `+feature` is that it caused severe overuse of the preprocessor in C code, and, meant there were too many build flavours. \n\nI don't think either of those problems exist for dynamic loading.\n\nAdditionally many `+features` are quite silly (`+conceal`), so I don't think it's wise to make that parallel anyway.\n\nMy philosophy is that if the user has something better installed on their system we can use, then we should be able to (within reason).\n\nWe already essentially do this with anything that uses system commands. Dynamic loading is necessary here because we can't accept the IO bottleneck in a spell checker via system commands.",
            "created_at": "2024-03-20T09:26:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-2009110211",
            "id": 2009110211,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM53wJbD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009110211/reactions"
            },
            "updated_at": "2024-03-20T09:29:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009110211",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't think either of those problems exist for dynamic loading.\r\n\r\nThe problem with a half-solution is (if) it makes the spell code (and user documentation) very complex. This was discussed in https://github.com/neovim/neovim/pull/20131#pullrequestreview-1103362634 which also explored the idea of multiple spell backends. The complexity doesn't seem worth it. \r\n\r\n# Status\r\n\r\n\r\n\r\nCurrent status is at:\r\n\r\n- https://github.com/neovim/neovim/issues/12064#issuecomment-1256971257\r\n- https://github.com/neovim/neovim/issues/12064#issuecomment-1718018635\r\n- https://github.com/neovim/neovim/pull/20131#pullrequestreview-1103362634 \r\n\r\n> If we're ok with a cpp dep, then [enchant](https://abiword.github.io/enchant/) is worth looking at.\r\n\r\nAccording to above comments it would also introduce a dependency on glib.\r\n\r\n\r\n## Do not comment on this issue unless you have found a new spell \"backend\" (that wasn't already discussed above).",
            "created_at": "2024-03-20T11:23:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-2009342774",
            "id": 2009342774,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM53xCM2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009342774/reactions"
            },
            "updated_at": "2024-03-20T11:25:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009342774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "https://github.com/blopker/codebook\n\n> Codebook is a spell checker for code. It binds together the venerable Tree Sitter and the fast spell checker [Spellbook](https://github.com/helix-editor/spellbook). Included is a Language Server for use in (theoretically) any editor. Everything is done in Rust to keep response times snappy and memory usage low.\n\n> Spellbook is a Rust spellchecking library compatible with the Hunspell dictionary format.",
            "created_at": "2025-07-12T17:14:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/12064#issuecomment-3065882498",
            "id": 3065882498,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12064",
            "node_id": "IC_kwDOAPphoM62vaeC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3065882498/reactions"
            },
            "updated_at": "2025-07-12T17:14:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3065882498",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3533182?v=4",
                "events_url": "https://api.github.com/users/polyzen/events{/privacy}",
                "followers_url": "https://api.github.com/users/polyzen/followers",
                "following_url": "https://api.github.com/users/polyzen/following{/other_user}",
                "gists_url": "https://api.github.com/users/polyzen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/polyzen",
                "id": 3533182,
                "login": "polyzen",
                "node_id": "MDQ6VXNlcjM1MzMxODI=",
                "organizations_url": "https://api.github.com/users/polyzen/orgs",
                "received_events_url": "https://api.github.com/users/polyzen/received_events",
                "repos_url": "https://api.github.com/users/polyzen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/polyzen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/polyzen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/polyzen",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 64,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12064/comments",
    "created_at": "2020-03-29T15:16:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/12064/events",
    "html_url": "https://github.com/neovim/neovim/issues/12064",
    "id": 589814554,
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "Needs a third-party / external change or fix",
            "id": 101945532,
            "name": "status:blocked-external",
            "node_id": "MDU6TGFiZWwxMDE5NDU1MzI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/status:blocked-external"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is fixed in vim and patch needs to be ported",
            "id": 152276149,
            "name": "has:vim-patch",
            "node_id": "MDU6TGFiZWwxNTIyNzYxNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:vim-patch"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "spellcheck",
            "id": 1953742452,
            "name": "spell",
            "node_id": "MDU6TGFiZWwxOTUzNzQyNDUy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/spell"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/12064/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 286,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 338,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-13T19:57:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU1ODk4MTQ1NTQ=",
    "number": 12064,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 25,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 6,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 31,
        "url": "https://api.github.com/repos/neovim/neovim/issues/12064/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/12064/timeline",
    "title": "spell checker integration",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-12T17:14:06Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/12064",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2457435?v=4",
        "events_url": "https://api.github.com/users/okias/events{/privacy}",
        "followers_url": "https://api.github.com/users/okias/followers",
        "following_url": "https://api.github.com/users/okias/following{/other_user}",
        "gists_url": "https://api.github.com/users/okias/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/okias",
        "id": 2457435,
        "login": "okias",
        "node_id": "MDQ6VXNlcjI0NTc0MzU=",
        "organizations_url": "https://api.github.com/users/okias/orgs",
        "received_events_url": "https://api.github.com/users/okias/received_events",
        "repos_url": "https://api.github.com/users/okias/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/okias/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/okias/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/okias",
        "user_view_type": "public"
    }
}