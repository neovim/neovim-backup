{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Problem\n\nWith large projects with multiple directories, files like Session.vim, tags files, and other similar \"project files\" could be anywhere within the project.\n\n# Expected behavior\n\nWith a \"project\" feature, commands like `:vimgrep`, `:make`, `nvim -S Session.vim`, etc., load files from the project directory.\n\nI was thinking of having 4 options:\n\n- ~~`project: boolean` (default 0 for compatibility) When this option is set to true, neovim sets the 'projectdir' and looks for makefiles, cscope dbs, etc, inside the cwd, then inside 'projectdir'. When set to false, neovim acts as usual When 'autochdir' is set, neovim changes the directory to the project directory~~\n    - *(2024 justinmk)* Doesn't seem necessary; instead, always do the right thing based on the presence of `&l:rootdir` or `.nvim.lua` ?\n- `projectfunc: string` (default: empty) Decides the project directory by a custom function. If nil, the project directory is determined by searching parent directories for the projectfiles\n    - *(2024 justinmk)* related: https://github.com/neovim/neovim/pull/31630\n- `projectdir: string` (default: empty) Set by projectfunc or projectfiles.  The directory of the project\n    - *(2024 justinmk)* I assume this is buffer-local option? Alternative names: `rootdir`, `workdir`\n- `projectfiles: list` (default: \".git,src,etc\") Files/directories to search for in parent directories.  Searches from left to right eg. search for .git, then src, etc\n    - *(2024 justinmk)* In `vim.lsp.config` we named this `root_markers`.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I assume there already are plugins for that, did you have a look? E.g https://github.com/tpope/vim-projectionist",
            "created_at": "2018-06-21T07:21:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-399002145",
            "id": 399002145,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTAwMjE0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/399002145/reactions"
            },
            "updated_at": "2018-06-21T07:21:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/399002145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4117685?v=4",
                "events_url": "https://api.github.com/users/KillTheMule/events{/privacy}",
                "followers_url": "https://api.github.com/users/KillTheMule/followers",
                "following_url": "https://api.github.com/users/KillTheMule/following{/other_user}",
                "gists_url": "https://api.github.com/users/KillTheMule/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KillTheMule",
                "id": 4117685,
                "login": "KillTheMule",
                "node_id": "MDQ6VXNlcjQxMTc2ODU=",
                "organizations_url": "https://api.github.com/users/KillTheMule/orgs",
                "received_events_url": "https://api.github.com/users/KillTheMule/received_events",
                "repos_url": "https://api.github.com/users/KillTheMule/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KillTheMule/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KillTheMule/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KillTheMule",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "``vim-projectionist`` seems like a crazy overkill over what is suggested in this ticket. This feels like really nice functionality which should in the basic program.",
            "created_at": "2019-07-24T20:23:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-514785708",
            "id": 514785708,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDc4NTcwOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/514785708/reactions"
            },
            "updated_at": "2019-07-24T20:23:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/514785708",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> When I edit a file, I usually cd to the directory and then call vim on a file. The problem with that is that with large projects with multiple directories, files like Session.vim, tags files, and other similar \"project files\" could be anywhere within the project. With a \"project\" feature, neovim would use commands like vimgrep, make, cs add [file], etc and load files (eg Session.vim) from the project directory.\r\n\r\nWhy do you `cd` to the file in the first place?  Is that in Neovim or before starting it? (just asking to understand your use case)\r\n\r\nIs the idea of this future for Neovim to set the `projectdir` variable automatically?\r\nWould it do things based on that itself?  (apart from the `autochdir` you've mentioned)\r\n\r\nTake a look at https://github.com/dbakker/vim-projectroot maybe for handling project roots.\r\nI am using some mappings around it to `:lcd`/`:tcd`/`:cd` based on that: https://github.com/blueyed/dotfiles/blob/001ace8cd6c72151ba6880991e83aa2d481547ae/vimrc#L2773-L2789\r\n\r\nIn Neomake I've also added a helper function to get the project root for a given buffer: https://github.com/neomake/neomake/blob/852029b49c495181c2900d6baf4de7208507649e/autoload/neomake/utils.vim#L636-L673",
            "created_at": "2019-07-24T20:33:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-514789322",
            "id": 514789322,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDc4OTMyMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/514789322/reactions"
            },
            "updated_at": "2019-07-24T20:33:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/514789322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Why do you cd to the file in the first place?\r\n\r\nFor the same reason why `autochdir` makes sense. When opening vim from some other command (i.e., something like `vim $(locate something)` or when opening file from `:marks`) it is more convenient to have working directory set to something meaningful than to the random directory, where user happened to be.\r\n\r\nHowever, quite often “project directory” makes quite often more sense than the actual directory where the edited file is.\r\n\r\n`vim-projectroot` looks interesting.",
            "created_at": "2019-07-24T20:39:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-514791160",
            "id": 514791160,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDc5MTE2MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/514791160/reactions"
            },
            "updated_at": "2019-07-24T20:41:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/514791160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I see.  That's when I do `,cdr` or `,cdR` (\",\" being the leader).. :)",
            "created_at": "2019-07-24T20:48:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-514794289",
            "id": 514794289,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDc5NDI4OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/514794289/reactions"
            },
            "updated_at": "2019-07-24T20:48:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/514794289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Right, you have basically wrote those plugins once more in your ``$VIMRC``.\r\n\r\nBTW, [vim-rooter](https://github.com/airblade/vim-rooter) seems even more interesting.",
            "created_at": "2019-07-24T20:51:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-514795341",
            "id": 514795341,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDc5NTM0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/514795341/reactions"
            },
            "updated_at": "2019-07-24T20:53:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/514795341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/198999?v=4",
                "events_url": "https://api.github.com/users/mcepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcepl/followers",
                "following_url": "https://api.github.com/users/mcepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcepl",
                "id": 198999,
                "login": "mcepl",
                "node_id": "MDQ6VXNlcjE5ODk5OQ==",
                "organizations_url": "https://api.github.com/users/mcepl/orgs",
                "received_events_url": "https://api.github.com/users/mcepl/received_events",
                "repos_url": "https://api.github.com/users/mcepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcepl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Status\n\n## Done\n\n- ✅ ['exrc' option](https://github.com/neovim/neovim/pull/20956) (plus `:trust`) enables project-local config in a `.nvim.lua` file.\n- ✅ [vim.fs.parents()](https://neovim.io/doc/user/lua.html#vim.fs.parents())\n- ✅ [vim.fs.root()](https://github.com/neovim/neovim/pull/28477)\n\n## Todo\n\n- Enhance 'exrc' to search for `.nvim.lua` (or [`.nvim/` dir](https://github.com/neovim/neovim/issues/33214)) in ancestor of current file?\n- Buffer-local `rootdir` (`workdir`? singular or plural?) option which decides the project (aka workspace) of each buffer.\n    - #33320\n    - Do we also need `get_project_bufs()`?\n- Higher-level command or option for automatically creating and reading `.nvim.lua` \"project\" file and/or session file (implicitly, without `nvim -S`) ?\n- Formalize (document) the \"Project\" concept. (Is it defined by the presence of `.nvim.lua`? `rootdir` on a buffer?)\n    - `.nvim/` directory at workspace root? #33214\n- Should sessions (`:mksession`) more explicitly understand/expose this concept?\n- [project-local shada](https://old.reddit.com/r/neovim/comments/1hkpgar/a_per_project_shadafile/) that \"inherits\" the user-global shada?\n    - https://github.com/neovim/neovim/issues/31890#issuecomment-2574188610\n\nRelated: https://www.reddit.com/r/neovim/comments/zy5s0l/you_dont_need_vimrooter_usually_or_how_to_set_up/",
            "created_at": "2022-12-30T16:24:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-1367994885",
            "id": 1367994885,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "IC_kwDOAPphoM5RifIF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1367994885/reactions"
            },
            "updated_at": "2025-04-23T11:29:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1367994885",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Buffer-local rootdir (workdir? singular or plural?) option which decides the project (aka workspace) of each buffer. \n\nVim has these current-directory \"scopes\": global, tab and window. Doesn't this imply we'll add a buffer scope as well? We'll need a `:bcd`command.",
            "created_at": "2025-04-01T15:18:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-2769730390",
            "id": 2769730390,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "IC_kwDOAPphoM6lFrtW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2769730390/reactions"
            },
            "updated_at": "2025-04-01T15:18:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2769730390",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/77233589?v=4",
                "events_url": "https://api.github.com/users/msaher/events{/privacy}",
                "followers_url": "https://api.github.com/users/msaher/followers",
                "following_url": "https://api.github.com/users/msaher/following{/other_user}",
                "gists_url": "https://api.github.com/users/msaher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/msaher",
                "id": 77233589,
                "login": "msaher",
                "node_id": "MDQ6VXNlcjc3MjMzNTg5",
                "organizations_url": "https://api.github.com/users/msaher/orgs",
                "received_events_url": "https://api.github.com/users/msaher/received_events",
                "repos_url": "https://api.github.com/users/msaher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/msaher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/msaher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/msaher",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If we have a virtual \"project\" viewport, then I would instead think about `:pcd` (thus the project-root idea) instead of `:bcd`. (Currently, some people treat a tabpage as such a (concrete) viewport. The problem is also apparent: a project can only have one tabpage, which sounds sad.)\n\n> - Buffer-local rootdir (workdir? singular or plural?) option which decides the project (aka workspace) of each buffer.\n>   - https://github.com/neovim/neovim/pull/33320\n>   - Do we also need `get_project_bufs()`?\n\nThen, `get_project_bufs()` sounds like a method/property to such virtual viewport. Other concepts could be generalized too. For example, like `:tabdo` we can have `:projdo`. (just a random thought)\n\nOn the other hand, if we consider that some people may still be happy with opening many projects within the same instance (Why not use tmux+vim-session in such cases? One tabpage for each project is not enough for me.), then there may be a case that some buffers are shared by many projects. Then, \"A buffer-local option which decides _the_ project\" doesn't sound correct.\n\nEdit: wording.",
            "created_at": "2025-09-09T08:27:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-3269500589",
            "id": 3269500589,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "IC_kwDOAPphoM7C4J6t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3269500589/reactions"
            },
            "updated_at": "2025-09-11T18:55:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3269500589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I would instead think about `:pcd` (thus the project-root idea)\n\nA project is a structure, not a scope. If `:pcd` means \"change the directory of the current project\", it still needs a scope (global/tab/win). What would it mean to have a \"project\" *scope*?\n\nOTOH, you can set a scope (global/tab/win) to a particular *project* via `:{t,l}cd`, because a project is defined by a *root directory*.",
            "created_at": "2025-09-11T18:53:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-3282252093",
            "id": 3282252093,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "IC_kwDOAPphoM7DozE9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282252093/reactions"
            },
            "updated_at": "2025-09-11T18:58:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282252093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "While my comment is marked hidden, I would like to reply&explain: (hope this would be welcomed)\n\n> If :pcd means \"change the directory of the current project\", it still needs a scope (global/tab/win).\n\nThat's not what I meant (but I got you that `:pcd` looks confusing since \"if `:tcd` means change the tab-local directory of the current tabpage, then `:pcd` would mean `<what you wrote>`\", thus my fault). Instead, I was thinking about `:pcd` for \"switching between projects, by providing a project-root\", e.g. `:pcd <root-of-project-A>` switch the current project to `project-A`. My current plugin for switching between projects without exiting vim is by `:cd`, but that's actually a restriction:\n\n1. A project now has to have a fixed global working directory. Surely, there should be only one global working directory for each project, but imagine that we can change it but not changing the current project. (I haven't thought deeply about this, but it's a \"if we can, why not?\" for me)\n2. With `:pcd`, point 1. is solved. We can do `:cd` within the same project, without triggering changing of project if the project root not is defined by `getcwd(-1,-1)`.\n\nSo, it's like encapsulating the concept of project into a `Session.vim`, and such `:pcd` could be useful for auto-read one (there could be many, thus we need a name for auto-read). My arguments:\n\n1. We already have `Session.vim`. It's an existing thing. I usually created a `Session.vim` for almost every project I was working on to restore every tabpages and windows of the last session. (This should follow your words \"it still needs a scope (global/tab/win)\", correct?)\n2. I heard that some people are using \"each tabpage\" to open a project, but it doesn't work for me. It loses the ability to have many tabpages for each project. I usually create many tabpages for each `Session.vim` (thus each \"project\"). It's a \"if we can, why not?\" for me.\n3. For a very large repo, for example neovim/vim, it's reasonable that one can have many \"projects\", each for a PR something. (mention this just to answer \"if each `Session.vim` is a project, then how do you explain the existing case that I have 3 `Session.vim` for the same project structure?\")\n\nWhat do you think?\n\nEdit: mention `:cd`; fix wording.",
            "created_at": "2025-09-11T21:22:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-3282682563",
            "id": 3282682563,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "IC_kwDOAPphoM7DqcLD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282682563/reactions"
            },
            "updated_at": "2025-09-11T21:51:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282682563",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Instead, I was thinking about `:pcd` for \"switching between projects, by providing a project-root\", e.g. `:pcd <root-of-project-A>` switch the current project to `project-A`\n\nWhat you are saying makes no sense. What does it mean to \"switch a project\", if it doesn't change the global/tab/win CWD? What effect does it have, on which commands, and how will that overlap with the CWD?",
            "created_at": "2025-09-11T22:05:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-3282773750",
            "id": 3282773750,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "IC_kwDOAPphoM7Dqyb2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282773750/reactions"
            },
            "updated_at": "2025-09-11T22:05:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282773750",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What does it mean to \"switch a project\", if it doesn't change the global/tab/win CWD?\n\nIf that triggers a reading of `Session.vim`, the global/tab/win CWD will change accordingly.\n\n> how will that overlap with the CWD?\n\nI was thinking about a mechanism to avoid \"if any third party plugin changes the global current directory, it will trigger the logic I use to switch project (i.e. depending on the global working directory)\". So I ended up thinking about a new, special command, which assumes that a project doesn't need to be defined by a fixed global working directory. It's not possible to require all existing plugins (written when there was no concept of a project) to suddenly eliminate all usages of `:cd`.\n\nIf you use a `.nvim/` directory to identify a project, I would assume that the same quoted line needs to be resolved.",
            "created_at": "2025-09-11T22:10:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-3282784003",
            "id": 3282784003,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "IC_kwDOAPphoM7Dq08D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282784003/reactions"
            },
            "updated_at": "2025-09-11T22:30:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282784003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It's not possible to require all existing plugins (written when there was no concept of a project) to suddenly eliminate all usages of `:cd`.\n\nPlugins never use `:cd` (unless you mean temporary set-and-restore). If they do, then they are already breaking the CWD concept, which is quite prevalent.\n\n> If you use a `.nvim/` directory to identify a project, I would assume that the same quoted line needs to be resolved.\n\nI see `.nvim/` as the user's way of explicitly saying what root dir they want.",
            "created_at": "2025-09-11T22:44:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-3282859801",
            "id": 3282859801,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "IC_kwDOAPphoM7DrHcZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282859801/reactions"
            },
            "updated_at": "2025-09-11T22:44:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282859801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What about the potential problem of buffer-local `rootdir` and or `:bcd`? Like how to efficiently manage so many buffers for some large project. I was thinking about \"how to update these buffer-local options efficiently when some of those may be outdated. Doing it one-by-one is not ideal. If the project concept is encapsulated into a `Session.vim`, the implementation of `get_project_bufs()` is apparent and no need for updating these buffer-local `rootdir` options. Everything within the current session belongs to the current project. If one needs to remove a buffer from a project, one can simply do `:bw <its-bufnr>` so it won't be recorded into the current `Session.vim`. All existing logic that works for the buffer list will also work for this new project concept.\n\nSo the workflow: 1) the user creates a `.nvim.lua` or `.nvim/` for the project-root (and we still use the global working directory for detecting that), and 2) upon detecting, it reads an entry point `Session.vim` something. (so if one wants to have a project, a (simple) `Session.vim` is required.)\n\n---\n\nThere is another potential problem of `:bcd`:\n\n> How on earth would this work with the window local directory.\n> \n> Sounds like local options but worse.\n> ([link to the source](https://github.com/neovim/neovim/issues/33318#issuecomment-2780737092))",
            "created_at": "2025-09-11T23:40:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/8610#issuecomment-3282978997",
            "id": 3282978997,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8610",
            "node_id": "IC_kwDOAPphoM7Drki1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282978997/reactions"
            },
            "updated_at": "2025-09-12T00:09:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3282978997",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 15,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/8610/comments",
    "created_at": "2018-06-21T03:20:21Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/8610/events",
    "html_url": "https://github.com/neovim/neovim/issues/8610",
    "id": 334323233,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim core functionality or code",
            "id": 858327504,
            "name": "core",
            "node_id": "MDU6TGFiZWw4NTgzMjc1MDQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/core"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "workspace/project concept, 'exrc'",
            "id": 8313009301,
            "name": "workspace-project",
            "node_id": "LA_kwDOAPphoM8AAAAB7350lQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/workspace-project"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/8610/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 743,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 633,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-09-15T22:38:51Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUzMzQzMjMyMzM=",
    "number": 8610,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 11,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 11,
        "url": "https://api.github.com/repos/neovim/neovim/issues/8610/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/8610/timeline",
    "title": "Project concept",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-12T00:09:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/8610",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12522143?v=4",
        "events_url": "https://api.github.com/users/ForTheReallys/events{/privacy}",
        "followers_url": "https://api.github.com/users/ForTheReallys/followers",
        "following_url": "https://api.github.com/users/ForTheReallys/following{/other_user}",
        "gists_url": "https://api.github.com/users/ForTheReallys/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ForTheReallys",
        "id": 12522143,
        "login": "ForTheReallys",
        "node_id": "MDQ6VXNlcjEyNTIyMTQz",
        "organizations_url": "https://api.github.com/users/ForTheReallys/orgs",
        "received_events_url": "https://api.github.com/users/ForTheReallys/received_events",
        "repos_url": "https://api.github.com/users/ForTheReallys/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ForTheReallys/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ForTheReallys/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ForTheReallys",
        "user_view_type": "public"
    }
}