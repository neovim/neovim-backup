{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nHello!\n\nThere's many developer tools that support \"Open in Editor\" links to quickly take you to a specific file/line. For example, here's several uris for various editors---it looks like even [macvim](https://github.com/php-debugbar/php-debugbar/blob/cd618a4181186ea627903863164394ed83de097b/src/DebugBar/DataFormatter/HasXdebugLinks.php#L110) is supported:\n\n```php\n$editorLinkTemplates = [\n    'sublime'         => 'subl://open?url=file://%f&line=%l',\n    'textmate'        => 'txmt://open?url=file://%f&line=%l',\n    'emacs'           => 'emacs://open?url=file://%f&line=%l',\n    'macvim'          => 'mvim://open/?url=file://%f&line=%l',\n    'codelite'        => 'codelite://open?file=%f&line=%l',\n    'phpstorm'        => 'phpstorm://open?file=%f&line=%l',\n    'phpstorm-remote' => 'javascript:(()=>{let r=new XMLHttpRequest;'\n        . 'r.open(\\'get\\',\\'http://localhost:63342/api/file/%f:%l\\');r.send();})()',\n    'idea'        => 'idea://open?file=%f&line=%l',\n    'idea-remote' => 'javascript:(()=>{let r=new XMLHttpRequest;'\n        . 'r.open(\\'get\\',\\'http://localhost:63342/api/file/?file=%f&line=%l\\');r.send();})()',\n    'vscode'                 => 'vscode://file/%f:%l',\n    'vscode-insiders'        => 'vscode-insiders://file/%f:%l',\n    'vscode-remote'          => 'vscode://vscode-remote/%f:%l',\n    'vscode-insiders-remote' => 'vscode-insiders://vscode-remote/%f:%l',\n    'vscodium'               => 'vscodium://file/%f:%l',\n    'nova'                   => 'nova://open?path=%f&line=%l',\n    'xdebug'                 => 'xdebug://%f@%l',\n    'atom'                   => 'atom://core/open/file?filename=%f&line=%l',\n    'espresso'               => 'x-espresso://open?filepath=%f&lines=%l',\n    'netbeans'               => 'netbeans://open/?f=%f:%l',\n    'cursor'                 => 'cursor://file/%f:%l',\n];\n```\n\n\nI know you can have many servers, but generally using the first server should be good enough.\n\n### Expected behavior\n\nI'd like to be able to add neovim to the configured editors. When diagnosing a problem, clicking on the provided link would allow me to jump directly to the referenced file/line without me having to manually navigate to the file.\n\nThanks!",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm sure there's a better (native) way to do this, but I was able to get this working via the following:\n\n```bash\nmkdir -p ~/.local/bin\nmkdir -p ~/.local/share/applications\n\n# create the .desktop file for the custom nvim:// scheme\ncat > ~/.local/share/applications/nvim-url-handler.desktop <<EOF\n[Desktop Entry]\nName=Neovim URL Handler\nExec=/home/$USER/.local/bin/nvim-url-handler %u\nType=Application\nNoDisplay=false\nMimeType=x-scheme-handler/nvim;\nEOF\n\n# create the Neovim URL handler script\ncat > ~/.local/bin/nvim-url-handler <<'EOF'\n#!/bin/bash\n\n# Parse the nvim:// URL (e.g. nvim://open?file=/path/to/file&line=123)\nuri=\"$1\"\ndecoded_uri=$(printf '%b' \"${uri//%/\\\\x}\")\n\n# Extract file and line from the query string\nfile=$(echo \"$decoded_uri\" | sed -n 's|.*file=\\([^&]*\\).*|\\1|p')\nline=$(echo \"$decoded_uri\" | sed -n 's|.*line=\\([0-9]*\\).*|\\1|p')\nline=${line:-1}\n\n# Find a running Neovim server socket\nserver=$(find $XDG_RUNTIME_DIR -type s -name 'nvim.*' 2>/dev/null | head -n 1)\n\nif [[ -n \"$server\" ]]; then\n    nvim --server \"$server\" --remote-send \"<C-\\\\><C-N>:tabedit $file<CR>:${line}<CR>\"\nelse\n    x-terminal-emulator -e nvim +$line $file &\nfi\nEOF\n\nchmod +x ~/.local/bin/nvim-url-handler\n\n# register the scheme handler\nxdg-mime default nvim-url-handler.desktop x-scheme-handler/nvim\nupdate-desktop-database ~/.local/share/applications/\n```\n\n\nHowever, I don't want to go around submitting PRs for my own custom `nvim://` scheme without there being official support for this.",
            "created_at": "2025-05-20T12:59:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2894315154",
            "id": 2894315154,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6sg76S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2894315154/reactions"
            },
            "updated_at": "2025-05-20T13:03:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2894315154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4176520?v=4",
                "events_url": "https://api.github.com/users/calebdw/events{/privacy}",
                "followers_url": "https://api.github.com/users/calebdw/followers",
                "following_url": "https://api.github.com/users/calebdw/following{/other_user}",
                "gists_url": "https://api.github.com/users/calebdw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/calebdw",
                "id": 4176520,
                "login": "calebdw",
                "node_id": "MDQ6VXNlcjQxNzY1MjA=",
                "organizations_url": "https://api.github.com/users/calebdw/orgs",
                "received_events_url": "https://api.github.com/users/calebdw/received_events",
                "repos_url": "https://api.github.com/users/calebdw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/calebdw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/calebdw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/calebdw",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "One thing all of those examples have in common that NeoVIM does not share is a common way to launch the GUI from scratch. The missing component is that you also need a terminal, and just assuming one is not generally a good idea. The \"default\" varies by DE and preferences also vary widely. Implementing your own desktop registration for this with your terminal of choice is pretty trivial, but kind of necessarily has to be left up to the end user.\n\nA NeoVIM based GUI (such as my favorite Neovide) would be able to handle this directly. Thats why MacVIM makes an appearance in your prior-art examples.",
            "created_at": "2025-05-20T13:07:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2894343204",
            "id": 2894343204,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6shCwk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2894343204/reactions"
            },
            "updated_at": "2025-05-20T13:07:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2894343204",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/173595?v=4",
                "events_url": "https://api.github.com/users/alerque/events{/privacy}",
                "followers_url": "https://api.github.com/users/alerque/followers",
                "following_url": "https://api.github.com/users/alerque/following{/other_user}",
                "gists_url": "https://api.github.com/users/alerque/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alerque",
                "id": 173595,
                "login": "alerque",
                "node_id": "MDQ6VXNlcjE3MzU5NQ==",
                "organizations_url": "https://api.github.com/users/alerque/orgs",
                "received_events_url": "https://api.github.com/users/alerque/received_events",
                "repos_url": "https://api.github.com/users/alerque/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alerque/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alerque/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alerque",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The missing component is that you also need a terminal, and just assuming one is not generally a good idea. The \"default\" varies by DE and preferences also vary widely.\n\nI would think it's a safe assumption that the user has a terminal emulator if nvim is installed? Wrappers/aliases like `x-terminal-emulator` help abstract away the particular terminal (default can be customized) used (on Debian based distros at least, I assume there's similar aliases on other distros).\n\n> Implementing your own desktop registration for this with your terminal of choice is pretty trivial, but kind of necessarily has to be left up to the end user.\n\nIt is pretty trivial, but perhaps the `nvim://` schema could be formalized in the community with sensible defaults along with instructions on how to configure/override the default behaviour? \n\nSome tools allow you to customize the exact command used to open a file, however, others (like [php-debugbar](https://github.com/php-debugbar/php-debugbar) from the example above) do not and I would have to submit a PR to add support for either: 1) a specific `nvim://` scheme or 2) the ability to completely customize the uri. Obviously it makes no sense for me to hardcode a `nvim://` scheme that I just made up, but by the same token it also doesn't make sense to have everyone set this up themselves...",
            "created_at": "2025-05-20T13:30:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2894421742",
            "id": 2894421742,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6shV7u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2894421742/reactions"
            },
            "updated_at": "2025-05-20T13:30:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2894421742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4176520?v=4",
                "events_url": "https://api.github.com/users/calebdw/events{/privacy}",
                "followers_url": "https://api.github.com/users/calebdw/followers",
                "following_url": "https://api.github.com/users/calebdw/following{/other_user}",
                "gists_url": "https://api.github.com/users/calebdw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/calebdw",
                "id": 4176520,
                "login": "calebdw",
                "node_id": "MDQ6VXNlcjQxNzY1MjA=",
                "organizations_url": "https://api.github.com/users/calebdw/orgs",
                "received_events_url": "https://api.github.com/users/calebdw/received_events",
                "repos_url": "https://api.github.com/users/calebdw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/calebdw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/calebdw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/calebdw",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "thanks @calebdw for the idea on how to handle this uri schema, went ahead and added support for it to my own nvim terminal wrapper [xterm-nvim](https://github.com/eylles/xterm-nvim)",
            "created_at": "2025-05-24T01:30:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2906260990",
            "id": 2906260990,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6tOgX-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2906260990/reactions"
            },
            "updated_at": "2025-05-24T01:30:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2906260990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33670677?v=4",
                "events_url": "https://api.github.com/users/eylles/events{/privacy}",
                "followers_url": "https://api.github.com/users/eylles/followers",
                "following_url": "https://api.github.com/users/eylles/following{/other_user}",
                "gists_url": "https://api.github.com/users/eylles/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eylles",
                "id": 33670677,
                "login": "eylles",
                "node_id": "MDQ6VXNlcjMzNjcwNjc3",
                "organizations_url": "https://api.github.com/users/eylles/orgs",
                "received_events_url": "https://api.github.com/users/eylles/received_events",
                "repos_url": "https://api.github.com/users/eylles/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eylles/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eylles/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eylles",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "to add onto the actual conversation, how about instead of wanting to proliferate a lot more schemas, why not just support the `macvim` specific schema and a more generic `vim` schema to allow for easier interoperability with classic vim and any existing and yet to be developed vim and nvim UI program like gvim and the many implementations of \"gnvim\" that have come in recent years.\n\nSo the only 2 schemas that software would need to worry about would be:\n```\n# generic vim uri schema, to be supported at\n# discretion by any vim implementation/wrapper\nvim://open?uri=file:///path/to/file&line=123\n\n# macvim schema, supported by macvim and any\n# vim implementation which wants to support\n# this specific uri schema\nmvim://open/?url=file:///path/to/file&line=123\n```",
            "created_at": "2025-05-25T00:17:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2907519310",
            "id": 2907519310,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6tTTlO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2907519310/reactions"
            },
            "updated_at": "2025-05-25T00:17:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2907519310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33670677?v=4",
                "events_url": "https://api.github.com/users/eylles/events{/privacy}",
                "followers_url": "https://api.github.com/users/eylles/followers",
                "following_url": "https://api.github.com/users/eylles/following{/other_user}",
                "gists_url": "https://api.github.com/users/eylles/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eylles",
                "id": 33670677,
                "login": "eylles",
                "node_id": "MDQ6VXNlcjMzNjcwNjc3",
                "organizations_url": "https://api.github.com/users/eylles/orgs",
                "received_events_url": "https://api.github.com/users/eylles/received_events",
                "repos_url": "https://api.github.com/users/eylles/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eylles/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eylles/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eylles",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What if a user has both nvim and macvim installed and wants to open it with one and not the other?",
            "created_at": "2025-05-25T00:54:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2907533848",
            "id": 2907533848,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6tTXIY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2907533848/reactions"
            },
            "updated_at": "2025-05-25T00:54:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2907533848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4176520?v=4",
                "events_url": "https://api.github.com/users/calebdw/events{/privacy}",
                "followers_url": "https://api.github.com/users/calebdw/followers",
                "following_url": "https://api.github.com/users/calebdw/following{/other_user}",
                "gists_url": "https://api.github.com/users/calebdw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/calebdw",
                "id": 4176520,
                "login": "calebdw",
                "node_id": "MDQ6VXNlcjQxNzY1MjA=",
                "organizations_url": "https://api.github.com/users/calebdw/orgs",
                "received_events_url": "https://api.github.com/users/calebdw/received_events",
                "repos_url": "https://api.github.com/users/calebdw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/calebdw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/calebdw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/calebdw",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "fair\n    on linux we have the x-scheme-handler associations, which can be set with xdg-mime, will assume mac os must have a similar mechanism to handle uri schemas, so in case a user has macvim and neovim let's say macvim was installed first and set to handle both the mvim and vim uri schemas, then neovim was installed with a schema handler for the generic vim schema then when a program calls the `mvim://` schema macvim is used but when the generic `vim://` schema is called the handler for neovim will be invoked.\n\nnow just throwing this here, there is nothing stopping debian from creating their own generic `editor://` schema uri, since they already implement the alternatives system, patching in support for the generic schema on every piece of software they distribute, and provide schema handlers for the editors that do not have them natively, so in this example situation the php-debugbar packaged in debian would open the file with the generic `editor://` schema, a desktop file like `editor-uri-schema-handler.desktop` will be associated with said schema and inside would specify to exec a `x-editor-uri-handler` program, which will be a debianism in the same vein of the x-terminal-emulador, being just a symlink to the handler for the editor set to default by the alternatives system, handler which in debian fashion if not provided by the editor the debian developers will provide one written in perl, python or shell.",
            "created_at": "2025-05-25T02:27:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2907564529",
            "id": 2907564529,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6tTenx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2907564529/reactions"
            },
            "updated_at": "2025-05-25T02:27:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2907564529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33670677?v=4",
                "events_url": "https://api.github.com/users/eylles/events{/privacy}",
                "followers_url": "https://api.github.com/users/eylles/followers",
                "following_url": "https://api.github.com/users/eylles/following{/other_user}",
                "gists_url": "https://api.github.com/users/eylles/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eylles",
                "id": 33670677,
                "login": "eylles",
                "node_id": "MDQ6VXNlcjMzNjcwNjc3",
                "organizations_url": "https://api.github.com/users/eylles/orgs",
                "received_events_url": "https://api.github.com/users/eylles/received_events",
                "repos_url": "https://api.github.com/users/eylles/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eylles/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eylles/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eylles",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can this be implemented as a patch to the nvim.desktop file? https://github.com/neovim/neovim/blob/c973c7ae6f5670f00f1054123cae81c6b767a3c8/runtime/nvim.desktop#L1",
            "created_at": "2025-05-26T16:04:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2910181726",
            "id": 2910181726,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6tddle",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2910181726/reactions"
            },
            "updated_at": "2025-05-26T16:04:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2910181726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk, possibly! If Neovim itself contains the logic to parse the nvim:// path",
            "created_at": "2025-05-26T16:17:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2910206353",
            "id": 2910206353,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6tdjmR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2910206353/reactions"
            },
            "updated_at": "2025-05-26T16:17:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2910206353",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4176520?v=4",
                "events_url": "https://api.github.com/users/calebdw/events{/privacy}",
                "followers_url": "https://api.github.com/users/calebdw/followers",
                "following_url": "https://api.github.com/users/calebdw/following{/other_user}",
                "gists_url": "https://api.github.com/users/calebdw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/calebdw",
                "id": 4176520,
                "login": "calebdw",
                "node_id": "MDQ6VXNlcjQxNzY1MjA=",
                "organizations_url": "https://api.github.com/users/calebdw/orgs",
                "received_events_url": "https://api.github.com/users/calebdw/received_events",
                "repos_url": "https://api.github.com/users/calebdw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/calebdw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/calebdw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/calebdw",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sure, add it to `vim.uri`",
            "created_at": "2025-05-27T12:55:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2912414151",
            "id": 2912414151,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6tl-nH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912414151/reactions"
            },
            "updated_at": "2025-05-27T12:55:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2912414151",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I will look into doing that! We just need to standardize the uri format first---I propose something similar to the `emacs` one shown above:\n\n```\nnvim://open?url=file://%f&line=%l\n```\n\nThoughts?",
            "created_at": "2025-05-27T15:39:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2913054825",
            "id": 2913054825,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6tobBp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2913054825/reactions"
            },
            "updated_at": "2025-05-27T15:39:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2913054825",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4176520?v=4",
                "events_url": "https://api.github.com/users/calebdw/events{/privacy}",
                "followers_url": "https://api.github.com/users/calebdw/followers",
                "following_url": "https://api.github.com/users/calebdw/following{/other_user}",
                "gists_url": "https://api.github.com/users/calebdw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/calebdw",
                "id": 4176520,
                "login": "calebdw",
                "node_id": "MDQ6VXNlcjQxNzY1MjA=",
                "organizations_url": "https://api.github.com/users/calebdw/orgs",
                "received_events_url": "https://api.github.com/users/calebdw/received_events",
                "repos_url": "https://api.github.com/users/calebdw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/calebdw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/calebdw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/calebdw",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm really glad I found this issue before starting to implement my own solution. Thank you for your work on this!\n\n@calebdw, have you considered using `edit` instead of `open` to align with Neovim commands like `:e[dit]`? I believe there are valid arguments for both `open` and `edit`, but `edit` might be more intuitive for users familiar with Neovim.\n\nI might be missing something, but could you clarify the purpose of the `url` parameter? It seems that the only thing editable from a browser would be a file, so perhaps just a file path would suffice. Regarding the `line` parameter, I think it may not be feasible or logical to include a `+` in this format, so a deviation from the standard Neovim CLI options seems reasonable to me. Additionally, I would assume that the `line` parameter should be optional.\n\nTo clarify, my proposed format:\n`nvim://edit?file=%f&line=10`\nwould navigate directly to line 10 of the specified file.\n\nLastly, I’m curious about how this would handle opening multiple files. This could be a topic for a future issue. Adding multiple `file` parameters could mimic basic HTTP(S) protocols, as in submitting list parameters in forms. Also in this case the `line` parameter might be ignored, unless you wanted to go to line 10 of all the files which seems like and odd use case to me. \n\nThank you for considering my thoughts!",
            "created_at": "2025-06-18T07:34:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-2983030611",
            "id": 2983030611,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6xzW9T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2983030611/reactions"
            },
            "updated_at": "2025-06-18T07:34:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2983030611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1182438?v=4",
                "events_url": "https://api.github.com/users/Archangel33/events{/privacy}",
                "followers_url": "https://api.github.com/users/Archangel33/followers",
                "following_url": "https://api.github.com/users/Archangel33/following{/other_user}",
                "gists_url": "https://api.github.com/users/Archangel33/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Archangel33",
                "id": 1182438,
                "login": "Archangel33",
                "node_id": "MDQ6VXNlcjExODI0Mzg=",
                "organizations_url": "https://api.github.com/users/Archangel33/orgs",
                "received_events_url": "https://api.github.com/users/Archangel33/received_events",
                "repos_url": "https://api.github.com/users/Archangel33/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Archangel33/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Archangel33/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Archangel33",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> It seems that the only thing editable from a browser would be a file, so perhaps just a file path would suffice.\n\nNeovim might not support this yet, but many modern apps handle a wider range of URI schemes like `ftp://`, `nfs://`, or `trash://`, often through Gio.\n\nWhile these technically still refer to files or mountpoints, they make life a lot easier when you use udisks to handle mounting and your paths start looking like this: `/run/user/1000/gvfs/nfs:host=xxx.xxx.xxx.xxx,prefix=%2Fvolume1%2Fvideos`.\n\nSo keeping the URI format generic would be more future-proof in this regard. Personally, I also think it would be nice to use the same format as Emacs or especially MacVim.",
            "created_at": "2025-06-27T23:55:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-3014671183",
            "id": 3014671183,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6zsDtP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3014671183/reactions"
            },
            "updated_at": "2025-06-27T23:56:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3014671183",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41543402?v=4",
                "events_url": "https://api.github.com/users/gwuen/events{/privacy}",
                "followers_url": "https://api.github.com/users/gwuen/followers",
                "following_url": "https://api.github.com/users/gwuen/following{/other_user}",
                "gists_url": "https://api.github.com/users/gwuen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gwuen",
                "id": 41543402,
                "login": "gwuen",
                "node_id": "MDQ6VXNlcjQxNTQzNDAy",
                "organizations_url": "https://api.github.com/users/gwuen/orgs",
                "received_events_url": "https://api.github.com/users/gwuen/received_events",
                "repos_url": "https://api.github.com/users/gwuen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gwuen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gwuen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gwuen",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> would be nice to use the same format as Emacs or especially MacVim.\n\nwhere is that documented",
            "created_at": "2025-06-28T00:01:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-3014680554",
            "id": 3014680554,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6zsF_q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3014680554/reactions"
            },
            "updated_at": "2025-06-28T00:01:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3014680554",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> where is that documented\n\nI took that from the list @calebdw originally posted with the issue. But here's the official doc for MacVim: https://macvim.org/docs/gui_mac.txt.html#mvim%3A%2F%2F",
            "created_at": "2025-06-28T00:25:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/34102#issuecomment-3014714143",
            "id": 3014714143,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34102",
            "node_id": "IC_kwDOAPphoM6zsOMf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3014714143/reactions"
            },
            "updated_at": "2025-06-28T00:25:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3014714143",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41543402?v=4",
                "events_url": "https://api.github.com/users/gwuen/events{/privacy}",
                "followers_url": "https://api.github.com/users/gwuen/followers",
                "following_url": "https://api.github.com/users/gwuen/following{/other_user}",
                "gists_url": "https://api.github.com/users/gwuen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gwuen",
                "id": 41543402,
                "login": "gwuen",
                "node_id": "MDQ6VXNlcjQxNTQzNDAy",
                "organizations_url": "https://api.github.com/users/gwuen/orgs",
                "received_events_url": "https://api.github.com/users/gwuen/received_events",
                "repos_url": "https://api.github.com/users/gwuen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gwuen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gwuen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gwuen",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 15,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34102/comments",
    "created_at": "2025-05-20T12:18:38Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34102/events",
    "html_url": "https://github.com/neovim/neovim/issues/34102",
    "id": 3076821835,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 103834742,
            "name": "gui",
            "node_id": "MDU6TGFiZWwxMDM4MzQ3NDI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gui"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "packaging and distributing Nvim to users",
            "id": 124686703,
            "name": "distribution",
            "node_id": "MDU6TGFiZWwxMjQ2ODY3MDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/distribution"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34102/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 725,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 634,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-06-30T13:22:58Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM63ZJNL",
    "number": 34102,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34102/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34102/timeline",
    "title": "`nvim://` uri scheme for opening files",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-28T00:25:03Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34102",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4176520?v=4",
        "events_url": "https://api.github.com/users/calebdw/events{/privacy}",
        "followers_url": "https://api.github.com/users/calebdw/followers",
        "following_url": "https://api.github.com/users/calebdw/following{/other_user}",
        "gists_url": "https://api.github.com/users/calebdw/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/calebdw",
        "id": 4176520,
        "login": "calebdw",
        "node_id": "MDQ6VXNlcjQxNzY1MjA=",
        "organizations_url": "https://api.github.com/users/calebdw/orgs",
        "received_events_url": "https://api.github.com/users/calebdw/received_events",
        "repos_url": "https://api.github.com/users/calebdw/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/calebdw/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/calebdw/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/calebdw",
        "user_view_type": "public"
    }
}