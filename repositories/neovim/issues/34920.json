{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nPresently, the textobject mapping for comments conflicts with the visual mode mapping for toggling comments (both are `gc`). Therefore its not possible to highlight a comment with something like `v<comment textobject mapping>`.\n\n### Expected behavior\n\nIf there isn't a conflict then its possible to select a comment in visual mode. This is useful for any visual-based operations such as searching with `/\\%V`, or changing the visual selection before performing an operation.\n\ne.g. In mini.comment there's an option to change the textobject mapping and the textobject works in visual mode if it doesn't conflict with the visual mode comment toggle.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think `ac` is a good choice, since that is what Vim use too https://github.com/vim/vim/blob/1341176e7b800238b30a137c1ea1a31ca2c3d488/runtime/pack/dist/opt/comment/doc/comment.txt#L38-L41",
            "created_at": "2025-07-13T18:28:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/34920#issuecomment-3067229668",
            "id": 3067229668,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34920",
            "node_id": "IC_kwDOAPphoM620jXk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067229668/reactions"
            },
            "updated_at": "2025-07-13T18:28:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067229668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Text objects always have \"i\" or \"a\" in front of them, I'm guessing this wasn't fully implemented. So `vigc` and `vagc` would be the visual-mode text object.\n\n`gc` is what [vim-commentary uses](https://github.com/tpope/vim-commentary/blob/64a654ef4a20db1727938338310209b6a63f60c9/doc/commentary.txt#L22).\n\nI think we should reserve `c` for a rainy day. Not worth occupying that for comments.",
            "created_at": "2025-07-13T19:43:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/34920#issuecomment-3067264790",
            "id": 3067264790,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34920",
            "node_id": "IC_kwDOAPphoM620r8W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067264790/reactions"
            },
            "updated_at": "2025-07-13T19:43:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067264790",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "the documentation for the textobject states that the textobject only works in operator pending mode\n\nhttps://github.com/neovim/neovim/blob/444a8b3ec6375b03f1483a97095a00b067a499ec/runtime/doc/various.txt#L627-L631\n\nmini.comment allows configuring the textobject binding, which solves the problem of collisions and/or taking an important letter, but I don't know if this is a good fit for base neovim\n\nhttps://github.com/echasnovski/mini.comment?tab=readme-ov-file#default-config",
            "created_at": "2025-07-13T19:55:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/34920#issuecomment-3067269976",
            "id": 3067269976,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34920",
            "node_id": "IC_kwDOAPphoM620tNY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067269976/reactions"
            },
            "updated_at": "2025-07-13T19:59:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067269976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/63375392?v=4",
                "events_url": "https://api.github.com/users/beaumccartney/events{/privacy}",
                "followers_url": "https://api.github.com/users/beaumccartney/followers",
                "following_url": "https://api.github.com/users/beaumccartney/following{/other_user}",
                "gists_url": "https://api.github.com/users/beaumccartney/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/beaumccartney",
                "id": 63375392,
                "login": "beaumccartney",
                "node_id": "MDQ6VXNlcjYzMzc1Mzky",
                "organizations_url": "https://api.github.com/users/beaumccartney/orgs",
                "received_events_url": "https://api.github.com/users/beaumccartney/received_events",
                "repos_url": "https://api.github.com/users/beaumccartney/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/beaumccartney/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/beaumccartney/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/beaumccartney",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That's just a current limitation. The current way that it acts is actually a \"motion\", not a \"text object\". If it were a text object, instead of `dgc` it would support `dagc` and `digc`.",
            "created_at": "2025-07-13T19:57:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/34920#issuecomment-3067270620",
            "id": 3067270620,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34920",
            "node_id": "IC_kwDOAPphoM620tXc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067270620/reactions"
            },
            "updated_at": "2025-07-13T19:57:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067270620",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That's just a current limitation. The current way that it acts is actually a \"motion\", not a \"text object\". If it were a text object, instead of `dgc` it would support `dagc` and `digc`.\n\nThis is more a question of semantics, but having `a` and `i` versions should not be a hard requirement for a mapping to be considered a textobject:\n- Textobject acts on a region independent of a cursor position. Like `iw`, `gn`, and others.\n- Motion acts on a region with one of the edges being cursor position. Like `t`, `f`, `/`, and other motions.\n\n> Text objects always have \"i\" or \"a\" in front of them, I'm guessing this wasn't fully implemented. So `vigc` and `vagc` would be the visual-mode text object.\n> \n> `gc` is what [vim-commentary uses](https://github.com/tpope/vim-commentary/blob/64a654ef4a20db1727938338310209b6a63f60c9/doc/commentary.txt#L22).\n\nRegarding built-in commenting, the objective was to have as close public API to 'tpope/vim-commentary' as possible. And it indeed doesn't allow visually selecting a comment textobject. Having visual mode textobject is, of course, possible but I find it confusing to have separate built-in keys for Visual and Operator-pending mode textobjects.\n\nA more flexible way forward here might be to expose a way for users to manually map it. Either via a dedicated `vim.comment` Lua module methods or a `<Plug>` mapping.\n\n---\n\nRegarding `agc` and `igc`, there already was some discussion about it in #29428. The main pain point here would be that this choice will make `ag` / `ig` textobjects virtually unusable on user's side (because typing them will make Nvim wait for possible `c`). So it is a matter of occupying more \"mapping space\" than it seems. It might make sense to add that only if there are other plans to use it as a \"namespace\" for other built-in textobects (like `gr` for LSP based mappings).",
            "created_at": "2025-07-15T12:57:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/34920#issuecomment-3073500087",
            "id": 3073500087,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34920",
            "node_id": "IC_kwDOAPphoM63MeO3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3073500087/reactions"
            },
            "updated_at": "2025-07-15T12:57:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3073500087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Either via a dedicated `vim.comment` Lua module methods or a `<Plug>` mapping.\n\n+1 for `<Plug>` , or also fine with closing this as wontfix",
            "created_at": "2025-07-16T03:16:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/34920#issuecomment-3076574522",
            "id": 3076574522,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34920",
            "node_id": "IC_kwDOAPphoM63YM06",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3076574522/reactions"
            },
            "updated_at": "2025-07-16T03:16:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3076574522",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34920/comments",
    "created_at": "2025-07-13T18:16:52Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34920/events",
    "html_url": "https://github.com/neovim/neovim/issues/34920",
    "id": 3226711946,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 7015106619,
            "name": "comment",
            "node_id": "LA_kwDOAPphoM8AAAABoiIIOw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/comment"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34920/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 286,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 343,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-21T07:38:58Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM7AU7eK",
    "number": 34920,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34920/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34920/timeline",
    "title": "text object for comments that works in visual mode",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-16T03:16:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34920",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/63375392?v=4",
        "events_url": "https://api.github.com/users/beaumccartney/events{/privacy}",
        "followers_url": "https://api.github.com/users/beaumccartney/followers",
        "following_url": "https://api.github.com/users/beaumccartney/following{/other_user}",
        "gists_url": "https://api.github.com/users/beaumccartney/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/beaumccartney",
        "id": 63375392,
        "login": "beaumccartney",
        "node_id": "MDQ6VXNlcjYzMzc1Mzky",
        "organizations_url": "https://api.github.com/users/beaumccartney/orgs",
        "received_events_url": "https://api.github.com/users/beaumccartney/received_events",
        "repos_url": "https://api.github.com/users/beaumccartney/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/beaumccartney/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/beaumccartney/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/beaumccartney",
        "user_view_type": "public"
    }
}