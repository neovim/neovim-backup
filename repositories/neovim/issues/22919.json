{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nAssert failure when resizing after multiline messages and calling screenstring() in VimResized\r\n\r\n### Steps to reproduce\r\n\r\n1. Run `nvim --clean`\r\n2. Source the following file:\r\n```vim\r\nautocmd VimResized * call screenstring(1, 1)\r\necho \"abc\\ndef\"\r\nset lines=10\r\n```\r\n3. ``message.c:2429: void msg_scroll_flush(void): Assertion `row >= 0' failed.``\r\n```\r\n                Stack trace of thread 185633:\r\n                #0  0x00007feaeb42b8ec n/a (libc.so.6 + 0x878ec)\r\n                #1  0x00007feaeb3dcea8 raise (libc.so.6 + 0x38ea8)\r\n                #2  0x00007feaeb3c653d abort (libc.so.6 + 0x2253d)\r\n                #3  0x00007feaeb3c645c n/a (libc.so.6 + 0x2245c)\r\n                #4  0x00007feaeb3d59f6 __assert_fail (libc.so.6 + 0x319f6)\r\n                #5  0x000055f4643b3932 msg_scroll_flush (nvim + 0x1d7932)\r\n                #6  0x000055f4642e19f6 screenchar_adjust (nvim + 0x1059f6)\r\n                #7  0x000055f464303453 f_screenstring (nvim + 0x127453)\r\n                #8  0x000055f4642f200f call_internal_func (nvim + 0x11600f)\r\n                #9  0x000055f464310556 call_func (nvim + 0x134556)\r\n                #10 0x000055f464310968 get_func_tv (nvim + 0x134968)\r\n                #11 0x000055f46431472b ex_call (nvim + 0x13872b)\r\n                #12 0x000055f46432c5a4 execute_cmd0 (nvim + 0x1505a4)\r\n                #13 0x000055f46432e42a do_one_cmd (nvim + 0x15242a)\r\n                #14 0x000055f46432f008 do_cmdline (nvim + 0x153008)\r\n                #15 0x000055f46429d3d4 apply_autocmds_group (nvim + 0xc13d4)\r\n                #16 0x000055f46429d883 apply_autocmds (nvim + 0xc1883)\r\n                #17 0x000055f4642d1488 screen_resize (nvim + 0xf5488)\r\n                #18 0x000055f4643e3c83 set_num_option (nvim + 0x207c83)\r\n                #19 0x000055f4643e58a2 do_set_num (nvim + 0x2098a2)\r\n                #20 0x000055f4643e5aa9 do_set_option_value (nvim + 0x209aa9)\r\n                #21 0x000055f4643e5fe4 do_set_option (nvim + 0x209fe4)\r\n                #22 0x000055f4643e60c9 do_set (nvim + 0x20a0c9)\r\n                #23 0x000055f4643e6306 ex_set (nvim + 0x20a306)\r\n                #24 0x000055f46432c5a4 execute_cmd0 (nvim + 0x1505a4)\r\n                #25 0x000055f46432e42a do_one_cmd (nvim + 0x15242a)\r\n                #26 0x000055f46432f008 do_cmdline (nvim + 0x153008)\r\n                #27 0x000055f464438c9a do_source (nvim + 0x25cc9a)\r\n                #28 0x000055f464439204 cmd_source (nvim + 0x25d204)\r\n                #29 0x000055f464439247 ex_source (nvim + 0x25d247)\r\n                #30 0x000055f46432c5a4 execute_cmd0 (nvim + 0x1505a4)\r\n                #31 0x000055f46432e42a do_one_cmd (nvim + 0x15242a)\r\n                #32 0x000055f46432f008 do_cmdline (nvim + 0x153008)\r\n                #33 0x000055f4643d04b8 nv_colon (nvim + 0x1f44b8)\r\n                #34 0x000055f4643cf323 normal_execute (nvim + 0x1f3323)\r\n                #35 0x000055f464468f85 state_enter (nvim + 0x28cf85)\r\n                #36 0x000055f4643c7993 normal_enter (nvim + 0x1eb993)\r\n                #37 0x000055f464254c41 main (nvim + 0x78c41)\r\n                #38 0x00007feaeb3c7790 n/a (libc.so.6 + 0x23790)\r\n                #39 0x00007feaeb3c784a __libc_start_main (libc.so.6 + 0x2384a)\r\n                #40 0x000055f464250045 _start (nvim + 0x74045)\r\n                ELF object binary architecture: AMD x86-64\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo assert failure\r\n\r\n### Neovim version (nvim -v)\r\n\r\nv0.9.0-dev-1357+g68d6ca794\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nNo\r\n\r\n### Operating system/version\r\n\r\nArch Linux\r\n\r\n### Terminal name/version\r\n\r\nkitty 0.27.1\r\n\r\n### $TERM environment variable\r\n\r\nxterm-kitty\r\n\r\n### Installation\r\n\r\nbuild from repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Actually anything that calls `msg_scroll_flush()` can cause this crash, including `:redraw` and `:sleep`.",
            "created_at": "2023-04-07T09:33:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/22919#issuecomment-1500118957",
            "id": 1500118957,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22919",
            "node_id": "IC_kwDOAPphoM5Zaf-t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1500118957/reactions"
            },
            "updated_at": "2023-04-07T09:33:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1500118957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@zeertzjq can you check if the following test reproduces this bug or exposes some other?\r\n```lua\r\nlocal configDir = vim.fn.expand('<sfile>:p:h')\r\n\r\nvim.env['XDG_CONFIG_HOME'] = configDir\r\nvim.env['XDG_DATA_HOME'] = configDir .. '/.xdg/data'\r\nvim.env['XDG_STATE_HOME'] = configDir .. '/.xdg/state'\r\nvim.env['XDG_CACHE_HOME'] = configDir .. '/.xdg/cache'\r\nlocal stdPathConfig = vim.fn.stdpath('config')\r\n\r\nvim.opt.runtimepath:prepend(stdPathConfig)\r\nvim.opt.packpath:prepend(stdPathConfig)\r\nlocal plugins_path = vim.fn.fnamemodify('plugins/', ':p')\r\n\r\nfor name, url in pairs {\r\n  ['nui'] = 'https://github.com/MunifTanjim/nui.nvim',\r\n  ['noice.nvim'] = 'https://github.com/folke/noice.nvim',\r\n} do\r\n  local install_path = plugins_path .. name\r\n  if vim.fn.isdirectory(install_path) == 0 then\r\n    vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\r\n  end\r\n  vim.opt.runtimepath:append(install_path)\r\nend\r\n\r\nrequire('noice').setup({})\r\nvim.notify_once('\\n')\r\n```\r\n\r\nI try to find a similar issue but it's not so easy. \r\n\r\n```cpp\r\n                Stack trace of thread 485218:                                                                                                                                                                                                   \r\n                #0  0x00007fa249def0ec __pthread_kill_implementation (libc.so.6 + 0x8a0ec)                                                                                                                                                      \r\n                #1  0x00007fa249da1462 __GI_raise (libc.so.6 + 0x3c462)                                                                                                                                                                         \r\n                #2  0x00007fa249d8b4b2 __GI_abort (libc.so.6 + 0x264b2)                                                                                                                                                                         \r\n                #3  0x00007fa249d8b3d5 __assert_fail_base (libc.so.6 + 0x263d5)                                                                                                                                                                 \r\n                #4  0x00007fa249d9a3a2 __assert_fail (libc.so.6 + 0x353a2)                                                                                                                                                                      \r\n                #5  0x00005607cf7d3df1 msg_scroll_flush (nvim + 0x1ebdf1)                                                                                                                                                                       \r\n                #6  0x00005607cf8b5cfb ui_flush (nvim + 0x2cdcfb)\r\n                #7  0x00005607cf6f59e5 screen_resize (nvim + 0x10d9e5)\r\n                #8  0x00005607cf8b4947 ui_refresh (nvim + 0x2cc947)\r\n                #9  0x00005607cf8b6932 ui_add_cb (nvim + 0x2ce932)\r\n                #10 0x00005607cf7a50ea n/a (nvim + 0x1bd0ea) \r\n                #11 0x00007fa24a030a26 n/a (libluajit-5.1.so.2 + 0xaa26)\r\n                #12 0x00007fa24a08b1ee lua_pcall (libluajit-5.1.so.2 + 0x651ee)\r\n                #13 0x00005607cf79f6d8 nlua_pcall (nvim + 0x1b76d8)\r\n                #14 0x00005607cf7a3ff1 nlua_call_ref (nvim + 0x1bbff1)\r\n                #15 0x00005607cf6c1231 n/a (nvim + 0xd9231)\r\n                #16 0x00005607cf6c338f getnextac (nvim + 0xdb38f)\r\n                #17 0x00005607cf751ec3 do_cmdline (nvim + 0x169ec3)\r\n                #18 0x00005607cf6c1f49 apply_autocmds_group (nvim + 0xd9f49)\r\n                #19 0x00005607cf6c25ff apply_autocmds (nvim + 0xda5ff)\r\n                #20 0x00005607cf679077 main (nvim + 0x91077) \r\n                #21 0x00007fa249d8c6ca __libc_start_call_main (libc.so.6 + 0x276ca)\r\n                #22 0x00007fa249d8c785 __libc_start_main_impl (libc.so.6 + 0x27785)\r\n                #23 0x00005607cf674685 _start (nvim + 0x8c685)\r\n                 \r\n                Stack trace of thread 485220:\r\n                #0  0x0000000000000000 n/a (n/a + 0x0)\r\n                ELF object binary architecture: AMD x86-64\r\n```",
            "created_at": "2023-09-09T15:16:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/22919#issuecomment-1712534927",
            "id": 1712534927,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22919",
            "node_id": "IC_kwDOAPphoM5mEzWP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1712534927/reactions"
            },
            "updated_at": "2023-09-09T15:16:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1712534927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Another",
            "created_at": "2023-09-09T21:02:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/22919#issuecomment-1712610390",
            "id": 1712610390,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22919",
            "node_id": "IC_kwDOAPphoM5mFFxW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1712610390/reactions"
            },
            "updated_at": "2023-09-09T21:02:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1712610390",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I get a similar error (but the assertion is `to_scroll >= 0`).\r\n\r\nI sometimes get it when I edit a fennel file, but only with \"fennel.vim\" installed.\r\n\r\nI can reproduce it without opening a file when I add `-V2` to the command line. It goes away with `-u NONE`, so it's still something in my config causing it. Running v0.10.0-dev from the ubuntu unstable ppa.",
            "created_at": "2023-10-02T15:42:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/22919#issuecomment-1743259502",
            "id": 1743259502,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22919",
            "node_id": "IC_kwDOAPphoM5n6Adu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1743259502/reactions"
            },
            "updated_at": "2023-10-02T15:42:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1743259502",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/497310?v=4",
                "events_url": "https://api.github.com/users/Grazfather/events{/privacy}",
                "followers_url": "https://api.github.com/users/Grazfather/followers",
                "following_url": "https://api.github.com/users/Grazfather/following{/other_user}",
                "gists_url": "https://api.github.com/users/Grazfather/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Grazfather",
                "id": 497310,
                "login": "Grazfather",
                "node_id": "MDQ6VXNlcjQ5NzMxMA==",
                "organizations_url": "https://api.github.com/users/Grazfather/orgs",
                "received_events_url": "https://api.github.com/users/Grazfather/received_events",
                "repos_url": "https://api.github.com/users/Grazfather/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Grazfather/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Grazfather/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Grazfather",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Possibly related issues: #31002 #32319",
            "created_at": "2025-02-14T02:20:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/22919#issuecomment-2658113988",
            "id": 2658113988,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22919",
            "node_id": "IC_kwDOAPphoM6eb5nE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2658113988/reactions"
            },
            "updated_at": "2025-02-14T02:20:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2658113988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/22919/comments",
    "created_at": "2023-04-07T09:25:34Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/22919/events",
    "html_url": "https://github.com/neovim/neovim/issues/22919",
    "id": 1658587457,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains minimal reproducing steps",
            "id": 435851959,
            "name": "has:repro",
            "node_id": "MDU6TGFiZWw0MzU4NTE5NTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:repro"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "UI messages, log messages, errors, warnings, feedback",
            "id": 5637083595,
            "name": "messages",
            "node_id": "LA_kwDOAPphoM8AAAABT_8Ryw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/messages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/22919/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5i3AlB",
    "number": 22919,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/22919/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/22919/timeline",
    "title": "Assert failure when resizing after multiline messages and calling screenstring() in VimResized",
    "updated_at": "2025-02-14T02:20:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/22919",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    }
}