{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "<!-- Before reporting: search existing issues and check the FAQ. -->\r\n\r\n- `nvim --version`: NVIM v0.5.0-241-g9f3d483c7\r\n- Operating system/version: Linux 5.0.0-36-generic #39~18.04.1-Ubuntu X86_64\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\n1) Connect to neovim with a GUI, make sure to set `ext_messages` to true\r\n2) Set the buffer's content to \"This is a test\"\r\n3) Run `nvim_input(\":%s/a/A/gc<CR>\")`\r\n\r\nNeovim will ask the GUI to draw the confirm prompt with the following message:\r\n```json\r\n[ \"msg_show\", \"confirm_sub\", [ [ 137, \"replace with A (y/n/a/q/l/^E/^Y)?\" ] ], false ]\r\n```\r\n\r\nRun `nvim_input(\"y\")` and neovim will send the following message to clear the confirm prompt:\r\n```json\r\n[ \"msg_showcmd\", [] ]\r\n```\r\n\r\nGetting a `msg_showcmd` message instead of a `msg_clear` message is weird but I can work around that. However, if the user sets `noshowcmd`, neovim will not send a `msg_showcmd` event and the `confirm_sub` prompt will never be cleared (until a `msg_show` message is received, that is). This behavior differs from the TUI, where the prompt is always cleared, no matter what `showcmd` setting the user is using.\r\n\r\nI wanted to write a small reproducer to help you confirm/test this bug but I wasn't sure where to start/how to implement tests for this behavior in neovim's testsuite.",
    "closed_at": "2025-02-14T02:15:30Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Run nvim_input(\"y\") and neovim will send the following message to clear the confirm prompt:\r\n\r\n[ \"msg_showcmd\", [] ]\r\n\r\nNo, a `msg_showcmd` must never be interpreted to \"clear\" a `msg_show` message, as little as it would clear an popupmenu_show or cmdline_show message. This is to clear an earlier `msg_showcmd` message and nothing else. When `noshowcmd` this event is not sent as there is nothing it could possibly clear. The `ext_` UI protocol does not assume or impose that different event kinds occupy the same area, this is a TUI restriction that there are no reason GUI:s should forced to inherit.\r\n\r\nTypically, the \"replace with A (y/n/a/q/l/^E/^Y)?\" seems to be replaced with a \"X substitutions on Y lines message\", but it appears to be cleared regardless even when this message is inhibited. We can add a `msg_clear` in that situation. ",
            "created_at": "2019-12-15T10:10:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/11558#issuecomment-565795193",
            "id": 565795193,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11558",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc5NTE5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/565795193/reactions"
            },
            "updated_at": "2019-12-15T10:10:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/565795193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">No, a msg_showcmd must never be interpreted to \"clear\" a msg_show message, as little as it would clear an popupmenu_show or cmdline_show message. This is to clear an earlier msg_showcmd message and nothing else.\r\n\r\nOh, you're right, I somehow missed the first `msg_showcmd` cleared by the second `msg_showcmd`, that's why I assumed that the second `msg_showcmd` was meant to clear a `msg_show` message. Sorry for the confusion :).\r\n\r\n>Typically, the \"replace with A (y/n/a/q/l/^E/^Y)?\" seems to be replaced with a \"X substitutions on Y lines message\"\r\n\r\nLooks like this message isn't sent to UIs/displayed in the TUI if only a single substitution is performed. So I guess the `msg_clear` should only be sent in that case?",
            "created_at": "2019-12-15T10:47:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/11558#issuecomment-565797772",
            "id": 565797772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11558",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc5Nzc3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/565797772/reactions"
            },
            "updated_at": "2019-12-15T10:47:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/565797772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I investigated a little more and the issue can actually be formulated more clearly:\r\n\"msg_show('confirm_sub') not cleared on :substitute with less than `report` substitutions\"\r\n\r\nIt's tempting to just add an `else { MSG(\"\"); }` to https://github.com/neovim/neovim/blob/251b20e5334e1ff8af7fdd37ca1770ad485f031b/src/nvim/ex_cmds.c#L4484 but I doubt it's that simple.",
            "created_at": "2019-12-16T22:50:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/11558#issuecomment-566283041",
            "id": 566283041,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11558",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjI4MzA0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/566283041/reactions"
            },
            "updated_at": "2019-12-16T22:50:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/566283041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I would like to find the existing code that clears the cmdline in TUI unconditionally, and add the ext_messages clear there (or fix any bug that prevents it from already happening). It is probably relevant for other dialogs as well.",
            "created_at": "2019-12-16T22:54:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/11558#issuecomment-566284528",
            "id": 566284528,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11558",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjI4NDUyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/566284528/reactions"
            },
            "updated_at": "2019-12-16T22:54:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/566284528",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Here's a reproducer:\r\n```python\r\nimport time\r\nfrom pynvim import attach\r\nfrom threading import Thread\r\n\r\ndef isInteresting (evt):\r\n    return evt in ['msg_show', 'msg_clear']\r\n\r\nclass UIThread(Thread):\r\n    def __init__(self, nvim):\r\n        Thread.__init__(self)\r\n        self.nvim = nvim\r\n        self.do_print = False\r\n    def run(self):\r\n        self.nvim.run_loop(self.callback, self.callback)\r\n    def callback(self, event_name, events):\r\n        if self.do_print:\r\n            [print(event) for event in events if isInteresting(event[0])]\r\n\r\nnvim = attach('child', argv=[\"/home/me/bin/nvim\", \"--embed\", \"-u\", \"NORC\", \"-i\", \"NONE\"])\r\nui = UIThread(nvim)\r\nui.start()\r\n\r\n# Create a ui with 3 lines of 20 characters.\r\nnvim.async_call(nvim.ui_attach, 20, 3, ext_linegrid = True, ext_messages = True, rgb = True)\r\n\r\n# Insert test\r\nnvim.async_call(nvim.input, \"iThis is a test<CR><Esc>\")\r\n\r\ntime.sleep(1)\r\nui.do_print = True\r\n\r\n# Attempt substitute\r\nnvim.async_call(nvim.input, \":%s/a/A/gc<CR>\")\r\n\r\n# Simulate user pressing accepting change\r\ntime.sleep(1)\r\nnvim.async_call(nvim.input, \"y<CR>\")\r\n\r\ntime.sleep(1)\r\nui.do_print = False\r\nnvim.async_call(nvim.input, \":qa!<Enter>\")\r\ntime.sleep(1)\r\n```\r\nThis outputs the following:\r\n```\r\n['msg_show', ['confirm_sub', [[30, 'replace with A (y/n/a/q/l/^E/^Y)?']], False]]\r\n```\r\nBut use `vim.async_call(nvim.input, \"iThis is a test<CR>This is a test<CR>This is a test<CR><Esc>\")` and `nvim.async_call(nvim.input, \"yyy<CR>\")` instead and you'll get a msg_clear:\r\n```\r\n['msg_show', ['confirm_sub', [[30, 'replace with A (y/n/a/q/l/^E/^Y)?']], False]]\r\n['msg_show', ['confirm_sub', [[30, 'replace with A (y/n/a/q/l/^E/^Y)?']], True]]\r\n['msg_show', ['confirm_sub', [[30, 'replace with A (y/n/a/q/l/^E/^Y)?']], True]]\r\n['msg_show', ['', [[0, '3 substitutions on 3 lines']], False]]\r\n['msg_clear', []]\r\n['msg_show', ['return_prompt', [[30, 'Press ENTER or type command to continue']], False]]\r\n```",
            "created_at": "2021-01-08T17:33:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/11558#issuecomment-756897097",
            "id": 756897097,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11558",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1Njg5NzA5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/756897097/reactions"
            },
            "updated_at": "2021-01-08T17:33:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/756897097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related #28593",
            "created_at": "2024-05-01T23:54:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/11558#issuecomment-2089306618",
            "id": 2089306618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11558",
            "node_id": "IC_kwDOAPphoM58iEn6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2089306618/reactions"
            },
            "updated_at": "2024-05-01T23:54:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2089306618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`confirm_sub` was removed in #31525",
            "created_at": "2025-02-14T02:15:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/11558#issuecomment-2658108546",
            "id": 2658108546,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11558",
            "node_id": "IC_kwDOAPphoM6eb4SC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2658108546/reactions"
            },
            "updated_at": "2025-02-14T02:15:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2658108546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/11558/comments",
    "created_at": "2019-12-15T08:38:10Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/11558/events",
    "html_url": "https://github.com/neovim/neovim/issues/11558",
    "id": 538020609,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "UI messages, log messages, errors, warnings, feedback",
            "id": 5637083595,
            "name": "messages",
            "node_id": "LA_kwDOAPphoM8AAAABT_8Ryw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/messages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/11558/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 696,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-02-17T18:55:16Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU1MzgwMjA2MDk=",
    "number": 11558,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/11558/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/11558/timeline",
    "title": "ext_messages: msg_show(\"confirm_sub\") is not always cleared",
    "updated_at": "2025-02-14T02:15:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/11558",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
        "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
        "followers_url": "https://api.github.com/users/glacambre/followers",
        "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
        "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glacambre",
        "id": 11534587,
        "login": "glacambre",
        "node_id": "MDQ6VXNlcjExNTM0NTg3",
        "organizations_url": "https://api.github.com/users/glacambre/orgs",
        "received_events_url": "https://api.github.com/users/glacambre/received_events",
        "repos_url": "https://api.github.com/users/glacambre/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glacambre",
        "user_view_type": "public"
    }
}