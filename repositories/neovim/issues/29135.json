{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nWhen multigrid is enabled, the screenchar/screenstring functions do not return the correct data. See https://github.com/neovide/neovide/issues/2569 for the original report.\n\n### Steps to reproduce\n\nModify the `screenchar_spec.lua` test to use multigrid and observe that it's failing.\n\n### Expected behavior\n\nMultigrid should not affect the functionality of `screenchar`.\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nNeovide 0.13.1\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\npacman",
    "closed_at": "2025-04-26T20:39:13Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Multigrid should not affect the functionality of screenchar.\r\n\r\nI am afraid this is impossible. The _entire_ point of multigrid is to break the assumptions that positions form a single monospace grid, which is the assumption that screenchar/screenstring relies on. These functions historically always have exited for _testing_ purposes, rather than ordinary use, and we have other ways to test multigrid state (use the RPC api just like in actual use).\r\n\r\n> Modify the `screenchar_spec.lua` test to use multigrid and observe that it's failing.\r\n\r\nThere is no point in ever wanting to do this when `multigrid_spec.lua` exists.",
            "created_at": "2024-06-14T09:39:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/29135#issuecomment-2167649862",
            "id": 2167649862,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29135",
            "node_id": "IC_kwDOAPphoM6BM7ZG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167649862/reactions"
            },
            "updated_at": "2024-06-14T09:42:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167649862",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I am afraid this is impossible. The *entire* point of multigrid is to break the assumptions that positions form a single monospace grid, which is the assumption that screenchar/screenstring relies on.\r\n\r\nWould it be possible to make this optional, or even per window like the documentation suggests?\r\n\r\n> UIs *can* set the grid size independently of how much space the window occupies on the global layout. So the UI *could* use a different font size per-window. Or reserve space around the border of the window for its own elements, such as scrollbars from the UI toolkit.\r\n\r\n> *By default*, the grid size is handled by Nvim and set to the outer grid size (i.e. the size of the window frame in Nvim) whenever the split is created\r\n\r\nNeovide aims to be a drop-in replacement for the terminal mode Neovim, with a few enhanchements like smooth scrolling, simple animations, true transparency, shadows and so on. And for that we need the bullet point below of multigrid, but not necessary the other points\r\n> * UIs receive updates on a separate grid for each window.\r\n\r\nWe probably want to enable custom and even variable fonts at some point, but that needs special consideration and perhaps new Neovim features, and it should never interfer with the base functionality like window navigation or break plugins.  Especially variable fonts need a lot of thought, like how are the lines wrapped, the current protocol only sends the parts it thinks are visible, which makes it almost impossible to implement with the current protocol.\r\n\r\nRunning the compositor when multigrid is enabled would also allow issues like these to be resolved\r\n* https://github.com/neovim/neovim/issues/24801\r\n  * Emulating the Neovim algorithm is not trivial since we need to take anchors into account and move whole groups of windows, and perhaps even the composition order. And Neovide currently have some bugs related to that.\r\n* https://github.com/neovim/neovim/issues/27181\r\n  * That one can not be solved even if a new api was added that takes the absolute position. We don't know if a winbar or floating window border is clicked, so we can't know which window if to send. \r\n* A composition order field could be added in addition to z-index, since the z-index alone is not enough to render the windows in the correct order, we had to reverse engineer the algorithm https://github.com/neovide/neovide/pull/2612\r\n\r\n> These functions historically always have exited for testing purposes, rather than ordinary use, and we have other ways to test multigrid state (use the RPC api just like in actual use).\r\n\r\nThe API documentation does not specify that it's *only* for testing, and it's used in the wild by plugins that are broken in Neovide, for example https://github.com/luukvbaal/statuscol.nvim/blob/483b9a596dfd63d541db1aa51ee6ee9a1441c4cc/lua/statuscol.lua#L143.\r\n\r\nI'm not a Neovim api expert, but I don't think there's a viable alternative for that functionality currently, and a plugin should not have to care about if multigrid is enabled or not, unless it's specifically written with multigrid in mind.\r\n\r\nI think the above plugin might also be broken due to the mouse position issue, which also does not have a viable alternative when you click outside a window, like you need there. A responsive scrollbar also need to be able to track the mouse position globally, so this is not the only use case for it.\r\n\r\n>> Modify the screenchar_spec.lua test to use multigrid and observe that it's failing.\r\n> There is no point in ever wanting to do this when multigrid_spec.lua exists.\r\n\r\nYes, you could copy paste the whole content of `screenchar_spec.lua` into `multigrid_spec.lua`, but I prefer to avoid code duplication and instead run the same test twice, once without and and once with multigrid to see that there are no regressions between the two, especially since it what's displayed on the screen is irrelevant for those tests.\r\n",
            "created_at": "2024-06-15T06:50:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/29135#issuecomment-2169165971",
            "id": 2169165971,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29135",
            "node_id": "IC_kwDOAPphoM6BStiT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2169165971/reactions"
            },
            "updated_at": "2024-06-15T06:50:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2169165971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29135/comments",
    "created_at": "2024-06-01T23:10:04Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29135/events",
    "html_url": "https://github.com/neovim/neovim/issues/29135",
    "id": 2329379635,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29135/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6K14Mz",
    "number": 29135,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29135/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29135/timeline",
    "title": "screenchar()/screenstring() with multigrid",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-26T20:39:14Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29135",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
        "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
        "followers_url": "https://api.github.com/users/fredizzimo/followers",
        "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
        "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fredizzimo",
        "id": 9946255,
        "login": "fredizzimo",
        "node_id": "MDQ6VXNlcjk5NDYyNTU=",
        "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
        "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
        "repos_url": "https://api.github.com/users/fredizzimo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fredizzimo",
        "user_view_type": "public"
    }
}