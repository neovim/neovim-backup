{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "This is a tracking issue to either upstream the `:LspStart`, `:LspStop`, `:LspRestart`, and `:LspInfo` commands from nvim-lspconfig or determine formally if those features are not wanted.\r\n\r\n`:checkhealth lsp` does a lot of what `:LspInfo` does, but is not a complete replacement. In https://github.com/neovim/neovim/pull/18476#issuecomment-1120390374, @mfussenegger mentioned:\r\n\r\n>:lsp / :LspInfo: LspInfo currently does more than just printing all clients, it also prints all not started yet. It can do that because lsp-config currently includes the \"managing clients\" functionality. I think the first step we have to do to bring anything like that into core is to move the manager component.\r\n\r\nNvim core would need the concept of \"registering\" or \"managing\" a client without it being started. For example, a `vim.lsp.register` API that makes Nvim aware of a client configuration without actually starting it. This same functionality would be needed for `:LspStart` as well, if we want to include that.\r\n\r\nI do not think we should include `:LspInfo` directly, but its functionality should be integrated into `:checkhealth lsp`.\r\n\r\nIf we do add `:LspStart` and/or `:LspStop`, I propose they be added as `:lsp start` and `:lsp stop` and promote `:lsp` to a first class command (note, this is a different interface thn the one proposed in #18476).\r\n\r\ncc @mfussenegger ",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Nvim core would need the concept of \"registering\" or \"managing\" a client without it being started. For example, a `vim.lsp.register` API that makes Nvim aware of a client configuration without actually starting it.\r\n\r\nDo we only need a way to \"define\" clients and add them to a list, or is there more involved (such as lifecycle, cleanup, ... which is the usual unpleasantness implied by a \"registry\")? Maybe `vim.lsp.add_client()` or `vim.lsp.def_client()` could be the name. Or `vim.lsp.config()`",
            "created_at": "2024-04-24T09:54:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2074563471",
            "id": 2074563471,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM57p1OP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074563471/reactions"
            },
            "updated_at": "2024-04-24T10:35:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074563471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "+1, but I would prefer we add `:Lsp` with `stop`, `restart` and `info` sub-commands.\r\n\r\nAh sorry, didn't read OP fully, that's what you are already proposing.",
            "created_at": "2024-04-24T10:12:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2074599300",
            "id": 2074599300,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM57p9-E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074599300/reactions"
            },
            "updated_at": "2024-04-24T10:13:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074599300",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Nvim core would need the concept of \"registering\" or \"managing\" a client without it being started. For example, a vim.lsp.register API that makes Nvim aware of a client configuration without actually starting it. This same functionality would be needed for :LspStart as well, if we want to include that.\r\n\r\nNote we already have `vim.treesitter.language.register/add` which serves a similar purpose, would be _nice_ if we could mirror that, or have them align.",
            "created_at": "2024-04-24T10:14:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2074603329",
            "id": 2074603329,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM57p-9B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074603329/reactions"
            },
            "updated_at": "2024-04-24T10:15:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074603329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> we already have `vim.treesitter.language.register/add` which serves a similar purpose, would be _nice_ if we could mirror that, or have them align.\r\n\r\nDefinitely. gpanders mentioned `vim.lsp.config`, I wonder if that can be the interface for \"defining a client\". See also https://github.com/neovim/neovim/issues/24054",
            "created_at": "2024-04-24T10:36:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2074643987",
            "id": 2074643987,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM57qI4T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074643987/reactions"
            },
            "updated_at": "2024-04-24T10:36:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074643987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "One benefit (and design requirement) of `vim.treesitter.language.add` is that it can be called from multiple sources. I think that requirement should apply to LSP too, i.e. servers can be specified in multiple sources: config, plugins, etc.",
            "created_at": "2024-04-24T10:40:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2074650303",
            "id": 2074650303,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM57qKa_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074650303/reactions"
            },
            "updated_at": "2024-04-24T10:41:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074650303",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We _definitely_ want to support \"language server plugins\" as a first-class use case here (not for every server, mind you, but for those that require more work to set up or have custom commands that are out of scope for core).",
            "created_at": "2024-04-24T10:49:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2074662276",
            "id": 2074662276,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM57qNWE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074662276/reactions"
            },
            "updated_at": "2024-04-24T10:49:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074662276",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just to throw in another idea.\r\n\r\nI've been debugging some LSP stuff and wondering whether something like this would also be useful:\r\n\r\n```lua\r\nvim.lsp.log.set_level(vim.lsp.log.levels.DEBUG)\r\n-- vim.lsp.log.set_format_func(vim.inspect)\r\n\r\napi.nvim_create_user_command('LspLog', function()\r\n  local log_path = vim.lsp.get_log_path()\r\n  vim.cmd.split(log_path)\r\nend, {})\r\n```\r\n\r\nSomething _like_ this could reduce friction with LSP issues, since atm, getting the log file is rather tedious, and can quickly solve certain kinds of issues. Just an idea. A similar treesitter analogue is `:InspectTree`.\r\n\r\nWith that said, the LSP logging does need some improvements because currently the log is shared between all servers and nvim sessions and grows indefinitely unless it is manually cleared.",
            "created_at": "2024-04-26T14:27:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2079506011",
            "id": 2079506011,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM578r5b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079506011/reactions"
            },
            "updated_at": "2024-04-26T14:27:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079506011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">Something _like_ this could reduce friction with LSP issues, since atm, getting the log file is rather tedious\r\n\r\nNot opposed to it, but just to point this out: `:checkh lsp` prints the path to the log file and you can use `gf` or `<C-W>f` on that to open it. It's admittedly not the most straightforward, but it's not too bad in a pinch.\r\n\r\n",
            "created_at": "2024-04-26T14:42:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2079533649",
            "id": 2079533649,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM578ypR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079533649/reactions"
            },
            "updated_at": "2024-04-26T14:42:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079533649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I do not think we should include `:LspInfo` directly, but its functionality should be integrated into `:checkhealth lsp`.\r\n\r\nDone in https://github.com/neovim/nvim-lspconfig/pull/3339 .",
            "created_at": "2024-10-02T11:12:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2388386683",
            "id": 2388386683,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM6OW-N7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2388386683/reactions"
            },
            "updated_at": "2024-10-02T11:12:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2388386683",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "With the caveat that I'm not a contributor (atm), part of this project goal could be achieved incrementally by organizing configs like tree sitter does, make a repo for each configuration that provides the defaults and some useful utilities. I currently have been copying and modifying the configs defined in this repo for my own more specific configuration. \n\nThen to start an lsp with the lspconfig settings one can do:\n\n```\nlocal on_init = function(client)\n  local client_capabilities = client.capabilities\n  local cmp_capabilities = require(\"cmp_nvim_lsp\").default_capabilities()\n\n  client.capabilities =\n    vim.tbl_deep_extend(\"force\", client_capabilities, cmp_capabilities)\nend\n\nlocal default_config = require(\"lspconfig-lua\").default_config()\n\nvim.lsp.start(\n  vim.tbl_deep_extend(\"force\", default_config, {\n    on_init = on_init\n  })\n)\n```\n\n^ Probably more low level than the average Neovim user, but you're planning on moving the other features into Neovim right?\n\nJust a thought :) ",
            "created_at": "2025-01-29T17:56:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2622452200",
            "id": 2622452200,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM6cT3Ho",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622452200/reactions"
            },
            "updated_at": "2025-01-29T17:59:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622452200",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1273829?v=4",
                "events_url": "https://api.github.com/users/therealjasonkenney/events{/privacy}",
                "followers_url": "https://api.github.com/users/therealjasonkenney/followers",
                "following_url": "https://api.github.com/users/therealjasonkenney/following{/other_user}",
                "gists_url": "https://api.github.com/users/therealjasonkenney/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/therealjasonkenney",
                "id": 1273829,
                "login": "therealjasonkenney",
                "node_id": "MDQ6VXNlcjEyNzM4Mjk=",
                "organizations_url": "https://api.github.com/users/therealjasonkenney/orgs",
                "received_events_url": "https://api.github.com/users/therealjasonkenney/received_events",
                "repos_url": "https://api.github.com/users/therealjasonkenney/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/therealjasonkenney/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/therealjasonkenney/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/therealjasonkenney",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`vim.lsp.config` in Nvim 0.11 addresses that already, and isn't related to this issue.",
            "created_at": "2025-01-29T17:59:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/28479#issuecomment-2622459014",
            "id": 2622459014,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28479",
            "node_id": "IC_kwDOAPphoM6cT4yG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622459014/reactions"
            },
            "updated_at": "2025-01-29T17:59:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622459014",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28479/comments",
    "created_at": "2024-04-24T01:48:24Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28479/events",
    "html_url": "https://github.com/neovim/neovim/issues/28479",
    "id": 2260106481,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28479/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 691,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 634,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-02-03T17:13:43Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6Gtnzx",
    "number": 28479,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 5,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 4,
        "total_count": 9,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28479/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28479/timeline",
    "title": "Upstream :Lsp commands from nvim-lspconfig",
    "updated_at": "2025-01-29T17:59:54Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28479",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    }
}