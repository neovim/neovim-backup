{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nIn a Lua plugin, when trying to get the path to some file within the plugin dir (e.g. to load a JSON file from the plugin dynamically), there *seems* to be no obvious / intuitive way to do that. `nvim_get_runtime_file()` looks in a lot of places and you kind of have to hope that there is no naming conflict. Looking into how other plugins solve that, the only other way I found is the following snippet within `telescope` for their planets picker:\n\n```lua\nlocal sourced_file = require(\"plenary.debug_utils\").sourced_filepath()\nlocal base_directory = vim.fn.fnamemodify(sourced_file, \":h:h:h:h\")\nlocal globbed_files = vim.fn.globpath(base_directory .. \"/data/memes/planets/\", \"*\", true, true)\n```\n\nwith `plenay.debug_utils.sourced_filepath()` relying on `debug.getinfo()`, which seems undesirable.\n\n### Expected behavior\n\nWhen coming from other scripting environments (JS, Python, Ruby...), one's intuition might be to look for some way to get the path of the current script file (via some function or magic global), to append a relative path onto. Maybe it would be possible to expose the path the loader found when loading the lua file to the script in the file somehow?",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`debug.getinfo()` is currently the answer that I'm aware of. \n\nPerhaps `vim.fn.expand('<script>')` could support Lua better.",
            "created_at": "2025-01-20T01:01:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2601123201",
            "id": 2601123201,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bCf2B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2601123201/reactions"
            },
            "updated_at": "2025-01-20T01:01:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2601123201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> one's intuition might be to look for some way to get the path of the current script file\n\nBTW. this is supported in PUC Lua\n\n```lua\n-- anymodule.lua\n\nlocal arg = {...}\n\nprint(\"Module name is\", arg[1]) -- anymodule\nprint(\"Module file is\", arg[2]) -- /path/to/anymodule.lua\n-- arg[1] is a module name / argument of require\n-- arg[2] is the 2nd return value from package loader, usually file name found\n```\n\nUnfortunately, LuaJIT only passes single argument.\n\nNeovim implements custom package loader, so adding file name to its return list is easy. But `require` has to be rewritten too to make it work.",
            "created_at": "2025-01-21T16:38:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2605225354",
            "id": 2605225354,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bSJWK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2605225354/reactions"
            },
            "updated_at": "2025-01-21T16:38:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2605225354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35012635?v=4",
                "events_url": "https://api.github.com/users/matveyt/events{/privacy}",
                "followers_url": "https://api.github.com/users/matveyt/followers",
                "following_url": "https://api.github.com/users/matveyt/following{/other_user}",
                "gists_url": "https://api.github.com/users/matveyt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matveyt",
                "id": 35012635,
                "login": "matveyt",
                "node_id": "MDQ6VXNlcjM1MDEyNjM1",
                "organizations_url": "https://api.github.com/users/matveyt/orgs",
                "received_events_url": "https://api.github.com/users/matveyt/received_events",
                "repos_url": "https://api.github.com/users/matveyt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matveyt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matveyt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matveyt",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`arg` only works for `nvim -l`. That doesn't help for getting other module paths.",
            "created_at": "2025-01-22T15:22:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2607539105",
            "id": 2607539105,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6ba-Oh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607539105/reactions"
            },
            "updated_at": "2025-01-22T15:49:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607539105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "`arg` here is arbitrary local variable name. It has nothing to do with global `arg`.",
            "created_at": "2025-01-22T15:27:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2607550621",
            "id": 2607550621,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bbBCd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607550621/reactions"
            },
            "updated_at": "2025-01-22T15:49:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607550621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35012635?v=4",
                "events_url": "https://api.github.com/users/matveyt/events{/privacy}",
                "followers_url": "https://api.github.com/users/matveyt/followers",
                "following_url": "https://api.github.com/users/matveyt/following{/other_user}",
                "gists_url": "https://api.github.com/users/matveyt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matveyt",
                "id": 35012635,
                "login": "matveyt",
                "node_id": "MDQ6VXNlcjM1MDEyNjM1",
                "organizations_url": "https://api.github.com/users/matveyt/orgs",
                "received_events_url": "https://api.github.com/users/matveyt/received_events",
                "repos_url": "https://api.github.com/users/matveyt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matveyt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matveyt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matveyt",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Interesting, so `...` in module-scope gets something useful from `require()`? That seems like a good approach.",
            "created_at": "2025-01-22T15:34:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2607568988",
            "id": 2607568988,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bbFhc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607568988/reactions"
            },
            "updated_at": "2025-01-22T15:34:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607568988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes, but in LuaJIT implementation of `require` it's only module name (the same value that was passed to `require` by caller). While in PUC Lua 5.4 `require` passes both module name and an extra return value from package loader used (which in 5.4 is almost always a file name, except for preload or such).\n\nThis approach is compatible with existing user code for 5.1 but needs both changes to custom package loader and new custom `require`.",
            "created_at": "2025-01-22T15:45:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2607596841",
            "id": 2607596841,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bbMUp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607596841/reactions"
            },
            "updated_at": "2025-01-22T15:45:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607596841",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35012635?v=4",
                "events_url": "https://api.github.com/users/matveyt/events{/privacy}",
                "followers_url": "https://api.github.com/users/matveyt/followers",
                "following_url": "https://api.github.com/users/matveyt/following{/other_user}",
                "gists_url": "https://api.github.com/users/matveyt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matveyt",
                "id": 35012635,
                "login": "matveyt",
                "node_id": "MDQ6VXNlcjM1MDEyNjM1",
                "organizations_url": "https://api.github.com/users/matveyt/orgs",
                "received_events_url": "https://api.github.com/users/matveyt/received_events",
                "repos_url": "https://api.github.com/users/matveyt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matveyt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matveyt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matveyt",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> While in PUC Lua 5.4 require passes both module name and an extra return value from package loader used (which in 5.4 is almost always a file name, except for preload or such).\n\nYes, LuaJIT is strictly only compatible with Lua 5.1. I don't think we should change this. `debug.getinfo` exists for this kind of information.\n\nIf you want to change what `...` is passed as, then you need to get that change made to LuaJIT, and then we'll absorb the changes. Though since LuaJIT already incorporates non-breaking changes from newer Lua versions, there's a good chance the omission of this behaviour is deliberate.",
            "created_at": "2025-01-23T08:02:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2609100683",
            "id": 2609100683,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bg7eL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2609100683/reactions"
            },
            "updated_at": "2025-01-23T08:07:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2609100683",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Actually, LuaJIT incorporates quite a few changes from 5.4 So it's only backwards compatible with 5.1, not strictly. Yet this particular feature was not adopted and I don't know why.",
            "created_at": "2025-01-23T08:09:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2609113133",
            "id": 2609113133,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bg-gt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2609113133/reactions"
            },
            "updated_at": "2025-01-23T08:09:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2609113133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35012635?v=4",
                "events_url": "https://api.github.com/users/matveyt/events{/privacy}",
                "followers_url": "https://api.github.com/users/matveyt/followers",
                "following_url": "https://api.github.com/users/matveyt/following{/other_user}",
                "gists_url": "https://api.github.com/users/matveyt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matveyt",
                "id": 35012635,
                "login": "matveyt",
                "node_id": "MDQ6VXNlcjM1MDEyNjM1",
                "organizations_url": "https://api.github.com/users/matveyt/orgs",
                "received_events_url": "https://api.github.com/users/matveyt/received_events",
                "repos_url": "https://api.github.com/users/matveyt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matveyt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matveyt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matveyt",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Yes, LuaJIT is strictly only compatible with Lua 5.1. I don't think we should change this. `debug.getinfo` exists for this kind of information.\n\nI don't think that this is a solution for plugin authors, at least not considering what the docs currently say about `debug` (which also aligns with it being named `debug`):\n\n```\nThis library provides the functionality of the debug interface to Lua\nprograms. You should exert care when using this library. The functions\nprovided here should be used exclusively for debugging and similar tasks, such\nas profiling. Please resist the temptation to use them as a usual programming\ntool: they can be very slow. Moreover, several of its functions violate some\nassumptions about Lua code (e.g., that variables local to a function cannot be\naccessed from outside or that userdata metatables cannot be changed by Lua\ncode) and therefore can compromise otherwise secure code.\n```\n\nThis paragraph was *really* successful in making me not want to use it for a regular plugin functionality and I think it will do that for others as well.",
            "created_at": "2025-01-23T19:28:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2610842599",
            "id": 2610842599,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bnkvn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2610842599/reactions"
            },
            "updated_at": "2025-01-23T19:56:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2610842599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3419961?v=4",
                "events_url": "https://api.github.com/users/LionC/events{/privacy}",
                "followers_url": "https://api.github.com/users/LionC/followers",
                "following_url": "https://api.github.com/users/LionC/following{/other_user}",
                "gists_url": "https://api.github.com/users/LionC/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LionC",
                "id": 3419961,
                "login": "LionC",
                "node_id": "MDQ6VXNlcjM0MTk5NjE=",
                "organizations_url": "https://api.github.com/users/LionC/orgs",
                "received_events_url": "https://api.github.com/users/LionC/received_events",
                "repos_url": "https://api.github.com/users/LionC/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LionC/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LionC/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LionC",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That is for PUC Lua. The debug module in LuaJIT is fine.\n\n> Moreover, several of its functions violate some\nassumptions about Lua code (e.g., that variables local to a function cannot be\naccessed from outside or that userdata metatables cannot be changed by Lua\ncode) and therefore can compromise otherwise secure code.\n\nThis is just a principled stance. It says nothing about the quality of the debug module. The bit about compromising secure code is also a bit silly; if it poses a security issue then it shouldn't be provided full stop.",
            "created_at": "2025-01-23T19:37:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2610859619",
            "id": 2610859619,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bno5j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2610859619/reactions"
            },
            "updated_at": "2025-01-23T19:41:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2610859619",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> That is for PUC Lua. The debug module in LuaJIT is fine.\n> \n> > Moreover, several of its functions violate some\n> > assumptions about Lua code (e.g., that variables local to a function cannot be\n> > accessed from outside or that userdata metatables cannot be changed by Lua\n> > code) and therefore can compromise otherwise secure code.\n> \n> This is just a principled stance. It says nothing about the quality of the debug module. The bit about compromising secure code is also a bit silly; if it poses a security issue then it shouldn't be provided full stop.\n\nI feel like we are talking about two different things here. I am not saying, what the solution should be, nor that the docs are right.\n\nWhat I am saying is that, from a plugin authors perspective, there is nothing pointing me to use `debug.getinfo` to get a relative path to a plugin local resource (which is not a super exotic use case). And that, as soon as I find it, `:h debug.getinfo` will lead me to a section that is headed by the warning above, which is explicitly telling me not to use it for my use case.\n\nI don't see how we expect someone to come to your conclusions from that.",
            "created_at": "2025-01-23T19:53:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2610890461",
            "id": 2610890461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bnwbd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2610890461/reactions"
            },
            "updated_at": "2025-01-23T19:53:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2610890461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3419961?v=4",
                "events_url": "https://api.github.com/users/LionC/events{/privacy}",
                "followers_url": "https://api.github.com/users/LionC/followers",
                "following_url": "https://api.github.com/users/LionC/following{/other_user}",
                "gists_url": "https://api.github.com/users/LionC/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LionC",
                "id": 3419961,
                "login": "LionC",
                "node_id": "MDQ6VXNlcjM0MTk5NjE=",
                "organizations_url": "https://api.github.com/users/LionC/orgs",
                "received_events_url": "https://api.github.com/users/LionC/received_events",
                "repos_url": "https://api.github.com/users/LionC/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LionC/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LionC/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LionC",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We are not planning to make a change regarding this. If you want the solution you suggested then you need to make the case to LuaJIT, not here. Otherwise the only thing available will be the debug module or something like `nvim_get_runtime_file`.",
            "created_at": "2025-01-23T20:09:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2610920551",
            "id": 2610920551,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bn3xn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2610920551/reactions"
            },
            "updated_at": "2025-01-23T20:09:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2610920551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can we make `vim.fn.expand('<script>')` do [something useful](https://github.com/neovim/neovim/issues/32116#issuecomment-2601123201)? Or add a stdlib function? This is a pretty common use case.",
            "created_at": "2025-01-24T02:21:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2611403974",
            "id": 2611403974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bptzG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2611403974/reactions"
            },
            "updated_at": "2025-01-24T02:21:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2611403974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It would have to use debug.getinfo under the hood.\n\nOh wait, probably not since the vim.fn code doesn't have access to lstate\n\nHonestly whatever we do will probably require using debug.getinfo, and at that point why would we suggest using some legacy vimscript function over a Lua builtin?",
            "created_at": "2025-01-24T08:10:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2611909381",
            "id": 2611909381,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6brpMF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2611909381/reactions"
            },
            "updated_at": "2025-01-24T08:16:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2611909381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Can we make `vim.fn.expand('<script>')` do [something useful](https://github.com/neovim/neovim/issues/32116#issuecomment-2601123201)? Or add a stdlib function? This is a pretty common use case.\n\n`vim.fn.expand` already works if script has a SID / was added to `:scriptnames` output. But, AFAIU, there is no plan to put into `:scriptnames` any Lua modules other than from `plugin/` or such. But to have some dedicated function in `vim` module, why not?\n\n> It would have to use debug.getinfo under the hood.\n> \n> Oh wait, probably not since the vim.fn code doesn't have access to lstate\n> \n> Honestly whatever we do will probably require using debug.getinfo, and at that point why would we suggest using some legacy vimscript function over a Lua builtin?\n\nAt the very least, calling `debug` is impractical for such a common task.\n\n```lua\nprint(\"Module file name is\", debug.getinfo(1, \"S\").source:sub(2))\n```\n\nOne would better have some parameterless function instead. As of implementation, `debug` module is built on top of public C API, so the function could be implemented in C by calling `lua_getstack()` and `lua_getinfo()`. Maybe it's not the biggest win but still something.",
            "created_at": "2025-01-24T11:18:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2612280391",
            "id": 2612280391,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6btDxH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2612280391/reactions"
            },
            "updated_at": "2025-01-24T11:18:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2612280391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35012635?v=4",
                "events_url": "https://api.github.com/users/matveyt/events{/privacy}",
                "followers_url": "https://api.github.com/users/matveyt/followers",
                "following_url": "https://api.github.com/users/matveyt/following{/other_user}",
                "gists_url": "https://api.github.com/users/matveyt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matveyt",
                "id": 35012635,
                "login": "matveyt",
                "node_id": "MDQ6VXNlcjM1MDEyNjM1",
                "organizations_url": "https://api.github.com/users/matveyt/orgs",
                "received_events_url": "https://api.github.com/users/matveyt/received_events",
                "repos_url": "https://api.github.com/users/matveyt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matveyt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matveyt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matveyt",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> At the very least, calling debug is impractical for such a common task.\n\nIMO, it really isn't _that common_ and `debug.getinfo(1, 'S').source:sub(2)` isn't _that impractical_, I think it's actually quite short and is portable. `vim.fn.expand('<script>')` wouldn't really be an improvement, or much of one at most.",
            "created_at": "2025-01-24T13:08:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2612493506",
            "id": 2612493506,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bt3zC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2612493506/reactions"
            },
            "updated_at": "2025-01-24T13:09:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2612493506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But, AFAIU, there is no plan to put into `:scriptnames` any Lua modules other than from `plugin/` or such\n\nThat's planned. It's annoying and wrong that we don't show Lua plugins in `:scriptnames`.",
            "created_at": "2025-01-25T04:04:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2613766239",
            "id": 2613766239,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6byuhf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2613766239/reactions"
            },
            "updated_at": "2025-01-25T04:04:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2613766239",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> That's planned.\n\nAll right. Then we'll be able to use `vim.fn.expand(\"<script>\")` in all Lua modules. So this particular issue should be absorbed by a bigger one.",
            "created_at": "2025-01-25T08:55:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/32116#issuecomment-2613850090",
            "id": 2613850090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32116",
            "node_id": "IC_kwDOAPphoM6bzC_q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2613850090/reactions"
            },
            "updated_at": "2025-01-25T08:55:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2613850090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35012635?v=4",
                "events_url": "https://api.github.com/users/matveyt/events{/privacy}",
                "followers_url": "https://api.github.com/users/matveyt/followers",
                "following_url": "https://api.github.com/users/matveyt/following{/other_user}",
                "gists_url": "https://api.github.com/users/matveyt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matveyt",
                "id": 35012635,
                "login": "matveyt",
                "node_id": "MDQ6VXNlcjM1MDEyNjM1",
                "organizations_url": "https://api.github.com/users/matveyt/orgs",
                "received_events_url": "https://api.github.com/users/matveyt/received_events",
                "repos_url": "https://api.github.com/users/matveyt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matveyt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matveyt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matveyt",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 18,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32116/comments",
    "created_at": "2025-01-19T23:55:11Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32116/events",
    "html_url": "https://github.com/neovim/neovim/issues/32116",
    "id": 2797898643,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is not fixed but can be circumvented until then",
            "id": 435850181,
            "name": "has:workaround",
            "node_id": "MDU6TGFiZWw0MzU4NTAxODE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:workaround"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32116/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 302,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-27T11:39:32Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6mxIuT",
    "number": 32116,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32116/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32116/timeline",
    "title": "Lua: get path of current script/module file, show Lua plugins in :scriptnames",
    "updated_at": "2025-01-26T23:17:52Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32116",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3419961?v=4",
        "events_url": "https://api.github.com/users/LionC/events{/privacy}",
        "followers_url": "https://api.github.com/users/LionC/followers",
        "following_url": "https://api.github.com/users/LionC/following{/other_user}",
        "gists_url": "https://api.github.com/users/LionC/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/LionC",
        "id": 3419961,
        "login": "LionC",
        "node_id": "MDQ6VXNlcjM0MTk5NjE=",
        "organizations_url": "https://api.github.com/users/LionC/orgs",
        "received_events_url": "https://api.github.com/users/LionC/received_events",
        "repos_url": "https://api.github.com/users/LionC/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/LionC/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LionC/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/LionC",
        "user_view_type": "public"
    }
}