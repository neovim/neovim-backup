{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI am trying to add proportional (i.e. non-monospace) fonts support to a neovim GUI ([Goneovim](https://github.com/akiyosi/goneovim)). An issue I encounter is completion floating window positioned near cursor, like in [nvim-cmp](https://github.com/hrsh7th/nvim-cmp), [mini.completion](https://github.com/echasnovski/mini.completion), [coq_nvim](https://github.com/ms-jpq/coq_nvim) or [compl.nvim](https://github.com/brianaung/compl.nvim). Despite the window position being computed to be near the cursor, the `WinConfig` field `relative` is never set to `\"cursor\"`: it's always set to `\"editor\"`, and the plugins use their own logic to place the window near the cursor. Therefore, using `vim.api.nvim_win_get_config()`, the GUI cannot distinguish these floating windows, which position is implicitly cursor-based, and floating windows which position is not cursor-based at all (e.g. centered floating window).\n\nThis information matter for a proportional font support, because the column-based index is not enough with proportional fonts, since the 10th column of the 2nd row may not be vertically aligned with the 10th column of the 42th row: it depends on the *actual* length of the characters that populate the rows.\n\n### Expected behavior\n\nIt would be great to have a field that express where the window must be placed: must it be centered? must it me near the cursor? But I guess it requires to change the [WinConfig](https://github.com/neovim/neovim/blob/master/src/nvim/buffer_defs.h#L972) struct. It would serve a similar purpose than the `external` field. The `external` field could also be changed to accept more values.\n\nThis solution would indeed require to modify the completion plugins, so they use this field: but it seems easier to me to PR a change like this than to ask to explicit the cursor-based logic (i.e. ask to use `relative = \"cursor\"`).\n\nI couldn't find any other reliable way to do that, but I'm still sorry if I couldn't find one that actually exists.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This seems to apply to `mouse` too.",
            "created_at": "2025-06-21T22:50:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/34595#issuecomment-2993805270",
            "id": 2993805270,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34595",
            "node_id": "IC_kwDOAPphoM6ycdfW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2993805270/reactions"
            },
            "updated_at": "2025-06-21T22:50:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2993805270",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34595/comments",
    "created_at": "2025-06-21T18:19:19Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34595/events",
    "html_url": "https://github.com/neovim/neovim/issues/34595",
    "id": 3165304292,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "floating windows, popups, hover",
            "id": 3234818716,
            "name": "floatwin",
            "node_id": "MDU6TGFiZWwzMjM0ODE4NzE2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/floatwin"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34595/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM68qrXk",
    "number": 34595,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34595/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34595/timeline",
    "title": "GUI: WinConfig field indicating if floating window position is cursor-based",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-28T11:25:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34595",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/109964512?v=4",
        "events_url": "https://api.github.com/users/thjbdvlt/events{/privacy}",
        "followers_url": "https://api.github.com/users/thjbdvlt/followers",
        "following_url": "https://api.github.com/users/thjbdvlt/following{/other_user}",
        "gists_url": "https://api.github.com/users/thjbdvlt/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/thjbdvlt",
        "id": 109964512,
        "login": "thjbdvlt",
        "node_id": "U_kgDOBo3s4A",
        "organizations_url": "https://api.github.com/users/thjbdvlt/orgs",
        "received_events_url": "https://api.github.com/users/thjbdvlt/received_events",
        "repos_url": "https://api.github.com/users/thjbdvlt/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/thjbdvlt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thjbdvlt/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/thjbdvlt",
        "user_view_type": "public"
    }
}