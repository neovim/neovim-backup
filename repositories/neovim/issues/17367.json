{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Feature already in Vim?\n\nNo\n\n### Feature description\n\nIt would be very nice to have some official guidelines with how plugin writers can write tests for their plugins. In particular, what I have in mind:\r\n- A dedicated help file describing the suggested infrastructure needed to set up and run basic tests. Like which files should be put where, which command runs tests, etc.\r\n- A dedicated Lua module with Neovim-specific assertions and helpers (like `vim.testing`), so plugin writer can test, for example, what exactly is shown on screen, etc. Maybe something like exported helpers from 'test/functional/'.\r\n\r\nAt the moment, all information about this topic seems to be a [plenary.test_harness](https://github.com/nvim-lua/plenary.nvim#plenarytest_harness) along with some custom solutions from plugin authros (ranging from quite basic to quite elaborated ones, like in [gitsigns.nvim](https://github.com/lewis6991/gitsigns.nvim)).\r\n\r\nI really wish adding new and running existing tests would be as easy as `vim.testing.add_test(\"Plugin works\")` and `vim.testing.run_tests()`.",
    "closed_at": "2022-05-09T13:44:10Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "As always, the question that needs to be addressed in such a feature request is \"Why does this _need_ to be in core?\" (and these should be _technical_ reasons, not \"because it's better if it's official\" or \"more convenient!)",
            "created_at": "2022-02-11T09:54:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036036441",
            "id": 1036036441,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wKlZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036036441/reactions"
            },
            "updated_at": "2022-02-11T09:54:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036036441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Main *technical* reason is to have assertions specific for Neovim's execution (like [screen state](https://github.com/neovim/neovim/blob/master/test/functional/ui/screen.lua); actually displayed colors, statusline, tabline, signcolumn; etc.) without needing to clone Neovim source code.",
            "created_at": "2022-02-11T10:04:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036043426",
            "id": 1036043426,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wMSi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036043426/reactions"
            },
            "updated_at": "2022-02-11T10:04:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036043426",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So you're suggesting exposing `screen.lua` as a `vim.util.screen` module? The problem here is that this (like most tests) requires `busted`. So exposing this makes `busted` a _runtime_ dependency rather than a build dependency like it is now. I don't think we want to do this.",
            "created_at": "2022-02-11T10:05:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036044484",
            "id": 1036044484,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wMjE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036044484/reactions"
            },
            "updated_at": "2022-02-11T10:08:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036044484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So you're suggesting exposing `screen.lua` as a `vim.util.screen` module?\r\n\r\nMaybe something like `vim.testing.screen`, with more or less friendlier user experience and along with other helpers.\r\n\r\n> The problem here is that this (like most tests) requires `busted`. So exposing this makes `busted` a _runtime_ dependency rather than a build dependency like it is now. I don't think we want to do this.\r\n\r\nWell, that is a problem, I agree. Not sure if it can be solved with some sort of compromise.\r\n\r\nAll I can say is that for me not having a more or less unified and straightforward way of writing tests for various behavior (custom statusline, tabline, auto-pairs, visualization with extmarks) led to not writing any tests at all. Having this in core might be an investment in overall stability of Neovim ecosystem.",
            "created_at": "2022-02-11T10:17:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036052941",
            "id": 1036052941,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wOnN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036052941/reactions"
            },
            "updated_at": "2022-02-11T10:17:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036052941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> All I can say is that for me not having a more or less unified and straightforward way of writing tests for various behavior (custom statusline, tabline, auto-pairs, visualization with extmarks) led to not writing any tests at all. Having this in core might be an investment in overall stability of Neovim ecosystem.\r\n\r\nUnfortunately, that's not how this works: as long as you don't force people to write tests (which is obviously not possible), there will always be excuses not to write them. `plenary.busted` is the closest you'll likely get to an \"official\" Neovim plugin test harness. I'd recommend contributing to improving that instead.\r\n\r\nAn alternative course would be to try to use the approach of `plenary` to drop the `busted` dependency for Neovim's tests. If that were feasible, you'd have a stronger case for exposing the already existing testing infrastructure. (Writing a completely new one just for plugins is a much too hard sell.)",
            "created_at": "2022-02-11T10:28:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036061263",
            "id": 1036061263,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wQpP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036061263/reactions"
            },
            "updated_at": "2022-02-11T10:28:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036061263",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And I just looked at `gitsigns`' tests -- those look pretty straightforward and make use of Neovim's built-in test helpers just fine? I don't think it's going to get any better than that (although you might try asking Lewis nicely for a blog post on how he set them up).\r\n\r\nAnything beyond that is basically shifting the burden for plugin tests from plugin authors to Neovim maintainers, which I don't think is reasonable.",
            "created_at": "2022-02-11T10:37:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036068341",
            "id": 1036068341,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wSX1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036068341/reactions"
            },
            "updated_at": "2022-02-11T10:38:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036068341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for your insight and suggestions!\r\n\r\nAlthough, I am still not comfortable closing this issue myself (mainly because I've seen that \"official guidelines\" for writing plugins and testing them can improve whole ecosystem; for example in R language), I totally respect the decision of Neovim Core on this matter.",
            "created_at": "2022-02-11T10:47:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036076524",
            "id": 1036076524,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wUXs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036076524/reactions"
            },
            "updated_at": "2022-02-11T10:47:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036076524",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We can leave it open for a while to see what other team members think (especially @tjdevries as the main plenary dev), but I'd say the situation for Neovim is very different from that for R (much smaller team, hazy line between config and plugins, no centralized package repository (and _zero_ interest in creating one!), Lua being an independent language with its own ecosystem, ...)",
            "created_at": "2022-02-11T10:53:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036080926",
            "id": 1036080926,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wVce",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036080926/reactions"
            },
            "updated_at": "2022-02-11T10:53:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036080926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "All this being said, improvements to the already [existing documentation](https://github.com/neovim/neovim/blob/master/test/README.md) for the testing infrastructure would be very much appreciated!",
            "created_at": "2022-02-11T11:40:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036119310",
            "id": 1036119310,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49we0O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036119310/reactions"
            },
            "updated_at": "2022-02-11T11:40:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036119310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure if I'm missing the point, but one can keep neovim as a git submodule and directly use its test infrastructure. I [wrote about it ](https://github.com/KillTheMule/KillTheMule.github.io/blob/master/test_plugins_from_neovim.md) (quite outdated by now I guess), and I still thinks that's the best way to be testing your lua plugins. Once set up, it's quite easy to write more tests, I think.",
            "created_at": "2022-02-11T11:56:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036140332",
            "id": 1036140332,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wj8s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036140332/reactions"
            },
            "updated_at": "2022-02-11T11:56:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036140332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4117685?v=4",
                "events_url": "https://api.github.com/users/KillTheMule/events{/privacy}",
                "followers_url": "https://api.github.com/users/KillTheMule/followers",
                "following_url": "https://api.github.com/users/KillTheMule/following{/other_user}",
                "gists_url": "https://api.github.com/users/KillTheMule/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KillTheMule",
                "id": 4117685,
                "login": "KillTheMule",
                "node_id": "MDQ6VXNlcjQxMTc2ODU=",
                "organizations_url": "https://api.github.com/users/KillTheMule/orgs",
                "received_events_url": "https://api.github.com/users/KillTheMule/received_events",
                "repos_url": "https://api.github.com/users/KillTheMule/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KillTheMule/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KillTheMule/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KillTheMule",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nice :) Feel free to make a PR to our `TESTING.md` adding any relevant information from your write-up (or add it to our Wiki)!",
            "created_at": "2022-02-11T11:58:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036142189",
            "id": 1036142189,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wkZt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036142189/reactions"
            },
            "updated_at": "2022-02-11T11:59:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036142189",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm not sure if I'm missing the point, but one can keep neovim as a git submodule and directly use its test infrastructure. I [wrote about it ](https://github.com/KillTheMule/KillTheMule.github.io/blob/master/test_plugins_from_neovim.md) (quite outdated by now I guess), and I still thinks that's the best way to be testing your lua plugins. Once set up, it's quite easy to write more tests, I think.\r\n\r\nThat is nice, thank you! Couple of thoughts:\r\n- I am not sure having `neovim` submodule in some user plugin is a good idea. It might be automatically pulled depending on plugin manager, which is not good. After all, it shouldn't be a *runtime* dependency for plugin, but only for test :)\r\n- Using code from Neovim's own tests has a general feel of using unexported functions: might work right now, but there is no confidence that it will work in future.",
            "created_at": "2022-02-11T12:07:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036148491",
            "id": 1036148491,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wl8L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036148491/reactions"
            },
            "updated_at": "2022-02-11T12:07:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036148491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm using [vusted](https://github.com/notomo/vusted) and we can also use [plenary.nvim](https://github.com/nvim-lua/plenary.nvim/blob/master/lua/plenary/busted.lua).\r\n\r\nI mostly don't have any complaints about these.\r\n\r\nBut IMO, one missing piece is async tests with consuming key-ahead (`vim.wait` will stop the key-ahead consumptions...). So some of the key-mapping related tests is hard to write.\r\n\r\n",
            "created_at": "2022-02-11T12:17:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036155566",
            "id": 1036155566,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wnqu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036155566/reactions"
            },
            "updated_at": "2022-02-11T12:18:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036155566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/629908?v=4",
                "events_url": "https://api.github.com/users/hrsh7th/events{/privacy}",
                "followers_url": "https://api.github.com/users/hrsh7th/followers",
                "following_url": "https://api.github.com/users/hrsh7th/following{/other_user}",
                "gists_url": "https://api.github.com/users/hrsh7th/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hrsh7th",
                "id": 629908,
                "login": "hrsh7th",
                "node_id": "MDQ6VXNlcjYyOTkwOA==",
                "organizations_url": "https://api.github.com/users/hrsh7th/orgs",
                "received_events_url": "https://api.github.com/users/hrsh7th/received_events",
                "repos_url": "https://api.github.com/users/hrsh7th/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hrsh7th/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hrsh7th/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hrsh7th",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There's also https://github.com/nvim-lua/nvim-lua-plugin-template as a starter template for a plugin. It includes plenary for testing - including GHA workflows.\r\n\r\n\r\nI think the only reason to include some sort of testing library in core is if we also utilize it in some portion of the neovim test suite. We could avoid some of the `exec_lua` dance in many cases.\r\n\r\n\r\nOther than that, I don't think there is a compelling reason to include it. If you look at other programming languages, having external testing libraries is not a major impediment to prevent people from writing tests. In the case of Python people even tend to prefer an external one over the built-in testing library (`pytest` vs `unittest`).\r\n\r\n\r\nThat said - I think there's potential to improve the current lua-dev tooling situation. I'd really like to have some \"run this individual test function and debug it\" functionality from within neovim - but I currently also don't see that this would require more parts to be integrated into neovim core.\r\n",
            "created_at": "2022-02-11T13:12:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036200645",
            "id": 1036200645,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49wyrF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036200645/reactions"
            },
            "updated_at": "2022-02-11T13:12:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036200645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I am not sure having neovim submodule in some user plugin is a good idea. It might be automatically pulled depending on plugin manager, which is not good. After all, it shouldn't be a runtime dependency for plugin, but only for test :)\r\n\r\nNo, that's not how you would do it: you'd clone the Neovim repo separately via CI (and as a plugin developer, you (should) have the sources available locally anyway).",
            "created_at": "2022-02-11T13:25:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036211155",
            "id": 1036211155,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49w1PT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036211155/reactions"
            },
            "updated_at": "2022-02-11T13:25:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036211155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think the only reason to include some sort of testing library in core is if we also utilize it in some portion of the neovim test suite.\r\n\r\nProbably, the main pain point that led to this issue was the (seemingly unnecessary) complications that go with the idea of making test that actually checks what is displayed on screen.\r\n\r\n> No, that's not how you would do it: you'd clone the Neovim repo separately via CI (and as a plugin developer, you (should) have the sources available locally anyway).\r\n\r\nSure, get it. I am (at least at the moment) more focused on how to organize test running that is:\r\n1. Complete enough (testing what *actually* is done or shown by Neovim). At the moment the best option seems to be cloning whole Neovim source code without certainty that it will keep the API of inner tests.\r\n1. Straightforward enough to set up locally from zero (having potential contributors and future self in mind). At the moment the best option seems to involve 'plenary.nvim' and 'busted' (like in 'nvim-lua-plugin-template').",
            "created_at": "2022-02-11T16:15:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036376670",
            "id": 1036376670,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49xdpe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036376670/reactions"
            },
            "updated_at": "2022-02-11T16:15:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036376670",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Screen tests for plugins would be quite nice. However I don't think it needs to be included in neovim. If plenary_test/vusted adds screen test support it will be enough for me .",
            "created_at": "2022-02-11T17:35:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1036449431",
            "id": 1036449431,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM49xvaX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036449431/reactions"
            },
            "updated_at": "2022-02-11T17:35:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1036449431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As this seems to not have enough support, I'll close this.",
            "created_at": "2022-05-09T13:44:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1121121840",
            "id": 1121121840,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM5C0vYw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121121840/reactions"
            },
            "updated_at": "2022-05-09T13:44:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121121840",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The reason for this to be in core is that it's valuable for it to be possible to write complete plugins with just one dependency, namely Neovim core.",
            "created_at": "2022-05-09T14:33:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1121184914",
            "id": 1121184914,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM5C0-yS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121184914/reactions"
            },
            "updated_at": "2022-05-09T14:33:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121184914",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5308024?v=4",
                "events_url": "https://api.github.com/users/andmis/events{/privacy}",
                "followers_url": "https://api.github.com/users/andmis/followers",
                "following_url": "https://api.github.com/users/andmis/following{/other_user}",
                "gists_url": "https://api.github.com/users/andmis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andmis",
                "id": 5308024,
                "login": "andmis",
                "node_id": "MDQ6VXNlcjUzMDgwMjQ=",
                "organizations_url": "https://api.github.com/users/andmis/orgs",
                "received_events_url": "https://api.github.com/users/andmis/received_events",
                "repos_url": "https://api.github.com/users/andmis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andmis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andmis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andmis",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As mentioned above, Gitsigns already does exactly this. Neovim already contains everything a plugin needs.",
            "created_at": "2022-05-09T14:45:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1121199849",
            "id": 1121199849,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM5C1Cbp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121199849/reactions"
            },
            "updated_at": "2022-05-09T14:45:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121199849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> As mentioned above, Gitsigns already does exactly this. Neovim already contains everything a plugin needs.\r\n\r\nTrue, Neovim contains everything plugin needs, but not in \"officially\" exported way. One day tests might be reorganized without notice, leading to a very tiresome debugging.\r\n\r\nAfter writing a whole bunch of tests with 'plenary.nvim' and custom helpers, I can say that the only thing truly missing in current Neovim plugin development world is indeed the screen tests. Like I would really like to test something along the lines of \"this screen cell should be displaying this character with this highlighting\".",
            "created_at": "2022-05-09T14:51:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1121206425",
            "id": 1121206425,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM5C1ECZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121206425/reactions"
            },
            "updated_at": "2022-05-09T14:51:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121206425",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  True, Neovim contains everything plugin needs, but not in \"officially\" exported way. One day tests might be reorganized without notice, leading to a very tiresome debugging.\r\n\r\nBuild against a tag (... like Gitsigns).\r\n\r\n> After writing a whole bunch of tests with 'plenary.nvim' and custom helpers, I can say that the only thing truly missing in current Neovim plugin development world is indeed the screen tests. Like I would really like to test something along the lines of \"this screen cell should be displaying this character with this highlighting\".\r\n\r\nAlready in Neovim.\r\n\r\nIt's not *officially supported*, but at the same time the core team already has a lot on their plate. It's good a well raising issues and asking for stuff, but someone **actually** needs to put in the work. If you want to champion this, then I'm sure the core team will be happy to review a well put together PR.\r\n\r\nI've been using Neovim's test infrastructure for the entirety of Gitsigns development and have literally never had any issues.\r\n",
            "created_at": "2022-05-09T14:56:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1121212686",
            "id": 1121212686,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM5C1FkO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121212686/reactions"
            },
            "updated_at": "2022-05-09T14:56:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121212686",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It's not _officially supported_, but at the same time the core team already has a lot on their plate. It's good a well raising issues and asking for stuff, but someone **actually** needs to put in the work. If you want to champion this, then I'm sure the core team will be happy to review a well put together PR.\r\n\r\nI totally understand that, not blaming anyone at all.\r\n\r\nFor me it was unusual to not be able to test such basic concept purely because it is not deemed important enough. And I actually tried two times to understand how 'test/functional/ui/screen.lua' works but didn't get far in the timespan I had free (around half a day both times). Considerably more time is needed to understand how this works to transform into some well put together PR. Hope I'll have one in the future.",
            "created_at": "2022-05-09T15:44:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1121269411",
            "id": 1121269411,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM5C1Taj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121269411/reactions"
            },
            "updated_at": "2022-05-09T15:44:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121269411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> And I actually tried two times to understand how 'test/functional/ui/screen.lua' works but didn't get far in the timespan I had free (around half a day both times). Considerably more time is needed to understand how this works to transform into some well put together PR. Hope I'll have one in the future.\r\n\r\nAnd that is exactly what all these requests boil down to, and why there is such a push back: You are asking the Neovim developers to expend additional, significant, effort just(!) to save you (generic you, as in \"plugin developers\") some time and/or effort in your own software development...",
            "created_at": "2022-05-09T16:54:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/17367#issuecomment-1121343676",
            "id": 1121343676,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17367",
            "node_id": "IC_kwDOAPphoM5C1li8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121343676/reactions"
            },
            "updated_at": "2022-05-09T16:54:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121343676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 24,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17367/comments",
    "created_at": "2022-02-11T09:51:48Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/17367/events",
    "html_url": "https://github.com/neovim/neovim/issues/17367",
    "id": 1132225277,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 110418643,
            "name": "test",
            "node_id": "MDU6TGFiZWwxMTA0MTg2NDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/test"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/17367/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5DfGL9",
    "number": 17367,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/17367/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/17367/timeline",
    "title": "More official support for plugin tests",
    "type": null,
    "updated_at": "2025-06-23T12:36:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/17367",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}