{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nWe would like to display the intro screen in Neovide to for example make sure that the donation and sponsor links are displayed, and that we honor Bram's wishes. See https://github.com/neovide/neovide/issues/620\r\n\r\nBut there are two problems, the intro screen is closed as soon as the window is redrawn. That is problematic because we don't know the final size at the time of `nvim_ui_attach`, the number of rows can change due to `guifont` and other settings that are applied during the startup.\r\n\r\nOne idea I had, is to add an auto command that runs at `VimEnter`  and calls `intro` when there's only one buffer and it does not have any text. While I think that it works, I think it would be better if Neovim did that automatically.\r\n\r\nThe second problem is that it doesn't actually work with `--multigrid`. The text is displayed behind the main window and only \"press ENTER or type command to continue\" is visible. The message is displayed in grid 1, while grid 2 is on top, both with floating order `None`  in Neovide we interpret this as the highest id is on top.\n\n### Steps to reproduce\n\n1. create a configuration that sets the guifont\r\n2. launch neovide --multigrid\r\n3. Observe that no intro screen is displayed\r\n4. run `:intro`\r\n5. Observe that the intro screen is rendered behind the buffer\r\n\n\n### Expected behavior\n\nThe intro screen should show.\n\n### Neovim version (nvim -v)\n\n0.9.1\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nNeovide\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\npacman",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "The native implementation of the intro display logic in a bit ad-hoc and a bit tricky to integrate into the multigrid flow. what neovim core could do is to relay a semantic representation of the contents of the `:intro` message (as a list of the lines), which with the GUI:s cooperation could be displayed as the GUI sees fit.",
            "created_at": "2023-08-13T20:28:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/24705#issuecomment-1676455334",
            "id": 1676455334,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24705",
            "node_id": "IC_kwDOAPphoM5j7K2m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1676455334/reactions"
            },
            "updated_at": "2023-08-13T20:28:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1676455334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Another option, which I think can be implemented completely by Neovide first, and then transferred to Neovim, would be to rewrite it in lua as a regular floating window. This could support external resizing, so that it's not closed when Neovide changes the size, but still closes on any other event like keyboard input or opening of a buffer.\r\n\r\nI will experiment a bit with this soon. `gettext` seems to return the localizated text, which I think is all I need, other than converting the `intro_message` function to lua. But if implemented natively in Neovim, both versions should probably share the code.\r\n\r\n",
            "created_at": "2023-08-14T12:05:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/24705#issuecomment-1677197861",
            "id": 1677197861,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24705",
            "node_id": "IC_kwDOAPphoM5j-AIl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1677197861/reactions"
            },
            "updated_at": "2023-08-14T12:05:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1677197861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have now implemented, what I think is a working solution in Neovide in https://github.com/neovide/neovide/pull/1980. And I think that something similar could be implemented in Neovim core. Maybe just the `show_intro` lua function.\r\n\r\nI can work further on that and make a Neovim PR, if you think it's a good idea. Of course, the C code and Lua code would share the same functionality, unit tests added and the Neovim naming conventions and style used.",
            "created_at": "2023-08-15T20:51:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/24705#issuecomment-1679595780",
            "id": 1679595780,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24705",
            "node_id": "IC_kwDOAPphoM5kHJkE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1679595780/reactions"
            },
            "updated_at": "2023-08-15T20:51:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1679595780",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "for nvim core, I think it would be better to forward the builtin message. Also has no duplicate strings which needs to be kept in sync. sketched here: #24764 .",
            "created_at": "2023-08-17T21:02:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/24705#issuecomment-1682976454",
            "id": 1682976454,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24705",
            "node_id": "IC_kwDOAPphoM5kUC7G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1682976454/reactions"
            },
            "updated_at": "2023-08-17T21:02:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1682976454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bfredl, thanks. I think your solution is workable. I would prefer if Neovim took care of the windowing completely though, but I understand that it's much more work.\r\n\r\nOn the Neovide side, I can use almost the same solution as I have there right now, just trigger it with by the UI event instead of the `VimEnter` autocommand, and as bonus it would trigger on `:intro` as well. \r\n\r\nMaybe it would be good to include the triggering cause, `startup` or `command`. I think we would like to display it as a popup with borders and everything, with a message to press esc or q to close, like `:lspinfo`, when it's triggered manually. But keep the automatic closing when it's automatically shown at the startup.\r\n\r\nI will test it a bit later, probably today or tomorrow.",
            "created_at": "2023-08-18T13:32:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/24705#issuecomment-1683928721",
            "id": 1683928721,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24705",
            "node_id": "IC_kwDOAPphoM5kXraR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1683928721/reactions"
            },
            "updated_at": "2023-08-18T13:32:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1683928721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This was partially fixed by\n*  https://github.com/neovim/neovim/pull/27867\n\nBut the `:intro` command still does not work, this check is always false\nhttps://github.com/neovim/neovim/blob/e4bc8b5967d22840c1e52c97acab0f77107cd48c/src/nvim/version.c#L2819-L2821, and causes the intro message to be drawn on grid 1, which is almost always hidden by other windows. \n\nIt should probably open a new window instead.",
            "created_at": "2024-12-29T16:28:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/24705#issuecomment-2564774153",
            "id": 2564774153,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24705",
            "node_id": "IC_kwDOAPphoM6Y31kJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2564774153/reactions"
            },
            "updated_at": "2024-12-29T16:28:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2564774153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24705/comments",
    "created_at": "2023-08-13T20:01:40Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24705/events",
    "html_url": "https://github.com/neovim/neovim/issues/24705",
    "id": 1848721155,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 103834742,
            "name": "gui",
            "node_id": "MDU6TGFiZWwxMDM4MzQ3NDI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24705/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5uMT8D",
    "number": 24705,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24705/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24705/timeline",
    "title": "Problems displaying the intro screen in UI applications",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:37:24Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24705",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
        "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
        "followers_url": "https://api.github.com/users/fredizzimo/followers",
        "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
        "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fredizzimo",
        "id": 9946255,
        "login": "fredizzimo",
        "node_id": "MDQ6VXNlcjk5NDYyNTU=",
        "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
        "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
        "repos_url": "https://api.github.com/users/fredizzimo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fredizzimo",
        "user_view_type": "public"
    }
}