{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\n `vim.pack` install plugins in two steps :\n\n1. First, it clones the remote repository.\n2. Then it checkouts the correct revision\n\nIf this process gets interrupted, the local clone of the plugin is left at revision pointed by the remote repository's `HEAD` instead of the revision specified by the `version` field.\n\nThis is a security issue, because this behavior could be exploited by a malicious user.\n\n\n### Steps to reproduce\n\nRequirements :\n\n- An account on a public Git hosting service\n- Ability to create and delete public Git repositories, and push commits\n\n1. Create a public repository with an empty plugin :\n\n   ```bash\n   mkdir -p some-plugin/lua\n   cat << \"EOF\" > some-plugin/lua/some-plugin.lua\n   local M = {}\n\n   function M.setup()\n     vim.notify(\"This is a Neovim plugin\")\n   end\n\n   return M\n   EOF\n   pushd some-plugin\n   git init\n   git add .\n   git commit --no-edit -m 'add a plugin'\n   git branch -M main\n   git remote add origin git@example.org:some-plugin.git\n   git push -u origin main\n   ```\n\n   In this example :\n\n   - The public URL of the plugin's Git repository is <https://example.org/some-plugin.git>\n   - The hash of the latest commit is `xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`\n\n2. Adds the following lines to `init.lua` and restart Neovim :\n\n   ```lua\n\n   -- Installs the plugin\n   vim.pack.add({\n     {\n         src = \"https://example.org/some-plugin.git\",\n         version = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n     }\n   })\n\n   -- Initialize the plugin\n   require('some-plugin').setup()\n   ```\n\n    At this stage, executing the command `:messages` displays the message :\n\n    ```text\n    This is a Neovim plugin\n    ```\n\n3. Amend the latest commit on the plugin's Git repository :\n\n   ```bash\n   sed -i 's/Neovim/malicious &/' lua/some-plugin.lua\n   git commit --all --amend --reset-author --no-edit\n   ```\n\n   After executing those commands, the file `lua/some-plugin.lua` contains :\n\n   ```lua\n   local M = {}\n\n   function M.setup()\n     vim.notify(\"This is a malicious Neovim plugin\")\n   end\n\n   return M\n   ```\n\n4. Delete the public Git repository, and recreate a new one with the same public URL\n\n5. Push the amended commit :\n\n   ```\n   git push --force origin main\n   ```\n\n6. Delete the local copy of the plugin's repository, in order to force `vim.pack` to reinstall it :\n\n   ```bash\n   rm -rf ~/.local/share/nvim/site/pack/core/opt/some-plugin/\n   ```\n\n7. Restart Neovim\n\nAfter those steps, the following error message appears :\n\n\n```text\nError in /home/user/.config/nvim/init.lua:\nE5113: Lua chunk: ...er/.local/lib/neovim/share/nvim/runtime/lua/vim/pack.lua:729: vim.pack:             \n                                                                                                         \n`some-plugin`:                                                                                           \n...er/.local/lib/neovim/share/nvim/runtime/lua/vim/pack.lua:485: `xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx` is not a branch/tag/commit. Available:                                                                \nTags:                                                                                                    \nBranches: main                                                                                           \nstack traceback:                                                                                         \n        [C]: in function 'error'                                                                         \n        ...er/.local/lib/neovim/share/nvim/runtime/lua/vim/pack.lua:729: in function 'add'               \n        /home/user/.config/nvim/lua/user/plugins.lua:1: in main chunk                                 \n        [C]: in function 'require'                                                                       \n        /home/user/./config/nvim/init.lua:28: in main chunk \n```\n\nIf Neovim is restarted a second time, executing the command `:messages` will display the message `This is a malicious Neovim plugin`.\n\nIf a lua module from the plugin is dynamically loaded (for instance, in a key mapping) the malicious code will get executed without restarting Neovim.\n\nThis is a security issue, because:\n\n- Steps 3 to 5 could be done by a malicious user  (someone who would have stolen the credentials of a plugin's author)\n- Steps 6 and 7 force `vim.pack` to reinstall the plugin. This could also happen if a user copy theirs Neovim configuration from one machine to another\n\n### Expected behavior\n\nIf the revision specified by the `version` is not found, installation should fail without leaving the local clone of the repository in an inconsistent state.\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-1359+g94bd212d\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nFedora Linux 42.20251004.0 (Kinoite)\n\n### Terminal name/version\n\nfoot 1.24.0\n\n### $TERM environment variable\n\nfoot\n\n### Installation\n\nbuild from repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the detailed issue!\n\nMakes sense. Thankfully, #36038 is a simple enough fix.",
            "created_at": "2025-10-05T19:59:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/36037#issuecomment-3369288968",
            "id": 3369288968,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36037",
            "node_id": "IC_kwDOAPphoM7I00UI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3369288968/reactions"
            },
            "updated_at": "2025-10-05T19:59:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3369288968",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/36037/comments",
    "created_at": "2025-10-05T08:32:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/36037/events",
    "html_url": "https://github.com/neovim/neovim/issues/36037",
    "id": 3484549201,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/36037/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7PsgBR",
    "number": 36037,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/36037/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/36037/timeline",
    "title": "vim.pack.add checkouts the repository's default branch when the commit specified in the `version` field is not available",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-05T19:59:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/36037",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1268110?v=4",
        "events_url": "https://api.github.com/users/m-r-r/events{/privacy}",
        "followers_url": "https://api.github.com/users/m-r-r/followers",
        "following_url": "https://api.github.com/users/m-r-r/following{/other_user}",
        "gists_url": "https://api.github.com/users/m-r-r/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/m-r-r",
        "id": 1268110,
        "login": "m-r-r",
        "node_id": "MDQ6VXNlcjEyNjgxMTA=",
        "organizations_url": "https://api.github.com/users/m-r-r/orgs",
        "received_events_url": "https://api.github.com/users/m-r-r/received_events",
        "repos_url": "https://api.github.com/users/m-r-r/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/m-r-r/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/m-r-r/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/m-r-r",
        "user_view_type": "public"
    }
}