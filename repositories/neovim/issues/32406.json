{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWe've found out while investigating https://github.com/seblyng/roslyn.nvim/issues/72 that a specific lsp command we need to implement to be called from completion is never executed. After analyzing the code, it seems that registered client commands are only executed when triggered via code lens / code actions (in nvim v0.10.4) and when using the new built in completion in added in nvim v0.11.0. I'm not sure if this is the intended behavior or not, as the help for vim.lsp.commands says this:\n\n>  The registry is a table where the key is a unique command name,\n>  and the value is a function which is called if **any LSP action**\n>  (code action, code lenses, ...) triggers the command.\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\nCan't provide a \"minimal\" config as setting up roslyn to work from scratch is quite a challenge and I don't know any other language server with commands on stuff other than code actions and code lens, but I don't think it's relevant for this issue. Will provide one if necessary or something is not clear.\n\n### Expected behavior\n\nI'm not completely sure how it should work. From my limited understanding of the codebase I think that any workspace/executeCommand request should first check if it has a client implementation before it is sent to the server. With the current implementation all third party completion plugins will need to handle this on their own. ~~Additionally, i think the current implementation is also not handling commands for [inlayHints](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHintLabelPart).~~\n\nNot sure if this is the right place to add this, but while trying to figure why the custom command is not executed with either nvim-cmp or blink.cmp, I've switched to the new completion added in nightly only to see that it's not getting triggered there either. It seems that it expects the resolved completion to have have additionalTextEdits for it to add the command to the completion item, but that should not [be the case](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#completionItem) and I'm pretty sure it's a bug.\n\n```lua\nclient:request(ms.completionItem_resolve, completion_item, function(err, result)\n  if changedtick ~= vim.b[bufnr].changedtick then\n    return\n  end\n\n  clear_word()\n  if err then\n    vim.notify_once(err.message, vim.log.levels.WARN)\n  elseif result and result.additionalTextEdits then\n    lsp.util.apply_text_edits(result.additionalTextEdits, bufnr, position_encoding)\n    if result.command then\n      completion_item.command = result.command\n    end\n  end\n\n  apply_snippet_and_command()\nend, bufnr)\n```\nShould be changed to something like this\n```lua\nclient:request(ms.completionItem_resolve, completion_item, function(err, result)\n  if changedtick ~= vim.b[bufnr].changedtick then\n    return\n  end\n\n  clear_word()\n  if err then\n    vim.notify_once(err.message, vim.log.levels.WARN)\n  elseif result then\n    if result.additionalTextEdits then\n        lsp.util.apply_text_edits(result.additionalTextEdits, bufnr, position_encoding)\n    end\n    if result.command then\n      completion_item.command = result.command\n    end\n  end\n\n  apply_snippet_and_command()\nend, bufnr)\n```\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0-dev-1731+gf8cbdbb4a8\n\n### Language server name/version\n\nRoslyn 4.14.0-2.25108.2\n\n### Operating system/version\n\nMicrosoft Windows [Version 10.0.22631.4751]\n\n### Log file\n\n_No response_",
    "closed_at": "2025-02-14T18:49:09Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Additionally, i think the current implementation is also not handling commands for [inlayHints](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHintLabelPart).\n\nhttps://github.com/neovim/neovim/pull/25512 was added as a basic API to interact with inlay hints (and hence executing their respective commands). See https://github.com/neovim/neovim/issues/31116 for more discussion on the topic. ",
            "created_at": "2025-02-12T05:43:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/32406#issuecomment-2652721098",
            "id": 2652721098,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32406",
            "node_id": "IC_kwDOAPphoM6eHU_K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2652721098/reactions"
            },
            "updated_at": "2025-02-12T05:43:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2652721098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32406/comments",
    "created_at": "2025-02-11T20:01:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32406/events",
    "html_url": "https://github.com/neovim/neovim/issues/32406",
    "id": 2846389024,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32406/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6pqHMg",
    "number": 32406,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32406/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32406/timeline",
    "title": "LSP: workspace/executeCommand does not always check for registered client commands",
    "updated_at": "2025-02-14T18:49:09Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32406",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55928036?v=4",
        "events_url": "https://api.github.com/users/drzbida/events{/privacy}",
        "followers_url": "https://api.github.com/users/drzbida/followers",
        "following_url": "https://api.github.com/users/drzbida/following{/other_user}",
        "gists_url": "https://api.github.com/users/drzbida/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/drzbida",
        "id": 55928036,
        "login": "drzbida",
        "node_id": "MDQ6VXNlcjU1OTI4MDM2",
        "organizations_url": "https://api.github.com/users/drzbida/orgs",
        "received_events_url": "https://api.github.com/users/drzbida/received_events",
        "repos_url": "https://api.github.com/users/drzbida/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/drzbida/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/drzbida/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/drzbida",
        "user_view_type": "public"
    }
}