{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nWhen the `ext_hlstate` extension is enabled, and more than around 500 lines are deleted using `indent-blankline.nvim` or`mini.indentscope`, the `hl_attr_define` event is repeated many times and `flush` is never called.\r\n\r\nThis causes ui clients like Neovide to stop updating.\r\n\r\nThe original issue is reported here, see that for more information and log files from Neovide\r\n* https://github.com/neovide/neovide/issues/2217\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a file `minimal.lua`\r\n```lua\r\n-- Run this file as `nvim --clean -u minimal.lua`\r\n\r\nfor name, url in pairs{\r\n  -- ADD PLUGINS _NECESSARY_ TO REPRODUCE THE ISSUE, e.g:\r\n  -- some_plugin = 'https://github.com/author/plugin.nvim'\r\n  mini_indentscope = 'https://github.com/echasnovski/mini.indentscope'\r\n} do\r\n  local install_path = vim.fn.fnamemodify('nvim_issue/'..name, ':p')\r\n  if vim.fn.isdirectory(install_path) == 0 then\r\n    vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\r\n  end\r\n  vim.opt.runtimepath:append(install_path)\r\nend\r\n\r\n-- ADD INIT.LUA SETTINGS _NECESSARY_ FOR REPRODUCING THE ISSUE\r\nrequire('mini.indentscope').setup({})\r\n```\r\n\r\n2. run `neovide -- --clean -u minimal.lua\r\n3. open a big source file\r\n4. delete more than 500 lines\r\n\r\n### Expected behavior\r\n\r\nThe lines should be deleted normally\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.9.5, Neovide 0.12.1\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nLinux\r\n\r\n### Terminal name/version\r\n\r\nN/A\r\n\r\n### $TERM environment variable\r\n\r\nN/A\r\n\r\n### Installation\r\n\r\nPacman",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Some additional notes\r\n* The `ext_hlstate` extension has to be enabled, without that you can delete as many lines you want\r\n* `hlchunk.nvim` does not cause the same problem\r\n* It was also reported that joining lines can cause the issue.\r\n* A neovide log can be seen here https://pastebin.pl/view/raw/f9f1428f, the relevant parts are at the end before the keypresses.\r\n",
            "created_at": "2024-01-10T17:08:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/26980#issuecomment-1885256670",
            "id": 1885256670,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26980",
            "node_id": "IC_kwDOAPphoM5wXrve",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885256670/reactions"
            },
            "updated_at": "2024-01-10T17:08:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885256670",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I just disabled `ext_hlstate` in Neophyte after encountering the same issue with `indent-blankline`. The logs are attached. I get a few hundred `hl_attr_define` events at line 4990 and then no further events are received and the program appears to hang. \r\n[log.txt](https://github.com/neovim/neovim/files/13924831/log.txt)\r\n",
            "created_at": "2024-01-12T23:01:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/26980#issuecomment-1890098326",
            "id": 1890098326,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26980",
            "node_id": "IC_kwDOAPphoM5wqJyW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890098326/reactions"
            },
            "updated_at": "2024-01-12T23:01:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890098326",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13814470?v=4",
                "events_url": "https://api.github.com/users/tim-harding/events{/privacy}",
                "followers_url": "https://api.github.com/users/tim-harding/followers",
                "following_url": "https://api.github.com/users/tim-harding/following{/other_user}",
                "gists_url": "https://api.github.com/users/tim-harding/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tim-harding",
                "id": 13814470,
                "login": "tim-harding",
                "node_id": "MDQ6VXNlcjEzODE0NDcw",
                "organizations_url": "https://api.github.com/users/tim-harding/orgs",
                "received_events_url": "https://api.github.com/users/tim-harding/received_events",
                "repos_url": "https://api.github.com/users/tim-harding/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tim-harding/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tim-harding/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tim-harding",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Since this is currently one of the most critical bugs in Neovide, I have been investigating this a bit more. \r\n\r\nAnd it looks like the cause is \"by design\", while the actual hang is a bug, but I have not investigated that yet.\r\n\r\nThe issue is that extmarks are not deleted by default when lines are deleted, and therefore all of the extmarks and highligts get moved into a single cell when the lines are deleted.\r\n\r\nThis can be demonstrated by adding the following test to `hlstate_spec.lua`\r\n<details><summary>combines deleted extmark highlights</summary>\r\n\r\n```lua\r\n  it('combines deleted extmark highlights', function()\r\n    insert([[\r\n      line1\r\n        line2\r\n        line3\r\n        line4\r\n        line5\r\n      line6]])\r\n\r\n    screen:expect{grid=[[\r\n      line1                                   |\r\n        line2                                 |\r\n        line3                                 |\r\n        line4                                 |\r\n        line5                                 |\r\n      line^6                                   |\r\n      {1:~                                       }|\r\n      {2:                                        }|\r\n    ]], attr_ids={\r\n      [1] = {{foreground = Screen.colors.Blue, bold = true}, {{ui_name = \"EndOfBuffer\", hi_name = \"NonText\", kind = \"ui\"}}\r\n    };\r\n      [2] = {{}, {{ui_name = \"MsgArea\", hi_name = \"MsgArea\", kind = \"ui\"}}};\r\n    }}\r\n\r\n    local ns = api.nvim_create_namespace('test')\r\n\r\n    local add_indicator = function(line, col)\r\n      api.nvim_buf_set_extmark(0, ns, line, col, {\r\n        hl_mode = 'combine',\r\n        priority = 2,\r\n        right_gravity = false,\r\n        virt_text = {{\"|\", \"Delimiter\"}},\r\n        virt_text_win_col = 0,\r\n        virt_text_pos = 'overlay',\r\n      })\r\n    end\r\n\r\n    add_indicator(1, 0)\r\n    add_indicator(2, 0)\r\n    add_indicator(3, 0)\r\n    add_indicator(4, 0)\r\n\r\n    screen:expect{grid=[[\r\n      line1                                   |\r\n      {1:|} line2                                 |\r\n      {1:|} line3                                 |\r\n      {1:|} line4                                 |\r\n      {1:|} line5                                 |\r\n      line^6                                   |\r\n      {2:~                                       }|\r\n      {3:                                        }|\r\n    ]], attr_ids={\r\n      [1] = {{foreground = Screen.colors.SlateBlue}, {{hi_name = \"Special\", kind = \"syntax\"}}};\r\n      [2] = {{bold = true, foreground = Screen.colors.Blue}, {{ui_name = \"EndOfBuffer\", kind = \"ui\", hi_name = \"NonText\"}}\r\n    };\r\n      [3] = {{}, {{ui_name = \"MsgArea\", kind = \"ui\", hi_name = \"MsgArea\"}}};\r\n    }}\r\n\r\n    helpers.feed('3ggV2jd')\r\n    --screen:redraw_debug()\r\n    screen:expect{grid=[[\r\n      line1                                   |\r\n      {1:|} line2                                 |\r\n      {2:^|}ine6                                   |\r\n      {3:~                                       }|*4\r\n      {4:3 fewer lines                           }|\r\n    ]], attr_ids={\r\n      [1] = {{foreground = Screen.colors.SlateBlue}, {{kind = \"syntax\", hi_name = \"Special\"}}};\r\n      [2] = {{foreground = Screen.colors.SlateBlue}, {1, 1, 1}};\r\n      [3] = {{bold = true, foreground = Screen.colors.Blue}, {{kind = \"ui\", ui_name = \"EndOfBuffer\", hi_name = \"NonText\"}}\r\n    };\r\n      [4] = {{}, {{kind = \"ui\", ui_name = \"MsgArea\", hi_name = \"MsgArea\"}}};\r\n    }}\r\n  end)\r\n```\r\n</details>\r\n\r\nAs can see by ` [2] = {{foreground = Screen.colors.SlateBlue}, {1, 1, 1}};`, all the three lines have been put into the same info array, just like the documentation says:\r\n> Deleting all surrounding text does NOT remove an extmark! To remove extmarks\r\nuse |nvim_buf_del_extmark()|. Deleting \"x\" in our example:  \r\n\r\nThe tests uses a more compact representation than the actual messages that are sent though, if you uncomment the `-screen:redraw_debug()` line, you see the following, which is rather wasteful. \r\n<details><summary>redraw debug output</summary>\r\n\r\n```lua\r\n{ \"hl_attr_define\", { 146, {\r\n      foreground = 6970061,\r\n      <metatable> = <1>{\r\n        __tostring = <function 1>\r\n      }\r\n    }, {\r\n      foreground = 5,\r\n      <metatable> = <table 1>\r\n    }, { {\r\n        hi_name = \"Special\",\r\n        id = 49,\r\n        kind = \"syntax\",\r\n        <metatable> = <table 1>\r\n      }, {\r\n        hi_name = \"Special\",\r\n        id = 49,\r\n        kind = \"syntax\",\r\n        <metatable> = <table 1>\r\n      } } }, { 147, {\r\n      foreground = 6970061,\r\n      <metatable> = <table 1>\r\n    }, {\r\n      foreground = 5,\r\n      <metatable> = <table 1>\r\n    }, { {\r\n        hi_name = \"Special\",\r\n        id = 49,\r\n        kind = \"syntax\",\r\n        <metatable> = <table 1>\r\n      }, {\r\n        hi_name = \"Special\",\r\n        id = 49,\r\n        kind = \"syntax\",\r\n        <metatable> = <table 1>\r\n      }, {\r\n        hi_name = \"Special\",\r\n        id = 49,\r\n        kind = \"syntax\",\r\n        <metatable> = <table 1>\r\n      } } } }\r\n```\r\n</details>\r\nNote, that it does this for each line that is combined and creates a new id. Here we have `146` with two `Special` elements and then `147` with 3 elements, so each line deleted will cause a new message to be sent. Delaying the sending of `hl_attr_define` until flush, and sending only the used ids, would clean up a little bit of this duplication. And sending just a list of ids `49` in this case, and the definition separately would reduce the amount of data a lot. \r\n\r\nPersonally, I don't see a use case for sending the whole list to the UI though, it should be enough to only send the contributing elements. In the case of `blend`, then the whole list would have to be sent though. But on the other hand, the `blend` information is not sent, so there's no way for UIs to take advantage of the information.\r\n\r\nActually, I'm not sure if any of this is that useful at all for UI. Yes, we used it as a hack to achieve smooth scrolling in Neovide with, but that should be achieved another way.\r\n* https://github.com/neovim/neovim/issues/23610\r\n\r\nFurthermore, the info table follows the links, so it reports the final calculated highlight group, rather than the actual name of the semantic highlight group you probably want to know about. So, in this case I specified `Delimiter` in the code, but it reports `Special` due to the linked highlight groups. We had to work around that in Neovide by removing the links, so that it reports `Winbar` or `FloatBorder` for example instead.\r\n\r\nSo, all in all, I think we need to completely re-think the message and deprecate this, and make sure that it's actually usable for what it's supposed to do. Maybe we need a new type of semantic information field or something that is not affected by the color scheme? That could be used for a lot of different things, drawing some elements in a more native style, cursor hover shapes, proper implementation of the smooth scrolling and so on.\r\n\r\nFor now, I will try to fix the crash, and then I will move on to add a message that provides that information. Just for a few hardcoded areas, like borders, titles, winbars, splits for now, to allow us to remove the usage of `ext_highlight` and fix https://github.com/neovim/neovim/issues/23610\r\n\r\nBTW, Using the `invalidate` property that was added to the nightly build also fixes the issue, if the plugin is updated to use that. And I also don't think that plugins like `indent_blankline.nvim` or `mini.indentscope` should need create that huge number of highlights, they only really need to highlight the current window views, not the whole buffer, and update it as the view is scrolled.\r\n<details><summary>Here's a test demonstrating the behaviour with `invalidate`</summary>\r\n\r\n```lua\r\n  it('removes deleted extmark highlights with invalidate', function()\r\n    insert([[\r\n      line1\r\n        line2\r\n        line3\r\n        line4\r\n        line5\r\n      line6]])\r\n\r\n    screen:expect{grid=[[\r\n      line1                                   |\r\n        line2                                 |\r\n        line3                                 |\r\n        line4                                 |\r\n        line5                                 |\r\n      line^6                                   |\r\n      {1:~                                       }|\r\n      {2:                                        }|\r\n    ]], attr_ids={\r\n      [1] = {{foreground = Screen.colors.Blue, bold = true}, {{ui_name = \"EndOfBuffer\", hi_name = \"NonText\", kind = \"ui\"}}\r\n    };\r\n      [2] = {{}, {{ui_name = \"MsgArea\", hi_name = \"MsgArea\", kind = \"ui\"}}};\r\n    }}\r\n\r\n    local ns = api.nvim_create_namespace('test')\r\n\r\n    local add_indicator = function(line, col)\r\n      api.nvim_buf_set_extmark(0, ns, line, col, {\r\n        hl_mode = 'combine',\r\n        priority = 2,\r\n        right_gravity = false,\r\n        virt_text = {{\"|\", \"Delimiter\"}},\r\n        virt_text_win_col = 0,\r\n        virt_text_pos = 'overlay',\r\n        invalidate = true,\r\n      })\r\n    end\r\n\r\n    add_indicator(1, 0)\r\n    add_indicator(2, 0)\r\n    add_indicator(3, 0)\r\n    add_indicator(4, 0)\r\n\r\n    screen:expect{grid=[[\r\n      line1                                   |\r\n      {1:|} line2                                 |\r\n      {1:|} line3                                 |\r\n      {1:|} line4                                 |\r\n      {1:|} line5                                 |\r\n      line^6                                   |\r\n      {2:~                                       }|\r\n      {3:                                        }|\r\n    ]], attr_ids={\r\n      [1] = {{foreground = Screen.colors.SlateBlue}, {{hi_name = \"Special\", kind = \"syntax\"}}};\r\n      [2] = {{bold = true, foreground = Screen.colors.Blue}, {{ui_name = \"EndOfBuffer\", kind = \"ui\", hi_name = \"NonText\"}}\r\n    };\r\n      [3] = {{}, {{ui_name = \"MsgArea\", kind = \"ui\", hi_name = \"MsgArea\"}}};\r\n    }}\r\n\r\n    helpers.feed('3ggV2jd')\r\n    --screen:redraw_debug()\r\n    screen:expect{grid=[[\r\n      line1                                   |\r\n      {1:|} line2                                 |\r\n      ^line6                                   |\r\n      {2:~                                       }|*4\r\n      {3:3 fewer lines                           }|\r\n    ]], attr_ids={\r\n      [1] = {{foreground = Screen.colors.SlateBlue}, {{kind = \"syntax\", hi_name = \"Special\"}}};\r\n      [2] = {{foreground = Screen.colors.Blue, bold = true}, {{kind = \"ui\", ui_name = \"EndOfBuffer\", hi_name = \"NonText\"}}\r\n    };\r\n      [3] = {{}, {{kind = \"ui\", ui_name = \"MsgArea\", hi_name = \"MsgArea\"}}};\r\n    }}\r\n  end)\r\n```\r\n</details>",
            "created_at": "2024-02-04T13:13:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/26980#issuecomment-1925745466",
            "id": 1925745466,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26980",
            "node_id": "IC_kwDOAPphoM5yyIs6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925745466/reactions"
            },
            "updated_at": "2024-02-04T13:13:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925745466",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "For the information here's a test that fails with either\r\n`Uncaught Error: test/client/msgpack_rpc_stream.lua:78: invalid msgpack-rpc string` or \r\n`test/functional/ui/hlstate_spec.lua:514: no flush received`\r\n\r\n<details><summary>does not hang when combining too many highlights</summary>\r\n\r\n```lua\r\n  it('does not hang when combining too many highlights', function()\r\n    local num_lines = 100\r\n    insert('first line\\n')\r\n    for _ = 1, num_lines do\r\n      insert([[\r\n        line\r\n      ]])\r\n    end\r\n    insert('last line')\r\n\r\n    helpers.feed('gg')\r\n    screen:expect{grid=[[\r\n      ^first line                              |\r\n        line                                  |*6\r\n      {1:                                        }|\r\n    ]], attr_ids={\r\n      [1] = {{}, {{kind = \"ui\", hi_name = \"MsgArea\", ui_name = \"MsgArea\"}}};\r\n    }}\r\n    local ns = api.nvim_create_namespace('test')\r\n\r\n    local add_indicator = function(line, col)\r\n      api.nvim_buf_set_extmark(0, ns, line, col, {\r\n        hl_mode = 'combine',\r\n        priority = 2,\r\n        right_gravity = false,\r\n        virt_text = {{\"|\", \"Delimiter\"}},\r\n        virt_text_win_col = 0,\r\n        virt_text_pos = 'overlay',\r\n      })\r\n    end\r\n\r\n    for i=1, num_lines do\r\n      add_indicator(i, 0)\r\n    end\r\n\r\n    screen:expect{grid=[[\r\n      ^first line                              |\r\n      {1:|} line                                  |*6\r\n      {2:                                        }|\r\n    ]], attr_ids={\r\n      [1] = {{foreground = Screen.colors.SlateBlue}, {{kind = \"syntax\", hi_name = \"Special\"}}};\r\n      [2] = {{}, {{kind = \"ui\", ui_name = \"MsgArea\", hi_name = \"MsgArea\"}}};\r\n    }}\r\n\r\n    helpers.feed(string.format('3ggV%ijd', num_lines-2))\r\n    --screen:redraw_debug()\r\n\r\n    local expected_ids = {}\r\n    for i = 1, num_lines - 1 do\r\n      expected_ids[i] = 1\r\n    end\r\n    screen:expect{grid=string.format([[\r\n        first line                              |\r\n        {1:|} line                                  |\r\n        {2:^|}ast line                               |\r\n        {3:~                                       }|*4\r\n        {4:%-40s}|\r\n    ]], tostring(num_lines - 1) .. \" fewer lines\"),\r\n    attr_ids={\r\n      [1] = {{foreground = Screen.colors.SlateBlue}, {{kind = \"syntax\", hi_name = \"Special\"}}};\r\n      [2] = {{foreground = Screen.colors.SlateBlue}, expected_ids};\r\n      [3] = {{foreground = Screen.colors.Blue, bold = true}, {{kind = \"ui\", hi_name = \"NonText\", ui_name = \"EndOfBuffer\"}}\r\n    };\r\n      [4] = {{}, {{kind = \"ui\", hi_name = \"MsgArea\", ui_name = \"MsgArea\"}}};\r\n    }}\r\n  end)\r\nend)\r\n```\r\n\r\n</details>",
            "created_at": "2024-02-04T14:58:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/26980#issuecomment-1925784614",
            "id": 1925784614,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26980",
            "node_id": "IC_kwDOAPphoM5yySQm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925784614/reactions"
            },
            "updated_at": "2024-02-04T14:58:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925784614",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26980/comments",
    "created_at": "2024-01-10T16:37:55Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26980/events",
    "html_url": "https://github.com/neovim/neovim/issues/26980",
    "id": 2074752155,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1786207367,
            "name": "highlight",
            "node_id": "MDU6TGFiZWwxNzg2MjA3MzY3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/highlight"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26980/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM57qjSb",
    "number": 26980,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26980/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26980/timeline",
    "title": "UI protocol: repeated `ext_hlstate`, missing ui flush when deleting lines",
    "updated_at": "2025-01-19T11:14:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26980",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
        "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
        "followers_url": "https://api.github.com/users/fredizzimo/followers",
        "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
        "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fredizzimo",
        "id": 9946255,
        "login": "fredizzimo",
        "node_id": "MDQ6VXNlcjk5NDYyNTU=",
        "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
        "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
        "repos_url": "https://api.github.com/users/fredizzimo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fredizzimo",
        "user_view_type": "public"
    }
}