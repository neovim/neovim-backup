{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nThis is now very apparent with the new default colorscheme of v0.10, which has significant difference between termguicolors and notermguicolors versions.\r\n\r\nMy setup is iTerm 2 on MacOS running NeoVim on Linux (Debian Bullseye) via SSH, using `TERM=xterm-256color` setting.\r\n\r\nWhen I start NeoVim, it first shows the intro screen with notermguicolors, and then seems to update to termguicolors, which causes it to briefly \"flash\" as the colors change, after the intro screen is displayed.\r\n\r\nI tried this with Neovim v0.10.1 on MacOS, from the GitHub build, and I don't have a problem there, so not sure what's different between both setups that I see this when running Neovim v0.10.1 from GitHub build on Linux via SSH, perhaps the way terminfo is handled?\r\n\r\nUsing `nvim -c \"set termguicolors\"` fixes the flashing, so it's one more indication that it has something to do with the RGB detection.\r\n\r\nHappy to try local debugging, just need some pointers of what kind of debugging would be useful, or where I should introduce debugging logic to see what's going on under the hood :-) \r\n\n\n### Steps to reproduce\n\nJust `nvim` or `nvim --clean`, let it show the intro screen and detect the termguicolors setting, but perhaps it needs the specific terminal + O.S. setup I have to reproduce\n\n### Expected behavior\n\nMaybe termguicolors detection should happen earlier than the first screen redraw?\n\n### Neovim version (nvim -v)\n\n0.10.1\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nLinux Debian Bullseye\n\n### Terminal name/version\n\niTerm2\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nDownload tarball from GitHub",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Here's a quick screen recording showing what happens, it's a quick flash but it should be notable\r\n\r\nhttps://github.com/user-attachments/assets/eb3719e5-6737-4946-8e60-de34d44c79e5\r\n\r\n",
            "created_at": "2024-08-03T00:09:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/29966#issuecomment-2266288344",
            "id": 2266288344,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29966",
            "node_id": "IC_kwDOAPphoM6HFNDY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2266288344/reactions"
            },
            "updated_at": "2024-08-03T00:09:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2266288344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/106037?v=4",
                "events_url": "https://api.github.com/users/filbranden/events{/privacy}",
                "followers_url": "https://api.github.com/users/filbranden/followers",
                "following_url": "https://api.github.com/users/filbranden/following{/other_user}",
                "gists_url": "https://api.github.com/users/filbranden/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/filbranden",
                "id": 106037,
                "login": "filbranden",
                "node_id": "MDQ6VXNlcjEwNjAzNw==",
                "organizations_url": "https://api.github.com/users/filbranden/orgs",
                "received_events_url": "https://api.github.com/users/filbranden/received_events",
                "repos_url": "https://api.github.com/users/filbranden/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/filbranden/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/filbranden/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/filbranden",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Also reproduced this on Fedora using the neovim 0.10.1-1.fc40 package built by Fedora.\r\n\r\nAnd on Debian Trixie using the tarball from GitHub.\r\n\r\nIt seems this problem actually _does_ reproduce on MacOS iTerm itself, but without the latency of SSH it's not noticeable enough.\r\n\r\nUsing `script` and comparing the output, I can see that the `typescript` file seems to include a whole empty screen (tildes all the way down), then the intro message at the center, and then finally the intro message with escape codes that encode 24-bit colors. So it seems the problem exists everywhere, it's only that latency of SSH makes it noticeable.\r\n",
            "created_at": "2024-08-03T02:18:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/29966#issuecomment-2266334122",
            "id": 2266334122,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29966",
            "node_id": "IC_kwDOAPphoM6HFYOq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2266334122/reactions"
            },
            "updated_at": "2024-08-03T02:18:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2266334122",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/106037?v=4",
                "events_url": "https://api.github.com/users/filbranden/events{/privacy}",
                "followers_url": "https://api.github.com/users/filbranden/followers",
                "following_url": "https://api.github.com/users/filbranden/following{/other_user}",
                "gists_url": "https://api.github.com/users/filbranden/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/filbranden",
                "id": 106037,
                "login": "filbranden",
                "node_id": "MDQ6VXNlcjEwNjAzNw==",
                "organizations_url": "https://api.github.com/users/filbranden/orgs",
                "received_events_url": "https://api.github.com/users/filbranden/received_events",
                "repos_url": "https://api.github.com/users/filbranden/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/filbranden/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/filbranden/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/filbranden",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I saw this code in `update_screen()` which delays redraw depending on whether the intro message should be displayed:\r\nhttps://github.com/neovim/neovim/blob/v0.10.1/src/nvim/drawscreen.c#L425-L430\r\n\r\nI wonder if that could be tweaked or a similar check could be made to delay the initial redraw until 24-bit color detection has been completed?\r\n\r\nHappy to test changes locally, let me know if there's anything I can try. Or pointers towards where 24-bit color detection happens, so that I can try to piece that all together. Thanks!\r\n",
            "created_at": "2024-08-03T02:22:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/29966#issuecomment-2266335290",
            "id": 2266335290,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29966",
            "node_id": "IC_kwDOAPphoM6HFYg6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2266335290/reactions"
            },
            "updated_at": "2024-08-03T02:22:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2266335290",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/106037?v=4",
                "events_url": "https://api.github.com/users/filbranden/events{/privacy}",
                "followers_url": "https://api.github.com/users/filbranden/followers",
                "following_url": "https://api.github.com/users/filbranden/following{/other_user}",
                "gists_url": "https://api.github.com/users/filbranden/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/filbranden",
                "id": 106037,
                "login": "filbranden",
                "node_id": "MDQ6VXNlcjEwNjAzNw==",
                "organizations_url": "https://api.github.com/users/filbranden/orgs",
                "received_events_url": "https://api.github.com/users/filbranden/received_events",
                "repos_url": "https://api.github.com/users/filbranden/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/filbranden/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/filbranden/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/filbranden",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/blob/v0.10.1/src/nvim/tui/tui.c#L1855-L1883\r\nhttps://github.com/neovim/neovim/blob/v0.10.1/runtime/lua/vim/_defaults.lua#L431-L532",
            "created_at": "2024-08-03T02:33:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/29966#issuecomment-2266338287",
            "id": 2266338287,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29966",
            "node_id": "IC_kwDOAPphoM6HFZPv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2266338287/reactions"
            },
            "updated_at": "2024-08-03T02:33:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2266338287",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the pointers!\r\n\r\nI see this code was introduced in #26407 (cc @gpanders) and that flickering was even discussed in that PR.\r\n\r\nI wonder if it would be possible to handle this more synchronously and perhaps in the C code (in `term_has_truecolor()`), perhaps similar to how `handle_unknown_csi()` detects `CSI ? <flags> u` to enable Kitty key encoding (though not sure that can be called \"synchronous\" either.) \r\n\r\nReading [this](https://gist.github.com/kurahaupo/6ce0eaefe5e730841f03cb82b061daa2#querying-the-terminal) gives me the impression that querying the terminal synchronously should be possible, with the answer `ESC P 0 $ r ESC \\` for a failed query to a terminal that doesn't support true color, but granted I don't have that deep of an understanding of how this works, so I'm not completely sure about that.\r\n\r\nIn any case, happy to help however possible.\r\n",
            "created_at": "2024-08-03T19:55:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/29966#issuecomment-2267118382",
            "id": 2267118382,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29966",
            "node_id": "IC_kwDOAPphoM6HIXsu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2267118382/reactions"
            },
            "updated_at": "2024-08-03T19:55:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2267118382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/106037?v=4",
                "events_url": "https://api.github.com/users/filbranden/events{/privacy}",
                "followers_url": "https://api.github.com/users/filbranden/followers",
                "following_url": "https://api.github.com/users/filbranden/following{/other_user}",
                "gists_url": "https://api.github.com/users/filbranden/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/filbranden",
                "id": 106037,
                "login": "filbranden",
                "node_id": "MDQ6VXNlcjEwNjAzNw==",
                "organizations_url": "https://api.github.com/users/filbranden/orgs",
                "received_events_url": "https://api.github.com/users/filbranden/received_events",
                "repos_url": "https://api.github.com/users/filbranden/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/filbranden/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/filbranden/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/filbranden",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\r\n> It seems this problem actually _does_ reproduce on MacOS iTerm itself, but without the latency of SSH it's not noticeable enough.\r\n\r\nIf `$COLORTERM` is set, or if your terminfo entry indicates support for the `Tc`, `RGB`, `setrgbf`/`setrgbb` capabilities then Neovim will not query the terminal and `termguicolors` is enabled immediately (in `_defaults.lua`). This is what happens when you're running on macOS, since iTerm2 sets `$COLORTERM`.\r\n\r\nWhen using SSH, `$COLORTERM` is usually not set, and the `xterm-256color` terminfo entry that iTerm2 uses does not contain any of the aforementioned capabilities, so Neovim must query the terminal. Querying always has some latency, and the latency is much worse over SSH, which is why the effect is visible.\r\n\r\nThere really is no \"solution\" to this other than doing one of the following:\r\n\r\n1. Enable `'termguicolors'` in your Neovim config. If you know your terminal supports it there is no harm in doing this.\r\n1. Set `$COLORTERM` to `truecolor` in your SSH session (or configure your SSH client to send this environment variable automatically).\r\n1. Use a terminal emulator that lists the `Tc`, `RGB`, or `setrgbf`/`setrgbb` capabilities in its terminfo entry (terminals which piggy back on `xterm-256color` are paying the price for that convenience by not correctly advertising their capabilities, which is why they should not do this).\r\n\r\n>Reading [this](https://gist.github.com/kurahaupo/6ce0eaefe5e730841f03cb82b061daa2#querying-the-terminal) gives me the impression that querying the terminal synchronously should be possible\r\n\r\nThis is what Neovim uses to query the terminal as mentioned above.\r\n \r\n> Using `script` and comparing the output, I can see that the `typescript` file seems to include a whole empty screen (tildes all the way down), then the intro message at the center, and then finally the intro message with escape codes that encode 24-bit colors. So it seems the problem exists everywhere, it's only that latency of SSH makes it noticeable.\r\n\r\n>I saw this code in update_screen() which delays redraw depending on whether the intro message should be displayed:\r\nhttps://github.com/neovim/neovim/blob/v0.10.1/src/nvim/drawscreen.c#L425-L430\r\n>\r\n>I wonder if that could be tweaked or a similar check could be made to delay the initial redraw until 24-bit color detection has been completed?\r\n\r\nI don't think that is a workable solution, since the time to detect truecolor support can sometimes be quite long (e.g. on slow SSH connections inside tmux).\r\n\r\nWe could _possibly_ reconsider whether to enable `termguicolors` by default and disable it if the query mechanism fails. I'll leave this issue open to consider that, but otherwise I don't think there's anything actionable here.\r\n\r\n",
            "created_at": "2024-08-03T20:58:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/29966#issuecomment-2267148104",
            "id": 2267148104,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29966",
            "node_id": "IC_kwDOAPphoM6HIe9I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2267148104/reactions"
            },
            "updated_at": "2024-08-03T20:58:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2267148104",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the great suggestions @gpanders!\r\n\r\n> 1. Enable `'termguicolors'` in your Neovim config. If you know your terminal supports it there is no harm in doing this.\r\n\r\nYes indeed this is probably the most pragmatic solution but unfortunately it breaks down when actually using a different terminal that doesn't support GUI colors. Indeed it's fine for now but I think it would be nice to use this issue to improve on this situation.\r\n\r\n> 2. Set `$COLORTERM` to `truecolor` in your SSH session (or configure your SSH client to send this environment variable automatically).\r\n\r\nYes, this would work, but unfortunately it involves quite a bit of plumbing to pass variables on ssh and sudo. They already do the job for `$TERM` so piggybacking on that is definitely preferable.\r\n\r\n> 3. Use a terminal emulator that lists the `Tc`, `RGB`, or `setrgbf`/`setrgbb` capabilities in its terminfo entry (terminals which piggy back on `xterm-256color` are paying the price for that convenience by not correctly advertising their capabilities, which is why they should not do this).\r\n\r\nI agree this would be the preferred approach and it's indeed unfortunate that this wasn't done from the beginning. I found `xterm-direct` and `xterm-direct256` but it seems at least Debian/Ubuntu still don't ship it by default, but as part of an add-on package with rare or unusual terminfo entries. I opened [Debian bug \\#1077993](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1077993) and [Ubuntu bug \\#2076112](https://bugs.launchpad.net/ubuntu/+source/ncurses/+bug/2076112) in an attempt to make those entries more pervasive. I'm also looking into iTerm2, which ships its own terminfo entries for `xterm` and `xterm-256colors`, to additionally ship something like `xterm-direct`.\r\n\r\n---\r\n\r\nAnother idea I had that would not require changes to ssh/sudo or to the current `$TERM` is to do the Truecolor detection and setting `$COLORTERM` on a bash_profile or similar, that way instead of having to do it every time nvim is started it can be a one-off while logging in. That would still support Truecolor terminals with a legacy `TERM=xterm-256color`, via ssh, while avoiding the flickering at start of nvim. I haven't really coded this solution yet but I may end up getting around to doing so.\r\n\r\n---\r\n\r\nSome more ideas on how to resolve this longer term:\r\n\r\n- I thought of ideas to allow assuming `'termguicolors'` is available from the start. What if we sent both `ctermfg` _and_ `guifg` escape sequences in a row? I thought this might work, on the assumption that the `guifg` sequence (`setrgbf`?) would do nothing on a terminal that doesn't support Truecolor, so it would just keep the previous `ctermfg` setting. But on some initial testing, that doesn't seem to be the case. (Or perhaps my testing wasn't good?) Not sure this is fully viable, particularly with cterm and gui settings change in terms of attributes, there would still need to be some compromise into which one to use before detection is complete.\r\n\r\n- A second idea was that even though `'termguicolors'` technically allows for up to 2^24 or so colors, a color scheme would rarely use more than 100 or so, even 200 is a stretch. And technically it _should_ be possible to modify the color palette on a 256-color terminal using the OSC 4 sequence, right? So technically `'termguicolors'` would possibly be achievable, in most cases, or with a couple of limitations, on a 256 color terminal, no? Of course there's probably quite a bit of code complexity here, but it might be a workable approach.\r\n\r\nFor now, I'm planning to look further into making `xterm-direct` a thing, even if it's a long-term plan in general, I think I can make it work it in my case (installing optional `ncurses-term` is pretty doable, and hoping iTerm2 might be amenable to a patch that supports that as an option.)\r\n\r\nThanks!\r\n",
            "created_at": "2024-08-05T20:43:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/29966#issuecomment-2269885193",
            "id": 2269885193,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29966",
            "node_id": "IC_kwDOAPphoM6HS7MJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269885193/reactions"
            },
            "updated_at": "2024-08-05T20:43:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269885193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/106037?v=4",
                "events_url": "https://api.github.com/users/filbranden/events{/privacy}",
                "followers_url": "https://api.github.com/users/filbranden/followers",
                "following_url": "https://api.github.com/users/filbranden/following{/other_user}",
                "gists_url": "https://api.github.com/users/filbranden/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/filbranden",
                "id": 106037,
                "login": "filbranden",
                "node_id": "MDQ6VXNlcjEwNjAzNw==",
                "organizations_url": "https://api.github.com/users/filbranden/orgs",
                "received_events_url": "https://api.github.com/users/filbranden/received_events",
                "repos_url": "https://api.github.com/users/filbranden/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/filbranden/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/filbranden/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/filbranden",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29966/comments",
    "created_at": "2024-08-03T00:02:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29966/events",
    "html_url": "https://github.com/neovim/neovim/issues/29966",
    "id": 2445898118,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim startup sequence (`:h startup`)",
            "id": 870629450,
            "name": "startup",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/startup"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29966/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6RyXGG",
    "number": 29966,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29966/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29966/timeline",
    "title": "Intro screen flashes before rgb colors get detected on terminal",
    "updated_at": "2025-01-19T11:17:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29966",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/106037?v=4",
        "events_url": "https://api.github.com/users/filbranden/events{/privacy}",
        "followers_url": "https://api.github.com/users/filbranden/followers",
        "following_url": "https://api.github.com/users/filbranden/following{/other_user}",
        "gists_url": "https://api.github.com/users/filbranden/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/filbranden",
        "id": 106037,
        "login": "filbranden",
        "node_id": "MDQ6VXNlcjEwNjAzNw==",
        "organizations_url": "https://api.github.com/users/filbranden/orgs",
        "received_events_url": "https://api.github.com/users/filbranden/received_events",
        "repos_url": "https://api.github.com/users/filbranden/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/filbranden/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/filbranden/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/filbranden",
        "user_view_type": "public"
    }
}