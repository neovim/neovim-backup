{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "## Problem\n\nAI clients can discover local [MCP \"tools\"](https://modelcontextprotocol.io/specification/2025-06-18/server/tools) which do arbitrary things. Using the Nvim RPC API we could easily provide a MCP server that lets AI clients read and control Nvim.\n\nReference implementations:\n\n- https://github.com/bigcodegen/mcp-neovim-server looks like a great starting point. @bigcodegen\n- [mcphub.nvim](https://github.com/ravitemer/mcphub.nvim/tree/main/lua/mcphub/native) implements an MCP SDK in Lua\n\n\nExamples from other IDEs/editors:\n\n- [JetBrains builtin MCP server](https://www.jetbrains.com/help/idea/mcp-server.html#supported-tools) provides many tools like `search_in_files_content`, `list_available_actions`, `get_project_problems`, `open_file_in_editor`, `replace_selected_text`, etc.\n- https://github.com/juehang/vscode-mcp-server\n\n## Expected behavior\n\nShip a Lua module which acts as an MCP server. Can be activated in multiple ways:\n\n- activate the *current* Nvim instance as an MCP server\n- invoked as a `nvim -l` CLI script that daemonizes and \"shims\" to another Nvim instance(s)\n\nWhen the `$NVIM` environment variable is defined, it automatically interacts with that Nvim instance (\"just works\" if the AI client is running in `:terminal`).\n\nThe MCP server provides various \"tools\" and \"resources\". Some ideas (these are rather generic, maybe should be more granular):\n\n- `nvim_get_servers` (readonly) lists all known Nvim servers ([`serverlist{peer=true}`](https://github.com/neovim/neovim/pull/34806))\n- `nvim_get_state` (readonly) returns a big map of info such as: \n    - current selected text + metadata\n    - related: https://github.com/neovim/neovim/issues/32949\n- `nvim_get_bufs` (readonly) returns full text of specified buffers (defaults to \"all\")\n    - open buffers (including non-file buffers such as `:terminal`) + metadata (\"current file\", unsaved changes, ...?)\n    - current file\n- `nvim_set_state` (write) performs potentially destructive actions\n    - switch to file\n    - idk...?\n- `nvim_exec` (write/execute) executes arbitrary Lua script\n\nTODO:\n\n- just convert https://github.com/bigcodegen/mcp-neovim-server to Lua? It looks great.\n- do we need a way to mark buffers/regions as `sensitive` (never return their contents to MCP)",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Other than \"tools\", MCP also define \"resources\" and \"prompt\". I think all the points you mark as \"readonly\" above are rather \"resources\" than \"tools\". \"Prompts\" give users slash commands to manually choose something to add as context to LLM, so it is also convenient. \n\n[This plugin](https://github.com/ravitemer/mcphub.nvim/tree/main/lua/mcphub/native) already implement an MCP SDK in Lua, as well as a built-in MCP server also written in Lua\n\nBut to make it easy for users to configure this \"Neovim MCP server\" to use in any LLM clients (that support MCP), I think the server should still be available as a CLI tool (just like LSP servers). And of course as an CLI tool, it wouldn't have to be written in Lua, but could be Go, etc. The problem of `mcphub.nvim` way of integrating with LLM clients is that the LLM clients must be supported from mcphub.nvim side, so you can not easily integrate `mcphub.nvim`'s native servers with any clients like Claude Code",
            "created_at": "2025-08-25T07:19:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/35457#issuecomment-3219120978",
            "id": 3219120978,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35457",
            "node_id": "IC_kwDOAPphoM6_3-NS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3219120978/reactions"
            },
            "updated_at": "2025-08-25T07:29:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3219120978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think the server should still be available as a CLI tool\n\nadded.\n\n> And of course as an CLI tool, it wouldn't have to be written in Lua, but could be Go, etc.\n\n? if we ship it then it should be in Lua, there's no reason for us to take on another platform dependency.",
            "created_at": "2025-08-25T18:39:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/35457#issuecomment-3221343048",
            "id": 3221343048,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35457",
            "node_id": "IC_kwDOAPphoM7AActI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221343048/reactions"
            },
            "updated_at": "2025-08-25T18:39:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221343048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35457/comments",
    "created_at": "2025-08-24T21:22:53Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35457/events",
    "html_url": "https://github.com/neovim/neovim/issues/35457",
    "id": 3349918719,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "artificial belligerence",
            "id": 9164253471,
            "name": "ai-llm-mcp",
            "node_id": "LA_kwDOAPphoM8AAAACIjtpHw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ai-llm-mcp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35457/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 738,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 631,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-08-26T02:25:08Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM7Hq7P_",
    "number": 35457,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 4,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 5,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35457/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35457/timeline",
    "title": "MCP server provides MCP tools for use by AI clients",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-25T18:46:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35457",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}