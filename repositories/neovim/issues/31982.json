{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nAs far as I know, the only way to use multiple workspaces folders for a mono repo is rather manual. You'll have to hard code it in your config, or use exrc combined with some some code I assume to find the current projects related config and pass it into your LSP.\n\n### Expected behavior\n\nIt would be great if we could adapt [VSCode's .code-workspace file format](https://code.visualstudio.com/docs/editor/workspaces#_multiroot-workspaces) (best case scenario) or a similar structure so that you can define your folders per project and commit it to the git repository.\n\nI have a POC plugin [workspace-folders.nvim](https://github.com/mhanberg/workspace-folders.nvim) that showcases a possible implementation. The downside to the plugin approach is that LSP servers need to adopt it and the user must include it. If it was builtin behavior, it could be relied upon by nvim-lspconfig or plugins like [elixir-tools.nvim](https://github.com/elixir-tools/elixir-tools.nvim).\n\nOr, possibly no plugin has to think about it and vim.lsp.start would automatically handle it for you.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Not sure how that would work, nvim does not have a notion of a workspace, just a workspace folder, so for example if we assume multiple typescript workspace folders, if you configure a language server with a multi workspace folder support and open two distinct folders they will be attached to the server instance, but there is no way to force it to start a new instance of the language server if you open a 3rd unrelated (unreleated in the sense - i as the user consider this an unrelated project/folder) workspace folder, of the same type - typescript, it will just also attach to the same running instance, **there is a way as you say one could manually start a new intance of the server whenever some user defined rule is met.**, but that is not supported out of the box, but could be achieved easily with a plugin ",
            "created_at": "2025-01-12T16:50:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/31982#issuecomment-2585831526",
            "id": 2585831526,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31982",
            "node_id": "IC_kwDOAPphoM6aIKhm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585831526/reactions"
            },
            "updated_at": "2025-01-12T16:52:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585831526",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> but there is no way to force it to start a new instance of the language server if you open a 3rd unrelated (unreleated in the sense - i as the user consider this an unrelated project/folder) workspace folder, of the same type - typescript, it will just also attach to the same running instance\n\nI'm not really following this. If you open a third project that isn't a member of the workspace folders as marked in the code-workspace file, it would just start it however it might normally start it.",
            "created_at": "2025-01-12T17:29:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/31982#issuecomment-2585843023",
            "id": 2585843023,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31982",
            "node_id": "IC_kwDOAPphoM6aINVP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585843023/reactions"
            },
            "updated_at": "2025-01-12T17:29:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585843023",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5523984?v=4",
                "events_url": "https://api.github.com/users/mhanberg/events{/privacy}",
                "followers_url": "https://api.github.com/users/mhanberg/followers",
                "following_url": "https://api.github.com/users/mhanberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/mhanberg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mhanberg",
                "id": 5523984,
                "login": "mhanberg",
                "node_id": "MDQ6VXNlcjU1MjM5ODQ=",
                "organizations_url": "https://api.github.com/users/mhanberg/orgs",
                "received_events_url": "https://api.github.com/users/mhanberg/received_events",
                "repos_url": "https://api.github.com/users/mhanberg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mhanberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mhanberg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mhanberg",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is this different than https://github.com/neovim/neovim/issues/8610 ?\n\n> adapt [VSCode's .code-workspace file format](https://code.visualstudio.com/docs/editor/workspaces#_multiroot-workspaces)\n\nWhere is the format documented, does it have a specification?\n\nI think we could do this for `.nvim.lua` by default.",
            "created_at": "2025-01-13T09:14:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/31982#issuecomment-2586565699",
            "id": 2586565699,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31982",
            "node_id": "IC_kwDOAPphoM6aK9xD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586565699/reactions"
            },
            "updated_at": "2025-01-13T09:15:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586565699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Is this different than https://github.com/neovim/neovim/issues/8610 ?\n\nThis behavior isn't listed in that proposal, but could definitely absorb it.\n\n> Where is the format documented, does it have a specification?\n\nThey only documentation I know of is that page I linked to. Its basically a JSON object with a \"folders\" property that is a list of objects with a path property.\n\n```json\n{\n  \"folders\": [\n    {\n      \"path\": \"my-folder-a\"\n    },\n    {\n      \"path\": \"my-folder-b\"\n    }\n  ]\n}\n```\n\nAdvantages to adopting VSCode's file and format is that projects can share a single workspace config format, might even already be committed to your project's mono repo\n\nDisadvantage is that its not really a target with a well defined spec and a static foundation (MS might just change it, etc). And the file name is bad (IMO) \"my-project.code-workspace\". ",
            "created_at": "2025-01-13T17:24:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/31982#issuecomment-2587732538",
            "id": 2587732538,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31982",
            "node_id": "IC_kwDOAPphoM6aPao6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587732538/reactions"
            },
            "updated_at": "2025-01-13T17:24:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587732538",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5523984?v=4",
                "events_url": "https://api.github.com/users/mhanberg/events{/privacy}",
                "followers_url": "https://api.github.com/users/mhanberg/followers",
                "following_url": "https://api.github.com/users/mhanberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/mhanberg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mhanberg",
                "id": 5523984,
                "login": "mhanberg",
                "node_id": "MDQ6VXNlcjU1MjM5ODQ=",
                "organizations_url": "https://api.github.com/users/mhanberg/orgs",
                "received_events_url": "https://api.github.com/users/mhanberg/received_events",
                "repos_url": "https://api.github.com/users/mhanberg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mhanberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mhanberg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mhanberg",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31982/comments",
    "created_at": "2025-01-12T14:29:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31982/events",
    "html_url": "https://github.com/neovim/neovim/issues/31982",
    "id": 2782514656,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31982/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6l2c3g",
    "number": 31982,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31982/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31982/timeline",
    "title": "Support .code-workspace (or similar) file for LSP workspace folders",
    "updated_at": "2025-01-17T15:00:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31982",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5523984?v=4",
        "events_url": "https://api.github.com/users/mhanberg/events{/privacy}",
        "followers_url": "https://api.github.com/users/mhanberg/followers",
        "following_url": "https://api.github.com/users/mhanberg/following{/other_user}",
        "gists_url": "https://api.github.com/users/mhanberg/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mhanberg",
        "id": 5523984,
        "login": "mhanberg",
        "node_id": "MDQ6VXNlcjU1MjM5ODQ=",
        "organizations_url": "https://api.github.com/users/mhanberg/orgs",
        "received_events_url": "https://api.github.com/users/mhanberg/received_events",
        "repos_url": "https://api.github.com/users/mhanberg/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mhanberg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mhanberg/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mhanberg",
        "user_view_type": "public"
    }
}