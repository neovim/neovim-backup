{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\n`nvim --clean -u repro.lua`\n```lua\nlocal api, fn = vim.api, vim.fn\nrequire('vim._extui').enable {}\nlocal buf = api.nvim_create_buf(false, true)\nlocal list = { 'abcdefg', 'foo', 'foobarbaz' }\nlocal i = 0\n\nvim.o.showtabline = 2\nvim.cmd.startinsert()\nvim.keymap.set('i', '<tab>', function()\n  i = list[i + 1] and i + 1 or 1\n  local str = list[i]\n  local l = fn.line('.')\n  api.nvim_buf_set_lines(buf, 0, -1, false, {})\n  api.nvim_win_set_cursor(0, { l, 0 })\n  local win = api.nvim_open_win(buf, false, {\n    relative = 'editor',\n    width = 1,\n    height = 1,\n    row = 0,\n    col = 0,\n    hide = true,\n    focusable = false,\n  })\n  vim._with({ win = win, buf = buf }, function() fn.complete(1, { str }) end)\n  api.nvim_win_close(win, true)\n  api.nvim_buf_set_lines(0, l - 1, l, false, { str })\n  api.nvim_win_set_cursor(0, { l, #str })\nend)\n\nlocal c = 1000\nlocal itv = 100\nfor _ = 1, 10 do\n  vim.defer_fn(function() api.nvim_input('<tab>') end, c + itv)\n  c = c + itv\nend\n```\n\nhttps://github.com/user-attachments/assets/99c05969-2316-48d7-ae94-41ccdd2aee4e\n\n### Expected behavior\n\nNo flicker. And tabline should be `[No Name]`. \n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-578+g5f00e6adaf\n\n### Operating system/version\n\nlinux\n\n### Terminal name/version\n\nkitty",
    "closed_at": "2025-06-13T08:37:20Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
        "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
        "followers_url": "https://api.github.com/users/luukvbaal/followers",
        "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
        "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/luukvbaal",
        "id": 31730729,
        "login": "luukvbaal",
        "node_id": "MDQ6VXNlcjMxNzMwNzI5",
        "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
        "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
        "repos_url": "https://api.github.com/users/luukvbaal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/luukvbaal",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Not sure this can be avoided in the extui module. `insexpand.c` calls `showmode()` directly in a few places where just setting `redraw_showmode` would suffice. Only when followed directly by a `ui_flush()` does it make sense to call directly, of which there is only one occurrence (after which the others may have been modeled). Following patch seems to fix the issue:\n```diff\ndiff --git a/src/nvim/insexpand.c b/src/nvim/insexpand.c\nindex 1f289ebc82..f0180b3f3c 100644\n--- a/src/nvim/insexpand.c\n+++ b/src/nvim/insexpand.c\n@@ -339,7 +339,7 @@ void ins_ctrl_x(void)\n     ctrl_x_mode = CTRL_X_NOT_DEFINED_YET;\n     edit_submode = _(CTRL_X_MSG(ctrl_x_mode));\n     edit_submode_pre = NULL;\n-    showmode();\n+    redraw_mode = true;\n   } else {\n     // CTRL-X in CTRL-X CTRL-V mode behaves differently to make CTRL-X\n     // CTRL-V look like CTRL-N\n@@ -2322,7 +2322,7 @@ static bool set_ctrl_x_mode(const int c)\n       edit_submode = _(\" (replace) Scroll (^E/^Y)\");\n     }\n     edit_submode_pre = NULL;\n-    showmode();\n+    redraw_mode = true;\n     break;\n   case Ctrl_L:\n     // complete whole line\n@@ -2386,7 +2386,7 @@ static bool set_ctrl_x_mode(const int c)\n     // stop completion\n     ctrl_x_mode = CTRL_X_NORMAL;\n     edit_submode = NULL;\n-    showmode();\n+    redraw_mode = true;\n     retval = true;\n     break;\n   case Ctrl_P:\n@@ -2424,7 +2424,7 @@ static bool set_ctrl_x_mode(const int c)\n     }\n     ctrl_x_mode = CTRL_X_NORMAL;\n     edit_submode = NULL;\n-    showmode();\n+    redraw_mode = true;\n     break;\n   }\n \n@@ -2539,7 +2539,7 @@ static bool ins_compl_stop(const int c, const int prev_mode, bool retval)\n   compl_enter_selects = false;\n   if (edit_submode != NULL) {\n     edit_submode = NULL;\n-    showmode();\n+    redraw_mode = true;\n   }\n \n   if (c == Ctrl_C && cmdwin_type != 0) {\n@@ -2627,14 +2627,14 @@ bool ins_compl_prep(int c)\n       ctrl_x_mode = ctrl_x_mode_scroll() ? CTRL_X_NORMAL : CTRL_X_FINISHED;\n       edit_submode = NULL;\n     }\n-    showmode();\n+    redraw_mode = true;\n   }\n \n   if (compl_started || ctrl_x_mode == CTRL_X_FINISHED) {\n     // Show error message from attempted keyword completion (probably\n     // 'Pattern not found') until another key is hit, then go back to\n     // showing what mode we are in.\n-    showmode();\n+    redraw_mode = true;\n     if ((ctrl_x_mode_normal()\n          && c != Ctrl_N\n          && c != Ctrl_P\n@@ -5681,7 +5681,7 @@ static void ins_compl_show_statusmsg(void)\n   }\n \n   // Show a message about what (completion) mode we're in.\n-  showmode();\n+  redraw_mode = true;\n   if (!shortmess(SHM_COMPLETIONMENU)) {\n     if (edit_submode_extra != NULL) {\n       if (!p_smd) {\n```\n",
            "created_at": "2025-06-12T08:13:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/34465#issuecomment-2965588618",
            "id": 2965588618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34465",
            "node_id": "IC_kwDOAPphoM6ww0qK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2965588618/reactions"
            },
            "updated_at": "2025-06-12T08:13:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2965588618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I confirm this can fix for me. (Also fix the X-problem from blink-cmps's dot-repeat implement https://github.com/Saghen/blink.cmp/blob/98734112c31541410f64473ac1aaa2b1e04933e8/lua/blink/cmp/lib/text_edits.lua#L358-L384)",
            "created_at": "2025-06-12T09:21:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/34465#issuecomment-2965817260",
            "id": 2965817260,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34465",
            "node_id": "IC_kwDOAPphoM6wxses",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2965817260/reactions"
            },
            "updated_at": "2025-06-12T09:21:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2965817260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/91544758?v=4",
                "events_url": "https://api.github.com/users/phanen/events{/privacy}",
                "followers_url": "https://api.github.com/users/phanen/followers",
                "following_url": "https://api.github.com/users/phanen/following{/other_user}",
                "gists_url": "https://api.github.com/users/phanen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phanen",
                "id": 91544758,
                "login": "phanen",
                "node_id": "U_kgDOBXTctg",
                "organizations_url": "https://api.github.com/users/phanen/orgs",
                "received_events_url": "https://api.github.com/users/phanen/received_events",
                "repos_url": "https://api.github.com/users/phanen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phanen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phanen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phanen",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34465/comments",
    "created_at": "2025-06-12T03:39:33Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34465/events",
    "html_url": "https://github.com/neovim/neovim/issues/34465",
    "id": 3138720700,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34465/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM67FRO8",
    "number": 34465,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34465/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34465/timeline",
    "title": "extui: flicker and wrong tabline when  `complete()`",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-13T08:37:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34465",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/91544758?v=4",
        "events_url": "https://api.github.com/users/phanen/events{/privacy}",
        "followers_url": "https://api.github.com/users/phanen/followers",
        "following_url": "https://api.github.com/users/phanen/following{/other_user}",
        "gists_url": "https://api.github.com/users/phanen/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/phanen",
        "id": 91544758,
        "login": "phanen",
        "node_id": "U_kgDOBXTctg",
        "organizations_url": "https://api.github.com/users/phanen/orgs",
        "received_events_url": "https://api.github.com/users/phanen/received_events",
        "repos_url": "https://api.github.com/users/phanen/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/phanen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phanen/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/phanen",
        "user_view_type": "public"
    }
}