{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nSince #25073, LSP hover and signature help use treesitter for syntax highlighting of Markdown content, especially embedded code. This requires code span delimiters which are concealed, but this leaves empty lines, wasting precious terminal space.\r\n\r\n### Expected behavior\r\n\r\n1. Support a new ephemeral extmark attribute `conceal_line`, which instructs the highlighter to skip the marked line(s) completely, controlled by (a new) `conceallevel`.\r\n\r\n2. Add this to the supported attributes for the treesitter highlighter.\r\n\r\n3. Use `#set! conceal_line \"\"` for `code_span_delimiter` in the `markdown` highlight query.\r\n\r\n### Open questions\r\n\r\n* How should movement over concealed lines work? (The same as horizontal movement over concealed columns, ideally.)\r\n\r\n### Possible followups\r\n\r\n* In addition to `conceal_line \"\"`, allow specifying a single(!) character that is rendered in every displayed cell of the line. (Use case: replacing `---` thematic breaks by proper separating lines, obviating the need for https://github.com/neovim/neovim/blob/315c711700a87fe3fa546906ab39557ebba19baf/runtime/lua/vim/lsp/util.lua#L1269-L1300)",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "> How should movement over concealed lines work?\r\n\r\nNavigating an LSP popup IMO should be identical to navigating a `:Man` page, no sudden popups of raw syntax. Maybe if this is not desirable as a default, at least this should be an option.",
            "created_at": "2023-10-21T07:51:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/25718#issuecomment-1773709724",
            "id": 1773709724,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25718",
            "node_id": "IC_kwDOAPphoM5puKmc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1773709724/reactions"
            },
            "updated_at": "2023-10-21T08:40:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1773709724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15263497?v=4",
                "events_url": "https://api.github.com/users/heroin-moose/events{/privacy}",
                "followers_url": "https://api.github.com/users/heroin-moose/followers",
                "following_url": "https://api.github.com/users/heroin-moose/following{/other_user}",
                "gists_url": "https://api.github.com/users/heroin-moose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/heroin-moose",
                "id": 15263497,
                "login": "heroin-moose",
                "node_id": "MDQ6VXNlcjE1MjYzNDk3",
                "organizations_url": "https://api.github.com/users/heroin-moose/orgs",
                "received_events_url": "https://api.github.com/users/heroin-moose/received_events",
                "repos_url": "https://api.github.com/users/heroin-moose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/heroin-moose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/heroin-moose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/heroin-moose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That's completely orthogonal to this, just set `conceallevel=3` for such buffers. The question here is about the general technical side, independent of LSP.\r\n",
            "created_at": "2023-10-21T08:40:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/25718#issuecomment-1773720213",
            "id": 1773720213,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25718",
            "node_id": "IC_kwDOAPphoM5puNKV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1773720213/reactions"
            },
            "updated_at": "2023-10-21T08:41:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1773720213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Trying to understand this feature a bit more. Is conceal_line effectively a \"whole line\" concealment similar to folds, for instance? Or would a conceal_line work in tandem with horizontal conceals, effectively creating a box/bounds such as in visual block mode? What does the end result look like?",
            "created_at": "2023-10-22T20:15:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/25718#issuecomment-1774188675",
            "id": 1774188675,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25718",
            "node_id": "IC_kwDOAPphoM5pv_iD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1774188675/reactions"
            },
            "updated_at": "2023-10-22T20:15:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1774188675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm having a similar issue on Neovim 0.10.0 (Arch), and I don't use Treesitter highlighting.\r\n\r\n![billede](https://github.com/neovim/neovim/assets/70660340/e2c826af-430d-4968-86e7-ecb1f72070a1)\r\n\r\nThe text in italics had syntax highlighting applied to it in previous versions. Is there any way to revert this behaviour without downgrading Neovim?\r\n",
            "created_at": "2024-06-09T14:19:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/25718#issuecomment-2156628379",
            "id": 2156628379,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25718",
            "node_id": "IC_kwDOAPphoM6Ai4mb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2156628379/reactions"
            },
            "updated_at": "2024-06-09T14:21:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2156628379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70660340?v=4",
                "events_url": "https://api.github.com/users/Swarthe/events{/privacy}",
                "followers_url": "https://api.github.com/users/Swarthe/followers",
                "following_url": "https://api.github.com/users/Swarthe/following{/other_user}",
                "gists_url": "https://api.github.com/users/Swarthe/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Swarthe",
                "id": 70660340,
                "login": "Swarthe",
                "node_id": "MDQ6VXNlcjcwNjYwMzQw",
                "organizations_url": "https://api.github.com/users/Swarthe/orgs",
                "received_events_url": "https://api.github.com/users/Swarthe/received_events",
                "repos_url": "https://api.github.com/users/Swarthe/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Swarthe/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Swarthe/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Swarthe",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "With vertical conceal, it should make it possible to completely re-implement folding with either/all:\n- Re-implementing `fold.c` to use the marktree. This would be a fantastic refactor, similar to what we did with signs.\n  - Every fold is just an extmark and to open or fold these marks is just a case of setting the conceal_lines flag.\n  - Would allow us to remove many `hadFolding()` calls scattered across the codebase.\n- Would allow plugins to implement their own folding using the same method as above. They store all their marks in a namespace and just flip the conceal flag to open and close a fold.\n  - Would be potentially easier to implement than a custom `foldexpr` since marks track buffer changes automatically.\n- Allow column based folding (finally), since we can conceal parts of a line.\n- Custom foldtext can be implemented with normal extmarks.\n\n@luukvbaal thoughts? Do you think there's a path here?",
            "created_at": "2024-12-12T09:58:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/25718#issuecomment-2538418269",
            "id": 2538418269,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25718",
            "node_id": "IC_kwDOAPphoM6XTTBd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 8,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538418269/reactions"
            },
            "updated_at": "2024-12-12T12:16:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538418269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The overlap is definitely there and I agree it could be a good refactor to do, but I imagine it will be even more involved than the sign refactor. It's also not that much of a clear win to me as the sign refactor was, for which we already had a parallel extmark code path. Whereas much of the fold structures to calculate nested fold levels etc. would still need to be replaced by marktree queries; it's hard to say whether that would simplify things. \n\nI myself am also less enticed by the idea because I don't really use folds (but would be happy to take it on if it's deemed useful work; working with/fixing fold bugs has always been fun/interesting to me).\n\n> Every fold is just an extmark and to open or fold these marks is just a case of setting the conceal_lines flag.\n\nIn addition to the conceal_lines marks for a closed fold, we would still need an additional flag to differentiate closed folds from concealed lines, for which at least cursor movement should behave differently.\n\n> Would allow us to remove many hadFolding() calls scattered across the codebase.\n\nOnly to be replaced by the marktree equivalent?\n\n> Would be potentially easier to implement than a custom foldexpr since marks track buffer changes automatically.\n\nThat seems attractive for small incremental changes that just add/remove a line to a fold but you would still need a foldexpression for when the syntax tree changes right?",
            "created_at": "2024-12-12T10:48:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/25718#issuecomment-2538532267",
            "id": 2538532267,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25718",
            "node_id": "IC_kwDOAPphoM6XTu2r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538532267/reactions"
            },
            "updated_at": "2024-12-12T15:31:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538532267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If such an API exists, I think a new `'foldmethod'` might be better, such as `foldmethod=extmark`. For `foldmethod=foldexpr`, although we have found a way to update it where we want, we still have no way to make it *not* update. That is to say, we still lack a way to prevent nvim from automatically calculating `foldexpr()`. Overall, a new foldmethod based on extmark might be simpler.",
            "created_at": "2024-12-12T11:01:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/25718#issuecomment-2538562150",
            "id": 2538562150,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25718",
            "node_id": "IC_kwDOAPphoM6XT2Jm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538562150/reactions"
            },
            "updated_at": "2024-12-12T12:15:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538562150",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The overlap is definitely there and I agree it would be a good refactor to do, but I imagine it will be even more involved than the sign refactor. I myself am less enticed by the idea because I don't really use folds (but would be happy to take it on if it's deemed useful work; working with/fixing fold bugs has always been fun/interesting to me).\n\nI think any task that involved moving text state of a buffer into the marktree is valuable.\n\n> That seems attractive for small incremental changes that just add/remove a line to a fold but you would still need a foldexpression for when the syntax tree changes right?\n\nI'm mostly imagining re-implementing `vim.treesitter.foldexpr` to look more like `treesitter/highlighter.lua`. `vim.treesitter.foldexpr()` has some ugly logic to keep an internal array of fold levels up-to-date. Ideally, all it should do is run a query and place marks. Those marks are then invalidated/updated on tree changes. This should be much more efficient.\n\n> Only to be replaced by the marktree equivalent?\n\nSeems like we'd need a marktree equivalent anyway for concealed_lines.",
            "created_at": "2024-12-12T11:56:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/25718#issuecomment-2538699048",
            "id": 2538699048,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25718",
            "node_id": "IC_kwDOAPphoM6XUXko",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538699048/reactions"
            },
            "updated_at": "2024-12-12T12:15:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538699048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If such an API exists, I think a new 'foldmethod' might be better, such as foldmethod=extmark. For foldmethod=foldexpr, although we have found a way to update it where we want, we still have no way to make it not update. That is to say, we still lack a way to prevent nvim from automatically calculating foldexpr(). Overall, a new foldmethod based on extmark might be simpler.\n\nThis is already been considered here #19226 .\n\nThe thing I'm most interested is changing the backend of folds to use the marktree (not exactly the same as user extmarks).",
            "created_at": "2024-12-12T11:59:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/25718#issuecomment-2538706259",
            "id": 2538706259,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25718",
            "node_id": "IC_kwDOAPphoM6XUZVT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538706259/reactions"
            },
            "updated_at": "2024-12-12T12:15:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538706259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25718/comments",
    "created_at": "2023-10-19T17:11:22Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25718/events",
    "html_url": "https://github.com/neovim/neovim/issues/25718",
    "id": 1952723456,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "marks, extmarks, decorations, virtual text, namespaces",
            "id": 1680119719,
            "name": "marks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/marks"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3385582660,
            "name": "conceal",
            "node_id": "LA_kwDOAPphoM7Jy-RE",
            "url": "https://api.github.com/repos/neovim/neovim/labels/conceal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25718/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 0,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 6,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-01-19T23:55:57Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM50ZDIA",
    "number": 25718,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 41,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 41,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25718/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25718/timeline",
    "title": "Vertical conceal",
    "updated_at": "2025-01-17T15:27:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25718",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
        "events_url": "https://api.github.com/users/clason/events{/privacy}",
        "followers_url": "https://api.github.com/users/clason/followers",
        "following_url": "https://api.github.com/users/clason/following{/other_user}",
        "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/clason",
        "id": 2361214,
        "login": "clason",
        "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
        "organizations_url": "https://api.github.com/users/clason/orgs",
        "received_events_url": "https://api.github.com/users/clason/received_events",
        "repos_url": "https://api.github.com/users/clason/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/clason",
        "user_view_type": "public"
    }
}