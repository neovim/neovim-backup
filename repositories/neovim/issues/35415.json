{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\n- [x] Confirm the problem is reproducible on master or latest stable release\n- [x] Run make distclean when encountering build issues\n- [x] Search existing issues (including closed)\n- [x] Read the FAQ and \"Reporting Problems\" in CONTRIBUTING.md.\n\nHello!\nThis is my first time reporting an issue to Neovim, so I apologize if there are any mistakes!\n\nTo put it simply, a segfault occurs when receiving the result of `mapnew()` with `const`.\n\nAfter executing the `#### Reproduction steps` described below, the following state occurs:\n\n```shell-session\n$ nvim --clean -S minimal.vim\n(No output. And exit immediately.)\n$ echo $?\n139\n$ dmesg | grep nvim\n[Thu Aug 21 18:21:46 2025] nvim[10054]: segfault at 7fffab45b0b0 ip 000055c1abb38220 sp 00007fffab4459a0 error 4 in nvim[55c1aba5a000+34c000]\n```\n\n\n### Steps to reproduce\n\n- For build failures: list the exact steps including CMake flags (if any).\n    - Installed using linuxbrew with `$ brew install neovim`\n    - Version is shown in the `### version` section below\n    - I thought this would install the same thing as building the latest Neovim with `make`, so I didn't use `make` for installation. Please let me know if you have any guidance on this!\n- If the bug pertains to crashing (or segfault), please include a stacktrace.\n    - I apologize, but I referred to https://neovim.io/doc/user/dev_tools.html#dev-tools-backtrace, however, possibly due to using WSL, I couldn't find any coredump files. If there's a response to this issue and it's needed, I'll put effort into investigating this!\n- For startup or shell-related problems: try env -i TERM=ansi-256color \"$(which nvim)\".\n    - Probably not applicable\n- Use the provided minimal reproduction template to create a minimal configuration. After you fill it out with necessary information, run with nvim --clean -u minimal.lua. Please do not include a package manager in the reproduction steps.\n    - I'm following this. Shown in the `#### Reproduction steps` below\n\n#### :version\n\n```\n:version\nNVIM v0.11.3\nBuild type: Release\nLuaJIT 2.1.1753364724\nRun \":verbose version\" for more info\n```\n\n#### Reproduction steps\n\nOnly this step:\n```shell-session\n$ nvim --clean -S minimal.vim\n$ dmesg | grep nvim\n[Thu Aug 21 18:21:46 2025] nvim[10054]: segfault at 7fffab45b0b0 ip 000055c1abb38220 sp 00007fffab4459a0 error 4 in nvim[55c1aba5a000+34c000]\n```\n\nminimal.vim\n```vim\nlet g:xs = [ ['1'], ['1'] ]\nconst _0 = mapnew(g:xs[0], { -> 0 })\nconst _1 = mapnew(g:xs[1], { -> 0 })\n```\n\n##### More tests\n\nThe following are detailed tests by rewriting minimal.vim.\n\n- :o: segfault does **NOT** occur\n- :x: segfault **DOES** occur\n\n- - - - -\n\n:x: (Same as mentioned above)\n```vim\nlet g:xs = [ ['1'], ['1'] ]\nconst _0 = mapnew(g:xs[0], { -> 0 })\nconst _1 = mapnew(g:xs[1], { -> 0 })\n```\n\n:o: Single call only\n```vim\nlet g:xs = [ ['1'], ['1'] ]\nconst _0 = mapnew(g:xs[0], { -> 0 })\n```\n\n:x: `let _0`\n```vim\nlet g:xs = [ ['1'], ['1'] ]\nlet _0 = mapnew(g:xs[0], { -> 0 })\nconst _1 = mapnew(g:xs[1], { -> 0 })\n```\n\n:o: `let _1`\n```vim\nlet g:xs = [ ['1'], ['1'] ]\nconst _0 = mapnew(g:xs[0], { -> 0 })\nlet _1 = mapnew(g:xs[1], { -> 0 })\n```\n\n:x: `call` for first\n```vim\nlet g:xs = [ ['1'], ['1'] ]\ncall mapnew(g:xs[0], { -> 0 })\nconst _1 = mapnew(g:xs[1], { -> 0 })\n```\n\n:o: `call` for second\n```vim\nlet g:xs = [ ['1'], ['1'] ]\nconst _0 = mapnew(g:xs[0], { -> 0 })\ncall mapnew(g:xs[1], { -> 0 })\n```\n\n:o: **OK** -- First one is empty list\n```vim\nlet g:xs = [ [], ['1'] ]\nconst _0 = mapnew(g:xs[0], { -> 0 })\nconst _1 = mapnew(g:xs[1], { -> 0 })\n```\n\n:o: Second one is empty list\n```vim\nlet g:xs = [ ['1'], [] ]\nconst _0 = mapnew(g:xs[0], { -> 0 })\nconst _1 = mapnew(g:xs[1], { -> 0 })\n```\n\n\n### Expected behavior\n\nsegfault does not occur, and Neovim starts up successfully.\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.3\n\n### Vim (not Nvim) behaves the same?\n\nNo, it does not segfault. Starts up successfully and shows no errors.\n\n### Operating system/version\n\nWindows 10 (WSL2, Ubuntu 24.04)\n\n### Terminal name/version\n\nzsh 5.9 (x86_64-ubuntu-linux-gnu)\n\n### $TERM environment variable\n\nscreen-256color\n\n### Installation\n\n$ brew install neovim",
    "closed_at": "2025-08-21T22:28:46Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Backtrace:\n```\n#0  0x00005555556f55c0 in tv_item_lock (tv=0x555555cdc170, deep=99, lock=true, check_refcount=true) at **/src/nvim/eval/typval.c:3770\n#1  0x00005555556f5738 in tv_item_lock (tv=0x555555cdbd70, deep=100, lock=true, check_refcount=true) at **/src/nvim/eval/typval.c:3786\n#2  0x0000555555705d39 in set_var_const (name=0x555555cdbed6 \"_0\", name_len=2, tv=0x7fffffffc730, copy=false, is_const=true) at **/src/nvim/eval/vars.c:1634\n#3  0x00005555556ad67a in set_var_lval (lp=0x7fffffffc590, endp=0x555555cdbed8 \"\", rettv=0x7fffffffc730, copy=false, is_const=true, op=0x7fffffffc766 \"=\")\n    at **/src/nvim/eval.c:1997\n#4  0x00005555557044d2 in ex_let_one (arg=0x555555cdbed6 \"_0\", tv=0x7fffffffc730, copy=false, is_const=true, endchars=0x7fffffffc766 \"=\", op=0x7fffffffc766 \"=\")\n    at **/src/nvim/eval/vars.c:971\n#5  0x0000555555702d07 in ex_let_vars (arg_start=0x555555cdbed6 \"_0\", tv=0x7fffffffc730, copy=0, semicolon=0, var_count=0, is_const=1, op=0x7fffffffc766 \"=\")\n    at **/src/nvim/eval/vars.c:481\n#6  0x0000555555702c3c in ex_let (eap=0x7fffffffc850) at **/src/nvim/eval/vars.c:454\n#7  0x00005555557211e6 in execute_cmd0 (retv=0x7fffffffc808, eap=0x7fffffffc850, errormsg=0x7fffffffc820, preview=false) at **/src/nvim/ex_docmd.c:1726\n#8  0x00005555557232fa in do_one_cmd (cmdlinep=0x7fffffffca70, flags=7, cstack=0x7fffffffcb80, fgetline=0x5555558d0e66 <getsourceline>, cookie=0x7fffffffd180)\n    at **/src/nvim/ex_docmd.c:2370\n#9  0x000055555571e92f in do_cmdline (cmdline=0x555555cdba60 \"let g:xs = [ ['1'], ['1'] ]\", fgetline=0x5555558d0e66 <getsourceline>, cookie=0x7fffffffd180, flags=7)\n    at **/src/nvim/ex_docmd.c:677\n#10 0x00005555558d0012 in do_source_ext (fname=0x555555ca9133 \"/tmp/tmp.vim\", check_other=false, is_vimrc=0, ret_sid=0x0, eap=0x0, ex_lua=false, str=0x0)\n    at **/src/nvim/runtime.c:2288\n#11 0x00005555558d03e9 in do_source (fname=0x555555ca9133 \"/tmp/tmp.vim\", check_other=false, is_vimrc=0, ret_sid=0x0) at **/src/nvim/runtime.c:2363\n#12 0x00005555558cee87 in cmd_source (fname=0x555555ca9133 \"/tmp/tmp.vim\", eap=0x7fffffffd360) at **/src/nvim/runtime.c:1860\n#13 0x00005555558ceed5 in ex_source (eap=0x7fffffffd360) at **/src/nvim/runtime.c:1868\n#14 0x00005555557211e6 in execute_cmd0 (retv=0x7fffffffd318, eap=0x7fffffffd360, errormsg=0x7fffffffd330, preview=false) at **/src/nvim/ex_docmd.c:1726\n#15 0x00005555557232fa in do_one_cmd (cmdlinep=0x7fffffffd580, flags=11, cstack=0x7fffffffd690, fgetline=0x0, cookie=0x0) at **/src/nvim/ex_docmd.c:2370\n#16 0x000055555571e92f in do_cmdline (cmdline=0x555555ca9150 \"so /tmp/tmp.vim\", fgetline=0x0, cookie=0x0, flags=11) at **/src/nvim/ex_docmd.c:677\n#17 0x000055555571de84 in do_cmdline_cmd (cmd=0x555555ca9150 \"so /tmp/tmp.vim\") at **/src/nvim/ex_docmd.c:375\n#18 0x00005555557d1d5c in exe_commands (parmp=0x7fffffffdca0) at **/src/nvim/main.c:1909\n#19 0x00005555557cde27 in main (argc=5, argv=0x7fffffffdf18) at **/src/nvim/main.c:584\n```",
            "created_at": "2025-08-21T12:47:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/35415#issuecomment-3210461618",
            "id": 3210461618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35415",
            "node_id": "IC_kwDOAPphoM6_W8Gy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3210461618/reactions"
            },
            "updated_at": "2025-08-21T12:47:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3210461618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35415/comments",
    "created_at": "2025-08-21T10:16:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35415/events",
    "html_url": "https://github.com/neovim/neovim/issues/35415",
    "id": 3341164477,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c7def8",
            "default": false,
            "description": "",
            "id": 109899557,
            "name": "vimscript",
            "node_id": "MDU6TGFiZWwxMDk4OTk1NTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vimscript"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35415/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 46,
        "created_at": "2025-07-14T12:16:41Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/52",
        "id": 13265074,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/52/labels",
        "node_id": "MI_kwDOAPphoM4Aymiy",
        "number": 52,
        "open_issues": 20,
        "state": "open",
        "title": "0.11.4",
        "updated_at": "2025-08-24T06:42:11Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/52"
    },
    "node_id": "I_kwDOAPphoM7HJh-9",
    "number": 35415,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35415/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35415/timeline",
    "title": "Segfault occurs when receiving `mapnew()` result with `const`",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-21T23:10:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35415",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4897842?v=4",
        "events_url": "https://api.github.com/users/aiya000/events{/privacy}",
        "followers_url": "https://api.github.com/users/aiya000/followers",
        "following_url": "https://api.github.com/users/aiya000/following{/other_user}",
        "gists_url": "https://api.github.com/users/aiya000/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/aiya000",
        "id": 4897842,
        "login": "aiya000",
        "node_id": "MDQ6VXNlcjQ4OTc4NDI=",
        "organizations_url": "https://api.github.com/users/aiya000/orgs",
        "received_events_url": "https://api.github.com/users/aiya000/received_events",
        "repos_url": "https://api.github.com/users/aiya000/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/aiya000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aiya000/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/aiya000",
        "user_view_type": "public"
    }
}