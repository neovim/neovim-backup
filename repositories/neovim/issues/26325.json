{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nI have run into a problem with highlighting in `InspectTree` caused by `ts_match_limit` being \"only\" 256. \r\n\r\nThe bug shows up when I highlight the tree based on the nesting level and the branch contains a large subtree.  \r\n\r\n<img width=\"407\" alt=\"Screenshot 2023-11-30 at 14 50 34\" src=\"https://github.com/neovim/neovim/assets/7075380/72d3f312-9c12-4414-a6cd-24c75749b366\">\r\n\r\nI tried to build with no change to the code other than\r\n```diff\r\n- ts_query_cursor_set_match_limit(cursor, 256);\r\n+ ts_query_cursor_set_match_limit(cursor, 1024);\r\n```\r\nin `neovim/src/nvim/lua/treesitter.c` and that fixes the issue:\r\n\r\n<img width=\"415\" alt=\"Screenshot 2023-11-30 at 14 53 42\" src=\"https://github.com/neovim/neovim/assets/7075380/b2e39fb9-7484-4a55-bafe-fa4ce4816e03\">\r\n\r\nNote: This is mainly a problem in the languages that build a tree all within some top level node. E.g. the pictures are from the `README.md` of neovim, where the whole tree is inside a top level `section`. \r\n\r\n(Thank you @lucario387 for helping me figure out what causes the bug.)\r\n\r\n### Steps to reproduce\r\n\r\nI think this is already a known issue, see:\r\n- #22055\r\n- #22497\r\n\r\nI can include exact steps of reproduction if you want? But I already narrowed down the exact line of code causing this above, so I don't think it should be necessary?\r\n\r\n### Expected behavior\r\n\r\nI can see in the discussion in #22055 that `ts_match_limit` is set relatively low for performance reasons, so I am not sure if simply raising the limit again is a good solution.\r\n\r\nIn #22055 it was mentioned that it might be better to set a timeout for the query itself and raise the limit, so maybe that is the best solution?\r\n\r\nEither way I am mainly creating this issue to have an open issue about finding a solution to this, since #22055 is closed. \r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-1721+g01b91deec-Homebrew\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nmacOS 14.1.1\r\n\r\n### Terminal name/version\r\n\r\nwezterm 20231030-074559-75909682\r\n\r\n### $TERM environment variable\r\n\r\nwezterm\r\n\r\n### Installation\r\n\r\ntested repo and homebrew",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Cross-posted with #26563\r\n\r\nI once also had a similar need, although not significantly as I settled down with a different approach & workaround. The problem is that **very long** text with many TS nodes may not be fully captured with a correct query.\r\n\r\nAn example -- I was trying to fold \"luadocs\", a maximally consecutive group of comment lines to workaround the current issue where `(node)+` quantifiers do not work properly (#17060).\r\n\r\n<details>\r\n   <summary>Custom query file (lua/folds.scm)</summary>\r\n\r\n```\r\n;; extends\r\n\r\n; Fold consecutive luadoc comments\r\n (\r\n  (_) @_non_comment (#not-has-type? @_non_comment comment)\r\n  . (comment) @_start\r\n  . (comment)*\r\n  . (comment) @_end\r\n  . [(function_declaration) (assignment_statement) (variable_declaration)]\r\n  (#make-range! \"fold\" @_start @_end)\r\n )\r\n```\r\n</details>\r\n\r\nOn a example file `$VIMRUNTIME/runtime/lua/vim/lsp.lua`\r\n\r\n(1) with ts_match_limit 256:\r\n\r\n<img width=\"1138\" alt=\"image\" src=\"https://github.com/neovim/neovim/assets/1009873/b642d916-5063-4f66-aca6-332d8d7307d2\">\r\n\r\n* Line 725-805 (~81 lines) are not captured as `@fold` because this is too long, probably because of treesitter injection of `luadoc`. See the signcolumn for evaluated foldexpr. All other luadoc comments that are relatively short can be correctly captured.\r\n\r\n<details>\r\n<summary>(2) with ts_match_limit 1024:</summary>\r\n\r\n<img width=\"1138\" alt=\"image\" src=\"https://github.com/neovim/neovim/assets/1009873/029cc4ca-f1ed-485d-88cd-061f91ba858f\">\r\n\r\n</details>\r\n\r\n* Now Line 725-805 can be folded.\r\n\r\n\r\nI know the above custom query implementation is kind of ~~crazy~~ hacky and not quite efficient, it'd be better to be addressed by improving the parser so that it can have an appropriate hierarchy and groupings of consecutive lines of comments. So I ended up with an alternative `foldexpr` implementation.\r\n\r\nThe downside is **performance impact**: it's slow. The `ts_match_limit` value of 1024 makes parsing noticeably slow; neovim will freeze for a few seconds while parsing the buffer (~2500 lines).",
            "created_at": "2023-12-16T01:20:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/26325#issuecomment-1858659272",
            "id": 1858659272,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26325",
            "node_id": "IC_kwDOAPphoM5uyOPI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1858659272/reactions"
            },
            "updated_at": "2023-12-16T23:21:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1858659272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is this https://github.com/tree-sitter-grammars/tree-sitter-yaml/issues/9  perhaps related?",
            "created_at": "2024-05-28T09:28:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/26325#issuecomment-2134754580",
            "id": 2134754580,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26325",
            "node_id": "IC_kwDOAPphoM5_PcUU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2134754580/reactions"
            },
            "updated_at": "2024-05-28T09:28:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2134754580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3412972?v=4",
                "events_url": "https://api.github.com/users/boydkelly/events{/privacy}",
                "followers_url": "https://api.github.com/users/boydkelly/followers",
                "following_url": "https://api.github.com/users/boydkelly/following{/other_user}",
                "gists_url": "https://api.github.com/users/boydkelly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/boydkelly",
                "id": 3412972,
                "login": "boydkelly",
                "node_id": "MDQ6VXNlcjM0MTI5NzI=",
                "organizations_url": "https://api.github.com/users/boydkelly/orgs",
                "received_events_url": "https://api.github.com/users/boydkelly/received_events",
                "repos_url": "https://api.github.com/users/boydkelly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/boydkelly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/boydkelly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/boydkelly",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Probably not, because the bug you show is more like a parser fails to parse a very long document correctly. This issue is about query (which should work on a \"valid\" syntax tree upon successful parsing), so I don't think it's related.",
            "created_at": "2024-05-28T10:14:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/26325#issuecomment-2134850726",
            "id": 2134850726,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26325",
            "node_id": "IC_kwDOAPphoM5_Pzym",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2134850726/reactions"
            },
            "updated_at": "2024-05-28T10:15:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2134850726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26325/comments",
    "created_at": "2023-11-30T14:06:54Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26325/events",
    "html_url": "https://github.com/neovim/neovim/issues/26325",
    "id": 2018743619,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26325/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM54U5VD",
    "number": 26325,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26325/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26325/timeline",
    "title": "Treesitter: `ts_match_limit` of 256 is not always enough",
    "updated_at": "2025-01-19T11:25:24Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26325",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
        "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
        "followers_url": "https://api.github.com/users/Danielkonge/followers",
        "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
        "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Danielkonge",
        "id": 7075380,
        "login": "Danielkonge",
        "node_id": "MDQ6VXNlcjcwNzUzODA=",
        "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
        "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
        "repos_url": "https://api.github.com/users/Danielkonge/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Danielkonge",
        "user_view_type": "public"
    }
}