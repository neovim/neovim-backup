{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nThe api should allow us to open a window with a buffer atomically, to avoid the usual issues with things like :split, where the first buffer shown in the window is the one in the source window before issuing the :split command. Otherwise i see no point in being able to provide a buffer as argument to open the window with, if that is going to be simply a replacement for window_set_buf.\n\n### Steps to reproduce\n\n1. nvim -u repro.lua\n2. press go\n3. assert is triggered\n\n```lua\nlocal bufnr = vim.api.nvim_create_buf(false, false)\nvim.api.nvim_create_autocmd(\"WinEnter\", {\n    pattern = \"*\",\n    callback = function(args)\n        assert(bufnr == args.buf, \"Wrong buffer in winenter\")\n    end,\n})\n\nvim.print(vim.api.nvim_get_current_buf(), bufnr)\nvim.keymap.set(\"n\", \"go\", function()\n    vim.api.nvim_open_win(bufnr, true, { split = \"below\", win = -1 });\nend)\n```\n\n### Expected behavior\n\nThe buffer that is being set in the nvim_open_win must be the one captured by the WinEnter, since that buffer is shown in the window, instead it is **actually capturing and only** the original/first buffer as if doing a regular :split.\n\n### Nvim version (nvim -v)\n\nNVIM v0.12.0-dev-72+g18caa5fb23\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nubuntu\n\n### Terminal name/version\n\nalacritty\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\ngithub release",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Is this covered by https://github.com/neovim/neovim/issues/25844 ? Definitely would like to resolve that.",
            "created_at": "2025-04-03T12:23:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/33284#issuecomment-2775618555",
            "id": 2775618555,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33284",
            "node_id": "IC_kwDOAPphoM6lcJP7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2775618555/reactions"
            },
            "updated_at": "2025-04-03T12:23:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2775618555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> instead it is actually capturing and only the original/first buffer as if doing a regular :split.\n\nEven with a normal :split, the first WinEnter is triggered while you still get the previous window’s buffer.  start vim with this minimal test.vim `vim --clean -u test.vim a` then `:vs b` . `WinEnter` print `buf 1 win  1001 `\n\n```vim\nautocmd BufEnter * echomsg 'BufEnter buf=' . expand('<abuf>') . ' winid '. win_getid()\nautocmd BufEnter * echomsg 'BufWinEnter buf=' . expand('<abuf>') . ' winid '. win_getid()\nautocmd BufLeave * echomsg 'BufLeave buf=' . expand('<abuf>') . ' winid '. win_getid()\nautocmd WinLeave * echomsg 'WinLeave buf=' . expand('<abuf>') . ' winid '. win_getid()\nautocmd WinEnter * echomsg 'WinEnter buf=' . expand('<abuf>') . ' winid '. win_getid()\n\n\" output \nWinLeave buf=1 winid 1000\nWinEnter buf=1 winid 1001\nBufLeave buf=1 winid 1001\nBufEnter buf=2 winid 1001\nBufWinEnter buf=2 winid 1001\n\n```\n\nVim creates the new window by inheriting some things from the previous one, including `w_buffer`. So when WinEnter fires, you still see the old buffer. there enter win first then set buf so when `EVENT_WINTENR` trigger the curbuf still `1`. \nIf  set the buffer before,  need buf_ensure_load to load the buffer before entering the window and curwin switch changes. that would mess up the event order and require more changes. I think it’s fine as it is for now...\n\nhttps://github.com/neovim/neovim/blob/e084a99040dbfae5bc71bc2f5ea9b9933ce7b61c/src/nvim/api/win_config.c#L313-L325\n\ndocs explicitly describe this in `:help WinEnter` before file is loaded.\n\n```\n\t\t\t\tIf the window is for another buffer, Vim\n\t\t\t\texecutes the BufEnter autocommands after the\n\t\t\t\tWinEnter autocommands.\n\t\t\t\tNote: For split and tabpage commands the\n\t\t\t\tWinEnter event is triggered after the split\n\t\t\t\tor tab command but before the file is loaded.\n\n```\n",
            "created_at": "2025-09-10T12:04:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/33284#issuecomment-3274648769",
            "id": 3274648769,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33284",
            "node_id": "IC_kwDOAPphoM7DLyzB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3274648769/reactions"
            },
            "updated_at": "2025-09-10T12:21:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3274648769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Even with a normal :split\n\nWell that is what i meant in the OP. It would be nice if it does not work like a regular :split, in a regular split you do not know the new buffer that is going to be shown in the window, but with open_win you do. As a user of the API, just by the signature of the function, i would never assume that this is the actual behavior,i would assume that the function does what it says, creates a window, shows the specified buffer in that window, i do realize that those are two separate operations internally - opens a window, which is showing initially the buffer from the source window, that was split, then it shows the actual buffer specified in the call the open_win, but why must the user experience this ? **As a user i expect the operation to be atomic i.e creating the window with the specified buffer directly, it is not like we do not know the buffer to be shown already.**",
            "created_at": "2025-09-10T16:59:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/33284#issuecomment-3275763739",
            "id": 3275763739,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33284",
            "node_id": "IC_kwDOAPphoM7DQDAb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3275763739/reactions"
            },
            "updated_at": "2025-09-10T17:02:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3275763739",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33284/comments",
    "created_at": "2025-04-03T07:33:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33284/events",
    "html_url": "https://github.com/neovim/neovim/issues/33284",
    "id": 2968606617,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "BFDADC",
            "default": false,
            "description": "High-risk, potential for delicate/cascading effects",
            "id": 407247013,
            "name": "complexity:high",
            "node_id": "MDU6TGFiZWw0MDcyNDcwMTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:high"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33284/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6w8VeZ",
    "number": 33284,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33284/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33284/timeline",
    "title": "Wrong buffer inside WinEnter command when using nvim_open_win",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-10T17:02:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33284",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
        "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
        "followers_url": "https://api.github.com/users/asmodeus812/followers",
        "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
        "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/asmodeus812",
        "id": 15955811,
        "login": "asmodeus812",
        "node_id": "MDQ6VXNlcjE1OTU1ODEx",
        "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
        "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
        "repos_url": "https://api.github.com/users/asmodeus812/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/asmodeus812",
        "user_view_type": "public"
    }
}