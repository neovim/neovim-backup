{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nNeovim plugin always mess up with global environment, and most of them don't provide clean up API. It needs frequently reboot Neovim to reload all the plugins. as a reference, VSCode provided a reload functionality without reboot editor.\n\n### Expected behavior\n\nA API to track side effects (mappings, autocmds, b|w|t variables etc.) while loading plugin then free them.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Maybe I don't fully get the usecase, but would `$NVIM_APPNAME` not be one way to accomplish trying out plugins without affect global state? ",
            "created_at": "2025-02-16T11:24:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/32471#issuecomment-2661385866",
            "id": 2661385866,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32471",
            "node_id": "IC_kwDOAPphoM6eoYaK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661385866/reactions"
            },
            "updated_at": "2025-02-16T11:24:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661385866",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> VSCode provided a reload functionality without reboot editor.\n\nThat reloads the vscode \"extension host\". Nvim has [remote plugins](https://neovim.io/doc/user/remote_plugin.html), which run as co-processes. \n\nBut in both vscode and Nvim, plugins can set editor settings/options, and editor global state, and that isn't reset. \n\n> Neovim plugin always mess up with global environment, and most of them don't provide clean up API.\n\nvscode plugins *may* implement `deactivate()`, which is intended to do cleanup, typically releasing resources. But it's limited (e.g. it can't do network requests), and plugins often don't \"undo\" various state changes.\n\nvscode also has *declarativ*e settings in the plugin `package.json`, so it can reason about how to reset plugin settings and state.\n\n> Expected behavior: API to track side effects (mappings, autocmds, b|w|t variables etc.) while loading plugin then free them.\n\nThis is worth considering, imo. (I recently wondered, \"why isn't `b:undo_ftplugin` a function?\").\n\n## Proposal 1: plugin `dispose()`\n\nvscode has [context.subscriptions.push(disposable)](https://stackoverflow.com/q/55554018/152142) (and `deactivate()` as mentioned above). \n\nAdding something like that to Nvim would be fairly easy. But designing the \"lifecycle\" of a plugin will take some work.\n\n## Proposal 2: `:mksession` + `:restart`\n\nAn alternative, perhaps *much* higher-leverage approach, which doesn't require all plugins to carefully manage their resources:\n\n1. Improve Nvim's `:mksession` feature so that Nvim can be restarted without worry.\n2. Implement `:restart`. https://github.com/neovim/neovim/issues/32484",
            "created_at": "2025-02-16T19:31:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/32471#issuecomment-2661582009",
            "id": 2661582009,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32471",
            "node_id": "IC_kwDOAPphoM6epIS5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661582009/reactions"
            },
            "updated_at": "2025-02-16T20:39:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661582009",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32471/comments",
    "created_at": "2025-02-16T07:07:23Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32471/events",
    "html_url": "https://github.com/neovim/neovim/issues/32471",
    "id": 2855928794,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1430181182,
            "name": "multiproc",
            "node_id": "MDU6TGFiZWwxNDMwMTgxMTgy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/multiproc"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "save/restore editor state: shada, context, ctx",
            "id": 4449264023,
            "name": "editor-state",
            "node_id": "LA_kwDOAPphoM8AAAABCTJhlw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/editor-state"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32471/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 261,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 305,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-02-17T22:29:45Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6qOgPa",
    "number": 32471,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32471/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32471/timeline",
    "title": "plugin lifecycle: dispose() resources, handlers, ... (WAS: \"Isolated environment for plugins\")",
    "updated_at": "2025-02-16T20:39:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32471",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
        "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
        "followers_url": "https://api.github.com/users/hoofcushion/followers",
        "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
        "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/hoofcushion",
        "id": 32760059,
        "login": "hoofcushion",
        "node_id": "MDQ6VXNlcjMyNzYwMDU5",
        "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
        "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
        "repos_url": "https://api.github.com/users/hoofcushion/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/hoofcushion",
        "user_view_type": "public"
    }
}