{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nIn cmdline, when extui pager is visible, pressing `f` gets swallowed by the pager instead of being entered into the cmdline.\n\nhttps://github.com/user-attachments/assets/76481740-d40d-42b0-b058-02bdb902ac7e\n\nIn the recording, you can see that I pressed `f` twice. The first one didn't enter anything into the commandline but moved the pager and the second press entered f into cmdline.\n\nThe culprit might be this line -> https://github.com/neovim/neovim/blob/master/runtime/lua/vim/_extui/messages.lua#L551\n\nMaybe the hook there should be diabled when in cmdline mode? Unsure though why I was only able to reproduce the issue for `f` but the other keys there work fine.\n\n### Steps to reproduce\n\nConfig:\n```lua\nrequire 'vim._extui'.enable { enable = true }\n\nvim.opt.wildmenu = true\nvim.opt.wildmode = 'list:full'\n```\n\n`nvim --clean +\"lua dofile('test.lua')\"`\n\nTriggering wildmenu with `<Tab>` shows the pager. In this state, pressing `f` gets swallowed by the pager. Don't think its specifically a wildmenu thing but this was how I ran into it.\n\n### Expected behavior\n\nWas expecting to have the `f` key entered into the cmdline when pressed.\n\n### Nvim version (nvim -v)\n\nv0.12.0-dev-1404+g56713ef872-dirty\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nNixOS unstable\n\n### Terminal name/version\n\nst 0.9.2\n\n### $TERM environment variable\n\nst-256color\n\n### Installation\n\nBuild from repo",
    "closed_at": "2025-10-10T14:05:42Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This happens specifically with the pager keys (`g/j/k/d/u/f/b`), and only if it resulted in a changed topline. Not sure how to improve the behavior, or if documenting it will be sufficient. \n\nForward page scrolling (`f` in the repro here) scrolls beyond the end of the buffer, that does seem unexpected here but that's just how page scrolling works unfortunately.",
            "created_at": "2025-10-10T12:14:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/36114#issuecomment-3389772643",
            "id": 3389772643,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36114",
            "node_id": "IC_kwDOAPphoM7KC9Nj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3389772643/reactions"
            },
            "updated_at": "2025-10-10T12:14:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3389772643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> This happens specifically with the pager keys (g/j/k/d/u/f/b), and only if it resulted in a changed topline. Not sure how to improve the behavior, or if documenting it will be sufficient.\n\n@luukvbaal, Having the key consumed by the pager when I try to type it into the cmdline seems counter intuitive to me since more often than not, typing f would mean I meant to type it in the cmdline rather interacting with the pager. Maybe its better to not consume the keys when the user is in command mode? Or would keys with modifiers be more appropriate here? I guess `<c-f>` wont work since its already used for cmd window but something along those lines? What do you think?\n\nAlso, this behaviour is especially painful to work with when wildtrigger is called on cmdlinechanged since that changes the topline often which eats up `f` a lot more.",
            "created_at": "2025-10-10T12:32:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/36114#issuecomment-3389841511",
            "id": 3389841511,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36114",
            "node_id": "IC_kwDOAPphoM7KDOBn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3389841511/reactions"
            },
            "updated_at": "2025-10-10T12:33:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3389841511",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11407672?v=4",
                "events_url": "https://api.github.com/users/phenax/events{/privacy}",
                "followers_url": "https://api.github.com/users/phenax/followers",
                "following_url": "https://api.github.com/users/phenax/following{/other_user}",
                "gists_url": "https://api.github.com/users/phenax/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phenax",
                "id": 11407672,
                "login": "phenax",
                "node_id": "MDQ6VXNlcjExNDA3Njcy",
                "organizations_url": "https://api.github.com/users/phenax/orgs",
                "received_events_url": "https://api.github.com/users/phenax/received_events",
                "repos_url": "https://api.github.com/users/phenax/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phenax/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phenax/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phenax",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Also, this behaviour is especially painful to work with when wildtrigger is called on cmdlinechanged since that changes the topline often which eats up f a lot more.\n\nThe key is only consumed when the topline changes as a result of pressing one of the pager keys, not anything else. But yes I agree scrolling shouldn't happen when already at the end of the buffer in the dialog window. #36116 should fix that.\n\n> Or would keys with modifiers be more appropriate here?\n\nThe mappings are copied from the message grid 'more' prompt, so no I don't think so.",
            "created_at": "2025-10-10T12:54:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/36114#issuecomment-3389936121",
            "id": 3389936121,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36114",
            "node_id": "IC_kwDOAPphoM7KDlH5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3389936121/reactions"
            },
            "updated_at": "2025-10-10T13:09:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3389936121",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@luukvbaal @justinmk Appreciate the quick response and fix but I'm unsure if this really fixes the problem. It's fine for short lists but I can still reproduce this issue when the list is long as you might expect. Especially with the `find` command on a big project. I might be misunderstanding the purpose of this or if there is some other technical limitation at play but pressing `f` in the cmdline I would always intend to be inserted into the command line and almost never to interact with the pager so the key getting unexpectedly swallowed/not being entered in the cmdline still seems very odd to me. Please let me know if I'm missing something.",
            "created_at": "2025-10-10T16:35:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/36114#issuecomment-3391100066",
            "id": 3391100066,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36114",
            "node_id": "IC_kwDOAPphoM7KIBSi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3391100066/reactions"
            },
            "updated_at": "2025-10-10T16:38:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3391100066",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11407672?v=4",
                "events_url": "https://api.github.com/users/phenax/events{/privacy}",
                "followers_url": "https://api.github.com/users/phenax/followers",
                "following_url": "https://api.github.com/users/phenax/following{/other_user}",
                "gists_url": "https://api.github.com/users/phenax/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phenax",
                "id": 11407672,
                "login": "phenax",
                "node_id": "MDQ6VXNlcjExNDA3Njcy",
                "organizations_url": "https://api.github.com/users/phenax/orgs",
                "received_events_url": "https://api.github.com/users/phenax/received_events",
                "repos_url": "https://api.github.com/users/phenax/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phenax/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phenax/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phenax",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It works the same way with the message grid pager, until one scrolls to the bottom, or presses `q/Esc`. I guess what we need is a visual indicator for when the pager keys are active like the message grid has? `-- More -- SPACE/d/j: screen/page/line down, b/u/k: up, q: quit` And for `q/Esc` to deactivate paging?\n\nI thought the spilled lines indicator, and being able to interact with the cmdline except for the paging keys would be OK, but I can see how it can seem surprising.",
            "created_at": "2025-10-10T22:02:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/36114#issuecomment-3392443453",
            "id": 3392443453,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36114",
            "node_id": "IC_kwDOAPphoM7KNJQ9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3392443453/reactions"
            },
            "updated_at": "2025-10-10T22:23:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3392443453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/36114/comments",
    "created_at": "2025-10-10T08:41:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/36114/events",
    "html_url": "https://github.com/neovim/neovim/issues/36114",
    "id": 3501936620,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim 0.12 mesages/dialog/pager/notifications based on the UI-ext protocol",
            "id": 8934685970,
            "name": "ui2",
            "node_id": "LA_kwDOAPphoM8AAAACFIx9Eg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui2"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/36114/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7Qu0_s",
    "number": 36114,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/36114/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/36114/timeline",
    "title": "vim._extui: Pager consumes `f` keypress in the cmdline",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-10T22:23:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/36114",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11407672?v=4",
        "events_url": "https://api.github.com/users/phenax/events{/privacy}",
        "followers_url": "https://api.github.com/users/phenax/followers",
        "following_url": "https://api.github.com/users/phenax/following{/other_user}",
        "gists_url": "https://api.github.com/users/phenax/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/phenax",
        "id": 11407672,
        "login": "phenax",
        "node_id": "MDQ6VXNlcjExNDA3Njcy",
        "organizations_url": "https://api.github.com/users/phenax/orgs",
        "received_events_url": "https://api.github.com/users/phenax/received_events",
        "repos_url": "https://api.github.com/users/phenax/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/phenax/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phenax/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/phenax",
        "user_view_type": "public"
    }
}