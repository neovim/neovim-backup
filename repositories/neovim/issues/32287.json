{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nnvim-lspconfig has a `on_new_config` feature which is apparently not addressed by vim.lsp.config\n\n### Expected behavior\n\nref https://github.com/neovim/nvim-lspconfig/pull/3597#issuecomment-2628425734\n\n> This could be another application for an autocmd that triggers just before the client starts. Or maybe could just be done in RTP.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "The main requirement I gathered from that issue is that windows executables need to be mapped to another name. Arguably I think this should just be done in the config directly rather than using some hook to achieve it later on in the flow.",
            "created_at": "2025-02-01T20:34:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2629102714",
            "id": 2629102714,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6ctOx6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629102714/reactions"
            },
            "updated_at": "2025-02-01T20:34:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629102714",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah. For reference, see https://github.com/neovim/nvim-lspconfig/pull/3592#issuecomment-2619481770 for the apparent motivation for that Angular `on_new_config` handler (seems like something the LSP server should do...).\n\nI'd prefer that we avoid `on_new_config` (as a concept), but opened this to gather feedback on whether it is needed.",
            "created_at": "2025-02-01T21:21:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2629119486",
            "id": 2629119486,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6ctS3-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629119486/reactions"
            },
            "updated_at": "2025-02-01T21:22:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629119486",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "There are other use cases, i for one use the one provided by nvim-lspconfig to determine if a language server supports multiple workspaces to trigger didChangeConfiguration and also remember context about the new workspace folders seen, but maybe that is not applicable for the new api from core.",
            "created_at": "2025-02-02T13:34:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2629399232",
            "id": 2629399232,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6cuXLA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629399232/reactions"
            },
            "updated_at": "2025-02-02T14:18:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629399232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "An actual example with real code would be useful. `vim.lsp.start` already has a `reuse_client` argument.",
            "created_at": "2025-02-02T13:47:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2629404065",
            "id": 2629404065,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6cuYWh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629404065/reactions"
            },
            "updated_at": "2025-02-02T13:47:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629404065",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This also sounds a lot like what we were discussing to resolve https://github.com/neovim/neovim/issues/32037\n\nAnd it also has similarity to `root_dir` supporting a string or function. Which depending on how ^ gets resolved we could revert and generalize(?)",
            "created_at": "2025-02-02T14:14:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2629413981",
            "id": 2629413981,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6cuaxd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629413981/reactions"
            },
            "updated_at": "2025-02-02T14:14:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629413981",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, so here is an example, edited my original comment, since it was not quite well defined, what it is useful for is to determine if a new workspace config is coming in, and the server supports multiple workspace folders to load the local config for the new workspace folder and trigger didChangeConfiguration, also remember for which workspace folders/directories the given client is registered for and so on, something like - https://github.com/tamago324/nlsp-settings.nvim/blob/6d3b9dba870d1b040c7ae3d52e3625b91c1f5c24/lua/nlspsettings.lua#L222. Then usually on subsequent DirChange events you do send didChangeConfiguration when you navigate between the workspace folders.\n\nDont know what is the feeling about handling some nuances of the multiple workspace folder support part of the spec, in core, but we have had this discussion in the past in the nvim-lspconfig repo. ",
            "created_at": "2025-02-02T14:17:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2629415054",
            "id": 2629415054,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6cubCO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629415054/reactions"
            },
            "updated_at": "2025-02-02T14:23:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629415054",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> also has similarity to `root_dir` supporting a string or function. Which depending on how ^ gets resolved we could revert and generalize(?)\n\nYeah that sounds interesting. If we have a `on_new_config` concept, then dynamic `root_dir` should not be needed.",
            "created_at": "2025-02-02T14:36:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2629421986",
            "id": 2629421986,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6cucui",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629421986/reactions"
            },
            "updated_at": "2025-02-02T14:36:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629421986",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I use it to load project specific configuration for LSPs that don't have their own configuration files.\n\nSomething like this \n```lua\nlocal function load_config(root_dir)\n    local path = Path:new(root_dir, \".nvimlsp\")\n    if path:exists() then\n        path = tostring(path)\n        local config = {}\n        local f, err = loadfile(path, \"bt\", config)\n        if f ~= nil then\n            f()\n            return config\n        else\n            print(err)\n        end\n    end\n    return nil\nend\n\nlocal function on_new_config(new_config, new_root_dir)\n    local project_options = load_config(new_root_dir)\n    if project_options then\n        local serveropts = project_options[new_config.name]\n        if serveropts ~= nil then\n            local new = vim.tbl_deep_extend(\"force\", new_config, serveropts)\n            for k, v in pairs(new) do\n                new_config[k] = v\n            end\n        end\n    end\nend\n```\n\n`exrc`, does not quite cut it for me since I usually have one nvim instance, with multiple projects open, one project per tab, with `:tcd` selecting the working directory. And I also often switch projects on the fly. ",
            "created_at": "2025-03-11T09:34:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2713345903",
            "id": 2713345903,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6hul9v",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2713345903/reactions"
            },
            "updated_at": "2025-03-11T09:36:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2713345903",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Don't mean to add any unnecessary noise, but as someone who does use `on_new_config` pretty regularly, I figured it would be useful to share the main pattern all of my uses seem to follow. All of the cases where I have used `on_new_config` seem to be dynamically building the command used to execute the language server. This is useful in a few places specifically:\n\n- Dynamically building the command line arguments passed to start the server\n  - some language servers use command line flags to pass in configuration files if they aren't super good at following the configuration options in the LSP spec\n  - cases where java is used to execute the language server there are a ton of flags for the jvm runtime that can be built dynamically to properly link libraries/configure memory requirements/etc.\n- Some languages with virtual environments you may want to detect in some way if there is a different location for the command binary and fill that in accordingly\n\nNot that this is necessarily an argument for or against `on_new_config`, there could be a better formalization that also covers cases like these",
            "created_at": "2025-03-12T14:44:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2718139220",
            "id": 2718139220,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6iA4NU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2718139220/reactions"
            },
            "updated_at": "2025-03-12T14:44:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2718139220",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1591837?v=4",
                "events_url": "https://api.github.com/users/mehalter/events{/privacy}",
                "followers_url": "https://api.github.com/users/mehalter/followers",
                "following_url": "https://api.github.com/users/mehalter/following{/other_user}",
                "gists_url": "https://api.github.com/users/mehalter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mehalter",
                "id": 1591837,
                "login": "mehalter",
                "node_id": "MDQ6VXNlcjE1OTE4Mzc=",
                "organizations_url": "https://api.github.com/users/mehalter/orgs",
                "received_events_url": "https://api.github.com/users/mehalter/received_events",
                "repos_url": "https://api.github.com/users/mehalter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mehalter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mehalter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mehalter",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As mentioned [here](https://github.com/neovim/neovim/issues/32287#issuecomment-2629404065) some concrete examples with real code would be helpful.",
            "created_at": "2025-03-12T16:19:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2718428544",
            "id": 2718428544,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6iB-2A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2718428544/reactions"
            },
            "updated_at": "2025-03-12T16:19:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2718428544",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "One simple concrete example. The ccls language server can only be configured through `init_options`, so making changes in `on_attach` is to late. Different projects output `compile_commands.json` in different locations. So I use the code in my message above to configure it per project.",
            "created_at": "2025-03-12T19:55:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2718950505",
            "id": 2718950505,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6iD-Rp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2718950505/reactions"
            },
            "updated_at": "2025-03-12T19:55:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2718950505",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Bellow is how I used to use `on_new_config` with `nvim-lspconfig` before I switched to `vim.lsp`. I used it for changing to the closest `.venv` to a python file with `pyright`. I have a project that has submodules and each submodule needs its own set of packages and python versions. Maybe this is not an example for why we need `on_new_config` but it did take me a minute to figure out why my setup was not working and how to change it.\n\n```\non_new_config = function(client, dir)\n\n    -- Set python path to the first python executable found in the current directory or its parents\n    vim.api.nvim_create_autocmd({ \"BufEnter\" }, {\n      -- group = lsp_buffer_group,\n      buffer = vim.api.nvim_get_current_buf(),\n      callback = function()\n        local venv = vim.fs.root(dir, { '.venv', '.envrc', 'requirements.txt', 'pyproject.toml', 'ruff.toml', '.ruff.toml', '.git' })\n        local hits = vim.fs.find( { 'python' }, { limit = math.huge, path = venv } )\n        local result = vim.iter(hits)\n          :fold({ min_length = nil, min_str = nil },\n          function(acc, str)\n            if acc.min_length == nil or #str < acc.min_length then\n              acc.min_length = #str\n              acc.min_str = str\n            end\n            return acc\n          end)\n\n        if result.min_str == nil then\n          vim.notify( 'Could not find python path for ' .. dir, vim.log.levels.WARN )\n          return\n        end\n\n        client.settings.python = vim.tbl_deep_extend('force', client.settings.python, { pythonPath = result.min_str } )\n      end,\n    })\n  end,\n```\n\nI stopped using `nvim-lspconfig` in favor of `vim.lsp` and now I can do the same with `on_attach`. Full example bellow:\n\n```\n{\n  single_file_support = true,\n\n  filetypes = {\"python\"},\n  cmd = {\"pyright-langserver\", \"--stdio\"},\n\n  root_markers = {\".venv\", \"requirements.txt\", \"pyproject.toml\", \"ruff.toml\", \".ruff.toml\", \".git\"},\n\n  settings = {\n    pyright = {\n      disableOrganizeImports = true, -- Ruff\"s\n    },\n    python = {\n      analysis = {\n        ignore = {\"*\"}, -- Ruff\"s\n        autoSearchPaths = true,\n        diagnosticMode = \"openFilesOnly\",\n        useLibraryCodeForTypes = true,\n      }\n    }\n  },\n\n  on_attach = function(client, bufnr)\n    local function update_python_path()\n      local dir = vim.fn.expand(\"%:p:h\")\n      local root = vim.fs.find(\n        { \".venv\", \".envrc\", \"requirements.txt\", \"pyproject.toml\", \"ruff.toml\", \".ruff.toml\", \".git\" },\n        { path = dir, upward = true, stop = vim.fn.expand(\"~\"), limit = 1 }\n      )[1]\n\n      local hit = vim.fs.find(\n        { \"python\" },\n        { path = root, upward = false, type = \"link\", ignore = function(_, _) return false end, limit = 1 }\n      )[1]\n      or vim.fn.trim(vim.fn.system(\"which python\"))\n\n      client.config.settings.python = vim.tbl_deep_extend(\"force\", client.config.settings.python, { pythonPath = hit })\n\n      client.notify(\"workspace/didChangeConfiguration\", { settings = { python = client.config.settings.python } })\n    end\n\n    vim.api.nvim_create_autocmd(\"BufEnter\", { buffer = bufnr, callback = update_python_path })\n    update_python_path()\n  end,\n}\n\n```\n\nInterestingly, the first version that is based on `nvim-lspconfig` and `on_new_config` would append the newly found `.venv` as a workspace to the same pyright whereas the `vim.lsp` and `on_attach` spawns a new pyright for each `.venv`.",
            "created_at": "2025-03-16T08:48:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/32287#issuecomment-2727272011",
            "id": 2727272011,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32287",
            "node_id": "IC_kwDOAPphoM6ijt5L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2727272011/reactions"
            },
            "updated_at": "2025-04-18T16:05:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2727272011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/83947853?v=4",
                "events_url": "https://api.github.com/users/DRKolev-code/events{/privacy}",
                "followers_url": "https://api.github.com/users/DRKolev-code/followers",
                "following_url": "https://api.github.com/users/DRKolev-code/following{/other_user}",
                "gists_url": "https://api.github.com/users/DRKolev-code/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DRKolev-code",
                "id": 83947853,
                "login": "DRKolev-code",
                "node_id": "MDQ6VXNlcjgzOTQ3ODUz",
                "organizations_url": "https://api.github.com/users/DRKolev-code/orgs",
                "received_events_url": "https://api.github.com/users/DRKolev-code/received_events",
                "repos_url": "https://api.github.com/users/DRKolev-code/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DRKolev-code/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DRKolev-code/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DRKolev-code",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32287/comments",
    "created_at": "2025-02-01T20:24:54Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32287/events",
    "html_url": "https://github.com/neovim/neovim/issues/32287",
    "id": 2825410849,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32287/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 25,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 66,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-04-21T22:08:04Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM6oaFkh",
    "number": 32287,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32287/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32287/timeline",
    "title": "LSP: on_new_config for vim.lsp.config",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-18T16:05:40Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32287",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}