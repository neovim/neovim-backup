{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Sorry if this has been addressed in docs, but I searched and couldn't find anything. \n\nin my vimrc I have \n\n```\nset <k0>=^[Op\nset <k1>=^[Oq\nset <k2>=^[Or\nset <k3>=^[Os\nset <k4>=^[Ot\nset <k5>=^[Ou\nset <k6>=^[Ov\nset <k7>=^[Ow\nset <k8>=^[Ox\nset <k9>=^[Oy\n\" These '^[' are all \\x1b (\"escape\") chars\n```\n\nThis is mainly being used with vim-mark now (which already has binds for the numpad `<k0-9>` keys). \n\nHowever I am finding that in neovim, the `set <k0>=` isn't actually successfully setting a keycode (`E846: Key code not set: <k0>`) like it does in Vim. \n\nIt also appears that the numpad numbers are being interpreted the same as the actual numbers, so it types into the ephemeral number count buffer. Which is otherwise perfectly reasonable, but not the behavior I am looking for.\n\nSo I am wondering what the proper way to do this is. Has setting keycodes with `set` been abolished? I hope not, but if so, do I then need to come up with some sort of new-style keycode like change whatever is mapped to `<k0>` to use `<m-O-p>` or something?\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> `set <k0>=` isn't actually successfully setting a keycode \n\nDid you try setting it to something other than a literal byte sequence? Set the key to something meaningful like ~~`set <k0>=foo`~~ `map <k0> foo`.\n",
            "created_at": "2015-03-20T20:39:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-84138838",
            "id": 84138838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTM4ODM4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84138838/reactions"
            },
            "updated_at": "2016-11-02T01:38:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84138838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "What would I set it to otherwise? I don't know how else to have it actually function in vanilla Vim. Are you suggesting to use a map or something? Because that is not going to produce responsive key binding behavior.\n\nSimilarly, I am having trouble binding sequences like `alt+.`, that's alt+period key. E.g. in the vimrc `set <F19>=^[.` and then `nnoremap <F29> :call MyEnhancedDotCommand()<CR>`. I suppose you can point to this and call it a hack, but it serves a very important purpose by allowing me to use this keyboard shortcut, while conforming to de-facto terminal standards. \n",
            "created_at": "2015-03-20T20:39:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-84138922",
            "id": 84138922,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTM4OTIy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84138922/reactions"
            },
            "updated_at": "2015-03-20T20:47:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84138922",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Can you tell me what you mean by `set <k0>=foo`? What would such a thing accomplish? `foo` is not a sane terminal escape code. I tried it, and afterwards neovim still gives E846 when I ask for what `<k0>` is set to, which makes it appear as though `set <k0>=foo` did not accomplish anything.\n",
            "created_at": "2015-03-20T20:56:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-84143024",
            "id": 84143024,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQzMDI0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84143024/reactions"
            },
            "updated_at": "2015-03-20T20:57:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84143024",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Okay, so what's the verdict? You are making it sound like neovim simply does not support arbitrary terminal codes, full stop.\n\nWhere does it (well, where does neovim's key handling library) fetch the escape codes to interpret then? terminfo? My system's terminfo doesnt even have entries for numpad keys, but I can probably add them.\n",
            "created_at": "2015-03-20T21:04:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-84145244",
            "id": 84145244,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQ1MjQ0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84145244/reactions"
            },
            "updated_at": "2015-03-20T21:06:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84145244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What happens if you do this:\n\n```\n:map <k0> :echo 'hi'<cr>\n:call feedkeys(\"\\<k0>\")\n```\n\nThen try pressing the actual `0` key on your num pad...\n",
            "created_at": "2015-03-20T21:07:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-84146464",
            "id": 84146464,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQ2NDY0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84146464/reactions"
            },
            "updated_at": "2015-03-20T21:07:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84146464",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It printed `hi`, just like it should. That doesn't have any bearing on me being able to drive `<k0>` with my computer keyboard (or remote computer keyboard over SSH through tmux, which is how I really use it most of the time, but which also isn't relevant)\n",
            "created_at": "2015-03-20T21:08:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-84147259",
            "id": 84147259,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQ3MjU5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84147259/reactions"
            },
            "updated_at": "2015-03-20T21:08:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84147259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Does `0` on your numpad echo \"hi\"?\r\n",
            "created_at": "2015-03-20T21:10:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-84147994",
            "id": 84147994,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQ3OTk0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84147994/reactions"
            },
            "updated_at": "2016-12-07T08:22:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84147994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "No, it continues to function identically to the 0 key.\n\nAnd I would not expect that to \"just work\" either. As I mentioned, there is nothing in terminfo (I found that `infocmp` shows the mappings) that reveals what the escape codes for the numpad keys are supposed to even be. That is why I had to `set <k0>` in my vimrc to give the `<k0>` key a terminal code to map to. It could be `^[NUMPADZERO` if my terminal emulator decided to send that... I could still get Vim to handle it.\n\nSo could you tell me why \"There is no reason to set anything to a terminal escape code in neovim\", for instance...? The reason is to be able to use key bindings.\n",
            "created_at": "2015-03-20T21:11:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-84148131",
            "id": 84148131,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTQ4MTMx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84148131/reactions"
            },
            "updated_at": "2015-03-20T21:20:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84148131",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@unphased It may require some extra logic in the TUI. Seems similar to the CTRL-H vs backspace issue https://github.com/neovim/neovim/pull/1820#issuecomment-73033723\n",
            "created_at": "2015-03-20T21:35:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-84154908",
            "id": 84154908,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTU0OTA4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84154908/reactions"
            },
            "updated_at": "2015-03-20T21:35:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/84154908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I did actually sort out a kind of solution for the Ctrl+H vs backspace (0x8) differentiation, basically neovim's TUI is going above and beyond and confusing itself by reading the terminfo def (which most other systems have been ignoring). Since it does not negatively affect other programs I use, I went ahead and added a definition for making `kbs=\\177` in it.\n\nWithout explicitly setting `kbs=\\177`, libtermkey detects Ctrl+H as Backspace.\n\nBased on this clue I went and tested libtermkey's `demo` program and it shows that libtermkey is properly detecting the keypad numbers. That's not encouraging because it means it is not the same root cause.\n\nIt would seem that Neovim is going out of its way to interpret `<k0>` as `0`, `<k1>` as `1`, etc., just above the TUI layer. \n",
            "created_at": "2015-05-07T08:40:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-99774441",
            "id": 99774441,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDk5Nzc0NDQx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/99774441/reactions"
            },
            "updated_at": "2015-05-07T08:48:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/99774441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I can only assume that this code here: [nvim/getchar.c:1430](https://github.com/neovim/neovim/blob/0bce4dc54427d05ab320a88f6269a9c1b05ea899/src/nvim/getchar.c#L1430) is related.\n",
            "created_at": "2015-05-07T08:55:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-99780008",
            "id": 99780008,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDk5NzgwMDA4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/99780008/reactions"
            },
            "updated_at": "2015-05-07T08:55:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/99780008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Can somebody comment on how to make these keys map to `<k0>` thru `<k9>` in neovim (this works fine in vim)?\n\nFrom [`nvim/getchar.c:1430`](https://github.com/neovim/neovim/blob/0bce4dc54427d05ab320a88f6269a9c1b05ea899/src/nvim/getchar.c#L1430)\n\n```\n      case K_K0:          c = '0'; break;\n      case K_K1:          c = '1'; break;\n      case K_K2:          c = '2'; break;\n      case K_K3:          c = '3'; break;\n      case K_K4:          c = '4'; break;\n      case K_K5:          c = '5'; break;\n      case K_K6:          c = '6'; break;\n      case K_K7:          c = '7'; break;\n      case K_K8:          c = '8'; break;\n      case K_K9:          c = '9'; break;\n```\n",
            "created_at": "2015-08-08T03:39:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-128898772",
            "id": 128898772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyODg5ODc3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/128898772/reactions"
            },
            "updated_at": "2015-08-08T03:40:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/128898772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It would seem that Neovim is going out of its way to interpret `<k0>` as 0, `<k1>` as 1\n\n@unphased That part of getchar.c translates a keycode to the non-mapped result. If control reaches that point, then I'm confused. Are you certain that `case K_K9` is executed (add a printf statement perhaps)? \n\n>  I went and tested libtermkey's demo program and it shows that libtermkey is properly detecting the keypad numbers. \n\nIt may be a `tui.c` bug then.\n\n> `set <k0>=` isn't actually successfully setting a keycode\n\nConfirmed.\n",
            "created_at": "2015-08-08T04:35:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-128912279",
            "id": 128912279,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyODkxMjI3OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/128912279/reactions"
            },
            "updated_at": "2015-08-08T04:35:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/128912279",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I am guessing that `set <k0>={sequence}` is not covered by any tests and probably a lookup was factored out because someone did not expect such a feature to be used. I'm not sure if this is a feature we necessarily want to support. ",
            "created_at": "2015-08-08T04:39:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-128913231",
            "id": 128913231,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyODkxMzIzMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/128913231/reactions"
            },
            "updated_at": "2016-12-07T08:23:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/128913231",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well sure but it's pretty clear that nvim is flat out refusing to fire `<k0-9>` keys so that my vimscripts cannot differentiate the keypresses! So it is just that it's alarming that the _workaround_ is also not functioning...\n\nWhile you may be justified in saying that maybe specification of keycodes for virtual keys isnt supported, thats fine... so then where could I look to start to find out why the numpad keys arent working like they should out of the box?\n",
            "created_at": "2015-08-08T05:19:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-128919536",
            "id": 128919536,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyODkxOTUzNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/128919536/reactions"
            },
            "updated_at": "2015-08-08T05:24:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/128919536",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've narrowed it down to at least this fact: the following line in `tk_getkeys` reports keypad input 9 as `9` (I'm basing this on a call to `termkey_strfkey`, but the same call in the demo program correctly yields `<KP9>`):\n\n```\ntk_getkey(input->tk, &key, force)\n```\n\nI tried setting `TERMKEY_FLAG_CONVERTKP` (though I don't really understand its description) but it did not have any apparent effect:\n\n```\ntermkey_set_flags(rv->tk, curflags | TERMKEY_FLAG_CONVERTKP);\n```\n\nNote that the termkey demo program uses `termkey_waitkey` whereas we are using the lower-level `termkey_getkey`. [update: makes no difference; `termkey_waitkey` also returns `9` for KP9 input]\n\nlibtermkey demo output:\n\n```\ngetkey(force=0): buffer 1b 4f 79 \nDriver terminfo yields TERMKEY_RES_NONE \nDriver CSI yields TERMKEY_RES_KEY\nKeysym sym=51(KP9) mod=+00\nKey <KP9>\n```\n\n---\n\nVim: if I enter KP9 sequence after `<C-V>` in insert mode, input is the literal byte sequence:\n\n```\n^[Oy\n```\n\nthat is, `<esc>` followed by `4f 79`, which matches libtermkey demo above (`buffer 1b 4f 79`).\n\nNeovim: if I enter KP9 sequence after `<C-V>` in insert mode, input is a literal `<tab>` (ASCII code for tab is 0x9).\n\nAnother example: \n- `i<c-v><up>` in Vim inserts `^[OA` (byte sequence `1b 4f 41`).\n- `i<c-v><up>` in Nvim inserts `<Up>` (4-characters `< U p >`).\n\nClearly, our escape handling is getting in the way of some functions that do not want  or need the escape handling. Input after `<C-V>` should not be subject to timing, for example.\n\n---\n\nFor reference, here's what I was playing with:\n\n``` diff\ndiff --cc src/nvim/tui/term_input.inl\nindex 0a84a36,0a84a36..bd1d286\n--- a/src/nvim/tui/term_input.inl\n+++ b/src/nvim/tui/term_input.inl\n@@@ -1,6 -1,6 +1,7 @@@\n  #include <termkey.h>\n\n  #include \"nvim/ascii.h\"\n++#include \"nvim/log.h\"\n  #include \"nvim/misc2.h\"\n  #include \"nvim/os/os.h\"\n  #include \"nvim/os/input.h\"\n@@@ -126,8 -126,8 +127,13 @@@ static void tk_getkeys(TermInput *input\n  {\n    TermKeyKey key;\n    TermKeyResult result;\n++  char buf[64];\n\n    while ((result = tk_getkey(input->tk, &key, force)) == TERMKEY_RES_KEY) {\n++    termkey_strfkey(input->tk, buf, sizeof buf, &key, TERMKEY_FORMAT_VIM);\n++    ELOG(\"Key: %s\", buf);\n++    // termkey_waitkey(input->tk, &key);\n++    // ELOG(\"KeyWAIT: %s\\n\", buffer);\n      if (key.type == TERMKEY_TYPE_UNICODE && !key.modifiers) {\n        forward_simple_utf8(&key);\n      } else if (key.type == TERMKEY_TYPE_UNICODE ||\n@@@ -289,9 -289,9 +295,22 @@@ static TermInput *term_input_new(void\n    if (!term) {\n      term = \"\";  // termkey_new_abstract assumes non-null (#2745)\n    }\n--  rv->tk = termkey_new_abstract(term, 0);\n--  int curflags = termkey_get_canonflags(rv->tk);\n--  termkey_set_canonflags(rv->tk, curflags | TERMKEY_CANON_DELBS);\n++  rv->tk = termkey_new(0, TERMKEY_FLAG_SPACESYMBOL|TERMKEY_FLAG_CTRLC);\n++  int curflags = termkey_get_flags(rv->tk);\n++  int curflags_canon = termkey_get_canonflags(rv->tk);\n++  if (curflags & TERMKEY_FLAG_CONVERTKP) {\n++    ELOG(\"curflags [before] TERMKEY_FLAG_CONVERTKP=true\");\n++  } else {\n++    ELOG(\"curflags [before] TERMKEY_FLAG_CONVERTKP=false\");\n++  }\n++\n++  termkey_set_canonflags(rv->tk, curflags_canon | TERMKEY_CANON_DELBS);\n++  termkey_set_flags(rv->tk, curflags | TERMKEY_FLAG_CONVERTKP);\n++  if (termkey_get_flags(rv->tk) & TERMKEY_FLAG_CONVERTKP) {\n++    ELOG(\"curflags [after] TERMKEY_FLAG_CONVERTKP=true\");\n++  } else {\n++    ELOG(\"curflags [after] TERMKEY_FLAG_CONVERTKP=false\");\n++  }\n    // setup input handle\n    rstream_init_fd(&loop, &rv->read_stream, rv->in_fd, 0xfff, rv);\n    rstream_start(&rv->read_stream, read_cb);\n@@@ -321,5 -321,5 +340,6 @@@ static void term_input_set_encoding(Ter\n  {\n    int enc_flag = strcmp(enc, \"utf-8\") == 0 ? TERMKEY_FLAG_UTF8\n                                             : TERMKEY_FLAG_RAW;\n--  termkey_set_flags(input->tk, enc_flag);\n++  int curflags = termkey_get_flags(input->tk);\n++  termkey_set_flags(input->tk, curflags | enc_flag);\n  }\n```\n",
            "created_at": "2015-08-08T06:14:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-128921919",
            "id": 128921919,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyODkyMTkxOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/128921919/reactions"
            },
            "updated_at": "2016-11-02T01:42:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/128921919",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@unphased Does `tput smkx` change anything for you regarding this issue?\n\nSee also https://github.com/neovim/neovim/issues/3211 and http://stackoverflow.com/q/21175561/152142. `smkx` puts terminal in \"keypad-transmit\" mode.\n",
            "created_at": "2015-08-23T19:07:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-133899044",
            "id": 133899044,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzg5OTA0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/133899044/reactions"
            },
            "updated_at": "2015-08-23T19:08:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/133899044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "#9793 f6fb370b1bcc (Nvim 0.4.0) adds support for keypad keys.",
            "created_at": "2019-03-29T13:36:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-477999938",
            "id": 477999938,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Nzk5OTkzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/477999938/reactions"
            },
            "updated_at": "2019-03-29T13:36:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/477999938",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi, I'm trying to get my custom key code to work and all I've found is this same thread that I authored. Whether or not numpad keys work I don't really care much these days because I kinda stopped using full keyboards (easier to reach mouse is more valuable). \r\n\r\nHowever it is a pretty big problem for neovim to force me to only ever use \"standard\" ANSI escape key codes, when vim supports it out of the box with `set`. \r\n\r\nFor now I am starting to consider moving to standard keycodes. This means I will be dropping support for my special PuTTY build that has those escape codes hard-coded... even tmux supports custom keycodes. Neovim is the only missing link. Yes I could have avoided all of this if I had thought about it a little bit more when I hardcoded this years ago, but its really beside the point. Providing configurability for this would be a big improvement.",
            "created_at": "2020-10-05T19:56:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-703854566",
            "id": 703854566,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzg1NDU2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/703854566/reactions"
            },
            "updated_at": "2020-10-05T19:59:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/703854566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi `</evil grin>` I'm back! My transition to standard keycodes works great actually. I do a bunch of weird stuff with F10, which I map at the OS layer on all my OS's to the caps lock key, the choice to use F10 was very arbitrary but it does work out because nvim does understand shift+, ctrl+, alt+ and combinations thereof for F10, so I was able to have all my terminal emulator and tmux key mapping configuration stay sane. \r\n\r\nBut now, I am aiming to add a completely new escape sequence for something that has no semantic equivalent. I'm trying to use `\\E[Y` and `\\E[2Y` (skipping over Z since `\\E[Z` is shift+tab!) \r\n\r\nAs we already hashed out in this issue here neovim has no feature to specify a new escape code to interpret, no way to `set <key>=escapecode` like Vim has. At least as I understand it anyhow. Even if we could do this, like in vim we would need to grab a name of some key that exists such as some high or modifier applied function key, which adds a layer of indirection to key mapping configuration.\r\n\r\nAs a result, it looks like if I want to achieve what I want without introducing more complexity in the way of defining new terminfo entries and getting them to take for nvim to introduce new key names (an undertaking I'm not even going to entertain), I am going to have to resort to changing the key code sent into vim to a non utilized existing key of which there are many (like the high-function keys or perhaps the numpad keys that got added a few years ago, which I really wanted to use earlier as a poor mans macro keypad but these days no longer use keypad sporting keyboards). This is okay and I will go on to do just that this evening but I'm just posting here to complain? I guess? that this situation has poor ergonomics. ",
            "created_at": "2024-01-12T12:33:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-1889065949",
            "id": 1889065949,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "IC_kwDOAPphoM5wmNvd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1889065949/reactions"
            },
            "updated_at": "2024-01-12T17:08:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1889065949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> without introducing more complexity in the way of defining new terminfo entries\r\n\r\nCan also be done with your terminal's config, right (not terminfo)?\r\n\r\n> I am going to have to resort to changing the key code sent into vim to a non utilized existing key\r\n\r\nWould it not work to use a single key like `<F32>` as the \"leader\", and then you can have any sequence following that, to define \"unlimited\" different custom inputs?",
            "created_at": "2024-01-13T16:14:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-1890561262",
            "id": 1890561262,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "IC_kwDOAPphoM5wr6zu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890561262/reactions"
            },
            "updated_at": "2024-01-13T16:14:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890561262",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "My issue may not have the same objective as the original issue here, but since I have seen @justinmk solve a similar issue and he has answered pretty recently I thougt of taking it here. I use a layered keyboard with dedicated cut, copy and paste buttons. According to [this](https://github.com/torvalds/linux/blob/master/include/uapi/linux/input-event-codes.h) this correspnds to keycodes 137, 133, 135. However I feel like those keycodes have not much in common with the ones used in neovim so in don't know how to bind them as they haven't been given a name yet.\r\n\r\nMaybe that issue is being tracked somewhere else already.\r\nSince to me it means improving the ability to add custom keycodes, I added it here.\r\nI apologize if it was uncalled for, but I didn't want to unnecessarily increase the number of issues.",
            "created_at": "2024-01-14T00:49:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-1890809583",
            "id": 1890809583,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "IC_kwDOAPphoM5ws3bv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890809583/reactions"
            },
            "updated_at": "2024-01-14T00:49:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890809583",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86004375?v=4",
                "events_url": "https://api.github.com/users/Mikilio/events{/privacy}",
                "followers_url": "https://api.github.com/users/Mikilio/followers",
                "following_url": "https://api.github.com/users/Mikilio/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mikilio/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Mikilio",
                "id": 86004375,
                "login": "Mikilio",
                "node_id": "MDQ6VXNlcjg2MDA0Mzc1",
                "organizations_url": "https://api.github.com/users/Mikilio/orgs",
                "received_events_url": "https://api.github.com/users/Mikilio/received_events",
                "repos_url": "https://api.github.com/users/Mikilio/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Mikilio/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mikilio/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Mikilio",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That sounds like something that should be requested to terminal emulators first.",
            "created_at": "2024-01-14T00:53:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-1890810134",
            "id": 1890810134,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "IC_kwDOAPphoM5ws3kW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890810134/reactions"
            },
            "updated_at": "2024-01-14T00:53:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890810134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Mine does support those keycodes though. Using wezterm.\r\n\r\nActually for me personally it would be enough if keycodes.h and keycodes.c where a bit easier to understand in how they relate to my OS's keycodes",
            "created_at": "2024-01-14T00:55:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-1890810452",
            "id": 1890810452,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "IC_kwDOAPphoM5ws3pU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890810452/reactions"
            },
            "updated_at": "2024-01-14T00:58:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890810452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86004375?v=4",
                "events_url": "https://api.github.com/users/Mikilio/events{/privacy}",
                "followers_url": "https://api.github.com/users/Mikilio/followers",
                "following_url": "https://api.github.com/users/Mikilio/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mikilio/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Mikilio",
                "id": 86004375,
                "login": "Mikilio",
                "node_id": "MDQ6VXNlcjg2MDA0Mzc1",
                "organizations_url": "https://api.github.com/users/Mikilio/orgs",
                "received_events_url": "https://api.github.com/users/Mikilio/received_events",
                "repos_url": "https://api.github.com/users/Mikilio/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Mikilio/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mikilio/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Mikilio",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Mine does support those keycodes though. Using wezterm.\r\n> \r\n> how they relate to my OS's keycodes\r\n\r\nThey don't.\r\n\r\n",
            "created_at": "2024-01-14T01:05:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-1890812030",
            "id": 1890812030,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "IC_kwDOAPphoM5ws4B-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890812030/reactions"
            },
            "updated_at": "2024-01-14T01:05:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890812030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> They don't.\r\n\r\nThat explains a lot.\r\n\r\nI gave up and decided on the following workaround:\r\n\r\nMake wezterm do it's thing if it can access a selection, otherwise passthrough escape sequences for C-S-C and C-S-X instead, as that appears to be standard enough. then remap those codes to the desired command in neovim\r\n",
            "created_at": "2024-01-14T01:07:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-1890812450",
            "id": 1890812450,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "IC_kwDOAPphoM5ws4Ii",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890812450/reactions"
            },
            "updated_at": "2024-01-14T01:47:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890812450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86004375?v=4",
                "events_url": "https://api.github.com/users/Mikilio/events{/privacy}",
                "followers_url": "https://api.github.com/users/Mikilio/followers",
                "following_url": "https://api.github.com/users/Mikilio/following{/other_user}",
                "gists_url": "https://api.github.com/users/Mikilio/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Mikilio",
                "id": 86004375,
                "login": "Mikilio",
                "node_id": "MDQ6VXNlcjg2MDA0Mzc1",
                "organizations_url": "https://api.github.com/users/Mikilio/orgs",
                "received_events_url": "https://api.github.com/users/Mikilio/received_events",
                "repos_url": "https://api.github.com/users/Mikilio/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Mikilio/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Mikilio/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Mikilio",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > without introducing more complexity in the way of defining new terminfo entries\r\n> \r\n> Can also be done with your terminal's config, right (not terminfo)?\r\n\r\n> > I am going to have to resort to changing the key code sent into vim to a non utilized existing key\r\n> \r\n> Would it not work to use a single key like `<F32>` as the \"leader\", and then you can have any sequence following that, to define \"unlimited\" different custom inputs?\r\n\r\nYeah, defining a custom leader is fine, I haven't been wanting to introduce more than one leader key in my own setup yet but it will happen soon and lead to a large change as i try to make a mnemonic that conforms to it.\r\n\r\nSooo there's a bit of nuance that I glazed over and will attempt to explain better. \r\n\r\nVim supports `set <F32> =\\E[anythingyouwant`. \r\nNeovim doesn't support that.\r\n\r\nHowever the reality of it is, neovim not supporting this doesn't really have too substantive an impact. \r\n\r\n- Even though vim can be configured easily to understand arbitrary escape sequences, the actual utilization of those key codes is still gonna be confusing (\"the hell is F32 anyway\" as you review your init down the line... you'll have to look up what escape code F32 was set to, and then look up what this escape code's semantics are supposed to be). It would be a different story if you could actually define your own key names!\r\n- Yep, Neovim won't let you set F32 to any escape code you want, it's only going to respond to F32 via whatever it is (likely `\\E[19;5~`) which is just as well, because choosing a poor escape sequence (probably) will lead to even harder to debug situations if you make something conflicting with any existing escape sequences. At the end of the day, you're still gonna need to look up what F32 maps to while reviewing your config. All that's lost is we are forced to pollute whatever config is upstream of nvim to tell it to send F32 into nvim.\r\n- Due to neovim using what so far looks like a consistent naming scheme with tmux, this actually helps a lot to restore sanity for me at least, like I confirmed with my current round of improvements, I can set `C-M-S-F11` in tmux and it sends `\\E[23;8~` which actually shows up properly in nvim as `C-M-S-F11`. This is a function key with so many modifiers tacked onto it that it is way down the [list](https://invisible-island.net/xterm/xterm-function-keys.html) and probably would appear as like F95 or something 😅 The point with this is at least I can read my tmux config, then read my nvim config, and easily follow via the key bind the chain of events.\r\n\r\nIn an ideal world I would define some new semantic key and a corresponding escape code for it, and configure stuff to understand that, well, actually though, this is exactly what terminfo is... and without being hardcore enough to carefully craft those and critique how well neovim and tmux and whatever else is going to interpret it... I'm ok with just letting tmux be the source of truth. What I'm using right now to implement a contextual behavior down this whole stack is: \r\n\r\n0. I have a mouse button bound to `Ctrl+PageUp` for use in Linux. My BetterTouchTool maps a 3 finger left swipe gesture to `Cmd+Shift+[` for the macbook. If I had a desktop mac I would need to make a second profile in the mouse to map the mouse button to the same. This works well in all apps and I intend to extend that seamlessly into my command line universe.\r\n1. Alacritty config (one for linux, one for macos) translates from os-specific `Ctrl+PgUp` or `Cmd+Shift+[` into `\\E[2Y`, an invented escape code. It is in this config that we can see most clearly its Navigate to Previous Tab semantics.\r\n2. tmux is configured with: \r\n   ```\r\n   set -s user-keys[8] \"\\e[2Y\"\r\n   bind -n User8 if -F '#{||:#{m/r:^N?VIM,#{pane_title}},#{==:1,#{session_windows}}}' 'send-keys M-C-S-F11' previous-window\r\n   ```\r\n   Note that the only reason this works reliably is I also have a convention where neovim and vim force set terminal title to begin with the strings \"NVIM\" and \"VIM\". The use of #{pane_command} has historically been unreliable. What this tmux logic implements is if i'm in (n)vim or when there are no other tmux windows to toggle to, the key is sent into the pane, otherwise go to prev tmux window.\r\n\r\n   Thus it translates further into `Alt+Ctrl+Shift+F11` which was arbitrarily chosen as something I'll never seriously manually use,\r\n\r\n3. But which is still accessible from nvim: \r\n   ```\r\n   vim.keymap.set('n', \"<M-C-S-F11>\", \"<cmd>lua CycleWindowsOrBuffers(false)<cr>\", { desc = \"Cycle Windows or \r\n   Buffers Reverse\" })\r\n   ``` \r\n   (`CycleWindowsOrBuffers()` is my [own lua function](https://github.com/unphased/vim-config/blob/31e2b03cdf5b09a6446c14f5754aea0a2b96dc28/nvim/init.lua#L281) so you don't need to go hunting for it on google)\r\n   This tells nvim what to do when tmux sends this key in.\r\n\r\nNow, if i were more enterprising or pedantic or anal, I would perhaps go and try to establish some sort of new terminfo key capability or something, I don't know how that stuff works, call it TabPrev, `kTP` or `kTPrev`, assign it to `\\E[2Y`, and assuming neovim and tmux and whatever else can be made to interpret it, I might be able to reference `<TabPrev>` from nvim and `TabPrev` from tmux and things will be dandy. But I'm not going to do that because I have better things to do with my time than learn terminfo/termcap/etc and ensure that all the terminal programs i want to use the key with are picking it up properly.\r\n\r\nSince I originated this issue I'm willing to close it if that's what this amounts to.",
            "created_at": "2024-01-14T15:51:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/2204#issuecomment-1890988865",
            "id": 1890988865,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2204",
            "node_id": "IC_kwDOAPphoM5wtjNB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890988865/reactions"
            },
            "updated_at": "2024-01-14T16:11:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890988865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 27,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/2204/comments",
    "created_at": "2015-03-20T20:35:13Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/2204/events",
    "html_url": "https://github.com/neovim/neovim/issues/2204",
    "id": 63302490,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "compatibility with Vim or older Neovim",
            "id": 109899712,
            "name": "compatibility",
            "node_id": "MDU6TGFiZWwxMDk4OTk3MTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/compatibility"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim core functionality or code",
            "id": 858327504,
            "name": "core",
            "node_id": "MDU6TGFiZWw4NTgzMjc1MDQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/core"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "key bindings, keycodes",
            "id": 3304938718,
            "name": "mappings",
            "node_id": "MDU6TGFiZWwzMzA0OTM4NzE4",
            "url": "https://api.github.com/repos/neovim/neovim/labels/mappings"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/2204/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU2MzMwMjQ5MA==",
    "number": 2204,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/2204/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/2204/timeline",
    "title": "`set <key>={sequence}` is not implemented",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:38:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/2204",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
        "events_url": "https://api.github.com/users/unphased/events{/privacy}",
        "followers_url": "https://api.github.com/users/unphased/followers",
        "following_url": "https://api.github.com/users/unphased/following{/other_user}",
        "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/unphased",
        "id": 1542910,
        "login": "unphased",
        "node_id": "MDQ6VXNlcjE1NDI5MTA=",
        "organizations_url": "https://api.github.com/users/unphased/orgs",
        "received_events_url": "https://api.github.com/users/unphased/received_events",
        "repos_url": "https://api.github.com/users/unphased/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/unphased",
        "user_view_type": "public"
    }
}