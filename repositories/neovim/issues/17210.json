{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\r\n\r\n_No response_\r\n\r\n### Feature description\r\n\r\nAccording to `:h diff-diffexpr`, the expression set to the `&diffexpr` option needs to read/write files on disk and perform external calls to some custom diffing program.\r\nThis works fine, but it defeats the very purpose of having integrated an [internal diff engine](https://vimways.org/2018/the-power-of-diff/) into vim.\r\n\r\nOn the other hand, the Lua API allows (great) explicit calls to the internal engine according to `:h vim.diff`, which would make something like the `&idifffn` option I'm suggesting possible.\r\n\r\nIdeally, I would be able to write something like:\r\n```vim\r\nlua <<EOF\r\nfunction MyDiff(bufnr_a, bufnr_b, opt)\r\n    -- custom call(s) to vim.diff(buf_a_content, buf_b_content, opt)\r\n   return result_string\r\nend\r\nEOF\r\nset idifffn=MyDiff\r\n```\r\n.. or close, and have my diffing procedure customized without an external call and I/O accesses. What do you think? :)",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "## Proposal\r\n\r\nI think the best way to handle this would be to overload `diffexpr`. We can do this by treating `diffexpr` differently if it begins with a specific prefix, `->` for example.\r\n\r\nThere is already some precedence of this with `'statusline'`:\r\n\r\n> \tWhen the option starts with \"%!\" then it is used as an expression,\r\n\tevaluated and the result is used as the option value.  Example: >\r\n\t\t:set statusline=%!MyStatusLine()\r\n\r\nFor `'diffexpr'` we can say: if the expression begins with a `->`, then the value is treated as a function ref which is called with the following arguments:\r\n\r\n * `in_bufnr`: Buffer number of original file\r\n * `new_bufnr`: Buffer number of new version of the file.\r\n\r\nThe function must return a string, or list of strings containing the diff file contents ('ed' or 'unified' format).\r\n\r\nEDIT: And can instead return the raw integer indices as a list of quad-tuples, e.g: `[[4, 1, 4, 0], [8, 0, 7, 1]]`. The same as what `vim.diff` returns with `result_type='indices'`.\r\n\r\nWhen this form is used, the filenames `v:fname_in`, `v:fname_new` and `v:fname:out` are not created/available.\r\n\r\nThis can also roughly apply for `'patchexpr'`.",
            "created_at": "2022-02-01T13:20:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/17210#issuecomment-1026836668",
            "id": 1026836668,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17210",
            "node_id": "IC_kwDOAPphoM49NEi8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1026836668/reactions"
            },
            "updated_at": "2022-02-02T10:26:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1026836668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@lewis6991 Thank you for feedback :) I think the solution you offer is reasonable and would suit pretty well. Especially because there is already `vim.diff` available in Lua API so users would not need to rewrite diffing logic by themselves (but still watch #17207).\r\n\r\nBut as it stands now, I need to update this issue with new information: Another (initially unrelated) issue I have posted to vim/vim has attracted the attention of Bram and eventually turned into the same kind of proposal. This issue has number 9641 (I'm not sure whether Bram likes to be formally cross-posted (t)here ^ ^\"). We have been discussing the design of another `idifffn` option that would not return `ed` format but direct \"chunks\" instead, with number of changed lines like `[[4, 1, 4, 0], [8, 0, 7, 1]]`. This would avoid emitting diffs then parsing them again within the same expression.\r\n\r\nShould this option be added to vim/vim, then there would  be no need to add it here anymore right? On the other hand, I'm not confident how much time/involvment it would take, compared to just patching `idiffexp` here?\r\n\r\nOne problem I forecast if `idifffn` eventually ends up being implemented at vim/vim is that there is no API to produce valid \"chunks\" from strings yet. This is something I also have discussed in vim/vim[issue number]9641.\r\n\r\nTherefore, I am not sure what exactly is the right attitude now, and what exactly is the best way to push this forward. Are you?",
            "created_at": "2022-02-02T09:47:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/17210#issuecomment-1027756637",
            "id": 1027756637,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17210",
            "node_id": "IC_kwDOAPphoM49QlJd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1027756637/reactions"
            },
            "updated_at": "2022-02-02T09:47:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1027756637",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4",
                "events_url": "https://api.github.com/users/iago-lito/events{/privacy}",
                "followers_url": "https://api.github.com/users/iago-lito/followers",
                "following_url": "https://api.github.com/users/iago-lito/following{/other_user}",
                "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iago-lito",
                "id": 10091387,
                "login": "iago-lito",
                "node_id": "MDQ6VXNlcjEwMDkxMzg3",
                "organizations_url": "https://api.github.com/users/iago-lito/orgs",
                "received_events_url": "https://api.github.com/users/iago-lito/received_events",
                "repos_url": "https://api.github.com/users/iago-lito/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iago-lito",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  We have been discussing the design of another idifffn option that would not return ed format but direct \"chunks\" instead, with number of changed lines like [[4, 1, 4, 0], [8, 0, 7, 1]]. This would avoid emitting diffs then parsing them again within the same expression.\r\n\r\nI didn't mention, but this is exactly what I had in mind as this is what `vim.diff` returns when `result_type='indices'`, I was just being brief.\r\n\r\n> Should this option be added to vim/vim, then there would be no need to add it here anymore right? On the other hand, I'm not confident how much time/involvment it would take, compared to just patching idiffexp here?\r\n\r\nWe'll port over whatever we can from vim. It doesn't often happen the other way around.\r\n\r\n> Therefore, I am not sure what exactly is the right attitude now, and what exactly is the best way to push this forward. Are you?\r\n\r\nIf we are happy with the proposal, I think this is pretty straight forward to implement. From what I can tell, we just need to change: https://github.com/neovim/neovim/blob/2559359035b7b0dd6f94fef9573e8133176c1553/src/nvim/eval.c#L691-L697\r\n\r\nand some smaller parts in `diff.c` so it all behaves.\r\n\r\nSomeone just needs to do it...\r\n\r\nI can do this ... at some point ... but I couldn't provide any timeline. Otherwise, anyone else is free to pick this up. Might be a good first PR for someone.",
            "created_at": "2022-02-02T10:22:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/17210#issuecomment-1027786475",
            "id": 1027786475,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17210",
            "node_id": "IC_kwDOAPphoM49Qsbr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1027786475/reactions"
            },
            "updated_at": "2022-02-02T10:22:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1027786475",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related https://github.com/vim/vim/issues/9641",
            "created_at": "2022-02-02T10:24:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/17210#issuecomment-1027788122",
            "id": 1027788122,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17210",
            "node_id": "IC_kwDOAPphoM49Qs1a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1027788122/reactions"
            },
            "updated_at": "2022-02-02T10:24:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1027788122",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I can do this ... at some point ... but I couldn't provide any timeline. Otherwise, anyone else is free to pick this up. Might be a good first PR for someone.\r\n\r\nJust so you know: I'm currently fiddling around to find out whether I'm capable of doing this. I have been understanding things so far, getting familiar with nvim sources. And I will definitely come back here whenever I need help or when my PR is ready ;)",
            "created_at": "2022-02-08T22:51:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/17210#issuecomment-1033140997",
            "id": 1033140997,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17210",
            "node_id": "IC_kwDOAPphoM49lHsF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1033140997/reactions"
            },
            "updated_at": "2022-02-08T22:51:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1033140997",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4",
                "events_url": "https://api.github.com/users/iago-lito/events{/privacy}",
                "followers_url": "https://api.github.com/users/iago-lito/followers",
                "following_url": "https://api.github.com/users/iago-lito/following{/other_user}",
                "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iago-lito",
                "id": 10091387,
                "login": "iago-lito",
                "node_id": "MDQ6VXNlcjEwMDkxMzg3",
                "organizations_url": "https://api.github.com/users/iago-lito/orgs",
                "received_events_url": "https://api.github.com/users/iago-lito/received_events",
                "repos_url": "https://api.github.com/users/iago-lito/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iago-lito",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17210/comments",
    "created_at": "2022-01-27T09:24:06Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/17210/events",
    "html_url": "https://github.com/neovim/neovim/issues/17210",
    "id": 1115969174,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 3010934759,
            "name": "diff",
            "node_id": "MDU6TGFiZWwzMDEwOTM0NzU5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diff"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/17210/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5ChFaW",
    "number": 17210,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/17210/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/17210/timeline",
    "title": "Add `idifffn` option to customize internal diff engine instead of external engine like `diffexpr`.",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:57:51Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/17210",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4",
        "events_url": "https://api.github.com/users/iago-lito/events{/privacy}",
        "followers_url": "https://api.github.com/users/iago-lito/followers",
        "following_url": "https://api.github.com/users/iago-lito/following{/other_user}",
        "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iago-lito",
        "id": 10091387,
        "login": "iago-lito",
        "node_id": "MDQ6VXNlcjEwMDkxMzg3",
        "organizations_url": "https://api.github.com/users/iago-lito/orgs",
        "received_events_url": "https://api.github.com/users/iago-lito/received_events",
        "repos_url": "https://api.github.com/users/iago-lito/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iago-lito",
        "user_view_type": "public"
    }
}