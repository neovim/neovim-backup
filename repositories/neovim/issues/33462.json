{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nCurrently, Neovim supports `insertTextFormat = 2` (snippet) in LSP completion items, but does not handle snippet expansion in code actions or WorkspaceEdit edits, even if the server explicitly sets `insertTextFormat = 2`.\nHere is the example:\n```dart\n{                                                                                                                                                                        \n  command = {                                                                                                                                                            \n    arguments = { {                                                                                                                                                      \n        action = \"dart.assist.flutter.wrap.generic\"                                                                                                                      \n      } },                                                                                                                                                               \n    command = \"dart.logAction\",                                                                                                                                          \n    title = \"Log Action\"                                                                                                                                                 \n  },                                                                                                                                                                     \n  diagnostics = {},                                                                                                                                                      \n  edit = {                                                                                                                                                               \n    documentChanges = { {                                                                                                                                                \n        edits = { {                                                                                                                                                      \n            insertTextFormat = 2,                                                                                                                                        \n            newText = \"${1:widget}(${2:child}: Text(context.l10n.note))\",                                                                                        \n            range = {                                                                                                                                                    \n              [\"end\"] = {                                                                                                                                                \n                character = 63,                                                                                                                                          \n                line = 123                                                                                                                                               \n              },                                                                                                                                                         \n              start = {                                                                                                                                                  \n                character = 32,                                                                                                                                          \n                line = 123                                                                                                                                               \n              }                                                                                                                                                          \n            }                                                                                                                                                            \n          } },                                                                                                                                                           \n        textDocument = {                                                                                                                                                 \n          uri = \"file:///Users/ts/Documents/github/widget.dart\",                                               \n          version = 0                                                                                                                                                    \n        }                                                                                                                                                                \n      } }                                                                                                                                                                \n  },                                                                                                                                                                     \n  kind = \"refactor.flutter.wrap.generic\",                                                                                                                                \n  title = \"Wrap with widget...\"                                                                                                                                          \n} \n```\nCapabilities needs to be set to enable it: `capabilities.experimental = { snippetTextEdit = true }`\n\nRelated issue: https://github.com/nvim-flutter/flutter-tools.nvim/issues/426\n\n### Expected behavior\n\nWhen a TextEdit or WorkspaceEdit has `insertTextFormat = 2`, Neovim could:\n- Recognize it as a snippet\n- Parse the newText with placeholders (${1}, $0, etc.)\n- Optionally delegate expansion to the configured snippet engine (e.g. LuaSnip, vsnip)\n\nIs there a plan to support such functionality in Neovim?",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33462/comments",
    "created_at": "2025-04-14T05:42:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33462/events",
    "html_url": "https://github.com/neovim/neovim/issues/33462",
    "id": 2991948463,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33462/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6yVYKv",
    "number": 33462,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33462/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33462/timeline",
    "title": "Support snippet expansion (insertTextFormat = 2) in LSP code actions / WorkspaceEdit",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-14T05:42:39Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33462",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4973296?v=4",
        "events_url": "https://api.github.com/users/sidlatau/events{/privacy}",
        "followers_url": "https://api.github.com/users/sidlatau/followers",
        "following_url": "https://api.github.com/users/sidlatau/following{/other_user}",
        "gists_url": "https://api.github.com/users/sidlatau/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sidlatau",
        "id": 4973296,
        "login": "sidlatau",
        "node_id": "MDQ6VXNlcjQ5NzMyOTY=",
        "organizations_url": "https://api.github.com/users/sidlatau/orgs",
        "received_events_url": "https://api.github.com/users/sidlatau/received_events",
        "repos_url": "https://api.github.com/users/sidlatau/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sidlatau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sidlatau/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sidlatau",
        "user_view_type": "public"
    }
}