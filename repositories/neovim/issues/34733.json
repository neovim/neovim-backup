{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl",
        "user_view_type": "public"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nIn Japanese, half-width katakana and voicing mark are displayed in 2 characters wide, and Neovim also showed them as expected too. However, it is not the case with Neovim v0.11.0 and after.\n\nThe problem is, terminals show them as two-characters wide. It causes visual corruption in many ways. The following screenshot illustrates how it affects `colorcolumn`.\n\n![Image](https://github.com/user-attachments/assets/eaf40029-89bf-4528-8ceb-8a09688e0922)\n\nIn a real-world text file, the wrong display width often causes unexpected soft wrap and results in TUI corruption on every scroll... just unusable.\n\nNote that the screenshots are Neovim on WSL2 on Windows Terminal, but I confirmed that Neovim with iTerm2 on macOS behaves wrongly as well. Also note that the Windows Terminal itself wrongly renders voicing mark (the mark should be right after character), but it's a separate problem.\n\nFor reference, this is how VS Code renders them:\n\n![Image](https://github.com/user-attachments/assets/0bad52f9-a4ca-4ae1-88cd-048fe9fb8cc8)\n\nIn addition, `strdisplaywidth('ｶﾞ')` is `2` on v0.10.4 but `1` on v0.11.0.\n\n---\n\nI checked several versions:\n\n- OK: nvim v0.10.4, vim 0.9.1500\n- NG: nvim v0.11.0, v0.11.4, v0.12.0-dev-707+g 807bc00dd6\n\n### Steps to reproduce\n\n1. Create a file containing the following contents, namely `halfkana.txt`\n  ```\n  ｱｲｳｴｵ\n  ｶﾞｷﾞｸﾞｹﾞｺﾞ\n  ﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟ\n  \n  \n  vim: set colorcolumn=15:\n  ```\n2. `nvim --clean halfkana.txt`\n3. Notice the corruption.\n4. `echo strdisplaywidth('ｶﾞ')` and see `1`.\n\n### Expected behavior\n\n- Katakana is shown as in v0.10.4.\n- `echo strdisplaywidth('ｶﾞ')` returns `2`.\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0\n\n### Vim (not Nvim) behaves the same?\n\nNo, 0.9.1500\n\n### Operating system/version\n\nUbuntu 22.04 (WSL 2)\n\n### Terminal name/version\n\nWindows Terminal 1.23.11132.0 & tmux\n\n### $TERM environment variable\n\nscreen-256color\n\n### Installation\n\nLinuxbrew",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "`git bisect` gives me the first bad commit: cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2025-07-02T14:54:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3028185726",
            "id": 3028185726,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60fnJ-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3028185726/reactions"
            },
            "updated_at": "2025-07-02T14:54:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3028185726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20490597?v=4",
                "events_url": "https://api.github.com/users/statiolake/events{/privacy}",
                "followers_url": "https://api.github.com/users/statiolake/followers",
                "following_url": "https://api.github.com/users/statiolake/following{/other_user}",
                "gists_url": "https://api.github.com/users/statiolake/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/statiolake",
                "id": 20490597,
                "login": "statiolake",
                "node_id": "MDQ6VXNlcjIwNDkwNTk3",
                "organizations_url": "https://api.github.com/users/statiolake/orgs",
                "received_events_url": "https://api.github.com/users/statiolake/received_events",
                "repos_url": "https://api.github.com/users/statiolake/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/statiolake/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/statiolake/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/statiolake",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm not familiar with Unicode, but I think I understand what is happening here.\nSorry if I misused some technical terms of unicode (I'm not sure what code point or grapheme is...)\n\nWe are computing widths by following rule:\n\n1. Check the width of the first codepoint and add the width to total width\n  https://github.com/neovim/neovim/blob/cfdf68a7acde16597fbd896674af68c42361102c/src/nvim/plines.c#L474\n2. Find the next codepoint.\n  https://github.com/neovim/neovim/blob/cfdf68a7acde16597fbd896674af68c42361102c/src/nvim/plines.c#L475\n3. Keep adding the width of successive codepoints until end.\n\nAt step 2, the next codepoint is determined by the Grapheme Break Property of Unicode.\n\nhttps://github.com/neovim/neovim/blob/cfdf68a7acde16597fbd896674af68c42361102c/src/nvim/mbyte.c#L1835\n\n\nIn the case of `ｶﾞ`, it consists of [FF76, FF9E]. According to [GraphemeBreakProperty.txt](https://www.unicode.org/Public/UCD/latest/ucd/auxiliary/GraphemeBreakProperty.txt), FF76 is in `Other` class and FF9E is in `Extend` class. [The definition](https://www.unicode.org/Public/16.0.0/ucd/auxiliary/GraphemeBreakTest.html) says that it is not allowed to break between them.\n\nSo our calculation results in:\n\n1. Check the first codepoint FF76, and its width `1` is added to total width.\n2. Find the next codepoint, but FF76 and FF9E is not allowed to break, so skip the FF9E.\n3. There is no codepoint left, returning total width `1`.\n\nThe problem is, despite FF76 and FF9E is not breakable in the sense of grapheme crusters, ｶ and ｶﾞ should have the different display width.",
            "created_at": "2025-07-02T16:05:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3028429279",
            "id": 3028429279,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60ginf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3028429279/reactions"
            },
            "updated_at": "2025-07-02T16:05:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3028429279",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20490597?v=4",
                "events_url": "https://api.github.com/users/statiolake/events{/privacy}",
                "followers_url": "https://api.github.com/users/statiolake/followers",
                "following_url": "https://api.github.com/users/statiolake/following{/other_user}",
                "gists_url": "https://api.github.com/users/statiolake/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/statiolake",
                "id": 20490597,
                "login": "statiolake",
                "node_id": "MDQ6VXNlcjIwNDkwNTk3",
                "organizations_url": "https://api.github.com/users/statiolake/orgs",
                "received_events_url": "https://api.github.com/users/statiolake/received_events",
                "repos_url": "https://api.github.com/users/statiolake/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/statiolake/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/statiolake/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/statiolake",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "As for the strange font rendering on Windows Terminal, there is a issue: https://github.com/microsoft/terminal/issues/18087. Though they are independent issues, an argument there is very similar.",
            "created_at": "2025-07-02T16:37:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3028526733",
            "id": 3028526733,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60g6aN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3028526733/reactions"
            },
            "updated_at": "2025-07-02T16:37:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3028526733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20490597?v=4",
                "events_url": "https://api.github.com/users/statiolake/events{/privacy}",
                "followers_url": "https://api.github.com/users/statiolake/followers",
                "following_url": "https://api.github.com/users/statiolake/following{/other_user}",
                "gists_url": "https://api.github.com/users/statiolake/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/statiolake",
                "id": 20490597,
                "login": "statiolake",
                "node_id": "MDQ6VXNlcjIwNDkwNTk3",
                "organizations_url": "https://api.github.com/users/statiolake/orgs",
                "received_events_url": "https://api.github.com/users/statiolake/received_events",
                "repos_url": "https://api.github.com/users/statiolake/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/statiolake/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/statiolake/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/statiolake",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It seems that FF9E is now considered a composing character, while it previously occupies an independent cell after the FF76.\n\nI tested various terminals:\n- The bug doesn't happen in kitty, Alacritty or Ghostty.\n- It happens in XTerm, WezTerm, Konsole, Terminator, foot, etc..\n\nMeanwhile, with Nvim 0.10.4 the situation is reversed: it happens in the former group of terminals, but not the latter group.\n\n> ｶ and ｶﾞ should have the different display width.\n\nDo they? Does the Unicode specification say anything about this?",
            "created_at": "2025-07-02T23:03:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3029590675",
            "id": 3029590675,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60k-KT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3029590675/reactions"
            },
            "updated_at": "2025-07-03T03:42:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3029590675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Do the Unicode specification say anything about this?\n\nUnfortunately, I've not found such a sentence...\n\nHowever, in Japanese, voice mark (and semi voice mark) of half-width katakana usually take a half-width cells in monospace fonts.\n\nHalf width katakana is a bit dated letters, but still used on long-lived systems like accounting systems. It is also used in receipt from supermarkets, because you want to write as many letters as possible within limited paper width. Most of them prints those symbols as if they are independent letters.",
            "created_at": "2025-07-03T03:37:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3030520925",
            "id": 3030520925,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60ohRd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3030520925/reactions"
            },
            "updated_at": "2025-07-03T03:38:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3030520925",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20490597?v=4",
                "events_url": "https://api.github.com/users/statiolake/events{/privacy}",
                "followers_url": "https://api.github.com/users/statiolake/followers",
                "following_url": "https://api.github.com/users/statiolake/following{/other_user}",
                "gists_url": "https://api.github.com/users/statiolake/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/statiolake",
                "id": 20490597,
                "login": "statiolake",
                "node_id": "MDQ6VXNlcjIwNDkwNTk3",
                "organizations_url": "https://api.github.com/users/statiolake/orgs",
                "received_events_url": "https://api.github.com/users/statiolake/received_events",
                "repos_url": "https://api.github.com/users/statiolake/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/statiolake/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/statiolake/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/statiolake",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Width 1 is correct as per current unicode standard for FF76+FF9E. kitty renders it in one cell. While it can be argued that it appears better in two cells, that's not what the current standard says. You can force it to render in two cells by inserting a space in between or using the width part of kitty text sizing protocol:\n\nAttached screenshot shows rendering via text sizing and with space in between\n\n![Image](https://github.com/user-attachments/assets/eedccdc7-a2ea-4945-a52a-91b594e5fda6)",
            "created_at": "2025-07-03T03:51:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3030558213",
            "id": 3030558213,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60oqYF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3030558213/reactions"
            },
            "updated_at": "2025-07-03T03:52:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3030558213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1308621?v=4",
                "events_url": "https://api.github.com/users/kovidgoyal/events{/privacy}",
                "followers_url": "https://api.github.com/users/kovidgoyal/followers",
                "following_url": "https://api.github.com/users/kovidgoyal/following{/other_user}",
                "gists_url": "https://api.github.com/users/kovidgoyal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kovidgoyal",
                "id": 1308621,
                "login": "kovidgoyal",
                "node_id": "MDQ6VXNlcjEzMDg2MjE=",
                "organizations_url": "https://api.github.com/users/kovidgoyal/orgs",
                "received_events_url": "https://api.github.com/users/kovidgoyal/received_events",
                "repos_url": "https://api.github.com/users/kovidgoyal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kovidgoyal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kovidgoyal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kovidgoyal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Width 1 is correct as per current unicode standard for FF76+FF9E\n\nCould you provide some reference links if possible?\nFrom my own research, I keep finding results that say Unicode specifies character width per codepoint but does not specify character width per grapheme unit. Example: https://github.com/wezterm/wezterm/issues/4223\nMy understanding is that FF9E (and FF9F) are not combining characters, so it wouldn't be strange to calculate them with independent width. That is, 1+1 for a width of 2. However, this is just my amateur thinking, so if possible, I'd like to know which part of the specification I should refer to.",
            "created_at": "2025-07-03T10:59:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3031842943",
            "id": 3031842943,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60tkB_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3031842943/reactions"
            },
            "updated_at": "2025-07-03T10:59:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3031842943",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20490597?v=4",
                "events_url": "https://api.github.com/users/statiolake/events{/privacy}",
                "followers_url": "https://api.github.com/users/statiolake/followers",
                "following_url": "https://api.github.com/users/statiolake/following{/other_user}",
                "gists_url": "https://api.github.com/users/statiolake/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/statiolake",
                "id": 20490597,
                "login": "statiolake",
                "node_id": "MDQ6VXNlcjIwNDkwNTk3",
                "organizations_url": "https://api.github.com/users/statiolake/orgs",
                "received_events_url": "https://api.github.com/users/statiolake/received_events",
                "repos_url": "https://api.github.com/users/statiolake/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/statiolake/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/statiolake/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/statiolake",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah previously we have assumed combining marks cannot alter the base width. The only exception added in the big 0.11 rework was support for some variant selectors to force presentation style. We will need to add more cases.\n\n> Width 1 is correct as per current unicode standard \n\nMy understanding is rather that the Unicode standard doesn't unambiguously specify how monospace fonts should cell count extended grapheme clusters exactly. What is happening is rather an ongoing conversation between terminal implementers and TUI app implementers how to reasonably interpret various available Unicode properties and guidelines, which also vary across versions and revisions.\n\nwe (vim and neovim) have setcellwidth() to fix ambiguities of base chars, but we might need to extend this mechanism to some common corner cases, such as this one and \"enclosed 1\" emoji (on phone, too lazy to link the issue)",
            "created_at": "2025-07-03T11:18:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3031895121",
            "id": 3031895121,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60twxR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3031895121/reactions"
            },
            "updated_at": "2025-07-03T11:18:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3031895121",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The Unicode standard doesnt specify anything about how to display\ngraphemes in cells. Indeed it doesn't say anything about terminal\nemulators at all. What it does do is specify how to split up text into\ngraphemes. It also specifies certain properties for codepoints and\ncodepoint clusters, that can be used to try to determine how many cells\nto display a piece of text in.\n\nI have made the effort to standardise this into a simple to follow and\nimplement standard, see https://sw.kovidgoyal.net/kitty/text-sizing-protocol/#the-algorithm-for-splitting-text-into-cells\n\nBut, from history it is quite clear that it is *hopeless* to try to get\nas diverse an ecosystem as terminals and terminal programs to agree on\nwidths and an algorithm for something as complex as all of human text.\nTherefore, in that same document I linked to above there is a\ncomprehensive solution for this issue, namely allowing terminal programs\nto tell the terminal in how many cells they want each piece of text\nrendered.\nhttps://sw.kovidgoyal.net/kitty/text-sizing-protocol/#fixing-the-character-width-issue-for-the-terminal-ecosystem\n\nThat is precisely what I demonstrated in my screenshot above.\nIf nvim used that it could choose whatever width it deemed to be correct\nfor any grapheme and not care what the terminal thinks is the correct\nwidth.\n\nNow to the question of what the width of this particular pair of code\npoints should be. There are currently two general purpose (ignoring some\nniche ones like regional indicators) mechanisms in the unicode standard\nthat are used to modify the cell width of a grapheme. The default width\nfor all graphemes is 1 cell.\n\nThe first mechanism is east asian width and the second is\nemoji presentation. The latter is not applicable here. The former\npotentially is, but as it stands, there is no rule anywhere in\nEastAsianWidth.txt that says this combination should be wide\n(as far as I know, please correct me if I am wrong).\nIn the absence of such a rule it has to be 1 cell wide.\n\nI strongly suggest you do not start making up your own rules for how\nwide particular graphemes should be. That way lies utter chaos. The\ncorrect solution would be to petition the Unicode consortium to add\nextra rules to EastAsianWidth.txt for use in terminals or similar\nmonospaced contexts.\n\nThat is likely to be a lot of effort, probably leading nowhere, so\ninstead you can also consider using the width part of the text sizing\nprotocol which will allow you to at least render such things correctly on\nsupporting terminals which currently are kitty and foot, but I expect\nthat set will increase with time. As it stands you will always be wrong\nin some subset of terminals no matter what you do. With the text sizing\nprotocol or something like it, at least there is a path to a fully\nrobust solution to this entire class of issues.\n",
            "created_at": "2025-07-03T12:14:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3032046094",
            "id": 3032046094,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60uVoO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3032046094/reactions"
            },
            "updated_at": "2025-07-03T12:14:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3032046094",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1308621?v=4",
                "events_url": "https://api.github.com/users/kovidgoyal/events{/privacy}",
                "followers_url": "https://api.github.com/users/kovidgoyal/followers",
                "following_url": "https://api.github.com/users/kovidgoyal/following{/other_user}",
                "gists_url": "https://api.github.com/users/kovidgoyal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kovidgoyal",
                "id": 1308621,
                "login": "kovidgoyal",
                "node_id": "MDQ6VXNlcjEzMDg2MjE=",
                "organizations_url": "https://api.github.com/users/kovidgoyal/orgs",
                "received_events_url": "https://api.github.com/users/kovidgoyal/received_events",
                "repos_url": "https://api.github.com/users/kovidgoyal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kovidgoyal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kovidgoyal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kovidgoyal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The Unicode standard doesnt specify anything about how to display\ngraphemes in cells. Indeed it doesn't say anything about terminal\nemulators at all. \n\n> I strongly suggest you do not start making up your own rules for how\nwide particular graphemes should be. \n\nThe thing is that this is exactly what kitty (just like everyone else) is doing, given the lack of a normative standard:p Of course is a very good idea for a new implementation to follow popular existing implementations as a reference (your summary of kitty's is as good as any other, but it is descriptive, not normative. Pre-existing terminals which render ambiwidth chars as double-width are also valid, as an example). \n\n> there is no rule anywhere in\nEastAsianWidth.txt that says this combination should be wide\n(as far as I know, please correct me if I am wrong).\nIn the absence of such a rule it has to be 1 cell wide.\n\nIn particular, your last sentence is doing exactly that. The rules are not clear, therefore you made up your _own rule_, just like we all have to. It is not the same as \"what the current standard says.\"\n\nThe only normative rule I find in Tr11 (East Asian Width) is \"In particular, nonspacing marks do not possess actual advance width.\"  Stating that **all**  kinds of combining marks now need to behave according to the existing praxis of non-spacing marks is a wild extrapolation of the actual text of the standard, and one that will paint us in a very bad corner moving forward.\n\n> consider using the width part of the text sizing protocol\n\nThis is a very good idea and something we will look into, but neovim also wants to support the preexisting terminals where this issue is reported.",
            "created_at": "2025-07-03T14:44:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3032537660",
            "id": 3032537660,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60wNo8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3032537660/reactions"
            },
            "updated_at": "2025-07-03T14:44:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3032537660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "On Thu, Jul 03, 2025 at 07:44:32AM -0700, bfredl wrote:\n> bfredl left a comment (neovim/neovim#34733)\n>\n> > The Unicode standard doesnt specify anything about how to display\n> graphemes in cells. Indeed it doesn't say anything about terminal\n> emulators at all.\n>\n> > I strongly suggest you do not start making up your own rules for how\n> wide particular graphemes should be.\n>\n> The thing is that this is exactly what kitty (just like everyone else) is doing, given the lack of a normative standard:p Of course is a very good idea for a new implementation to follow popular existing implementations as a reference (your summary of kitty's is as good as any other, but it is descriptive, not normative. Pre-existing terminals which render ambiwidth chars as double-width are also valid, as an example).\n\nIt's not descriptive, it is normative. kitty did not comply with that\nspec, it had to be altered to comply with it, see the linked issue.\nhttps://github.com/kovidgoyal/kitty/issues/8533\nThus it is *not* a description of kitty's algorithm, but reflects the\nsimplest set of rules I could come up with based on a survey of\nexisting practice and the Unicode standard at its latest revision.\n\nMoreover it comes with an actual tool to test terminal compliance that\nuses test data from the Unicode consortium for grapheme segmentation in\naddition to other corner cases.\n\nIf you have some issue with the spec, why not actually address it in the\npublic discussion for it so everyone can benefit. Otherwise this will be\na perpetual game of whack-a-mole.\n\n>\n> > there is no rule anywhere in\n> EastAsianWidth.txt that says this combination should be wide\n> (as far as I know, please correct me if I am wrong).\n> In the absence of such a rule it has to be 1 cell wide.\n>\n> In particular, your last sentence is doing exactly that. The rules are not clear, therefore you made up your _own rule_, just like we all have to. It is not the same as \"what the current standard says.\"\n>\n> The only normative rule I find in Tr11 (East Asian Width) is \"In particular, nonspacing marks do not possess actual advance width.\"  Stating that **all**  kinds of combining marks now need to behave according to the existing praxis of non-spacing marks is a wild extrapolation of the actual text of the standard, and one that will paint us in a very bad corner moving forward.\n\nThe spec states non-spacing marks do not possess actual advance width.\nThat is *all* it says on this subject. If there are combining marks you\nfeel should not behave as non spacing marks, then make the case for\nthem. As I stated in my spec I am open to revisions to it. Revisions\nbased on public discussion by people with knowledge of the languages and\nscripts involved.\n\nI know of no combining mark that actually should be rendered in a\nwhole extra cell, aka one that *doubles* the width of the preceding\ncharacter. If you do by all means make a case for it. \"Existing\npractice\" is completely undefined since most people in this space\nhaven't even considered these issues let alone made an informed choice\non them. So existing practice is just whatever corner cases fall through\neach individual implementations algorithm.\n\n>\n> > consider using the width part of the text sizing protocol\n>\n> This is a very good idea and something we will look into, but neovim also wants to support the preexisting terminals where this issue is reported.\n\nThe only way to do that, is to maintain compatibility tables for every\nterminal emulator and terminal emulator version. If that's a path you\nwish to follow, by all means, it's your project.\n\nLet me not waste more of your time, if you wish to discuss improving the\nspec, by all means feel free to comment at the issue linked above.\nOtherwise all the best and sorry for the noise.\n",
            "created_at": "2025-07-03T15:51:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3032776279",
            "id": 3032776279,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60xH5X",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3032776279/reactions"
            },
            "updated_at": "2025-07-03T15:51:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3032776279",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1308621?v=4",
                "events_url": "https://api.github.com/users/kovidgoyal/events{/privacy}",
                "followers_url": "https://api.github.com/users/kovidgoyal/followers",
                "following_url": "https://api.github.com/users/kovidgoyal/following{/other_user}",
                "gists_url": "https://api.github.com/users/kovidgoyal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kovidgoyal",
                "id": 1308621,
                "login": "kovidgoyal",
                "node_id": "MDQ6VXNlcjEzMDg2MjE=",
                "organizations_url": "https://api.github.com/users/kovidgoyal/orgs",
                "received_events_url": "https://api.github.com/users/kovidgoyal/received_events",
                "repos_url": "https://api.github.com/users/kovidgoyal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kovidgoyal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kovidgoyal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kovidgoyal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "First of all, thank you all, I've understood the situation is far more complex than I initially thought. It'll be very difficult to solve this in general case...\n\nOne thing I want to mention here is that FF9E is *neither* a combining character *nor* a non-spacing character. This is `Lm` (Letter, Modifier) class.\n\n> FF9E..FF9F     ; H  # Lm     [2] HALFWIDTH KATAKANA VOICED SOUND MARK..HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK\n\n(from https://www.unicode.org/Public/UCD/latest/ucd/EastAsianWidth.txt)\n\nTherefore, FF9E is a very *special* case in a sense that it *is* a grapheme extenders but *is not* a non-spacing combining marks. I also found a sentence which call it a *outlier*.\n\n> Linebreak uses the CM class, which includes all Mc, Mn, and Me characters, plus some others. In order for it to actually  not break default grapheme clusters, it needs to include all of the Grapheme_Extend characters. With all but 2 characters it does. The Grapheme_Extend characters includes Mn, Me, and Other_Grapheme_Extend. The first two are included already in CM. The Other_Grapheme_Extend mostly includes Mc characters, which are also in CM. **The only 2 outliers are:**\n>\n> FF9E ; Other_Grapheme_Extend # Lm HALFWIDTH KATAKANA VOICED SOUND MARK\n> FF9F ; Other_Grapheme_Extend # Lm HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK\n\n(from https://www.unicode.org/L2/L2003/03106-lb6-issue.htm)\n\nThe same goes true for FF9F.\n\nConsidering that, counting FF76+FF9E as 2 cell wide is very natural for me.\n\n## References\n\n- https://www.unicode.org/Public/UCD/latest/ucd/EastAsianWidth.txt\n- https://en.wikipedia.org/wiki/Dakuten_and_handakuten\n- https://www.unicode.org/L2/L2003/03106-lb6-issue.htm\n- https://stackoverflow.com/questions/21722729/what-is-the-difference-between-combining-characters-and-grapheme-extenders-i",
            "created_at": "2025-07-03T16:29:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3032873129",
            "id": 3032873129,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60xfip",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3032873129/reactions"
            },
            "updated_at": "2025-07-03T16:32:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3032873129",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20490597?v=4",
                "events_url": "https://api.github.com/users/statiolake/events{/privacy}",
                "followers_url": "https://api.github.com/users/statiolake/followers",
                "following_url": "https://api.github.com/users/statiolake/following{/other_user}",
                "gists_url": "https://api.github.com/users/statiolake/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/statiolake",
                "id": 20490597,
                "login": "statiolake",
                "node_id": "MDQ6VXNlcjIwNDkwNTk3",
                "organizations_url": "https://api.github.com/users/statiolake/orgs",
                "received_events_url": "https://api.github.com/users/statiolake/received_events",
                "repos_url": "https://api.github.com/users/statiolake/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/statiolake/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/statiolake/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/statiolake",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Therefore, FF9E is a very special case in a sense that it is a grapheme extenders but is not a non-spacing combining marks.\n\nUtf8proc has some ideas about what categories of chars should have width 1 or 0 even when used as \"Extend\". I will try to figure out if it something which makes sense in general for us to use, but at least it gives width 1 for these half-width kana signs and 0 for non-spacing marks. ",
            "created_at": "2025-07-03T17:15:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/34733#issuecomment-3032996246",
            "id": 3032996246,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34733",
            "node_id": "IC_kwDOAPphoM60x9mW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3032996246/reactions"
            },
            "updated_at": "2025-07-03T17:15:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3032996246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34733/comments",
    "created_at": "2025-07-02T14:27:24Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34733/events",
    "html_url": "https://github.com/neovim/neovim/issues/34733",
    "id": 3196119041,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": "wrong behavior that was introduced in a previous commit (please bisect)",
            "id": 619474658,
            "name": "bug-regression",
            "node_id": "MDU6TGFiZWw2MTk0NzQ2NTg=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-regression"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue has been tracked to a specific commit",
            "id": 1481421490,
            "name": "has:bisected",
            "node_id": "MDU6TGFiZWwxNDgxNDIxNDkw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:bisected"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "(multibyte) unicode characters",
            "id": 2882115256,
            "name": "unicode  💩",
            "node_id": "MDU6TGFiZWwyODgyMTE1MjU2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/unicode%20%20%F0%9F%92%A9"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34733/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 90,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 70,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-07-07T17:05:04Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM6-gOgB",
    "number": 34733,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34733/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34733/timeline",
    "title": "Half-width katakana and voicing mark causes corrupted TUI after v0.11.0",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-03T17:15:24Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34733",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20490597?v=4",
        "events_url": "https://api.github.com/users/statiolake/events{/privacy}",
        "followers_url": "https://api.github.com/users/statiolake/followers",
        "following_url": "https://api.github.com/users/statiolake/following{/other_user}",
        "gists_url": "https://api.github.com/users/statiolake/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/statiolake",
        "id": 20490597,
        "login": "statiolake",
        "node_id": "MDQ6VXNlcjIwNDkwNTk3",
        "organizations_url": "https://api.github.com/users/statiolake/orgs",
        "received_events_url": "https://api.github.com/users/statiolake/received_events",
        "repos_url": "https://api.github.com/users/statiolake/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/statiolake/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/statiolake/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/statiolake",
        "user_view_type": "public"
    }
}