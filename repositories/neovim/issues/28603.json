{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\n[vim.diagnostic.enable(nil)](https://github.com/neovim/neovim/blob/e778e0116198470ba037b9426f4ff7fa5cb7f880/runtime/lua/vim/diagnostic.lua#L2046-L2053) and [vim.lsp.inlay_hint.enable(nil)](https://github.com/neovim/neovim/pull/28543) both actively override any buffer-local flags that were previously set by `enable(..., {bufnr=...}`. \r\n\r\nThat seems a bit \"destructive\". I tend to think that global enable() should act like a gate: \r\n\r\n- if globally enabled, then defer to the buffer-local flag\r\n- if globally disabled, don't check the buffer-local flag\r\n\r\nIOW: buffer-local \"enable\" flag has precedence unless the feature is globally disabled.\r\n\r\n### Expected behavior\r\n\r\nNeed a clear pattern for all such modules to follow. This may have implications for other kinds of \"config\" besides mere \"enablement\".\r\n\r\nThe behavior of vim *options* (`:help global-local`, ignoring other kinds of option scopes) would imply that the global setting is only the \"default\", and any buffer-local setting should always override the global default.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "IMO the current behavior of `enable` is good enough, even if we provide something like `vim.g.inlay_hint = true` and `vim.b.inlay_hint = false`, we should keep the current behavior.\r\n\r\nA summary of the current pattern:\r\n\r\n**Keep buffer-local states only when it is different from the global one**. This means that after it is equalized, its state will change as the global state changes.\r\n\r\nAs I said in https://github.com/neovim/neovim/pull/28543#discussion_r1587049857:\r\n\r\n>The logic behind this design is that if it can be globally `enable` or locally `enable`, when the user selects local `enable`, we think the user's purpose is to distinguish the local state from the global state. I think this design is good for interaction,\r\n\r\nIt is the best choice that can be made under the following constraints:\r\n\r\n>...there is no way to remove \"local variables\" by using `enable`. Once the user manages a buffer's `bufstate`, it means that they must manage it all the time, there's no way to make them follow the `globalstate`.\r\n\r\nAnd if we add more filters, like what https://github.com/neovim/neovim/pull/28521 tries to do, it should be hard to manage by global or buffer variables.",
            "created_at": "2024-05-04T12:13:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/28603#issuecomment-2094143168",
            "id": 2094143168,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28603",
            "node_id": "IC_kwDOAPphoM580hbA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094143168/reactions"
            },
            "updated_at": "2024-05-04T12:19:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094143168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I agree with ofseed here regarding global and local states. If we adopt a model where the global state acts as a gate and then defer to local states, the way of modeling \"I want to have this feature disabled but I want to enable it for a single buffer\" becomes very difficult to represent. If the user has an option disabled globally and they do something to toggle locally then nothing would happen. Then if they enable it globally it could end up applying to all open buffers even if the user doesn't mean to do that.\r\n\r\nI tend to like that the current design logic represents, \"we do the most specific thing that the user has asked for so far\"",
            "created_at": "2024-09-11T13:47:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/28603#issuecomment-2343726235",
            "id": 2343726235,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28603",
            "node_id": "IC_kwDOAPphoM6Lsmyb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2343726235/reactions"
            },
            "updated_at": "2024-09-11T13:47:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2343726235",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1591837?v=4",
                "events_url": "https://api.github.com/users/mehalter/events{/privacy}",
                "followers_url": "https://api.github.com/users/mehalter/followers",
                "following_url": "https://api.github.com/users/mehalter/following{/other_user}",
                "gists_url": "https://api.github.com/users/mehalter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mehalter",
                "id": 1591837,
                "login": "mehalter",
                "node_id": "MDQ6VXNlcjE1OTE4Mzc=",
                "organizations_url": "https://api.github.com/users/mehalter/orgs",
                "received_events_url": "https://api.github.com/users/mehalter/received_events",
                "repos_url": "https://api.github.com/users/mehalter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mehalter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mehalter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mehalter",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It might be time to decide on this behavior; at least I can consider the current behavior (that is, what `vim.lsp.inlay_hint` does) is acceptable, right? Because this can be handled in the `vim.lsp._state` that I am about to try to implement, avoiding the need to write the logic to check if it's enabled everywhere.",
            "created_at": "2024-10-18T16:36:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/28603#issuecomment-2422851491",
            "id": 2422851491,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28603",
            "node_id": "IC_kwDOAPphoM6Qacej",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2422851491/reactions"
            },
            "updated_at": "2024-10-18T16:36:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2422851491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looks like there is not much demand for anything different than what exists, so I agree with your comments above, and then the next thing is to write down the conclusion.\n\nAlso, in general, if a builtin module needs mature \"options\" capabilities, it should... graduate its quasi-options into true editor options. That will be helped by https://github.com/neovim/neovim/issues/25672 . (Eventually we could support \"namespaced\" options, so plugins could define their own subtree of options and get the full options capabilities: scoping, `:set` vs `:setlocal`, etc.)",
            "created_at": "2024-10-18T16:56:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/28603#issuecomment-2422881572",
            "id": 2422881572,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28603",
            "node_id": "IC_kwDOAPphoM6Qaj0k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 5,
                "hooray": 0,
                "laugh": 0,
                "rocket": 5,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2422881572/reactions"
            },
            "updated_at": "2024-10-18T16:58:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2422881572",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We may need something similar for `vim.lsp.config` and `vim.lsp.enable` to better accommodate project specific setups. #31552",
            "created_at": "2024-12-12T09:43:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/28603#issuecomment-2538381779",
            "id": 2538381779,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28603",
            "node_id": "IC_kwDOAPphoM6XTKHT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538381779/reactions"
            },
            "updated_at": "2024-12-12T11:17:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2538381779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28603/comments",
    "created_at": "2024-05-02T11:31:38Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28603/events",
    "html_url": "https://github.com/neovim/neovim/issues/28603",
    "id": 2275312154,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "discussion has run its course, need decision how to proceed",
            "id": 83851236,
            "name": "needs:decision",
            "node_id": "MDU6TGFiZWw4Mzg1MTIzNg==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:decision"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "issue needs attention from an expert, or PR proposes significant changes to architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28603/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 0,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 32,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-02-02T00:25:39Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM6HnoIa",
    "number": 28603,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28603/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28603/timeline",
    "title": "Lua/stdlib: behavior of global vs local \"enable\" (and other config)",
    "updated_at": "2025-02-02T00:10:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28603",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}