{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen sending very large completion lists to a GUI client that supports ext_popup with text input going at the same time, it's possible to trigger a race condition that causes neovim to return one of the completion results with the same message id as we expect for the RPC result response. I've attached a log with a debug trace of some of the RPC transactions happening between neovim-gtk and neovim that seem to cause this. [race-reproduced.txt](https://github.com/user-attachments/files/17877569/race-reproduced.txt)\n\nI managed to do some bisecting on neovim and tracked the breaking change down to dc37c1550bed46fffbb677d343cdc5bc94056219\n\n### Steps to reproduce\n\nI know, I'm really sorry :(. There's supposed to be some steps here, but I am going to need a bit of assistance from y'all in coming up with a reasonable way to reproduce this without pulling in my whole setup. I'm going to do my best to figure something out next week or after Thanksgiving if I can, but hopefully this is a start and maybe you guys have some ideas on how I could come up with a simpler reproducer. I think the key is going to be figuring out how I can get nvim to spit out a super large list of completion results without having my .vimrc present or needing to be in a project source tree.\n\nAlso FWIW: The good news is I can reproduce this very reliably on my own system, as can a number of other people with substantially different setups than my own (and am going to ask anyone with an easy reproducer for this to make a post here)[race-reproduced.txt](https://github.com/user-attachments/files/17877567/race-reproduced.txt)\n. Anyway: I'm going to give you the steps I'm following locally here, and hopefully we can figure something out.\n\n* Have LSP setup on neovim, the LSP configuration I'm currently using is for rust-analyzer and the code I'm using to reproduce this problem is a kernel source tree here\n* Use neovim-gtk (hopefully other clients can hit this, but with how hard it was to find a consistent reproducer for this it's -probably- better just to use my client for now)\n* Open up a project where you can get neovim to generate a really, really big set of results for autocompletion. Ideally, it should lag things a bit.\n* Start typing such that neovim starts popping up completion results using neovim-gtk's ext_popup support\n* Repeat until it crashes and says it no longer can read messages from neovim.\n\n### Expected behavior\n\nnvim_input should never return anything but a u64 in the response field when responding to an nvim_input call.\n\n### Nvim version (nvim -v)\n\nv0.10.2\n\n### Vim (not Nvim) behaves the same?\n\nN/A (this is related to RPC, so...)\n\n### Operating system/version\n\nFedora 40\n\n### Terminal name/version\n\nneovim-gtk\n\n### $TERM environment variable\n\nN/A (I think?)\n\n### Installation\n\nFrom fedora repository, but I can trigger it by building from source",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31316/comments",
    "created_at": "2024-11-22T23:56:18Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31316/events",
    "html_url": "https://github.com/neovim/neovim/issues/31316",
    "id": 2684991876,
    "labels": [
        {
            "color": "c7def8",
            "default": false,
            "description": "channels, RPC, msgpack",
            "id": 242522707,
            "name": "channels-rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channels-rpc"
        },
        {
            "color": "f9d0c4",
            "default": false,
            "description": "wrong behavior that was introduced in a previous commit (please bisect)",
            "id": 619474658,
            "name": "bug-regression",
            "node_id": "MDU6TGFiZWw2MTk0NzQ2NTg=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-regression"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue has been tracked to a specific commit",
            "id": 1481421490,
            "name": "has:bisected",
            "node_id": "MDU6TGFiZWwxNDgxNDIxNDkw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:bisected"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31316/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 138,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 57,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-01-17T23:02:36Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "I_kwDOAPphoM6gCbmE",
    "number": 31316,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31316/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31316/timeline",
    "title": "Regression: race condition(?) in msgpack handling (from dc37c1550bed46fffbb677d343cdc5bc94056219)",
    "updated_at": "2025-01-17T14:59:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31316",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1527057?v=4",
        "events_url": "https://api.github.com/users/Lyude/events{/privacy}",
        "followers_url": "https://api.github.com/users/Lyude/followers",
        "following_url": "https://api.github.com/users/Lyude/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lyude/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Lyude",
        "id": 1527057,
        "login": "Lyude",
        "node_id": "MDQ6VXNlcjE1MjcwNTc=",
        "organizations_url": "https://api.github.com/users/Lyude/orgs",
        "received_events_url": "https://api.github.com/users/Lyude/received_events",
        "repos_url": "https://api.github.com/users/Lyude/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Lyude/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lyude/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Lyude",
        "user_view_type": "public"
    }
}