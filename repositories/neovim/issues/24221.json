{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Vim users have vim.org as a package index to some extent, and then a bunch of random repos on Github, but I think we can do better.\n\nI'd like to create something similar to Vim Awesome, but host it at packages.neovim.io or plugins.neovim.io. I think that while we _could_ do this with Github Pages, it would be a better user experience to build it with something a little more robust (i.e. some server-side programming language). Obviously, this system would be open source, but we should provide the canonical version for Neovim.\n\nI'm willing to build and host this system. I'd also like to suggest that we place one non-obtrusive ad (something like  somewhere on the page. I'd propose a 30/70 split of the proceeds from that ad - 70% going to Neovim (ideally, to help pay for more full time work on Neovim), and 30% going to me to help recoup hosting costs (as I expect that the main instance could get fairly high traffic over time).\n\nThere would be no cost to users to use the service, and anyone would be able to set up an account and list their package. I imagine this working a bit like Packagist (for anyone familiar with the PHP world), Dockerhub (for Docker users), or npm (for Node.js users).\n\nBasically, a user signs in with Github or Bitbucket. The application then gets a list of their repos, and they can click a button for a given repo to add that repo to the index. Depending on what the app can parse out of their repository (name of the plugin, description, dependencies, etc), there may be a second step to ask them to clarify any additional information. When they click go, we'll save the entry and add a webhook to that repository so that we're notified whenever there are new commits/tags so that we can display the appropriate information to the user.\n\nOne thing that's really important to making this service scale reasonably well is to not try to crawl through all of the Github repositories like Vim Awesome does. I think that's a massive waste of time and computing resources. It's much better to just have users add their packages and be notified when they're updated.\n\nSince this service would also be open source, users would be able to spin up an instance of their own to host private packages if they wanted to (for instance, maybe a company has internal editor plugins that really only make sense to distribute to that company's employees). I imagine this process would look something like:\n1. Install the software\n2. Add a line to your vim config to include your package index\n3. Use whatever package manager you use normally, and the packages included in your own index will be included in searches and whatnot.\n\nThis also opens the door to having real machine-readable dependency lists for a given plugin, and this applies to system config/supporting software, vim configuration, and what other plugins are installed. For instance, [Syntastic](https://github.com/scrooloose/syntastic#requirements) depends on having a vim with \"autocmd, eval, file_in_path, modify_fname, quickfix, reltime, and user_commands\" enabled. A package manager that's aware of those platform dependencies can let the user know when they install the package that they're missing something important. [clang_complete](https://github.com/rip-rip/clang_complete) depends on having `clang` installed on the system. And [Unite](https://github.com/Shougo/unite.vim) used to depend on [vimproc](https://github.com/Shougo/vimproc.vim), so a package manager that was aware of that relationship could have just automatically installed vimproc when Unite was installed.\n\n@tarruda @justinmk What do you think about having something like this as the \"official\" neovim plugin list? I may have asked about this before, but I can't recall.\n\nThe value I see in this is that there's one place for people to go look for packages. Discoverability of vim packages has been a pretty difficult thing for me in the past, and it ends up being very time consuming. Having one index with search, categorization, and user ratings/reviews seems like the perfect way to resolve that issue, and having it open source means that the community can help to improve it over time.\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@cweagans \n\nI and @tyru have considered the plugins repsitory system.\n\nOur project is in:  (Sorry, the discussion in Japanese)\nhttps://github.com/vim-vivacious/metainfo/issues/\n",
            "created_at": "2016-02-06T03:05:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999612",
            "id": 1615999612,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MTI=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999612/reactions"
            },
            "updated_at": "2016-02-06T03:05:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@cweagans Note https://github.com/neovim/neovim/issues/247. \n\n> What do you think about having something like this as the \"official\" neovim plugin list?\n\nOn paper it's great, but the details require thought and it will be a huge time-sink to get it right. IMO. I'm not at all opposed to someone taking total ownership of this and making it work, and I'll do anything I can to remove obstacles that are blocking progress. But taking an active role in this is low-priority until other more important problems are solved.\n\nDesigning a package format is the first challenge. Personally I am strongly in favor of the \"passive\" approach that VimAwesome takes--it avoids the need to design a package format, for the near-term. Any technical challenges with crawling repos and scraping vimrcs seem much more tenable to me than designing a package format or centralized repo and getting the community on-board.\n\nAs always I would strongly recommend taking a look at existing systems (VimAwesome) and trying to fix them instead of starting a new effort. Though VimAwesome's software stack seemed ridiculous when I glanced at it.\n",
            "created_at": "2016-02-06T17:37:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999614",
            "id": 1615999614,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MTQ=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999614/reactions"
            },
            "updated_at": "2016-02-06T17:39:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999614",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk I don't want to design a package format. I just don't want to crawl Github. It's simple enough to login with Github and essentially say \"my repo is a Neovim plugin\". Rather then requiring a metadata file somewhere, we'll just ask the user fill in some details in the web UI. Later, if we decide we want to ask plugin maintainers to include a metadata file, it will be easy to just grab that file, pre-fill the web UI metadata fields, and make it so that the user doesn't have to see/manually edit them.\n\nThe only thing that the web UI would be for is a curated index of plugins that are known to work with Neovim. Then there would be some JSON output for plugin manager plugins to consume as a way to get a complete package listing (for search or for downloading a specific release of a plugin).\n\nI've looked through the source of Vim Awesome and it is...well....not awesome. I wouldn't want to reuse that.\n",
            "created_at": "2016-02-06T18:44:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999616",
            "id": 1615999616,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MTY=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999616/reactions"
            },
            "updated_at": "2016-02-06T18:44:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101590?v=4",
                "events_url": "https://api.github.com/users/cweagans/events{/privacy}",
                "followers_url": "https://api.github.com/users/cweagans/followers",
                "following_url": "https://api.github.com/users/cweagans/following{/other_user}",
                "gists_url": "https://api.github.com/users/cweagans/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cweagans",
                "id": 101590,
                "login": "cweagans",
                "node_id": "MDQ6VXNlcjEwMTU5MA==",
                "organizations_url": "https://api.github.com/users/cweagans/orgs",
                "received_events_url": "https://api.github.com/users/cweagans/received_events",
                "repos_url": "https://api.github.com/users/cweagans/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cweagans/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cweagans/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cweagans",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "If neovim thankfully uses our idea of metainfo repository,\nplease see the [overview image](https://github.com/vim-vivacious/metainfo/issues/1#issuecomment-178585193).\nThe image is totally written in English\nbecause we suppose a workflow which is a part of Vim ecosystem(vim-pi,...) in feature.\n",
            "created_at": "2016-02-06T18:57:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999617",
            "id": 1615999617,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MTc=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999617/reactions"
            },
            "updated_at": "2016-02-06T18:57:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999617",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/48169?v=4",
                "events_url": "https://api.github.com/users/tyru/events{/privacy}",
                "followers_url": "https://api.github.com/users/tyru/followers",
                "following_url": "https://api.github.com/users/tyru/following{/other_user}",
                "gists_url": "https://api.github.com/users/tyru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tyru",
                "id": 48169,
                "login": "tyru",
                "node_id": "MDQ6VXNlcjQ4MTY5",
                "organizations_url": "https://api.github.com/users/tyru/orgs",
                "received_events_url": "https://api.github.com/users/tyru/received_events",
                "repos_url": "https://api.github.com/users/tyru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tyru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tyru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tyru",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tyru what is the difference between vim-pi and vivacious?\n",
            "created_at": "2016-02-06T19:36:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999618",
            "id": 1615999618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MTg=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999618/reactions"
            },
            "updated_at": "2016-02-06T19:36:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well, also I thought that like \"well, vim-pi seems enough for me\" until I talked with @Shougo.\n\nAccording to [his story](https://github.com/vim-vivacious/metainfo/issues/1#issuecomment-170244209), \n\n### 1. Plugins that does not exist are listed in databases yet\n\nAlmost data are until 2014.\nGoogle Code is closed but vim-pi doesn't check if the plugins exist\nso the plugins are remaining.\n\n### 2. Need to run a vim script to get metadata\n\nIt doesn't have a whole JSON in repository which package managers want.\nNeed to run a vim script and generate a whole JSON.\n(In the overview image: \"vim-pi.json\")\n@Shougo created a snapshot whole JSON and uploaded to gist.\n[his package manager](https://github.com/Shougo/neobundle.vim) now  [seems to use that](https://github.com/Shougo/neobundle.vim/blob/5229c48494a0af1fcab1833271466fedd826da86/autoload/neobundle/metadata.vim#L30-L33).\nhttps://gist.github.com/Shougo/028d6ae320cc8f354f88\n\n### 3. URL Protocols of plugins in databases are \"git\".\n\nHowever, this problem can be solved by replacing the URLs with https one.\nI and @Shougo think that a package manager should not use a plain protocol like git, http.\n\n### 4. vim.org is not https\n\nThis is the problem of vim.org .\nNo https site of vim.org .\n\nHowever, I thought that this problem can be solved by using [vim-scripts repository](https://github.com/vim-scripts).\nBut @Shougo told me that [vim-scripts.org](http://vim-scripts.org/) is not working.\n\nWell, I didn't ask about this then,\n@Shougo, Please describe why you thought that [vim-scripts.org](http://vim-scripts.org/) is not working?\n",
            "created_at": "2016-02-06T20:03:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999620",
            "id": 1615999620,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MjA=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999620/reactions"
            },
            "updated_at": "2016-02-06T20:08:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999620",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/48169?v=4",
                "events_url": "https://api.github.com/users/tyru/events{/privacy}",
                "followers_url": "https://api.github.com/users/tyru/followers",
                "following_url": "https://api.github.com/users/tyru/following{/other_user}",
                "gists_url": "https://api.github.com/users/tyru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tyru",
                "id": 48169,
                "login": "tyru",
                "node_id": "MDQ6VXNlcjQ4MTY5",
                "organizations_url": "https://api.github.com/users/tyru/orgs",
                "received_events_url": "https://api.github.com/users/tyru/received_events",
                "repos_url": "https://api.github.com/users/tyru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tyru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tyru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tyru",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The image is just an overview and we are just starting to work on that.\nSo please tell me if the overview is ambiguous.\nAnd no codes are available yet...\nBut if you thankfully help us to make it, we should output all information in English.\n",
            "created_at": "2016-02-06T20:15:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999621",
            "id": 1615999621,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MjE=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999621/reactions"
            },
            "updated_at": "2025-07-06T14:36:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/48169?v=4",
                "events_url": "https://api.github.com/users/tyru/events{/privacy}",
                "followers_url": "https://api.github.com/users/tyru/followers",
                "following_url": "https://api.github.com/users/tyru/following{/other_user}",
                "gists_url": "https://api.github.com/users/tyru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tyru",
                "id": 48169,
                "login": "tyru",
                "node_id": "MDQ6VXNlcjQ4MTY5",
                "organizations_url": "https://api.github.com/users/tyru/orgs",
                "received_events_url": "https://api.github.com/users/tyru/received_events",
                "repos_url": "https://api.github.com/users/tyru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tyru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tyru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tyru",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Well, I didn't ask about this then,\n> @Shougo, Please describe why you thought that vim-scripts.org is not working?\n\nBecause, the bot does not work...\n\nhttps://github.com/vim-scripts\n\nIt should be updated everyday like vim-pi bot.\n",
            "created_at": "2016-02-07T01:15:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999623",
            "id": 1615999623,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MjM=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999623/reactions"
            },
            "updated_at": "2025-07-06T14:35:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@Shougo I see.\nIndeed it seems a little bit old.\n",
            "created_at": "2016-02-07T04:39:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999625",
            "id": 1615999625,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MjU=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999625/reactions"
            },
            "updated_at": "2025-07-06T14:35:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999625",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/48169?v=4",
                "events_url": "https://api.github.com/users/tyru/events{/privacy}",
                "followers_url": "https://api.github.com/users/tyru/followers",
                "following_url": "https://api.github.com/users/tyru/following{/other_user}",
                "gists_url": "https://api.github.com/users/tyru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tyru",
                "id": 48169,
                "login": "tyru",
                "node_id": "MDQ6VXNlcjQ4MTY5",
                "organizations_url": "https://api.github.com/users/tyru/orgs",
                "received_events_url": "https://api.github.com/users/tyru/received_events",
                "repos_url": "https://api.github.com/users/tyru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tyru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tyru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tyru",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@Shougo @tyru IMO, that's way too complicated. There's really no reason for all of that complexity if you look at what the requirements actually are:\n1. We want a list of plugins that work with Neovim.\n2. The list should be separated by category and searchable in a web UI\n3. The list should be available in a machine readable format for package managers to consume.\n4. There should be some guarantee that the list has not been tampered with via MITM or otherwise.\n5. The list should include download locations for releases.\n\nCrawling Github repos is not a valid approach in my opinion. It's just not worth the computing and network resources it requires, especially when you can re-architect things a bit and use a solution that _doesn't_ require a crawler. Web hooks (from either Bitbucket or Github) go a long way toward eliminating the need for crawling, since those services will simply notify the packages site any time there is a change (inc. a new tag or something).\n\nPersonally, I'd like to encourage people to collaborate rather than creating new plugins for every little thing, too. That is, there might be the \"official\" PHP plugin, that provides solid autocomplete, syntax highlighting, filetype detection, etc, and rather than having some other plugin that adds docs lookup, they just add it to the official one. That's down the road though.\n\nIn any case, if we want to have an official packages site, I can build it and host it without any problem. @tarruda, @justinmk -- if you want to see a prototype before committing, let me know, and I'll throw something together for you to look at.\n",
            "created_at": "2016-02-07T07:13:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999627",
            "id": 1615999627,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2Mjc=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999627/reactions"
            },
            "updated_at": "2025-07-06T14:35:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101590?v=4",
                "events_url": "https://api.github.com/users/cweagans/events{/privacy}",
                "followers_url": "https://api.github.com/users/cweagans/followers",
                "following_url": "https://api.github.com/users/cweagans/following{/other_user}",
                "gists_url": "https://api.github.com/users/cweagans/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cweagans",
                "id": 101590,
                "login": "cweagans",
                "node_id": "MDQ6VXNlcjEwMTU5MA==",
                "organizations_url": "https://api.github.com/users/cweagans/orgs",
                "received_events_url": "https://api.github.com/users/cweagans/received_events",
                "repos_url": "https://api.github.com/users/cweagans/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cweagans/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cweagans/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cweagans",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  It's just not worth the computing and network resources it requires, \n\nDo you have numbers on that? I somehow doubt it is very expensive. \n\n> Web hooks (from either Bitbucket or Github) go a long way toward eliminating the need for crawling\n\nBut it's not equivalent. Passive always wins, if it can _possibly_ work. The value in VimAwesome's approach (were it actually maintained) is that it shows _actual usage_ of plugins by users, instead of just upvotes or stars.\n\n> if we want to have an official packages site, I can build it and host it without any problem.\n\nWe can link to it and suggest it, but declaring anything as \"official\" is a long way off, it incurs all kinds of expectations that the project isn't prepared to meet. I haven't even looked at vim-pi or vivacious :/\n",
            "created_at": "2016-02-07T07:51:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999628",
            "id": 1615999628,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2Mjg=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999628/reactions"
            },
            "updated_at": "2016-02-07T07:52:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@cweagans \n\n> Crawling Github repos is not a valid approach\n\nYes.\nWe also talked about that and the bot does not have to crawl GitHub repositories via GitHub API.\nWe just provide a list of plugin URIs (see \"URI List File\"), and GitHub bot crawls only their repos in the list file.\n\n> Web hooks (from either Bitbucket or Github) go a long way toward eliminating the need for crawling\n\nHm, the idea sounds Vim plugin developers must specify the Web hooks URLs from GitHub or BitBucket site's \"Settings\" page.\nI don't think all Vim plugin developers (who have a repos in GitHub, BitBucket) easily folow to do that work.\n\n> Personally, I'd like to encourage people to collaborate rather than creating new plugins for every little thing, too\n\nYup, certainly our idea doesn't have the system like community hub site.\nIt is just for developers, not users.\nBecause I and @Shougo just supposed to suggest our idea as a part of Vim community's ecosystem to Vim community.\nWe just talked about metadata repository of Vim plugins. not hub site.\nIf you also think to have the system like \"official\" plugin and hub site, personally, I will not intend to implement a such system.\n\nHowever, I don't know about Neovim's current ecosystem... ;)\n@Shougo seem to involve eagerly with Neovim, vim-pi :)\n",
            "created_at": "2016-02-07T08:03:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999629",
            "id": 1615999629,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2Mjk=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999629/reactions"
            },
            "updated_at": "2025-07-06T14:35:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999629",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/48169?v=4",
                "events_url": "https://api.github.com/users/tyru/events{/privacy}",
                "followers_url": "https://api.github.com/users/tyru/followers",
                "following_url": "https://api.github.com/users/tyru/following{/other_user}",
                "gists_url": "https://api.github.com/users/tyru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tyru",
                "id": 48169,
                "login": "tyru",
                "node_id": "MDQ6VXNlcjQ4MTY5",
                "organizations_url": "https://api.github.com/users/tyru/orgs",
                "received_events_url": "https://api.github.com/users/tyru/received_events",
                "repos_url": "https://api.github.com/users/tyru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tyru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tyru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tyru",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> the idea sounds Vim plugin developers must specify the Web hooks URLs from GitHub or BitBucket site's \"Settings\" page.\n\nYou'd log into the package index with your Github or Bitbucket account. The application would show a list of repos, and when you select one to add to the package index, the webhook would be set up for you automatically. This is similar to how Travis CI works.\n\n> The value in VimAwesome's approach (were it actually maintained) is that it shows actual usage of plugins by users, instead of just upvotes or stars.\n\nThis is easily doable. Packagist (the PHP equivalent to NPM) does this by tracking the number of downloads. Composer, the CLI client, is expected to send a request to a specific Packagist endpoint whenever a package is downloaded so that number of downloads can be tracked.\n\n> Do you have numbers on that? I somehow doubt it is very expensive. \n\nOff the top of my head, this is what I can think of:\n- You need to discover repos in the first place. This is pretty expensive because it requires using the search API from whatever VCS host you're interacting with (Github, Bitbucket, etc) to find the repos in the first place.\n- Once you've gotten a list of these repos, you need to keep them in a queue which could get quite large.\n- You need to be able to guarantee that a repo would be crawled at a specific interval (_n_ hours) so that repo metadata stays up to date, which means that your entire queue must be able to be processed within \n  _n_ hours.\n- As the list of plugins grows, you'll need to be able to add computing resources to keep up with the queue size to guarantee the previous point.\n- As the Neovim community grows and diverges from the main Vim community, you'll also need to be able to somehow differentiate Vim plugins from Neovim plugins, which could mean scanning for specific keywords in the source code of the repo that is being crawled, which means that the crawler would need to be capable of doing a `git clone`.\n\nNone of this is particularly expensive at the beginning, but the expense grows over time. With the webhook approach, the cost only grows with the number of users actively using the web UI (the metadata requests can easily be cached on a CDN, so there's not really a scalability problem there).\n\n> We can link to it and suggest it, but declaring anything as \"official\" is a long way off, it incurs all kinds of expectations that the project isn't prepared to meet.\n\nUnderstood. I think that Neovim should have (at least as a long term goal) an official package hub, as other communities do, as it really helps with discoverability of editor plugins. Even Emacs has this now. The upside to saying that it's an \"official\" thing is that Neovim itself could include a canned API to interact with this service (i.e. just some functions you can call from your own vim scripts to find, download, enable packages), so plugin managers would essentially become the UI layer on top of this API.\n\nEven longer term, I'd love to see the Neovim community settle on one package manager and eventually move it into core, so that Neovim itself would ship with a way to manage plugins like Atom and Emacs. This is a very long way off, though. Just communicating my vision at this point.\n",
            "created_at": "2016-02-07T19:50:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999631",
            "id": 1615999631,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MzE=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999631/reactions"
            },
            "updated_at": "2025-07-06T14:20:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999631",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101590?v=4",
                "events_url": "https://api.github.com/users/cweagans/events{/privacy}",
                "followers_url": "https://api.github.com/users/cweagans/followers",
                "following_url": "https://api.github.com/users/cweagans/following{/other_user}",
                "gists_url": "https://api.github.com/users/cweagans/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cweagans",
                "id": 101590,
                "login": "cweagans",
                "node_id": "MDQ6VXNlcjEwMTU5MA==",
                "organizations_url": "https://api.github.com/users/cweagans/orgs",
                "received_events_url": "https://api.github.com/users/cweagans/received_events",
                "repos_url": "https://api.github.com/users/cweagans/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cweagans/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cweagans/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cweagans",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@cweagans If you want to do this, I suggest to investigate how [component.io](http://component.github.io/) (javascript package registry and installer) is implemented. It is simple, well designed and has minimal server-side requirements, so it would be a good idea to learn from it(even though it is currently unmaintained). Here's what I could understand from a quick search through their repositories:\n- [component.io](https://github.com/component/component.github.io) is a frontend for [search.js](https://github.com/componentjs/search.js) which is a simple engine for filtering package descriptions contained in json files.\n- [search.js](https://github.com/componentjs/search.js) gets its json from the [registry](https://github.com/componentjs/crawler.js), which also functions as the crawler for github projects.\n- [crawler.js](https://github.com/componentjs/crawler.js) is a simple web app containing a single input box for github usernames. When a username is entered, the server will add projects containing a \"component.json\"(the package manifest) from that user to the package database(which is the json file queried by search.js).\n\nI found this design interesting because it allows us to use github pages: the crawler can simply push new json files to the github page repository and they will be available on the web UI. A server is still required for running the crawler, but this is much simpler than maintaining a dynamic web app with github authentication(only used for registering/removing packages).\n",
            "created_at": "2016-02-08T06:00:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999633",
            "id": 1615999633,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MzM=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999633/reactions"
            },
            "updated_at": "2016-02-08T06:00:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Coming back to this:\r\n\r\nI don't think we need to create a registry now. Github does a lot of the heaving lifting for us. That is, we don't need a separate registry at all because Github itself can act as a registry! All we need is a nice UI on top of the repository search API.\r\n\r\nEssentially, the process for opting-in to including a plugin in the listing would be to tag your repo with \"neovim-plugin\" or similar (we can work out the specifics later). Then, a UI on neovim.io would allow a user to basically browse Github's API in a nice way.\r\n\r\nAlso, this only addresses discoverability of plugins, which is my primary interest. The actual installation, dependency resolution, etc would all still be handled by 3rd party plugin managers.\r\n\r\nI'd be willing to prototype what I'm thinking if that would be of interest. Note that we could also use this UI to replace https://github.com/neovim/neovim/wiki/Related-projects.",
            "created_at": "2017-10-10T21:59:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999634",
            "id": 1615999634,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MzQ=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999634/reactions"
            },
            "updated_at": "2017-10-10T21:59:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101590?v=4",
                "events_url": "https://api.github.com/users/cweagans/events{/privacy}",
                "followers_url": "https://api.github.com/users/cweagans/followers",
                "following_url": "https://api.github.com/users/cweagans/following{/other_user}",
                "gists_url": "https://api.github.com/users/cweagans/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cweagans",
                "id": 101590,
                "login": "cweagans",
                "node_id": "MDQ6VXNlcjEwMTU5MA==",
                "organizations_url": "https://api.github.com/users/cweagans/orgs",
                "received_events_url": "https://api.github.com/users/cweagans/received_events",
                "repos_url": "https://api.github.com/users/cweagans/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cweagans/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cweagans/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cweagans",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If one had to choose only one new thing, the single most valuable thing that could be done in this space would be to ship a way for users to install a plugin manager by a single command (edit: done, https://github.com/neovim/neovim/pull/34009). Discovery would be the next thing, but currently for new users, setting up a plugin manager is where the friction is. \n\nYes, it's more boring than creating a new web app :)",
            "created_at": "2017-10-11T06:53:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999635",
            "id": 1615999635,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MzU=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999635/reactions"
            },
            "updated_at": "2025-07-06T14:17:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999635",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Fortunately, we don't only have to choose one :)\r\n\r\nI don't disagree that installing a plugin manager with a single command would be awesome, but that's not really something that I'm well equipped to help with at the moment.",
            "created_at": "2017-10-11T15:24:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999636",
            "id": 1615999636,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTU5OTk2MzY=",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999636/reactions"
            },
            "updated_at": "2017-10-11T15:24:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101590?v=4",
                "events_url": "https://api.github.com/users/cweagans/events{/privacy}",
                "followers_url": "https://api.github.com/users/cweagans/followers",
                "following_url": "https://api.github.com/users/cweagans/following{/other_user}",
                "gists_url": "https://api.github.com/users/cweagans/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cweagans",
                "id": 101590,
                "login": "cweagans",
                "node_id": "MDQ6VXNlcjEwMTU5MA==",
                "organizations_url": "https://api.github.com/users/cweagans/orgs",
                "received_events_url": "https://api.github.com/users/cweagans/received_events",
                "repos_url": "https://api.github.com/users/cweagans/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cweagans/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cweagans/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cweagans",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "see also:\r\n\r\n- @teto exploration of Luarocks as the Neovim package manager: https://teto.github.io/posts/2021-09-17-neovim-plugin-luarocks.html\r\n- https://neovim.discourse.group/t/plugin-metadata-formats-what-has-been-tried-already-why-did-they-fail-and-can-it-succeed/1153\r\n",
            "created_at": "2021-09-22T14:54:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1615999640",
            "id": 1615999640,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "IC_kwDOAPphoM5gUjKY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999640/reactions"
            },
            "updated_at": "2021-09-22T14:54:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1615999640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Status\n\n- Ideally, Nvim plugins should live in Luarocks and define their dependencies in a [rockspec](https://github.com/luarocks/luarocks/blob/main/docs/rockspec_format.md).\n    - But it is suffering from lack of maintenance ([example](https://github.com/luarocks/luarocks/pull/1498)) ?\n- A strength of the vim/nvim plugin ecosystem is that it is distributed (current buzzword: \"federated\"): you only need a URL (usually a `git` repo)\n    - What's _missing_ is a [\"federated\" package spec](https://github.com/nvim-lua/nvim-package-specification/issues/41): an ecosystem-agnostic way to say \"this artifact depends on these artifacts found at these URLs\". \n- **Package index:**\n    - Creating a **package index** and storing it in a lightweight git repo, is a high-leverage way for package managers to list available plugins.\n        - Create a very simple \"crawler\" bot that finds vim/nvim plugins.\n            - Examples using github API:\n                - https://github.com/search?q=path%3A%2Flua%2F*.lua+NOT+is%3Afork+NOT+is%3Aarchived+vim&type=code\n                - https://github.com/search?q=language%3ALua+topic%3Aneovim-plugin&type=repositories\n                - https://github.com/search?q=language%3ALua+topic%3Aneovim+topic%3Aplugin&type=repositories\n                - https://github.com/search?q=language%3A%22Vim+script%22++topic%3Avim+topic%3Aplugin&type=repositories\n        - Also support for other repo providers (e.g. sourcehut)\n        - The plugin list can be stored in... a git repo. Which package managers can download, then users can fuzzy-find plugin names/descriptions.\n    - Should we add a provider to https://libraries.io/ (used by pypi, etc.)?\n        - https://github.com/librariesio/libraries.io/blob/main/docs/add-a-package-manager.md",
            "created_at": "2023-07-01T17:20:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-1616009906",
            "id": 1616009906,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "IC_kwDOAPphoM5gUlqy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616009906/reactions"
            },
            "updated_at": "2025-07-06T14:19:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616009906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "If this ever happens, please don't mandate Git. There are many of us who like to experiment with different version control systems (such as Fossil, Mercurial, etc). Making Git a dependency for Neovim would also be less than idea imo.",
            "created_at": "2024-10-22T03:52:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/24221#issuecomment-2428156597",
            "id": 2428156597,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24221",
            "node_id": "IC_kwDOAPphoM6Qurq1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2428156597/reactions"
            },
            "updated_at": "2024-10-23T18:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2428156597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51296839?v=4",
                "events_url": "https://api.github.com/users/AndreiSva/events{/privacy}",
                "followers_url": "https://api.github.com/users/AndreiSva/followers",
                "following_url": "https://api.github.com/users/AndreiSva/following{/other_user}",
                "gists_url": "https://api.github.com/users/AndreiSva/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AndreiSva",
                "id": 51296839,
                "login": "AndreiSva",
                "node_id": "MDQ6VXNlcjUxMjk2ODM5",
                "organizations_url": "https://api.github.com/users/AndreiSva/orgs",
                "received_events_url": "https://api.github.com/users/AndreiSva/received_events",
                "repos_url": "https://api.github.com/users/AndreiSva/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AndreiSva/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AndreiSva/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AndreiSva",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 20,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24221/comments",
    "created_at": "2016-02-04T16:32:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24221/events",
    "html_url": "https://github.com/neovim/neovim/issues/24221",
    "id": 1784088979,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "packaging and distributing Nvim to users",
            "id": 124686703,
            "name": "distribution",
            "node_id": "MDU6TGFiZWwxMjQ2ODY3MDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/distribution"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24221/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUxNzg0MDg4OTc5",
    "number": 24221,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24221/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24221/timeline",
    "title": "Create a package index (plugin \"registry\")",
    "type": null,
    "updated_at": "2025-07-06T14:36:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24221",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/101590?v=4",
        "events_url": "https://api.github.com/users/cweagans/events{/privacy}",
        "followers_url": "https://api.github.com/users/cweagans/followers",
        "following_url": "https://api.github.com/users/cweagans/following{/other_user}",
        "gists_url": "https://api.github.com/users/cweagans/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/cweagans",
        "id": 101590,
        "login": "cweagans",
        "node_id": "MDQ6VXNlcjEwMTU5MA==",
        "organizations_url": "https://api.github.com/users/cweagans/orgs",
        "received_events_url": "https://api.github.com/users/cweagans/received_events",
        "repos_url": "https://api.github.com/users/cweagans/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/cweagans/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cweagans/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/cweagans",
        "user_view_type": "public"
    }
}