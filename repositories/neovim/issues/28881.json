{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nCurrent `:make` `:grep` and others block, it would be nice if these commands ran asynchronously and allowed us to use the editor. (similar to how emacs does it)\n\n### Expected behavior\n\nUse `:make` to start an async compilation and while the compilation is happening we could have a special buffer `compile://` which will be collecting the output and once the compilation has finished this output could be sent to the quickfix list.\r\n\r\nOne particular thing we should take care of is jumping to the first error message, we do not want this to happen in async mode as the user might be doing something while the compilation has finished and suddenly be jumped to somewhere else, it would be annoying.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> `:make` `:grep` and others block, it would be nice if these commands ran asynchronously and allowed us to use the editor. (similar to how emacs does it)\r\n\r\nYou can do that already, with https://github.com/tpope/vim-dispatch . If we formalized this in Nvim core, we would probably want to borrow heavily from vim-dispatch.\r\n\r\nMeanwhile, I'd really like the ability to \"background\" any Ex command prefixing it with `:&`, e.g. `:& make foo`. This would imply spawning a `nvim` subprocess and collecting its results.\r\n\r\nRelated:\r\n\r\n- https://github.com/neovim/neovim/pull/9943\r\n- https://github.com/neovim/neovim/pull/1241\r\n\r\n\r\n\r\n",
            "created_at": "2024-05-21T14:33:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/28881#issuecomment-2122778209",
            "id": 2122778209,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28881",
            "node_id": "IC_kwDOAPphoM5-hwZh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2122778209/reactions"
            },
            "updated_at": "2024-05-21T14:35:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2122778209",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "On that note, something that would be a great improvement and would give async \"for free\" would be the ability to run the commands underpinning `:make`, `:grep`, etc. in a terminal buffer.\r\n\r\nFor example, the Rust language plugin shipped with Neovim provides `:make` support to run `cargo build`, but also has a `:Cbuild` custom command which runs the same thing in a terminal buffer, which allows showing colors and running it async.\r\n\r\nIn theory it would even be possible for it to still work with quickfix/`errorformat`/`grepformat`/etc.\r\n\r\nThis would conceptually be similar to user-defined \"tasks\" in VS Code, which can run in a terminal and also capture output.",
            "created_at": "2024-05-23T09:12:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/28881#issuecomment-2126618387",
            "id": 2126618387,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28881",
            "node_id": "IC_kwDOAPphoM5-wZ8T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2126618387/reactions"
            },
            "updated_at": "2024-05-23T09:13:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2126618387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> the ability to run the commands underpinning `:make`, `:grep`, etc. in a terminal buffer.\r\n\r\nGreat idea. Leveraging `:terminal` in a more generic way, allowing users to send commands to terminals, like a REPL, is generally a great idea and something we want. Basically a more robust and rich version of the `:shell` concept from Vim.\r\n\r\nBut as you mentioned, the tricky part is integrating it with quickfix.",
            "created_at": "2024-05-23T09:38:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/28881#issuecomment-2126667788",
            "id": 2126667788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28881",
            "node_id": "IC_kwDOAPphoM5-wmAM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2126667788/reactions"
            },
            "updated_at": "2024-05-23T09:38:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2126667788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "While we're blue-skying: https://zed.dev/blog/zed-decoded-tasks\r\n\r\n(In general, it's hard to draw the line here between what should be in core and/or default and what should be a plugin.)",
            "created_at": "2024-05-23T09:42:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/28881#issuecomment-2126675708",
            "id": 2126675708,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28881",
            "node_id": "IC_kwDOAPphoM5-wn78",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2126675708/reactions"
            },
            "updated_at": "2024-05-23T09:42:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2126675708",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't think its easy to integrate the quickfix list with `:terminal`. I can think of two approaches:\n\n1. Set `termopen()'`s `on_exit` to call `setqflist()` with the content of the terminal buffer.\n\n    - The downside is that you'll have to wait for the command to finish running before being able to navigate errors. It also won't help with commands that run forever like `tsc --watch` or servers or `tail -f`.\n\n2. Create a \"live\" quickfix list by setting `termopen()`'s `on_stdout` to call `setqflist()` with the `'a'` option to append to the quickfix list as the terminal runs.\n\n    - This approach duplicates the terminal content twice. Once in the quickfix list and once in the actual terminal. It introduces an extra window for something that feels like it should be handled in a single window, leading to a clunky user experience.\n\nMaybe we could introduce a concept where any buffer can act as a quickfix list? Emacs does something similar and it inspired me to hack up a personal plugin; [I demo it here](https://github.com/neovim/neovim/issues/32178#issuecomment-2618847848).",
            "created_at": "2025-03-30T14:47:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/28881#issuecomment-2764595919",
            "id": 2764595919,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28881",
            "node_id": "IC_kwDOAPphoM6kyGLP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2764595919/reactions"
            },
            "updated_at": "2025-03-30T17:45:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2764595919",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/77233589?v=4",
                "events_url": "https://api.github.com/users/msaher/events{/privacy}",
                "followers_url": "https://api.github.com/users/msaher/followers",
                "following_url": "https://api.github.com/users/msaher/following{/other_user}",
                "gists_url": "https://api.github.com/users/msaher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/msaher",
                "id": 77233589,
                "login": "msaher",
                "node_id": "MDQ6VXNlcjc3MjMzNTg5",
                "organizations_url": "https://api.github.com/users/msaher/orgs",
                "received_events_url": "https://api.github.com/users/msaher/received_events",
                "repos_url": "https://api.github.com/users/msaher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/msaher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/msaher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/msaher",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28881/comments",
    "created_at": "2024-05-21T02:57:16Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28881/events",
    "html_url": "https://github.com/neovim/neovim/issues/28881",
    "id": 2307162158,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "futures/promises, async/await, concurrency, task pipelines",
            "id": 5683343649,
            "name": "async",
            "node_id": "LA_kwDOAPphoM8AAAABUsDxIQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/async"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28881/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 707,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 637,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-03-31T13:15:01Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6JhIAu",
    "number": 28881,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28881/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28881/timeline",
    "title": "asynchronous :make, :grep, etc",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-03-30T17:45:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28881",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/66054777?v=4",
        "events_url": "https://api.github.com/users/SyedFasiuddin/events{/privacy}",
        "followers_url": "https://api.github.com/users/SyedFasiuddin/followers",
        "following_url": "https://api.github.com/users/SyedFasiuddin/following{/other_user}",
        "gists_url": "https://api.github.com/users/SyedFasiuddin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/SyedFasiuddin",
        "id": 66054777,
        "login": "SyedFasiuddin",
        "node_id": "MDQ6VXNlcjY2MDU0Nzc3",
        "organizations_url": "https://api.github.com/users/SyedFasiuddin/orgs",
        "received_events_url": "https://api.github.com/users/SyedFasiuddin/received_events",
        "repos_url": "https://api.github.com/users/SyedFasiuddin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/SyedFasiuddin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SyedFasiuddin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/SyedFasiuddin",
        "user_view_type": "public"
    }
}