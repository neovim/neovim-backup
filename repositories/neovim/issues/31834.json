{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nAn attempt to execute a python file via `pyfile`/`py3file` leads to a cryptic error and breaks python provider.\nThe problem happens on latest master and stable realease.\n\n```\nline 1:   return v:lua.vim.provider.python.call(a:method, a:args)                                                      \n\nError detected while processing function provider#python3#Call:                                                        \nline    1:                                                                                                             \nE5108: Error executing lua Vim:E                                                                                       \nstack traceback:                                                                                                       \n        [C]: at 0x006427a0  \n```\n\n--------------------\nversion\n```\n:version                                                                                                      \nNVIM v0.10.3                                                                                                           \nBuild type: Release                                                                                                    \nLuaJIT 2.1.1713484068    \n```\n\n\nHealth check:\n```\nprovider.python: require(\"provider.python.health\").check()\n\nPython 3 provider (optional) ~\n- `g:python3_host_prog` is not set. Searching for python3 in the environment.\n- Executable: /home/user/tmp/venv311/bin/python3\n- Python version: 3.11.10\n- pynvim version: 0.5.2\n- OK Latest pynvim is installed.\n\nPython virtualenv ~\n- $VIRTUAL_ENV is set to: /home/user/tmp/venv311\n- Python version: 3.11.10\n- OK $VIRTUAL_ENV provides :!python.\n```\n\n### Steps to reproduce\n\n\n**Steps to reproduce**\n\n0. create a new python venv, install pynvim via pip, activate it, run `nvim -u NONE` and/or /nvim --clean,  check health, etc (see below)\n1. In the beginning running simple commands works:\n```\n:py3 print('hello')\nhello\n```\n\n\n2. An attempt to execute a file via `pyf %` or `pyf script.py` fail. With `verbose` set to 15 the error still looks very unhelpful\n```\n:py3file script.py  \ncalling provider#python3#Call('execute_file', ['/home/user/tmp/script.py', 2, 2])\nline 1:   return v:lua.vim.provider.python.call(a:method, a:args)                                                      \n\nError detected while processing function provider#python3#Call:                                                        \nline    1:                                                                                                             \nE5108: Error executing lua Vim:E                                                                                       \nstack traceback:                                                                                                       \n        [C]: at 0x006427a0  \n```\n\n3. After all subsequent calls to python provider fail\n```\n:py3 print('hello')\nError detected while processing function provider#python3#Call:                                              \nline    1:                                                                                                             \nE5108: Error executing lua Vim:Error invoking 'python_execute' on channel 9:                                           \nInvalid channel: 9                                                                                                     \nstack traceback:                                                                                                       \n        [C]: at 0x006427a0   \n```\n\n\n### Expected behavior\n\npython script executes and results are shown in messages (same as in vim)\n\n### Nvim version (nvim -v)\n\n0.10.3\n\n### Vim (not Nvim) behaves the same?\n\nno, vim 9.1 works as expected\n\n### Operating system/version\n\nFreeBSD\n\n### Terminal name/version\n\nfoot\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nbuilt manually from tagged release",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "After digging a bit more I narrowed down the problem.\n\nThe script that fails to execute is a snippet from https://docs.python.org/3.11/library/unittest.html\n\n```\nimport unittest\n\nclass TestStringMethods(unittest.TestCase):\n\n    def test_upper(self):\n        self.assertEqual('foo'.upper(), 'FOO')\n\n    def test_isupper(self):\n        self.assertTrue('FOO'.isupper())\n        self.assertFalse('Foo'.isupper())\n\n    def test_split(self):\n        s = 'hello world'\n        self.assertEqual(s.split(), ['hello', 'world'])\n        # check that s.split fails when the separator is not a string\n        with self.assertRaises(TypeError):\n            s.split(2)\n\nif __name__ == '__main__':\n    unittest.main()\n```\n\n\nIt seems to be caused by `unittest.main()`. Removing  unittesting from the script makes it work fine.\nI suspect nvim does not handle gracefully whatever `unittest.main()` does`",
            "created_at": "2025-01-02T17:05:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/31834#issuecomment-2568091641",
            "id": 2568091641,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31834",
            "node_id": "IC_kwDOAPphoM6ZEff5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568091641/reactions"
            },
            "updated_at": "2025-01-02T17:07:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568091641",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18271144?v=4",
                "events_url": "https://api.github.com/users/ngortheone/events{/privacy}",
                "followers_url": "https://api.github.com/users/ngortheone/followers",
                "following_url": "https://api.github.com/users/ngortheone/following{/other_user}",
                "gists_url": "https://api.github.com/users/ngortheone/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ngortheone",
                "id": 18271144,
                "login": "ngortheone",
                "node_id": "MDQ6VXNlcjE4MjcxMTQ0",
                "organizations_url": "https://api.github.com/users/ngortheone/orgs",
                "received_events_url": "https://api.github.com/users/ngortheone/received_events",
                "repos_url": "https://api.github.com/users/ngortheone/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ngortheone/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ngortheone/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ngortheone",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "One more update:\n\nSetting exit=False and redirecting stderr to stdout I was able to get a more meaningful error \n\n\n```\nif __name__ == '__main__':\n    sys.stderr = sys.stdout\n    unittest.main(exit=False)\n```\n\n\n```\n:py3file %\nE                                                                                                                                                                                                                                   \n======================================================================                                                                                                                                                                        \nERROR: script_host (unittest.loader._FailedTest.script_host)                                                                                                                                                                                  \n----------------------------------------------------------------------                                                                                                                                                                        \nAttributeError: module '__main__' has no attribute 'script_host'                                                                                                                                                                              \n                                                                                                                                                                                                                                              \n----------------------------------------------------------------------                                                                                                                                                                        \nRan 1 test in 0.000s                                                                                                                                                                                                                          \n                                                                                                                                                                                                                                              \nFAILED (errors=1)   \n```\n\nWhile the same file executes just file in vim 9.1",
            "created_at": "2025-01-02T17:24:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/31834#issuecomment-2568116487",
            "id": 2568116487,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31834",
            "node_id": "IC_kwDOAPphoM6ZElkH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568116487/reactions"
            },
            "updated_at": "2025-01-02T17:24:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568116487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18271144?v=4",
                "events_url": "https://api.github.com/users/ngortheone/events{/privacy}",
                "followers_url": "https://api.github.com/users/ngortheone/followers",
                "following_url": "https://api.github.com/users/ngortheone/following{/other_user}",
                "gists_url": "https://api.github.com/users/ngortheone/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ngortheone",
                "id": 18271144,
                "login": "ngortheone",
                "node_id": "MDQ6VXNlcjE4MjcxMTQ0",
                "organizations_url": "https://api.github.com/users/ngortheone/orgs",
                "received_events_url": "https://api.github.com/users/ngortheone/received_events",
                "repos_url": "https://api.github.com/users/ngortheone/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ngortheone/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ngortheone/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ngortheone",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Aside from script_host issue there seems to be a problem with stderr handling as well.\nA workaround for the problem is to make your main look like this.\n\n```\nif __name__ == '__main__':\n    loader = unittest.TestLoader()\n    suite = loader.loadTestsFromTestCase(TestStringMethods)\n    runner = unittest.TextTestRunner(stream=sys.stdout)\n    result = runner.run(suite)\n    print(result)\n```\n\nand then everything seems to be working fine\n\n```\n:py3file %\n...                                                                                                                                                                                                                                  \n----------------------------------------------------------------------                                                                                                                                                                        \nRan 3 tests in 0.000s                                                                                                                                                                                                                         \n                                                                                                                                                                                                                                              \nOK                                                                                                                                                                                                                                            \n<unittest.runner.TextTestResult run=3 errors=0 failures=0>                                                                                                                                                                                    \nPress ENTER or type command to continue     \n```",
            "created_at": "2025-01-02T17:48:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/31834#issuecomment-2568145029",
            "id": 2568145029,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31834",
            "node_id": "IC_kwDOAPphoM6ZEsiF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568145029/reactions"
            },
            "updated_at": "2025-01-02T17:48:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568145029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18271144?v=4",
                "events_url": "https://api.github.com/users/ngortheone/events{/privacy}",
                "followers_url": "https://api.github.com/users/ngortheone/followers",
                "following_url": "https://api.github.com/users/ngortheone/following{/other_user}",
                "gists_url": "https://api.github.com/users/ngortheone/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ngortheone",
                "id": 18271144,
                "login": "ngortheone",
                "node_id": "MDQ6VXNlcjE4MjcxMTQ0",
                "organizations_url": "https://api.github.com/users/ngortheone/orgs",
                "received_events_url": "https://api.github.com/users/ngortheone/received_events",
                "repos_url": "https://api.github.com/users/ngortheone/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ngortheone/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ngortheone/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ngortheone",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If `unittest.main()` is monkey-patching stuff, then yeah that could interfere with pynvim, which does some of its own monkey-patching.\n\n> there seems to be a problem with stderr handling as well.\n\nAssigning `sys.stderr = sys.stdout` breaks because pynvim/Nvim communicate via RPC over stdio.\n\nAfter https://github.com/neovim/neovim/issues/27949 is completed, the pynvim \"script host\" can be dropped entirely, which should remove some of these surprises.",
            "created_at": "2025-01-02T18:04:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/31834#issuecomment-2568164448",
            "id": 2568164448,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31834",
            "node_id": "IC_kwDOAPphoM6ZExRg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568164448/reactions"
            },
            "updated_at": "2025-01-02T18:04:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568164448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31834/comments",
    "created_at": "2025-01-02T16:43:53Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31834/events",
    "html_url": "https://github.com/neovim/neovim/issues/31834",
    "id": 2766330305,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 144672485,
            "name": "provider",
            "node_id": "MDU6TGFiZWwxNDQ2NzI0ODU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/provider"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31834/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6k4tnB",
    "number": 31834,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31834/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31834/timeline",
    "title": "`pyfile` fails on `unittest.main()` and breaks python provider",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:35:52Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31834",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/18271144?v=4",
        "events_url": "https://api.github.com/users/ngortheone/events{/privacy}",
        "followers_url": "https://api.github.com/users/ngortheone/followers",
        "following_url": "https://api.github.com/users/ngortheone/following{/other_user}",
        "gists_url": "https://api.github.com/users/ngortheone/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ngortheone",
        "id": 18271144,
        "login": "ngortheone",
        "node_id": "MDQ6VXNlcjE4MjcxMTQ0",
        "organizations_url": "https://api.github.com/users/ngortheone/orgs",
        "received_events_url": "https://api.github.com/users/ngortheone/received_events",
        "repos_url": "https://api.github.com/users/ngortheone/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ngortheone/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ngortheone/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ngortheone",
        "user_view_type": "public"
    }
}