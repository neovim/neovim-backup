{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I'm attempting to run a GNU Make instance with termopen, and I'm seeing messages being dropped. I'm hooking into the on_exit() callback to write the terminal buffer to an external log, as well as parse it for errors for the quickfix list.\n\nI deliberately added a compile error so that Make would error-out. When this happens, GCC prints to stderr, make exits, and my messages show up on the terminal. When I look at test.log, however, the last few lines are just _gone._\n\nRather than sharing the repository, I've managed to find a minimal case that results in lost data, namely by throwing lots of text at the terminal. I don't know if this is the same problem as the make issue, but with this test case, I get about 700 lines of \"stdout,\" when I am expecting 2000.\n\nI poked into it a bit and my guess is that data is being dropped somewhere after SIGCHLD is sent but there is still data either to be read in the TTY fds, or its already been sucked out of the fd but it makes it to the terminal buffer after the process has already exited and the exit callback has been called.\n\nI've attached a minimal test case that fails on my computer as of \n5e9f9a875645af1e3c858daba799fe4a9021a767\n\nAm I doing something stupid?\n\n```\nlet s:Output = {}\n\nfunction! s:Output.on_exit(id, code)\n    write! test.log\nendfunction\n\nfunction! s:termtest()\n    only\n    vert botright sp | enew\n    let s:Output['bufid'] = bufnr('%')\n    call termopen([&sh, &shcf, './test.sh'], s:Output)\nendfunction\n\ncommand! -nargs=0 Termtest call s:termtest()\n```\n\nEDIT (@mhinz: shortened 2000 lines of code to two loops, as suggested by @lucc):\n\n``` shell\n#!/bin/sh\nfor i in {0..1000}; do echo \"stdout $i\"; done\nfor i in {0..1000}; do echo \"stderr $i\" 1>&2; done\n```\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's an interesting tidbit. I tried this exact same test on my Mac running Yosemite and it works fine. My failing system is Mint 17.2 at the exact same commit.\n",
            "created_at": "2015-07-17T18:13:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-122362480",
            "id": 122362480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjM2MjQ4MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/122362480/reactions"
            },
            "updated_at": "2015-07-17T18:13:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/122362480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/224968?v=4",
                "events_url": "https://api.github.com/users/iperry/events{/privacy}",
                "followers_url": "https://api.github.com/users/iperry/followers",
                "following_url": "https://api.github.com/users/iperry/following{/other_user}",
                "gists_url": "https://api.github.com/users/iperry/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iperry",
                "id": 224968,
                "login": "iperry",
                "node_id": "MDQ6VXNlcjIyNDk2OA==",
                "organizations_url": "https://api.github.com/users/iperry/orgs",
                "received_events_url": "https://api.github.com/users/iperry/received_events",
                "repos_url": "https://api.github.com/users/iperry/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iperry/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iperry/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iperry",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "can you please change the shell script in your previous post to something shorter like\n\n``` bash\n#!/bin/bash\nfor i in {0..1000}; do echo stdout $i; done\nfor i in {0..1000}; do echo stderr $i >&2; done\n```\n\nI assume that you should be able to observe the error with that script as well. Then you can remove the 2000 lines which just make this thread hard to read and provide no interesting info.\n",
            "created_at": "2015-07-19T11:56:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-122651613",
            "id": 122651613,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjY1MTYxMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/122651613/reactions"
            },
            "updated_at": "2015-07-19T11:56:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/122651613",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1104419?v=4",
                "events_url": "https://api.github.com/users/lucc/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucc/followers",
                "following_url": "https://api.github.com/users/lucc/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucc",
                "id": 1104419,
                "login": "lucc",
                "node_id": "MDQ6VXNlcjExMDQ0MTk=",
                "organizations_url": "https://api.github.com/users/lucc/orgs",
                "received_events_url": "https://api.github.com/users/lucc/received_events",
                "repos_url": "https://api.github.com/users/lucc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "**1)** Are you sure the buffer contains the correct output? Because the default scrollback buffer size is 1000. Does the behaviour change with `:let g:terminal_scrollback_buffer_size = 2000`?\n\n**2)** What happens if you add a `sleep 2` above the `write! test.log`?\n",
            "created_at": "2015-07-19T13:45:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-122662583",
            "id": 122662583,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjY2MjU4Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/122662583/reactions"
            },
            "updated_at": "2015-07-19T13:45:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/122662583",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/972014?v=4",
                "events_url": "https://api.github.com/users/mhinz/events{/privacy}",
                "followers_url": "https://api.github.com/users/mhinz/followers",
                "following_url": "https://api.github.com/users/mhinz/following{/other_user}",
                "gists_url": "https://api.github.com/users/mhinz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mhinz",
                "id": 972014,
                "login": "mhinz",
                "node_id": "MDQ6VXNlcjk3MjAxNA==",
                "organizations_url": "https://api.github.com/users/mhinz/orgs",
                "received_events_url": "https://api.github.com/users/mhinz/received_events",
                "repos_url": "https://api.github.com/users/mhinz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mhinz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mhinz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mhinz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mhinz \n1) With test.sh, the buffer does not contain the correct output. There are lines missing. Changing the scrollback buffer size appears to have no affect. When I run my makefile job, the buffer actually does contain the correct output, but writing the file on_exit() has the last few lines are missing.\n\n2) With test.sh, a sleep 2 has no effect, the buffer is still missing lines. With my makefile, a sleep 2 results in both a correct term buffer, and a log file with all of the output, including the previously missing lines.\n",
            "created_at": "2015-07-20T16:23:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-122938222",
            "id": 122938222,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjkzODIyMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/122938222/reactions"
            },
            "updated_at": "2015-07-20T16:23:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/122938222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/224968?v=4",
                "events_url": "https://api.github.com/users/iperry/events{/privacy}",
                "followers_url": "https://api.github.com/users/iperry/followers",
                "following_url": "https://api.github.com/users/iperry/following{/other_user}",
                "gists_url": "https://api.github.com/users/iperry/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iperry",
                "id": 224968,
                "login": "iperry",
                "node_id": "MDQ6VXNlcjIyNDk2OA==",
                "organizations_url": "https://api.github.com/users/iperry/orgs",
                "received_events_url": "https://api.github.com/users/iperry/received_events",
                "repos_url": "https://api.github.com/users/iperry/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iperry/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iperry/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iperry",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm pretty sure it's dropping data somewhere between after the child exits and before we've read out all of the data from the pty. I can see 4095 bytes worth of output at a time being received. If the child exits quickly, I almost always lose the end of the terminal output. I can see EOF being sent in the libuv read_cb(), and looking at the byte counts it looks like EOF comes before all of the output has been pulled out of the fd. If I add a simple sleep 1 at the end of my script, everything turns out fine.\n\nRunning nvim in strace also seems to slow down the read_cb() calls enough that all the output is successfully received.\n\nMaybe the shell itself is not flushing its output, or it closes its file descriptors without flushing output to the ptr, or maybe termios is doing something weird? I don't know enough about how the job system and libvte are put together to know how all the pipes and fds are plumbed together. Any ideas?\n\nThis all works perfectly on my Mac, for what it's worth.\n",
            "created_at": "2015-07-21T21:37:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-123484744",
            "id": 123484744,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzQ4NDc0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/123484744/reactions"
            },
            "updated_at": "2015-07-21T21:37:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/123484744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/224968?v=4",
                "events_url": "https://api.github.com/users/iperry/events{/privacy}",
                "followers_url": "https://api.github.com/users/iperry/followers",
                "following_url": "https://api.github.com/users/iperry/following{/other_user}",
                "gists_url": "https://api.github.com/users/iperry/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iperry",
                "id": 224968,
                "login": "iperry",
                "node_id": "MDQ6VXNlcjIyNDk2OA==",
                "organizations_url": "https://api.github.com/users/iperry/orgs",
                "received_events_url": "https://api.github.com/users/iperry/received_events",
                "repos_url": "https://api.github.com/users/iperry/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iperry/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iperry/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iperry",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "~~@iperry Could you see if https://github.com/neovim/neovim/pull/3029 fixes this issue?~~ Never mind, seems not: https://github.com/neovim/neovim/pull/3029#discussion_r35673471\n",
            "created_at": "2015-07-28T14:47:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-125634830",
            "id": 125634830,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTYzNDgzMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/125634830/reactions"
            },
            "updated_at": "2015-07-28T17:24:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/125634830",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "When a child exits(SIGCHLD is received), nvim will close the file descriptors connected to the child's stdio(master fd in case of pty jobs). This race happens when we close with data still waiting in the OS buffers, and AFAIK there's nothing we can do to prevent except by deferring the SIGCHLD handler as much as possible.\n\nI'm aware of this problem and my one of my goals with #3029 is to enhance the event subsystem in a way that will be easier to predict and control the order various events are processed.\n",
            "created_at": "2015-07-28T23:31:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-125781440",
            "id": 125781440,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTc4MTQ0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/125781440/reactions"
            },
            "updated_at": "2015-07-28T23:31:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/125781440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Confirmed on latest master. Even if there's a race, it doesn't make sense that `test.log` is missing ~300 lines of output that _are_ present in the `:term` buffer. E.g. on my system `test.log` ends at `stderr 311` yet the `:term` buffer ends at `stderr 652`.\n\nI wonder if scrollback is messing things up: in the case above both buffers have 1015 lines; the difference is that `test.log` starts at `stdout 298` while `:term` starts at `stdout 641`.\n\nUsers should be able to expect the `:term` buffer to `:write` reliably.\n",
            "created_at": "2016-07-15T04:02:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-232854937",
            "id": 232854937,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjg1NDkzNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/232854937/reactions"
            },
            "updated_at": "2016-07-15T04:04:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/232854937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Could be that the terminal buffer is not yet up to date when the exit-callback is called. \nCalling `refresth_terminal(...)` in `on_process_exit()` works for me. Most of the patch makes sure that no data is missing in the terminal. \n\n``` diff\ndiff --git a/src/nvim/eval.c b/src/nvim/eval.c\nindex 47d44b1..35ade19 100644\n--- a/src/nvim/eval.c\n+++ b/src/nvim/eval.c\n@@ -22157,6 +22157,9 @@ static void on_process_exit(Process *proc, int status, void *d)\n {\n   TerminalJobData *data = d;\n   if (data->term && !data->exited) {\n+\n+    refresh_terminal(data->term);\n+\n     data->exited = true;\n     char msg[sizeof(\"\\r\\n[Process exited ]\") + NUMBUFLEN];\n     snprintf(msg, sizeof msg, \"\\r\\n[Process exited %d]\", proc->status);\ndiff --git a/src/nvim/event/process.c b/src/nvim/event/process.c\nindex 317e40e..aa04d78 100644\n--- a/src/nvim/event/process.c\n+++ b/src/nvim/event/process.c\n@@ -352,31 +352,23 @@ static void flush_stream(Process *proc, Stream *stream)\n   int err = uv_recv_buffer_size((uv_handle_t *)&stream->uv.pipe,\n                                 &system_buffer_size);\n   if (err) {\n-    system_buffer_size = (int)rbuffer_capacity(stream->buffer);\n+    // Max pipe size on Linux.\n+    system_buffer_size = 1048576;\n   }\n\n   size_t max_bytes = stream->num_bytes + (size_t)system_buffer_size;\n\n   // Read remaining data.\n-  while (!stream->closed && stream->num_bytes < max_bytes) {\n-    // Remember number of bytes before polling\n-    size_t num_bytes = stream->num_bytes;\n+  while (!stream->eof && stream->num_bytes < max_bytes && !stream->closed) {\n\n     // Poll for data and process the generated events.\n     loop_poll_events(proc->loop, 0);\n+    if (rbuffer_size(stream->buffer) == 0) {\n+        break;\n+    }\n     if (proc->events) {\n         queue_process_events(proc->events);\n     }\n-\n-    // Stream can be closed if it is empty.\n-    if (num_bytes == stream->num_bytes) {\n-      if (stream->read_cb) {\n-        // Stream callback could miss EOF handling if a child keeps the stream\n-        // open.\n-        stream->read_cb(stream, stream->buffer, 0, stream->data, true);\n-      }\n-      break;\n-    }\n   }\n }\n\ndiff --git a/src/nvim/event/rstream.c b/src/nvim/event/rstream.c\nindex a520143..e202cf4 100644\n--- a/src/nvim/event/rstream.c\n+++ b/src/nvim/event/rstream.c\n@@ -118,6 +118,7 @@ static void read_cb(uv_stream_t *uvstream, ssize_t cnt, const uv_buf_t *buf)\n       // Read error or EOF, either way stop the stream and invoke the callback\n       // with eof == true\n       uv_read_stop(uvstream);\n+      stream->eof = true;\n       invoke_read_cb(stream, 0, true);\n     }\n     return;\n@@ -181,6 +182,7 @@ static void read_event(void **argv)\n     bool eof = (uintptr_t)argv[2];\n     stream->read_cb(stream, stream->buffer, count, stream->data, eof);\n   }\n+\n   stream->pending_reqs--;\n   if (stream->closed && !stream->pending_reqs) {\n     stream_close_handle(stream);\ndiff --git a/src/nvim/event/stream.c b/src/nvim/event/stream.c\nindex 3340415..49bfe12 100644\n--- a/src/nvim/event/stream.c\n+++ b/src/nvim/event/stream.c\n@@ -72,6 +72,7 @@ void stream_init(Loop *loop, Stream *stream, int fd, uv_stream_t *uvstream,\n   stream->buffer = NULL;\n   stream->events = NULL;\n   stream->num_bytes = 0;\n+  stream->eof = false;\n }\n\n void stream_close(Stream *stream, stream_close_cb on_stream_close)\ndiff --git a/src/nvim/event/stream.h b/src/nvim/event/stream.h\nindex ad4e247..a9d0b05 100644\n--- a/src/nvim/event/stream.h\n+++ b/src/nvim/event/stream.h\n@@ -50,6 +50,7 @@ struct stream {\n   size_t maxmem;\n   size_t pending_reqs;\n   size_t num_bytes;\n+  bool eof;\n   void *data, *internal_data;\n   bool closed;\n   Queue *events;\ndiff --git a/src/nvim/rbuffer.c b/src/nvim/rbuffer.c\nindex a2cc432..14b652a 100644\n--- a/src/nvim/rbuffer.c\n+++ b/src/nvim/rbuffer.c\n@@ -15,7 +15,7 @@ RBuffer *rbuffer_new(size_t capacity)\n   FUNC_ATTR_WARN_UNUSED_RESULT FUNC_ATTR_NONNULL_RET\n {\n   if (!capacity) {\n-    capacity = 0x10000;\n+    capacity = 4095;\n   }\n\n   RBuffer *rv = xmalloc(sizeof(RBuffer) + capacity);\ndiff --git a/src/nvim/terminal.c b/src/nvim/terminal.c\nindex 6f50c03..53b0d31 100644\n--- a/src/nvim/terminal.c\n+++ b/src/nvim/terminal.c\n@@ -952,7 +952,7 @@ static void invalidate_terminal(Terminal *term, int start_row, int end_row)\n   }\n }\n\n-static void refresh_terminal(Terminal *term)\n+void refresh_terminal(Terminal *term)\n {\n   // TODO(SplinterOfChaos): Find the condition that makes term->buf invalid.\n   buf_T *buf = handle_get_buffer(term->buf_handle);\n\n```\n",
            "created_at": "2016-07-17T17:50:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-233194402",
            "id": 233194402,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE5NDQwMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/233194402/reactions"
            },
            "updated_at": "2016-07-17T17:50:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/233194402",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk I think the reason for `test.log` and the `:term` being out of sync is that `on_exit` is sometimes called with a stale terminal buffer. This should fix that: radenling/neovim@3a0c33e568316\n",
            "created_at": "2016-08-06T11:36:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-238019197",
            "id": 238019197,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzODAxOTE5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238019197/reactions"
            },
            "updated_at": "2016-08-06T11:36:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238019197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6490160?v=4",
                "events_url": "https://api.github.com/users/radenling/events{/privacy}",
                "followers_url": "https://api.github.com/users/radenling/followers",
                "following_url": "https://api.github.com/users/radenling/following{/other_user}",
                "gists_url": "https://api.github.com/users/radenling/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/radenling",
                "id": 6490160,
                "login": "radenling",
                "node_id": "MDQ6VXNlcjY0OTAxNjA=",
                "organizations_url": "https://api.github.com/users/radenling/orgs",
                "received_events_url": "https://api.github.com/users/radenling/received_events",
                "repos_url": "https://api.github.com/users/radenling/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/radenling/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/radenling/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/radenling",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@radenling, do we want to have `[Process exited 0]` also written to the log file?\n",
            "created_at": "2016-08-06T12:28:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-238021073",
            "id": 238021073,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzODAyMTA3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238021073/reactions"
            },
            "updated_at": "2016-08-06T12:28:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238021073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@oni-link, probably not. It's part of the buffer but it's not part of the program output. I'll fix that.\n",
            "created_at": "2016-08-06T12:38:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-238021427",
            "id": 238021427,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzODAyMTQyNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238021427/reactions"
            },
            "updated_at": "2016-08-06T12:38:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238021427",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6490160?v=4",
                "events_url": "https://api.github.com/users/radenling/events{/privacy}",
                "followers_url": "https://api.github.com/users/radenling/followers",
                "following_url": "https://api.github.com/users/radenling/following{/other_user}",
                "gists_url": "https://api.github.com/users/radenling/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/radenling",
                "id": 6490160,
                "login": "radenling",
                "node_id": "MDQ6VXNlcjY0OTAxNjA=",
                "organizations_url": "https://api.github.com/users/radenling/orgs",
                "received_events_url": "https://api.github.com/users/radenling/received_events",
                "repos_url": "https://api.github.com/users/radenling/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/radenling/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/radenling/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/radenling",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think I've fixed this issue for linux (haven't tested it on any other platform and not sure the error occurs on any other platform or if I've broken something for other platforms). You can try [fix-libuv-stream](https://github.com/radenling/neovim/tree/fix-libuv-stream) if anyone wants to try it out.\n",
            "created_at": "2016-08-10T20:12:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-238988993",
            "id": 238988993,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzODk4ODk5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238988993/reactions"
            },
            "updated_at": "2016-08-10T20:12:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238988993",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6490160?v=4",
                "events_url": "https://api.github.com/users/radenling/events{/privacy}",
                "followers_url": "https://api.github.com/users/radenling/followers",
                "following_url": "https://api.github.com/users/radenling/following{/other_user}",
                "gists_url": "https://api.github.com/users/radenling/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/radenling",
                "id": 6490160,
                "login": "radenling",
                "node_id": "MDQ6VXNlcjY0OTAxNjA=",
                "organizations_url": "https://api.github.com/users/radenling/orgs",
                "received_events_url": "https://api.github.com/users/radenling/received_events",
                "repos_url": "https://api.github.com/users/radenling/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/radenling/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/radenling/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/radenling",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Awesome :+1: Could you create a PR? This way, it runs through all the CI tests, so you can see if it poses a problem on not-linux.\n",
            "created_at": "2016-08-10T20:19:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-238990882",
            "id": 238990882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzODk5MDg4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238990882/reactions"
            },
            "updated_at": "2016-08-10T20:19:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238990882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4117685?v=4",
                "events_url": "https://api.github.com/users/KillTheMule/events{/privacy}",
                "followers_url": "https://api.github.com/users/KillTheMule/followers",
                "following_url": "https://api.github.com/users/KillTheMule/following{/other_user}",
                "gists_url": "https://api.github.com/users/KillTheMule/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KillTheMule",
                "id": 4117685,
                "login": "KillTheMule",
                "node_id": "MDQ6VXNlcjQxMTc2ODU=",
                "organizations_url": "https://api.github.com/users/KillTheMule/orgs",
                "received_events_url": "https://api.github.com/users/KillTheMule/received_events",
                "repos_url": "https://api.github.com/users/KillTheMule/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KillTheMule/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KillTheMule/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KillTheMule",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For reference https://github.com/junegunn/fzf/issues/216#issuecomment-160353332 \n\n> nvim does not update the terminal buffer as soon as it receives data. Here's a high-level overview of how it works:\n> - Nvim receives data from the pty\n> - Data is fed to libvterm, which immediately updates its internal screen\n> - At most 10ms later, nvim updates the terminal buffer to reflect libvterm internal screen.\n> \n> In other words, nvim updates the buffer at most once each 10 milliseconds. This is done because updating buffers is more expensive than simply updating a virtual screen, and if we updated the buffer every time data is received, there could be serious performance problems with programs that send large bursts of output\n",
            "created_at": "2016-09-20T23:19:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-248465040",
            "id": 248465040,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODQ2NTA0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/248465040/reactions"
            },
            "updated_at": "2016-09-20T23:19:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/248465040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@oni-link @radenling Did `flush_stream()` in #4646 not address the remaining issue here? ( i.e. not the issue addressed by https://github.com/neovim/neovim/pull/6595)",
            "created_at": "2017-05-28T15:18:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-304521367",
            "id": 304521367,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDUyMTM2Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/304521367/reactions"
            },
            "updated_at": "2017-05-28T15:27:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/304521367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Without https://github.com/radenling/neovim/commit/9b9ad59dbd1e329a4de631a8ceeda3b7a83bb7d3#diff-148af05e3fe185d22c19b2ceb9ba5196\r\nI still see missing output in an ASAN build when running the following script with `nvim -S issue.3030.vim +Termtest +Termtest`.\r\n\r\nissue.3030.vim:\r\n```vim\r\nlet s:Output = {}\r\n\r\nfunction! s:termtest()\r\n    only\r\n    vert botright sp | enew\r\n    let s:Output['bufid'] = bufnr('%')\r\n    call termopen([&sh, &shcf, './issue.3030.sh'], s:Output)\r\nendfunction\r\n\r\ncommand! -nargs=0 Termtest call s:termtest()\r\n```\r\nissue.3030.sh:\r\n```bash\r\n#!/bin/bash\r\n\r\nfor i in {0..1000}; do echo \"stdout $i\"; done\r\nfor i in {0..1000}; do echo \"stderr $i\" 1>&2; done\r\n\r\n```\r\n",
            "created_at": "2017-05-28T19:01:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-304533544",
            "id": 304533544,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDUzMzU0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/304533544/reactions"
            },
            "updated_at": "2017-05-28T19:01:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/304533544",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Not sure if this adds anything but if I have for example a python script:\r\n```python\r\nfor i in range(10000):\r\n    print(i)\r\n```\r\nand I run\r\n```\r\n:term python script.py\r\n```\r\nthen the terminal buffer ends with something like:\r\n```\r\n...\r\n8041\r\n8042\r\n8043\r\n8044\r\n804\r\n[Process exited 0]\r\n```\r\n\r\nHowever if I open a terminal with `:term` and run `python script.py` in there I get all the lines.\r\n",
            "created_at": "2023-01-01T18:04:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-1368499952",
            "id": 1368499952,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "IC_kwDOAPphoM5Rkabw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1368499952/reactions"
            },
            "updated_at": "2023-01-01T18:04:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1368499952",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23341710?v=4",
                "events_url": "https://api.github.com/users/AckslD/events{/privacy}",
                "followers_url": "https://api.github.com/users/AckslD/followers",
                "following_url": "https://api.github.com/users/AckslD/following{/other_user}",
                "gists_url": "https://api.github.com/users/AckslD/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AckslD",
                "id": 23341710,
                "login": "AckslD",
                "node_id": "MDQ6VXNlcjIzMzQxNzEw",
                "organizations_url": "https://api.github.com/users/AckslD/orgs",
                "received_events_url": "https://api.github.com/users/AckslD/received_events",
                "repos_url": "https://api.github.com/users/AckslD/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AckslD/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AckslD/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AckslD",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm having this issue too, but I'm pretty out of my depth trying to work out how this works in the neovim source. It's quite a pesky issue because if for example you are running a compiler, it normally means the error text is being cut from the end of the output.\r\n\r\nI can reproduce the exact case from the comment above this.\r\n\r\nHere's some extra information for if someone takes a look.\r\n- I'm using Linux Fedora, with neovim built from source at b649a96fc09fa7f18a988b0b0be5dadb54ad49de.\r\n- I'm calling `vim.fn.termopen()`. The issue persists regardless of whether the I pass the command as a string or a list (docs say results in jobstart running in a shell or not).\r\n- Issue is not there if I open a terminal buffer with `:terminal` and run the command there.\r\n- Seems to work fine on Mac.\r\n- If the command only outputs a small amount of text to stdout, this problem is not present. It seems to happen when there is a lot of text being passed to stdout and then the application abruptly ends. When it does happen, it happens every time.\r\n\r\nEDIT: for those looking for a workaround, I have found that wrapping the command like before you call termopen() helps: `sh -c \"<command> ; sleep 1\"`\r\n\r\n",
            "created_at": "2023-01-31T13:28:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-1410353446",
            "id": 1410353446,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "IC_kwDOAPphoM5UEEkm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1410353446/reactions"
            },
            "updated_at": "2023-01-31T14:25:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1410353446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15104010?v=4",
                "events_url": "https://api.github.com/users/SamWindell/events{/privacy}",
                "followers_url": "https://api.github.com/users/SamWindell/followers",
                "following_url": "https://api.github.com/users/SamWindell/following{/other_user}",
                "gists_url": "https://api.github.com/users/SamWindell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/SamWindell",
                "id": 15104010,
                "login": "SamWindell",
                "node_id": "MDQ6VXNlcjE1MTA0MDEw",
                "organizations_url": "https://api.github.com/users/SamWindell/orgs",
                "received_events_url": "https://api.github.com/users/SamWindell/received_events",
                "repos_url": "https://api.github.com/users/SamWindell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/SamWindell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SamWindell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/SamWindell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I tested this with my Mac `15.1.1 (24B91)` and an Ubuntu github runner `ubuntu-24.04`.\n\nNo issues on Mac, nvim v0.10.03 (and nightly), python 3.11.4\n\n![Image](https://github.com/user-attachments/assets/d3c87e98-558c-46b6-9443-e22b259d5c49)\n\n\nSame problem as @AckslD for Ubuntu, nvim v0.10.03, python 3.12.3\n\n<img width=\"767\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/278468af-d5d2-432e-be66-66236aa9d45c\" />\n\nSimilar errors are observed inconsistently and infrequently on test runs of kitty-scrollback.nvim with tmux integration https://github.com/mikesmithgh/kitty-scrollback.nvim/issues/115#issuecomment-2563004094.  \n\nAdding a sleep does seem to workaround the issue:\n\n<img width=\"767\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7ae499ab-4b5f-493c-875d-6e55d37a2527\" />\n",
            "created_at": "2024-12-30T20:21:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/3030#issuecomment-2565883489",
            "id": 2565883489,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3030",
            "node_id": "IC_kwDOAPphoM6Y8EZh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565883489/reactions"
            },
            "updated_at": "2024-12-30T20:21:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565883489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10135646?v=4",
                "events_url": "https://api.github.com/users/mikesmithgh/events{/privacy}",
                "followers_url": "https://api.github.com/users/mikesmithgh/followers",
                "following_url": "https://api.github.com/users/mikesmithgh/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikesmithgh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mikesmithgh",
                "id": 10135646,
                "login": "mikesmithgh",
                "node_id": "MDQ6VXNlcjEwMTM1NjQ2",
                "organizations_url": "https://api.github.com/users/mikesmithgh/orgs",
                "received_events_url": "https://api.github.com/users/mikesmithgh/received_events",
                "repos_url": "https://api.github.com/users/mikesmithgh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mikesmithgh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikesmithgh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mikesmithgh",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 20,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/3030/comments",
    "created_at": "2015-07-17T16:49:58Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/3030/events",
    "html_url": "https://github.com/neovim/neovim/issues/3030",
    "id": 95696864,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk, self-contained. Do NOT ask \"can I work on this\", just read CONTRIBUTING.md",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/3030/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU5NTY5Njg2NA==",
    "number": 3030,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/3030/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/3030/timeline",
    "title": "Terminal UI buffer drops data?",
    "updated_at": "2025-01-19T10:47:54Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/3030",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/224968?v=4",
        "events_url": "https://api.github.com/users/iperry/events{/privacy}",
        "followers_url": "https://api.github.com/users/iperry/followers",
        "following_url": "https://api.github.com/users/iperry/following{/other_user}",
        "gists_url": "https://api.github.com/users/iperry/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iperry",
        "id": 224968,
        "login": "iperry",
        "node_id": "MDQ6VXNlcjIyNDk2OA==",
        "organizations_url": "https://api.github.com/users/iperry/orgs",
        "received_events_url": "https://api.github.com/users/iperry/received_events",
        "repos_url": "https://api.github.com/users/iperry/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iperry/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iperry/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iperry",
        "user_view_type": "public"
    }
}