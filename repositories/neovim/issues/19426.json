{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "\r\n\r\n## Feature description\r\n\r\nAs an author of a surround plugin, I think would be quite useful to get the most recently used text-object, for preserving dot-repeat. It can be thought of as being analogous to `v:operator`. For example, if I were to surround a word (`g@iw`), then I can't use any other operator in that time frame, otherwise destroying dot-repeatability (e.g. formatting the motion via `=`). This is because I have no way of resetting the operatorfunc with the correct motion. Allowing users to read the most recently used motion in addition to the most recently used operator would allow for much more complex dot-repeatable actions. Thanks for taking the time to read this, and for your hard work on Neovim!\r\n\r\nEdit: For clarification, this feature (I think) would open up nearly endless ways for plugin authors to manipulate dot-repeats without compromising on plugin functionality. In other words, it would make dot-repeating *work for the plugin author*, instead of the other way around. As it is right now, plugin authors have to be very careful with how they wish to program their functions in order to ensure that the dot-repeated action is not overwritten/lost. \r\n\r\nFor example, consider a function that uses `operatorfunc` to perform some action, e.g. via setting `vim.go.operatorfunc = \"v:lua.callback_function\"`. The idea is that the plugin author can then \"reset\" *both* the `operatorfunc` *and* motion at the end of some function call to \"force\" what the next dot-repeat action will do.\r\n\r\n```lua\r\n_G.noop = function() end\r\n\r\n_G.main_function = function(args)\r\n    if not args then\r\n        vim.go.operatorfunc = \"v:lua.callback_function\"\r\n        return \"g@\"\r\n    end\r\n    local motion = vim.v.motion -- MRU motion here\r\n    -- Do *anything* here: format some text, call opfunc a few times to get some text-object locations, etc.\r\n\r\n    -- Force dot-repeat to call the same function, as if you had retyped the command\r\n    vim.go.operatorfunc = \"v:lua.noop\"\r\n    vim.cmd(\"normal g@\" .. motion)\r\n    vim.go.operatorfunc = \"v:lua.callback_function\"\r\nend\r\n\r\n_G.callback_function = function(mode)\r\n    -- Do something, perhaps set some variables in a table args\r\n    local args = ...\r\n    main_function(args)\r\nend\r\n```",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "This would also be useful for \"trimming whitespace\" associated with certain motions. For example, `g@a\"` (or any quote, for that matter) by default selects extra whitespace around the quotes. To trim this whitespace, I wrote a function that moves the `[` and `]` marks when they are residing on a whitespace character. Having `v:motion` could let me differentiate between `g@i\"` and `g@a\"`, only \"trimming whitespace\" in the latter.",
            "created_at": "2022-07-19T07:11:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/19426#issuecomment-1188684151",
            "id": 1188684151,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19426",
            "node_id": "IC_kwDOAPphoM5G2eF3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1188684151/reactions"
            },
            "updated_at": "2022-07-19T07:11:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1188684151",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/48545987?v=4",
                "events_url": "https://api.github.com/users/kylechui/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylechui/followers",
                "following_url": "https://api.github.com/users/kylechui/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylechui/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylechui",
                "id": 48545987,
                "login": "kylechui",
                "node_id": "MDQ6VXNlcjQ4NTQ1OTg3",
                "organizations_url": "https://api.github.com/users/kylechui/orgs",
                "received_events_url": "https://api.github.com/users/kylechui/received_events",
                "repos_url": "https://api.github.com/users/kylechui/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylechui/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylechui/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylechui",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hitting this issue as well, would be also cool if we could modify the last used operator, `v:operator` variable, to allow us to do/chain `normal! {operator}{motion}` calls then revert back the v:operator to g@.",
            "created_at": "2024-07-17T18:27:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/19426#issuecomment-2233979284",
            "id": 2233979284,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19426",
            "node_id": "IC_kwDOAPphoM6FJ9GU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2233979284/reactions"
            },
            "updated_at": "2024-07-17T18:28:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2233979284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/19426/comments",
    "created_at": "2022-07-19T06:17:39Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/19426/events",
    "html_url": "https://github.com/neovim/neovim/issues/19426",
    "id": 1309034804,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1471818957,
            "name": "multicursor",
            "node_id": "MDU6TGFiZWwxNDcxODE4OTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/multicursor"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/19426/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5OBkk0",
    "number": 19426,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 15,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 15,
        "url": "https://api.github.com/repos/neovim/neovim/issues/19426/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/19426/timeline",
    "title": "Most recently used text-object, `v:motion`",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:21Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/19426",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/48545987?v=4",
        "events_url": "https://api.github.com/users/kylechui/events{/privacy}",
        "followers_url": "https://api.github.com/users/kylechui/followers",
        "following_url": "https://api.github.com/users/kylechui/following{/other_user}",
        "gists_url": "https://api.github.com/users/kylechui/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kylechui",
        "id": 48545987,
        "login": "kylechui",
        "node_id": "MDQ6VXNlcjQ4NTQ1OTg3",
        "organizations_url": "https://api.github.com/users/kylechui/orgs",
        "received_events_url": "https://api.github.com/users/kylechui/received_events",
        "repos_url": "https://api.github.com/users/kylechui/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kylechui/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kylechui/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kylechui",
        "user_view_type": "public"
    }
}