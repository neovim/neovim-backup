{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nWhen a server responds to the `textDocument/inlay_hint` response with inlay hints they aren't correctly being updated in the current buffer when recieved.\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\nYou can reproduce this, but you'd need a few things installed\n\n- The Scala language server [Metals](https://scalameta.org/metals/) (most easily done with [cs install metals](https://get-coursier.io/))\n- create a `inlay.worksheet.sc` file (the name is important so it matches the minimal conf)\n\nInside of these file you can have the following:\n\n`inlay.worksheet.sc`\n\n```scala\nval x = 3\n```\n\nThe minimal init file looks like this:\n\n```lua\nlocal pattern = 'scala'\nlocal cmd = { 'metals' }\n-- Add files/folders here that indicate the root of a project\nlocal root_markers = { 'inlay.worksheet.sc' }\n\nlocal settings = {\n  metals = {\n    enableSemanticHighlighting = false,\n  }\n}\n\nvim.api.nvim_create_autocmd('FileType', {\n  pattern = pattern,\n  callback = function(args)\n    local match = vim.fs.find(root_markers, { path = args.file, upward = true })[1]\n    local root_dir = match and vim.fn.fnamemodify(match, ':p:h') or nil\n    vim.lsp.start({\n      name = 'metals',\n      cmd = cmd,\n      root_dir = root_dir,\n      settings = settings\n    })\n  end\n})\n```\n\nNow open the file and let Metals fully load everything. Once completed you can do `:lua vim.lsp.inlay_hint.enable(true)` which will show you the evaluation and the inlay hint of `// : Int = 3`. It should look like this:\n\n<img width=\"175\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b524aac2-6403-49bc-9213-a307c3a0a3ae\" />\n\nNow, if you change the `3` in the file to a `4` and hit save, there will be a couple things that happen. Firstly a request for inlay hints is sent and a new set of inlay hints are received with the new evaluation being `//: Int = 4` however, the buffer won't be updated here. The logs for this are down below.\n\n\n```\n[Trace - 04:04:03 PM] Sending request 'workspace/inlayHint/refresh - (22)'\nParams: null\n\n[Trace - 04:04:03 PM] Received request 'textDocument/inlayHint - (13)'\nParams: {\n  \"textDocument\": {\n    \"uri\": \"file:///Users/ckipp/Documents/scratch/inlay/inlay.worksheet.sc\"\n  },\n  \"range\": {\n    \"start\": {\n      \"line\": 0,\n      \"character\": 0\n    },\n    \"end\": {\n      \"line\": 1,\n      \"character\": 0\n    }\n  }\n}\n\n\n[Trace - 04:04:03 PM] Received response 'workspace/inlayHint/refresh - (22)' in 1ms\nResult: null\nError: null\n\n[Trace - 04:04:03 PM] Sending response 'textDocument/inlayHint - (13)'. Processing request took 0ms\nResult: [\n  {\n    \"position\": {\n      \"line\": 0,\n      \"character\": 9\n    },\n    \"label\": \" // : Int \\u003d 4\",\n    \"tooltip\": \"x: Int \\u003d 4\"\n  }\n]\n```\n\n\n### Expected behavior\n\nWhen the client receives new inlay hints I expect it to update the current buffer when inlay hints are enabled. As you can see in the logs the `textDocument/inlayHint` is received with new hints, but it's not displayed.\n\nSort of an aside, but I'm confused why a `workspace/inlayHint/refresh` is always sent as well. Nothing changed in the workspace configuration to trigger this and [according to the spec](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_inlayHint_refresh)\n\n> This is useful if a server detects a configuration change which requires a re-calculation of all inlay hints.\n\nIn this situation, it was just a file change, so all workspace hints should really be refreshed should they?\n\n### Nvim version (nvim -v)\n\nNVIM v0.10.4\n\n### Language server name/version\n\nmetals 1.5.1\n\n### Operating system/version\n\nMac OS but any has the same\n\n### Log file\n\n_No response_\n\nEDIT:\n\nIf you are actually using metals to try and debug this, we have a mechanism to see nicely formatting logs. You should see a `.metals/` created in the current dir and if you create a `lsp.trace.json` file in that directory and then start the server again you'll see it populated with all the LSP logs.",
    "closed_at": "2025-02-23T16:48:10Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Always test latest HEAD.",
            "created_at": "2025-01-29T16:09:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2622073619",
            "id": 2622073619,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6cSasT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622073619/reactions"
            },
            "updated_at": "2025-01-29T16:09:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622073619",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Always test latest HEAD.\n\nJust confirming with `NVIM v0.11.0-dev-1658+g216ec73972` that I have the same exact behavior.",
            "created_at": "2025-01-29T19:20:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2622629478",
            "id": 2622629478,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6cUiZm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622629478/reactions"
            },
            "updated_at": "2025-01-29T19:20:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622629478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13974112?v=4",
                "events_url": "https://api.github.com/users/ckipp01/events{/privacy}",
                "followers_url": "https://api.github.com/users/ckipp01/followers",
                "following_url": "https://api.github.com/users/ckipp01/following{/other_user}",
                "gists_url": "https://api.github.com/users/ckipp01/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ckipp01",
                "id": 13974112,
                "login": "ckipp01",
                "node_id": "MDQ6VXNlcjEzOTc0MTEy",
                "organizations_url": "https://api.github.com/users/ckipp01/orgs",
                "received_events_url": "https://api.github.com/users/ckipp01/received_events",
                "repos_url": "https://api.github.com/users/ckipp01/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ckipp01/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ckipp01/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ckipp01",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@p00f @catlee ",
            "created_at": "2025-01-30T10:27:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2624093761",
            "id": 2624093761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6caH5B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2624093761/reactions"
            },
            "updated_at": "2025-01-30T10:27:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2624093761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think I've ran into the same issue with `@vue/language-server` in hybrid mode in combination with `vtsls`.\n\nAfter enabling inlay hints, only the TypeScript hints are shown. Once I edit the buffer, the Vue inlay hints appear, but if the editing is adding a new line NeoVim is reporting the following:\n\n```sh\nError in decoration provider nvim.lsp.inlayhint.win:\nError executing lua: ...ed-nightly/share/nvim/runtime/lua/vim/lsp/inlay_hint.lua:346: Invalid 'col': out of range\nstack traceback:\n        [C]: in function 'nvim_buf_set_extmark'\n        ...ed-nightly/share/nvim/runtime/lua/vim/lsp/inlay_hint.lua:346: in function <...ed-nightly/share/nvim/runtime/lua/vim/lsp/inlay_hint.lua:300>\nError in decoration provider nvim.lsp.inlayhint.win:\nError executing lua: ...ed-nightly/share/nvim/runtime/lua/vim/lsp/inlay_hint.lua:346: Invalid 'col': out of range\nstack traceback:\n        [C]: in function 'nvim_buf_set_extmark'\n        ...ed-nightly/share/nvim/runtime/lua/vim/lsp/inlay_hint.lua:346: in function <...ed-nightly/share/nvim/runtime/lua/vim/lsp/inlay_hint.lua:300>\nError in decoration provider nvim.lsp.inlayhint.win:\nError executing lua: ...ed-nightly/share/nvim/runtime/lua/vim/lsp/inlay_hint.lua:346: Invalid 'col': out of range\nstack traceback:\n        [C]: in function 'nvim_buf_set_extmark'\n        ...ed-nightly/share/nvim/runtime/lua/vim/lsp/inlay_hint.lua:346: in function <...ed-nightly/share/nvim/runtime/lua/vim/lsp/inlay_hint.lua:300>\n        [builtin#36]: at 0x7f442d7810e0\n        ...ghtly/share/nvim/runtime/lua/vim/lsp/semantic_tokens.lua:298: in function 'handler'\n        ...rapped-nightly/share/nvim/runtime/lua/vim/lsp/client.lua:679: in function ''\n        vim/_editor.lua: in function <vim/_editor.lua:0>\n\n```\n\nMy hypothesis is that the answer from the Vue Language Server comes a little delayed and only the answer of vtsls is initially processed.\n\n---\n\nThis can be reproduced pretty simply with [this mini-lsp I found in another issues](https://gist.github.com/GoldsteinE/702327e04ddc3aedd3e6af7e9a70e68e). Just have the file twice, once with a delay before the `send` in line 56. Then start both language servers from within NeoVim and enable inlay hints. The hints for the delayed version will never appear",
            "created_at": "2025-02-12T13:05:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2653658608",
            "id": 2653658608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6eK53w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2653658608/reactions"
            },
            "updated_at": "2025-02-12T13:12:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2653658608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/56225668?v=4",
                "events_url": "https://api.github.com/users/Jak-Ch-ll/events{/privacy}",
                "followers_url": "https://api.github.com/users/Jak-Ch-ll/followers",
                "following_url": "https://api.github.com/users/Jak-Ch-ll/following{/other_user}",
                "gists_url": "https://api.github.com/users/Jak-Ch-ll/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Jak-Ch-ll",
                "id": 56225668,
                "login": "Jak-Ch-ll",
                "node_id": "MDQ6VXNlcjU2MjI1NjY4",
                "organizations_url": "https://api.github.com/users/Jak-Ch-ll/orgs",
                "received_events_url": "https://api.github.com/users/Jak-Ch-ll/received_events",
                "repos_url": "https://api.github.com/users/Jak-Ch-ll/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Jak-Ch-ll/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Jak-Ch-ll/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Jak-Ch-ll",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Sort of an aside, but I'm confused why a `workspace/inlayHint/refresh` is always sent as well. Nothing changed in the workspace configuration to trigger this and [according to the spec](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_inlayHint_refresh)\n> \n> > This is useful if a server detects a configuration change which requires a re-calculation of all inlay hints.\n> \n> In this situation, it was just a file change, so all workspace hints should really be refreshed should they?\n\n@ckipp01 Inlay hints are requests from the client for the server to respond and then display. Generally, as long as the file has been changed, the client will send a request for inlay hints. Based on your description, I guess metal ls cannot always respond to these requests; it can only calculate inlay hints when the file has been changed. The client does not send inlay hints when the file is saved, so metal ls chooses to send `workspace/inlayHintsRefresh` to let the client update inlay hints. This may be a form of abuse.\n\nFor this issue, execute the following code\n```\nlua vim.api.nvim__redraw({ buf = 0, valid = true, flush = false })\n```\nWill the inlay hint be updated? Also, will changing 4 to 5 be updated?",
            "created_at": "2025-02-12T14:31:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2653881795",
            "id": 2653881795,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6eLwXD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2653881795/reactions"
            },
            "updated_at": "2025-02-12T14:31:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2653881795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @ckipp01 Inlay hints are requests from the client for the server to respond and then display. Generally, as long as the file has been changed, the client will send a request for inlay hints. Based on your description, I guess metal ls cannot always respond to these requests; it can only calculate inlay hints when the file has been changed. The client does not send inlay hints when the file is saved, so metal ls chooses to send workspace/inlayHintsRefresh to let the client update inlay hints. This may be a form of abuse.\n\nSo I guess I'm not really following. Also, don't be confused about the logs, they are from the perspective of Metals, so when you see `received` it's on the Metals side.\n\n>  guess metal ls cannot always respond to these requests\n\nIt for sure can, do you have an illustration of when it can't? For Metals it's depending on the type of inlay hints we are returning, but in this scenario I'm only focusing on the ones that are being returned when we are showing the results of a worksheet.\n\n> The client does not send inlay hints when the file is saved\n\nThis actually isn't true. I have an example below again from the above example where in a worksheet when you change the file, yes a request is sent and responded to, but then _again_ after the `didSave` event the client _does_ send a request to which Metals agains responds to. However when it responds, they are never updated. \n\n```\n[Trace - 08:18:47 AM] Received notification 'textDocument/didSave'\nParams: {\n  \"textDocument\": {\n    \"uri\": \"file:///Users/ckipp/Documents/scala-workspace/inlay-test/src/main/scala/example/example.worksheet.sc\"\n  }\n}\n\n// removed a bunch of progress stuff\n\n[Trace - 08:18:47 AM] Sending notification 'textDocument/publishDiagnostics'\nParams: {\n  \"uri\": \"file:///Users/ckipp/Documents/scala-workspace/inlay-test/src/main/scala/example/example.worksheet.sc\",\n  \"diagnostics\": []\n}\n\n// now here you see Metals received the request from nvim after the save\n\n[Trace - 08:18:47 AM] Received request 'textDocument/inlayHint - (18)'\nParams: {\n  \"textDocument\": {\n    \"uri\": \"file:///Users/ckipp/Documents/scala-workspace/inlay-test/src/main/scala/example/example.worksheet.sc\"\n  },\n  \"range\": {\n    \"start\": {\n      \"line\": 0,\n      \"character\": 0\n    },\n    \"end\": {\n      \"line\": 2,\n      \"character\": 0\n    }\n  }\n}\n\n// we return new inlayHints\n\n[Trace - 08:18:47 AM] Sending response 'textDocument/inlayHint - (18)'. Processing request took 1ms\nResult: [\n  {\n    \"position\": {\n      \"line\": 1,\n      \"character\": 9\n    },\n    \"label\": \" // : Int \\u003d 5\",\n    \"tooltip\": \"x: Int \\u003d 5\"\n  }\n]\n```\n\nAfter this point, it's not updated to `5`. It stays `4` from the previous hints.\n\n> For this issue, execute the following code\n\nNo, even though the new inlay hints were returned, when I trigger this it doesn't update them.\n\n> Also, will changing 4 to 5 be updated?\n\nNo, that's what the entire issue is about, after new inlay hints are received after the `didSave` event _after_ nvim requests them, they aren't updated.\n",
            "created_at": "2025-02-13T07:31:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2655746185",
            "id": 2655746185,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6eS3iJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655746185/reactions"
            },
            "updated_at": "2025-02-13T07:31:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655746185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13974112?v=4",
                "events_url": "https://api.github.com/users/ckipp01/events{/privacy}",
                "followers_url": "https://api.github.com/users/ckipp01/followers",
                "following_url": "https://api.github.com/users/ckipp01/following{/other_user}",
                "gists_url": "https://api.github.com/users/ckipp01/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ckipp01",
                "id": 13974112,
                "login": "ckipp01",
                "node_id": "MDQ6VXNlcjEzOTc0MTEy",
                "organizations_url": "https://api.github.com/users/ckipp01/orgs",
                "received_events_url": "https://api.github.com/users/ckipp01/received_events",
                "repos_url": "https://api.github.com/users/ckipp01/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ckipp01/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ckipp01/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ckipp01",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "\n> Also, don't be confused about the logs, they are from the perspective of Metals, so when you see `received` it's on the Metals side.\n\nYes, I mean it's metals sends the requests to neovim, neovim cannot control this behavior. Its motive should request the client refresh inlay hints, and there's no corresponding file-level request for that.",
            "created_at": "2025-02-13T07:44:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2655766379",
            "id": 2655766379,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6eS8dr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655766379/reactions"
            },
            "updated_at": "2025-02-13T07:44:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655766379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Yes, I mean it's metals sends the requests to neovim, neovim cannot control this behavior. Its motive should request the client refresh inlay hints, and there's no corresponding file-level request for that.\n\nSorry I don't understand what you mean.\n\n> it's metals sends the requests to neovim\n\nIt's not Metals that sends this request. It's nvim that is sending the request.\n\n```\n[Trace - 08:18:47 AM] Received request 'textDocument/inlayHint - (18)'\nParams: {\n  \"textDocument\": {\n    \"uri\": \"file:///Users/ckipp/Documents/scala-workspace/inlay-test/src/main/scala/example/example.worksheet.sc\"\n  },\n  \"range\": {\n    \"start\": {\n      \"line\": 0,\n      \"character\": 0\n    },\n    \"end\": {\n      \"line\": 2,\n      \"character\": 0\n    }\n  }\n}\n```\n\nThe above is Metals receiving the request from nvim.\n\nAnd then below is the response we return to nvim.\n\n```\n[Trace - 08:18:47 AM] Sending response 'textDocument/inlayHint - (18)'. Processing request took 1ms\nResult: [\n  {\n    \"position\": {\n      \"line\": 1,\n      \"character\": 9\n    },\n    \"label\": \" // : Int \\u003d 5\",\n    \"tooltip\": \"x: Int \\u003d 5\"\n  }\n]\n```\n\nThis returned inlayHint is not updated on the client side and not showed to the user when it should be.\n",
            "created_at": "2025-02-13T07:48:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2655773662",
            "id": 2655773662,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6eS-Pe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655773662/reactions"
            },
            "updated_at": "2025-02-13T07:49:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655773662",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13974112?v=4",
                "events_url": "https://api.github.com/users/ckipp01/events{/privacy}",
                "followers_url": "https://api.github.com/users/ckipp01/followers",
                "following_url": "https://api.github.com/users/ckipp01/following{/other_user}",
                "gists_url": "https://api.github.com/users/ckipp01/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ckipp01",
                "id": 13974112,
                "login": "ckipp01",
                "node_id": "MDQ6VXNlcjEzOTc0MTEy",
                "organizations_url": "https://api.github.com/users/ckipp01/orgs",
                "received_events_url": "https://api.github.com/users/ckipp01/received_events",
                "repos_url": "https://api.github.com/users/ckipp01/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ckipp01/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ckipp01/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ckipp01",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "(Quote from LSP spec)\n> The [workspace/inlayHint/refresh](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_inlayHint_refresh) request is sent from the server to the client\n\nThen, neovim request `textDocument/inlayHint` to metals.",
            "created_at": "2025-02-13T07:55:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2655785854",
            "id": 2655785854,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6eTBN-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655785854/reactions"
            },
            "updated_at": "2025-02-13T07:57:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655785854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "(Anothe quote from right below yours)\n\n> This is useful if a server detects a configuration change which requires a re-calculation of all inlay hints. Note that the client still has the freedom to delay the re-calculation of the inlay hints if for example an editor is currently not visible.\n\nI don't believe you're interpreting this correctly. This should be used in the case where the client should refresh _all_ the inlay hints for a given workspace, note that this is a `workspace` request, not a `textDocument` level request. If the client requests inlay hints for a given textDocument and they are returned they should be displayed. I don't believe it should require a refresh here.\n\nEDIT: Note that we also send other types of inlay hints like inferred types, and while you're typing this is being sent and update/shown on the client side without any refresh needed or being sent. I'd expect the same behavior here.",
            "created_at": "2025-02-13T08:05:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2655806723",
            "id": 2655806723,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6eTGUD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655806723/reactions"
            },
            "updated_at": "2025-02-13T08:14:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655806723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13974112?v=4",
                "events_url": "https://api.github.com/users/ckipp01/events{/privacy}",
                "followers_url": "https://api.github.com/users/ckipp01/followers",
                "following_url": "https://api.github.com/users/ckipp01/following{/other_user}",
                "gists_url": "https://api.github.com/users/ckipp01/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ckipp01",
                "id": 13974112,
                "login": "ckipp01",
                "node_id": "MDQ6VXNlcjEzOTc0MTEy",
                "organizations_url": "https://api.github.com/users/ckipp01/orgs",
                "received_events_url": "https://api.github.com/users/ckipp01/received_events",
                "repos_url": "https://api.github.com/users/ckipp01/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ckipp01/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ckipp01/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ckipp01",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "\n> I don't believe it should require a refresh here.\n\nRight, but it's only metals that can request `workspace/inlayHint/refresh`, as the previous quote says. So this is a metals issue.\n\nThis series of discussions has gone a bit off-topic. I think neovim does have an issue when handling inlay hint responses, I will check that later.\n",
            "created_at": "2025-02-13T08:19:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/32248#issuecomment-2655834264",
            "id": 2655834264,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32248",
            "node_id": "IC_kwDOAPphoM6eTNCY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655834264/reactions"
            },
            "updated_at": "2025-02-13T08:19:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2655834264",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32248/comments",
    "created_at": "2025-01-29T15:08:11Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32248/events",
    "html_url": "https://github.com/neovim/neovim/issues/32248",
    "id": 2818490657,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32248/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 699,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 637,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-02-23T16:48:10Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6n_sEh",
    "number": 32248,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32248/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32248/timeline",
    "title": "LSP: `textDocument/inlay_hint` not being correctly published when recieved",
    "updated_at": "2025-02-23T16:48:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32248",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13974112?v=4",
        "events_url": "https://api.github.com/users/ckipp01/events{/privacy}",
        "followers_url": "https://api.github.com/users/ckipp01/followers",
        "following_url": "https://api.github.com/users/ckipp01/following{/other_user}",
        "gists_url": "https://api.github.com/users/ckipp01/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ckipp01",
        "id": 13974112,
        "login": "ckipp01",
        "node_id": "MDQ6VXNlcjEzOTc0MTEy",
        "organizations_url": "https://api.github.com/users/ckipp01/orgs",
        "received_events_url": "https://api.github.com/users/ckipp01/received_events",
        "repos_url": "https://api.github.com/users/ckipp01/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ckipp01/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ckipp01/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ckipp01",
        "user_view_type": "public"
    }
}