{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Feature already in Vim?\r\n\r\nNo\r\n\r\n### Feature description\r\n\r\nCurrently floating windows do not show a status line.\r\n\r\nThis feature request is for having some way to optionally configure floating windows to show a statusline (e.g., through the `config` map passed to `nvim_open_win` and `nvim_win_set_config`), which would work the same as the statusline (`global-local`) shown in ordinary non-floating windows.\r\n\r\nMy motivation for this feature request is from a plugin I wrote for showing menus, [vim-menu](https://github.com/dstein64/vim-menu). When using ordinary windows, existing floating windows can [interfere](https://github.com/dstein64/vim-menu/issues/1) with the functioning of the plugin. Switching to floating windows with high z-index could be a workaround, but would have the drawback that they don't show a statusline, which is currently utilized for showing plugin information.\r\n\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "you can try a floating statusline windline.nvim. \r\nby default it skip all floating window and display a main window. but you can customize it to display your plugin vim-menu",
            "created_at": "2021-12-24T05:06:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/16753#issuecomment-1000656871",
            "id": 1000656871,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16753",
            "node_id": "IC_kwDOAPphoM47pM_n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1000656871/reactions"
            },
            "updated_at": "2021-12-24T05:06:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1000656871",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7578110?v=4",
                "events_url": "https://api.github.com/users/windwp/events{/privacy}",
                "followers_url": "https://api.github.com/users/windwp/followers",
                "following_url": "https://api.github.com/users/windwp/following{/other_user}",
                "gists_url": "https://api.github.com/users/windwp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/windwp",
                "id": 7578110,
                "login": "windwp",
                "node_id": "MDQ6VXNlcjc1NzgxMTA=",
                "organizations_url": "https://api.github.com/users/windwp/orgs",
                "received_events_url": "https://api.github.com/users/windwp/received_events",
                "repos_url": "https://api.github.com/users/windwp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/windwp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/windwp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/windwp",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "To my mind though it would be preferable to have this option built in, especially now that we can configure global status lines via `laststatus=3`.\r\n\r\nLooking through the codebase, I think I can see where to start implementing that option. But I have also never contributed to NeoVim core before, and I wouldn't mind some pointers if anyone has some. Also I realize what I have here is just a start, not the whole feature implementation.\r\n\r\nTo start, I figure we could add a `statusline` option to the `FloatConfig` struct in `src/nvim/buffer_defs.h`:\r\n\r\n```c\r\n// Line 1049\r\ntypedef struct {\r\n  Window window;\r\n  lpos_T bufpos;\r\n  int height, width;\r\n  double row, col;\r\n  FloatAnchor anchor;\r\n  FloatRelative relative;\r\n  bool external;\r\n  bool focusable;\r\n  int zindex;\r\n  WinStyle style;\r\n  bool border;\r\n  bool shadow;\r\n  schar_T border_chars[8];\r\n  int border_hl_ids[8];\r\n  int border_attr[8];\r\n  bool noautocmd;\r\n  bool statusline;\r\n} FloatConfig;\r\n\r\n#define FLOAT_CONFIG_INIT ((FloatConfig){ .height = 0, .width = 0, \\\r\n                                          .bufpos = { -1, 0 }, \\\r\n                                          .row = 0, .col = 0, .anchor = 0, \\\r\n                                          .relative = 0, .external = false, \\\r\n                                          .focusable = true, \\\r\n                                          .zindex = kZIndexFloatDefault, \\\r\n                                          .style = kWinStyleUnused, \\\r\n                                          .noautocmd = false, \\\r\n                                          .statusline = false })\r\n```\r\n\r\nThen it looks like we could start implementing that in `src/nvim/window.c`, specifically in the `win_new_float` method. Likely we'll need more to solidify this, but just to put something down I added an `if (fconfig.statusline)` condition for setting `wp->w_status_height`. I used `STATUS_HEIGHT` as the value, but I really need to do more digging to verify if that's actually what the setting should be:\r\n\r\n```c\r\n// Line 683\r\nwin_T *win_new_float(win_T *wp, bool last, FloatConfig fconfig, Error *err)\r\n{\r\n  if (wp == NULL) {\r\n    wp = win_alloc(last ? lastwin : lastwin_nofloating(), false);\r\n    win_init(wp, curwin, 0);\r\n  } else {\r\n    assert(!last);\r\n    assert(!wp->w_floating);\r\n    if (firstwin == wp && lastwin_nofloating() == wp) {\r\n      // last non-float\r\n      api_set_error(err, kErrorTypeException,\r\n                    \"Cannot change last window into float\");\r\n      return NULL;\r\n    } else if (!win_valid(wp)) {\r\n      api_set_error(err, kErrorTypeException,\r\n                    \"Cannot change window from different tabpage into float\");\r\n      return NULL;\r\n    }\r\n    int dir;\r\n    winframe_remove(wp, &dir, NULL);\r\n    XFREE_CLEAR(wp->w_frame);\r\n    (void)win_comp_pos();  // recompute window positions\r\n    win_remove(wp, NULL);\r\n    win_append(lastwin_nofloating(), wp);\r\n  }\r\n  wp->w_floating = true;\r\n  if (fconfig.statusline) {\r\n    wp->w_status_height = STATUS_HEIGHT;\r\n  } else {\r\n    wp->w_status_height = 0;\r\n  }\r\n  wp->w_winbar_height = 0;\r\n  wp->w_hsep_height = 0;\r\n  wp->w_vsep_width = 0;\r\n\r\n  win_config_float(wp, fconfig);\r\n  win_set_inner_size(wp, true);\r\n  wp->w_pos_changed = true;\r\n  redraw_later(wp, UPD_VALID);\r\n  return wp;\r\n}\r\n```\r\n\r\nThat's a little rough and ready, but it's a start I hope. I'm not quite sure yet where to go from there, and I haven't tried building anything yet. My hope is to try my hand at putting this together and trying it on a build once I get a little more time. And of course any insight from others with some more NeoVim core experience would be appreciated.",
            "created_at": "2022-09-23T19:59:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/16753#issuecomment-1256620666",
            "id": 1256620666,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16753",
            "node_id": "IC_kwDOAPphoM5K5oJ6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1256620666/reactions"
            },
            "updated_at": "2022-09-23T20:08:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1256620666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19861991?v=4",
                "events_url": "https://api.github.com/users/nasanos/events{/privacy}",
                "followers_url": "https://api.github.com/users/nasanos/followers",
                "following_url": "https://api.github.com/users/nasanos/following{/other_user}",
                "gists_url": "https://api.github.com/users/nasanos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nasanos",
                "id": 19861991,
                "login": "nasanos",
                "node_id": "MDQ6VXNlcjE5ODYxOTkx",
                "organizations_url": "https://api.github.com/users/nasanos/orgs",
                "received_events_url": "https://api.github.com/users/nasanos/received_events",
                "repos_url": "https://api.github.com/users/nasanos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nasanos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nasanos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nasanos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@nasanos that is a fine direction to start with, and then the next step is to add test coverage in `./test/functional/ui/float_spec.lua`. You can [run the test](https://github.com/neovim/neovim/blob/master/test/README.md#running-tests) like this:\r\n\r\n    TEST_FILE=./test/functional/ui/float_spec.lua make functionaltest\r\n\r\nHowever I wouldn't spend much time polishing the `FloatConfig.statusline` approach because first question is: 'statusline' option is already window-local, so maybe we just need a way to switch it on/off for floating windows (that might actually end up _needing_ a `FloatConfig.statusline` flag, I'm not sure).",
            "created_at": "2022-09-24T14:07:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/16753#issuecomment-1256977133",
            "id": 1256977133,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16753",
            "node_id": "IC_kwDOAPphoM5K6_Lt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1256977133/reactions"
            },
            "updated_at": "2022-09-24T14:07:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1256977133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk Thanks for the direction — that sets me off well to go ahead and get started with the change!",
            "created_at": "2022-09-24T16:44:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/16753#issuecomment-1257011108",
            "id": 1257011108,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16753",
            "node_id": "IC_kwDOAPphoM5K7Hek",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257011108/reactions"
            },
            "updated_at": "2022-09-24T16:44:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1257011108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19861991?v=4",
                "events_url": "https://api.github.com/users/nasanos/events{/privacy}",
                "followers_url": "https://api.github.com/users/nasanos/followers",
                "following_url": "https://api.github.com/users/nasanos/following{/other_user}",
                "gists_url": "https://api.github.com/users/nasanos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nasanos",
                "id": 19861991,
                "login": "nasanos",
                "node_id": "MDQ6VXNlcjE5ODYxOTkx",
                "organizations_url": "https://api.github.com/users/nasanos/orgs",
                "received_events_url": "https://api.github.com/users/nasanos/received_events",
                "repos_url": "https://api.github.com/users/nasanos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nasanos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nasanos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nasanos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi, I have a plugin for using floating windows as you would split windows ([link](https://github.com/carbon-steel/detour.nvim)) and this feature would be greatly appreciated :)",
            "created_at": "2023-12-09T20:56:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/16753#issuecomment-1848680418",
            "id": 1848680418,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16753",
            "node_id": "IC_kwDOAPphoM5uMJ_i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848680418/reactions"
            },
            "updated_at": "2023-12-09T20:56:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848680418",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7697639?v=4",
                "events_url": "https://api.github.com/users/carbon-steel/events{/privacy}",
                "followers_url": "https://api.github.com/users/carbon-steel/followers",
                "following_url": "https://api.github.com/users/carbon-steel/following{/other_user}",
                "gists_url": "https://api.github.com/users/carbon-steel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/carbon-steel",
                "id": 7697639,
                "login": "carbon-steel",
                "node_id": "MDQ6VXNlcjc2OTc2Mzk=",
                "organizations_url": "https://api.github.com/users/carbon-steel/orgs",
                "received_events_url": "https://api.github.com/users/carbon-steel/received_events",
                "repos_url": "https://api.github.com/users/carbon-steel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/carbon-steel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/carbon-steel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/carbon-steel",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16753/comments",
    "created_at": "2021-12-22T19:11:00Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/16753/events",
    "html_url": "https://github.com/neovim/neovim/issues/16753",
    "id": 1087112211,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "floating windows, popups, hover",
            "id": 3234818716,
            "name": "floatwin",
            "node_id": "MDU6TGFiZWwzMjM0ODE4NzE2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/floatwin"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/16753/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5AzAQT",
    "number": 16753,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/16753/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/16753/timeline",
    "title": "statusline support for floating windows",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:58:14Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/16753",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
        "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
        "followers_url": "https://api.github.com/users/dstein64/followers",
        "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
        "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dstein64",
        "id": 541289,
        "login": "dstein64",
        "node_id": "MDQ6VXNlcjU0MTI4OQ==",
        "organizations_url": "https://api.github.com/users/dstein64/orgs",
        "received_events_url": "https://api.github.com/users/dstein64/received_events",
        "repos_url": "https://api.github.com/users/dstein64/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dstein64",
        "user_view_type": "public"
    }
}