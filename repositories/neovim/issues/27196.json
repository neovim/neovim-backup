{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\n```cpp\r\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at ./nptl/pthread_kill.c:44\r\n#1  0x00007ff667f5315f in __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78\r\n#2  0x00007ff667f05472 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\r\n#3  0x00007ff667eef4b2 in __GI_abort () at ./stdlib/abort.c:79\r\n#4  0x00007ff667eef3d5 in __assert_fail_base (fmt=0x7ff668063dc8 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x55da9372964d \"seen\",\r\n    file=file@entry=0x55da9374a730 \".../src/nvim/marktree.c\", line=line@entry=375, function=function@entry=0x55da936f8a40 <__PRETTY_FUNCTION__.19> \"unintersect_node\") at ./assert/assert.c:92\r\n#5  0x00007ff667efe3a2 in __assert_fail (assertion=assertion@entry=0x55da9372964d \"seen\", file=file@entry=0x55da9374a730 \".../src/nvim/marktree.c\", line=line@entry=375,\r\n    function=function@entry=0x55da936f8a40 <__PRETTY_FUNCTION__.19> \"unintersect_node\") at ./assert/assert.c:101\r\n#6  0x000055da934a12b6 in unintersect_node (b=b@entry=0x55da93f147e0, x=0x55da958a7590, id=id@entry=8589935750, strict=strict@entry=true) at .../src/nvim/marktree.c:375\r\n#7  0x000055da934a32cf in marktree_intersect_pair (b=b@entry=0x55da93f147e0, id=id@entry=8589935750, itr=itr@entry=0x7ffc8a862090, end_itr=end_itr@entry=0x7ffc8a861fb0, delete=delete@entry=true)\r\n    at .../src/nvim/marktree.c:427\r\n#8  0x000055da934a9b58 in marktree_splice (b=0x55da93f147e0, start_line=<optimized out>, start_col=<optimized out>, old_extent_line=<optimized out>, old_extent_col=<optimized out>, new_extent_line=<optimized out>, new_extent_col=0)\r\n    at .../src/nvim/marktree.c:2085\r\n#9  0x000055da9345085e in extmark_splice_impl (buf=buf@entry=0x55da93f11850, start_row=start_row@entry=91, start_col=start_col@entry=0, start_byte=2408, old_row=old_row@entry=1, old_col=old_col@entry=0, old_byte=49, new_row=1, new_col=0,\r\n    new_byte=52, undo=kExtmarkUndo) at .../src/nvim/extmark.c:530\r\n#10 0x000055da93450c0c in extmark_splice (buf=0x55da93f11850, start_row=91, start_col=0, old_row=1, old_col=0, old_byte=49, new_row=1, new_col=0, new_byte=52, undo=kExtmarkUndo) at .../src/nvim/extmark.c:498\r\n#11 0x000055da933726e0 in nvim_buf_set_lines (channel_id=<optimized out>, buffer=<optimized out>, start=92, end=93, strict_indexing=<optimized out>, replacement=..., err=0x7ffc8a8625b0)\r\n    at .../src/nvim/api/buffer.c:461\r\n#12 0x000055da9335c00a in nlua_api_nvim_buf_set_lines (lstate=0x7ff667ea7380) at .../build/src/nvim/auto/lua_api_c_bindings.generated.c:574\r\n#13 0x000055da93662256 in lj_BC_FUNCC ()\r\n#14 0x000055da9364e4d5 in lua_pcall (L=L@entry=0x7ff667ea7380, nargs=nargs@entry=0, nresults=nresults@entry=1, errfunc=errfunc@entry=-2) at lj_api.c:1121\r\n#15 0x000055da93481769 in nlua_pcall (lstate=lstate@entry=0x7ff667ea7380, nargs=nargs@entry=0, nresults=nresults@entry=1) at .../src/nvim/lua/executor.c:172\r\n#16 0x000055da93486bff in nlua_call_ref (ref=<optimized out>, name=<optimized out>, args=..., retval=false, err=0x7ffc8a862790) at .../src/nvim/lua/executor.c:1610\r\n#17 0x000055da934659c4 in map_execute_lua (may_repeat=true) at .../src/nvim/getchar.c:3030\r\n#18 0x000055da934d9d9b in nv_colon (cap=0x7ffc8a8628d0) at .../src/nvim/normal.c:3220\r\n#19 0x000055da934d440b in normal_execute (state=0x7ffc8a862860, key=<optimized out>) at .../src/nvim/normal.c:1227\r\n#20 0x000055da9357533a in state_enter (s=0x7ffc8a862860) at .../src/nvim/state.c:101\r\n#21 0x000055da934d1594 in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at .../src/nvim/normal.c:516\r\n--Type <RET> for more, q to quit, c to continue without paging--\r\n#22 0x000055da934963d9 in main (argc=3, argv=<optimized out>) at .../src/nvim/main.c:651\r\n```\r\n\r\n@bfredl @luukvbaal could you look?\r\n\r\n### Steps to reproduce\r\n\r\nI have no idea how to reproduce it. This happened while deleting (or maybe commenting out) line in lua file (with luals). \r\n- `statuscol.nvim` plugin on `0.10` branch\r\n\r\n\r\n### Expected behavior\r\n\r\nNo crash\r\n\r\n### Neovim version (nvim -v)\r\n\r\nv0.10.0-dev-2196+g1e0996b57\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\n-\r\n\r\n### Operating system/version\r\n\r\nDebian Sid\r\n\r\n### Terminal name/version\r\n\r\nalacritty 0.13.1\r\n\r\n### $TERM environment variable\r\n\r\nalacritty\r\n\r\n### Installation\r\n\r\nfrom repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Unlike #27137 this only happened once (at the moment), after many hours without such failure.",
            "created_at": "2024-01-25T20:48:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-1910973164",
            "id": 1910973164,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM5x5yLs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1910973164/reactions"
            },
            "updated_at": "2024-01-25T20:48:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1910973164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "\"Assertion failed: (seen), function unintersect_node, file marktree.c, line 375.\" \r\n\r\nSame here this only happened once after many hours without failure. In my case this crash occurred after an undo change. \r\n\r\nNeovim commit 1bf645918e94e7e8f770592484164f1ee303f24e\r\n\r\n ",
            "created_at": "2024-02-03T23:35:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-1925486153",
            "id": 1925486153,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM5yxJZJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925486153/reactions"
            },
            "updated_at": "2024-02-03T23:35:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925486153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3860298?v=4",
                "events_url": "https://api.github.com/users/marcoSven/events{/privacy}",
                "followers_url": "https://api.github.com/users/marcoSven/followers",
                "following_url": "https://api.github.com/users/marcoSven/following{/other_user}",
                "gists_url": "https://api.github.com/users/marcoSven/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/marcoSven",
                "id": 3860298,
                "login": "marcoSven",
                "node_id": "MDQ6VXNlcjM4NjAyOTg=",
                "organizations_url": "https://api.github.com/users/marcoSven/orgs",
                "received_events_url": "https://api.github.com/users/marcoSven/received_events",
                "repos_url": "https://api.github.com/users/marcoSven/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/marcoSven/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/marcoSven/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/marcoSven",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Also happened to me just now - `marktree.c:375`, same as above. For me happened after I opened a previously hidden terminal window. Commit [`e34c23b7016aee5ac6483ab53fed1bce037cec5a`](https://github.com/neovim/neovim/commit/e34c23b7016aee5ac6483ab53fed1bce037cec5a)",
            "created_at": "2024-03-31T07:27:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2028585437",
            "id": 2028585437,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM546cHd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028585437/reactions"
            },
            "updated_at": "2024-03-31T07:27:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028585437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18747677?v=4",
                "events_url": "https://api.github.com/users/alfaix/events{/privacy}",
                "followers_url": "https://api.github.com/users/alfaix/followers",
                "following_url": "https://api.github.com/users/alfaix/following{/other_user}",
                "gists_url": "https://api.github.com/users/alfaix/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alfaix",
                "id": 18747677,
                "login": "alfaix",
                "node_id": "MDQ6VXNlcjE4NzQ3Njc3",
                "organizations_url": "https://api.github.com/users/alfaix/orgs",
                "received_events_url": "https://api.github.com/users/alfaix/received_events",
                "repos_url": "https://api.github.com/users/alfaix/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alfaix/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alfaix/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alfaix",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "FWIW I haven't encountered the issue for over a month now. It used happen frequently back then. I am updating neovim regularly, thought it was fixed.",
            "created_at": "2024-03-31T14:44:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2028779313",
            "id": 2028779313,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM547Lcx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028779313/reactions"
            },
            "updated_at": "2024-03-31T14:44:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028779313",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3860298?v=4",
                "events_url": "https://api.github.com/users/marcoSven/events{/privacy}",
                "followers_url": "https://api.github.com/users/marcoSven/followers",
                "following_url": "https://api.github.com/users/marcoSven/following{/other_user}",
                "gists_url": "https://api.github.com/users/marcoSven/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/marcoSven",
                "id": 3860298,
                "login": "marcoSven",
                "node_id": "MDQ6VXNlcjM4NjAyOTg=",
                "organizations_url": "https://api.github.com/users/marcoSven/orgs",
                "received_events_url": "https://api.github.com/users/marcoSven/received_events",
                "repos_url": "https://api.github.com/users/marcoSven/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/marcoSven/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/marcoSven/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/marcoSven",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Also happened to me just now - `marktree.c:375`, same as above. For me happened after I opened a previously hidden terminal window. Commit [`e34c23b7016aee5ac6483ab53fed1bce037cec5a`](https://github.com/neovim/neovim/commit/e34c23b7016aee5ac6483ab53fed1bce037cec5a)\n\nBacktrace please, plus any more information you can provide. What you encountered might not be the exact same issue.",
            "created_at": "2024-03-31T20:36:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2028898658",
            "id": 2028898658,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM547oli",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028898658/reactions"
            },
            "updated_at": "2024-03-31T20:36:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028898658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "```cpp\r\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at ./nptl/pthread_kill.c:44\r\n#1  0x00007f23f20e51cf in __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78\r\n#2  0x00007f23f2097472 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\r\n#3  0x00007f23f20814b2 in __GI_abort () at ./stdlib/abort.c:79\r\n#4  0x00007f23f20813d5 in __assert_fail_base (fmt=0x7f23f21f5dc8 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x555d95e632d4 \"seen\", file=file@entry=0x555d95e85848 \".../src/nvim/marktree.c\", line=line@entry=375,\r\n    function=function@entry=0x555d95e384a0 <__PRETTY_FUNCTION__.19> \"unintersect_node\") at ./assert/assert.c:92\r\n#5  0x00007f23f20903a2 in __assert_fail (assertion=assertion@entry=0x555d95e632d4 \"seen\", file=file@entry=0x555d95e85848 \".../src/nvim/marktree.c\", line=line@entry=375,\r\n    function=function@entry=0x555d95e384a0 <__PRETTY_FUNCTION__.19> \"unintersect_node\") at ./assert/assert.c:101\r\n#6  0x0000555d95bef7e9 in unintersect_node (b=b@entry=0x555d9731c8e0, x=0x555d975ef090, id=id@entry=42949673022, strict=strict@entry=true) at .../src/nvim/marktree.c:375\r\n#7  0x0000555d95bf181f in marktree_intersect_pair (b=b@entry=0x555d9731c8e0, id=id@entry=42949673022, itr=itr@entry=0x7ffe2f1680a0, end_itr=end_itr@entry=0x7ffe2f167fc0, delete=delete@entry=true) at .../src/nvim/marktree.c:427\r\n#8  0x0000555d95bf7abc in marktree_splice (b=0x555d9731c8e0, start_line=<optimized out>, start_col=<optimized out>, old_extent_line=<optimized out>, old_extent_col=<optimized out>, new_extent_line=<optimized out>, new_extent_col=0)\r\n    at .../src/nvim/marktree.c:2114\r\n#9  0x0000555d95b9e158 in extmark_splice_impl (buf=buf@entry=0x555d97319940, start_row=start_row@entry=87, start_col=start_col@entry=0, start_byte=3501, old_row=old_row@entry=9, old_col=old_col@entry=0, old_byte=267, new_row=9, new_col=0, new_byte=271, undo=kExtmarkUndo)\r\n    at .../src/nvim/extmark.c:549\r\n#10 0x0000555d95b9e504 in extmark_splice (buf=0x555d97319940, start_row=87, start_col=0, old_row=9, old_col=0, old_byte=267, new_row=9, new_col=0, new_byte=271, undo=kExtmarkUndo) at .../src/nvim/extmark.c:517\r\n#11 0x0000555d95abdeb0 in nvim_buf_set_text (channel_id=<optimized out>, buffer=<optimized out>, start_row=88, start_col=<optimized out>, end_row=97, end_col=<optimized out>, replacement=..., arena=0x7ffe2f168680, err=0x7ffe2f168650)\r\n    at .../src/nvim/api/buffer.c:688\r\n#12 0x0000555d95aa5767 in nlua_api_nvim_buf_set_text (lstate=0x7f23f2039380) at .../build/src/nvim/auto/lua_api_c_bindings.generated.c:741\r\n#13 0x0000555d95dac3c6 in lj_BC_FUNCC ()\r\n#14 0x0000555d95d98645 in lua_pcall (L=L@entry=0x7f23f2039380, nargs=nargs@entry=0, nresults=nresults@entry=1, errfunc=errfunc@entry=-2) at lj_api.c:1122\r\n#15 0x0000555d95bcfcac in nlua_pcall (lstate=lstate@entry=0x7f23f2039380, nargs=nargs@entry=0, nresults=nresults@entry=1) at .../src/nvim/lua/executor.c:173\r\n#16 0x0000555d95bd7202 in nlua_typval_exec (lcmd=lcmd@entry=0x555d95f5aa00 <IObuff> \"'replacement string' item\", lcmd_len=lcmd_len@entry=30, name=name@entry=0x555d95e5ef81 \"v:lua\", args=args@entry=0x7ffe2f168a90, argcount=argcount@entry=0, special=special@entry=false,\r\n    ret_tv=0x7ffe2f1691c0) at .../src/nvim/lua/executor.c:1480\r\n#17 0x0000555d95bd73a1 in nlua_typval_call (str=0x555d97ecbe96 \"vim.lsp.formatexpr()\", len=18, args=0x7ffe2f168a90, argcount=0, ret_tv=0x7ffe2f1691c0) at .../src/nvim/lua/executor.c:1436\r\n#18 0x0000555d95b6e1f8 in call_func (funcname=funcname@entry=0x555d97ecbe96 \"vim.lsp.formatexpr()\", len=len@entry=18, rettv=rettv@entry=0x7ffe2f1691c0, argcount_in=<optimized out>, argvars_in=argvars_in@entry=0x7ffe2f168a90, funcexe=funcexe@entry=0x7ffe2f168c60)\r\n    at .../src/nvim/eval/userfunc.c:1665\r\n#19 0x0000555d95b6e57c in get_func_tv (name=0x555d97ecbe96 \"vim.lsp.formatexpr()\", len=18, rettv=0x7ffe2f1691c0, arg=0x7ffe2f1691b8, evalarg=<optimized out>, funcexe=0x7ffe2f168c60) at .../src/nvim/eval/userfunc.c:557\r\n#20 0x0000555d95b36199 in call_func_rettv (arg=0x7ffe2f1691b8, evalarg=0x555d95f4b060 <EVALARG_EVALUATE>, rettv=0x7ffe2f1691c0, evaluate=true, selfdict=0x0, basetv=0x0, lua_funcname=0x555d97ecbe96 \"vim.lsp.formatexpr()\")\r\n    at .../src/nvim/eval.c:3375\r\n#21 0x0000555d95b3ff23 in handle_subscript (arg=0x7ffe2f1691b8, rettv=0x7ffe2f1691c0, evalarg=0x555d95f4b060 <EVALARG_EVALUATE>, verbose=true) at .../src/nvim/eval.c:7667\r\n#22 0x0000555d95b3c163 in eval7 (arg=arg@entry=0x7ffe2f1691b8, rettv=rettv@entry=0x7ffe2f1691c0, evalarg=evalarg@entry=0x555d95f4b060 <EVALARG_EVALUATE>, want_string=want_string@entry=false) at .../src/nvim/eval.c:3259\r\n#23 0x0000555d95b3c1ba in eval6 (arg=arg@entry=0x7ffe2f1691b8, rettv=rettv@entry=0x7ffe2f1691c0, evalarg=evalarg@entry=0x555d95f4b060 <EVALARG_EVALUATE>, want_string=want_string@entry=false) at .../src/nvim/eval.c:2960\r\n#24 0x0000555d95b3c4b6 in eval5 (arg=arg@entry=0x7ffe2f1691b8, rettv=rettv@entry=0x7ffe2f1691c0, evalarg=evalarg@entry=0x555d95f4b060 <EVALARG_EVALUATE>) at .../src/nvim/eval.c:2815\r\n#25 0x0000555d95b3c882 in eval4 (arg=arg@entry=0x7ffe2f1691b8, rettv=rettv@entry=0x7ffe2f1691c0, evalarg=evalarg@entry=0x555d95f4b060 <EVALARG_EVALUATE>) at .../src/nvim/eval.c:2690\r\n#26 0x0000555d95b3cb73 in eval3 (arg=arg@entry=0x7ffe2f1691b8, rettv=rettv@entry=0x7ffe2f1691c0, evalarg=evalarg@entry=0x555d95f4b060 <EVALARG_EVALUATE>) at .../src/nvim/eval.c:2599\r\n#27 0x0000555d95b3cd29 in eval2 (arg=arg@entry=0x7ffe2f1691b8, rettv=rettv@entry=0x7ffe2f1691c0, evalarg=evalarg@entry=0x555d95f4b060 <EVALARG_EVALUATE>) at .../src/nvim/eval.c:2521\r\n#28 0x0000555d95b3ceeb in eval1 (arg=0x7ffe2f1691b8, rettv=0x7ffe2f1691c0, evalarg=0x555d95f4b060 <EVALARG_EVALUATE>) at .../src/nvim/eval.c:2425\r\n#29 0x0000555d95b337b4 in eval_to_number (expr=<optimized out>) at .../src/nvim/eval.c:1047\r\n#30 0x0000555d95ce1ff9 in fex_format (lnum=<optimized out>, count=9, c=c@entry=0) at .../src/nvim/textformat.c:894\r\n#31 0x0000555d95ce2ceb in op_formatexpr (oap=0x7ffe2f169368) at .../src/nvim/textformat.c:867\r\n#32 0x0000555d95c36ff5 in do_pending_operator (cap=0x7ffe2f1693c0, old_col=2, gui_yank=false) at .../src/nvim/ops.c:6228\r\n#33 0x0000555d95c2028f in normal_finish_command (s=s@entry=0x7ffe2f169350) at .../src/nvim/normal.c:970\r\n#34 0x0000555d95c20900 in normal_execute (state=0x7ffe2f169350, key=<optimized out>) at .../src/nvim/normal.c:1230\r\n#35 0x0000555d95cc1c97 in state_enter (s=0x7ffe2f169350) at .../src/nvim/state.c:101\r\n#36 0x0000555d95c1dacd in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at .../src/nvim/normal.c:516\r\n#37 0x0000555d95be476d in main (argc=2, argv=<optimized out>) at .../src/nvim/main.c:663\r\n```\r\nI got it again during formatting (`gqq`) visual selection in Lua file. Probably it still will be hard to reproduce. \r\n\r\nedit: NVIM v0.10.0-dev-2789+gd9235efa7",
            "created_at": "2024-04-02T19:53:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2032986735",
            "id": 2032986735,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM55LOpv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2032986735/reactions"
            },
            "updated_at": "2024-04-02T19:53:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2032986735",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Maybe related \r\n\r\n\r\n```\r\nTermination Reason:    Namespace SIGNAL, Code 6 Abort trap: 6\r\nTerminating Process:   nvim [57331]\r\n\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t       0x18e1f911c __pthread_kill + 8\r\n1   libsystem_pthread.dylib       \t       0x18e230cc0 pthread_kill + 288\r\n2   libsystem_c.dylib             \t       0x18e140a40 abort + 180\r\n3   libsystem_c.dylib             \t       0x18e13fd30 __assert_rtn + 284\r\n4   nvim                          \t       0x1032553e4 marktree_intersect_pair + 604\r\n5   nvim                          \t       0x10325cd28 marktree_splice + 6040\r\n6   nvim                          \t       0x1031d5e20 extmark_splice_impl + 304\r\n7   nvim                          \t       0x1031d65d0 extmark_splice + 156\r\n8   nvim                          \t       0x103086d24 nvim_buf_set_text + 2456\r\n9   nvim                          \t       0x103066048 nlua_api_nvim_buf_set_text + 940\r\n10  nvim                          \t       0x102fe1fdc lj_BC_FUNCC + 44\r\n11  nvim                          \t       0x102ff855c lua_pcall + 228 (lj_api.c:1151)\r\n12  nvim                          \t       0x1030cef10 getnextac + 1188\r\n13  nvim                          \t       0x1031aaa40 do_cmdline + 2424\r\n14  nvim                          \t       0x1030ccc98 apply_autocmds_group + 2136\r\n15  nvim                          \t       0x1030de6cc buf_write + 1012\r\n16  nvim                          \t       0x10319eb38 do_write + 1280\r\n17  nvim                          \t       0x1031b12f8 execute_cmd0 + 256\r\n18  nvim                          \t       0x1031ac7f4 do_cmdline + 10028\r\n19  nvim                          \t       0x1032a6630 nv_colon + 800\r\n20  nvim                          \t       0x1032a1ddc normal_execute + 9804\r\n21  nvim                          \t       0x1033a69c0 state_enter + 144\r\n22  nvim                          \t       0x10323cef8 main + 15896\r\n23  dyld                          \t       0x18deb50e0 start + 2360\r\n\r\n\r\n-----------\r\nFull Report\r\n-----------\r\n\r\n{\"app_name\":\"nvim\",\"timestamp\":\"2024-04-15 19:56:48.00 -0700\",\"app_version\":\"\",\"slice_uuid\":\"612aaa48-f818-3b16-812a-64133f5f8468\",\"build_version\":\"\",\"platform\":1,\"share_with_app_devs\":0,\"is_first_party\":1,\"bug_type\":\"309\",\"os_version\":\"macOS 14.1.1 (23B81)\",\"roots_installed\":0,\"incident_id\":\"43BE647B-6A18-4B89-87DE-F81ED2B6E22C\",\"name\":\"nvim\"}\r\n{\r\n  \"uptime\" : 190000,\r\n  \"procRole\" : \"Unspecified\",\r\n  \"version\" : 2,\r\n  \"userID\" : 501,\r\n  \"deployVersion\" : 210,\r\n  \"coalitionID\" : 20870,\r\n  \"osVersion\" : {\r\n    \"train\" : \"macOS 14.1.1\",\r\n    \"build\" : \"23B81\",\r\n    \"releaseType\" : \"User\"\r\n  },\r\n  \"captureTime\" : \"2024-04-15 19:56:47.8769 -0700\",\r\n  \"codeSigningMonitor\" : 1,\r\n  \"incident\" : \"43BE647B-6A18-4B89-87DE-F81ED2B6E22C\",\r\n  \"pid\" : 57331,\r\n  \"translated\" : false,\r\n  \"cpuType\" : \"ARM-64\",\r\n  \"roots_installed\" : 0,\r\n  \"bug_type\" : \"309\",\r\n  \"procLaunch\" : \"2024-04-15 19:25:06.5956 -0700\",\r\n  \"procStartAbsTime\" : 4648556738852,\r\n  \"procExitAbsTime\" : 4694189679910,\r\n  \"procName\" : \"nvim\",\r\n  \"procPath\" : \"\\/Users\\/USER\\/*\\/nvim\",\r\n  \"parentProc\" : \"Exited process\",\r\n  \"parentPid\" : 57326,\r\n  \"crashReporterKey\" : \"29BAB9B9-C94A-287D-0E2C-84AEA9F0A356\",\r\n  \"responsiblePid\" : 86671,\r\n  \"codeSigningID\" : \"nvim\",\r\n  \"codeSigningTeamID\" : \"\",\r\n  \"codeSigningFlags\" : 570556929,\r\n  \"codeSigningValidationCategory\" : 10,\r\n  \"codeSigningTrustLevel\" : 4294967295,\r\n  \"instructionByteStream\" : {\"beforePC\":\"fyMD1f17v6n9AwCRXOD\\/l78DAJH9e8Go\\/w9f1sADX9YQKYDSARAA1A==\",\"atPC\":\"AwEAVH8jA9X9e7+p\\/QMAkVHg\\/5e\\/AwCR\\/XvBqP8PX9bAA1\\/WcAqA0g==\"},\r\n  \"wakeTime\" : 3640,\r\n  \"sleepWakeUUID\" : \"7274EB4C-77BC-4C62-B693-6A30B833936E\",\r\n  \"sip\" : \"enabled\",\r\n  \"exception\" : {\"codes\":\"0x0000000000000000, 0x0000000000000000\",\"rawCodes\":[0,0],\"type\":\"EXC_CRASH\",\"signal\":\"SIGABRT\"},\r\n  \"termination\" : {\"flags\":0,\"code\":6,\"namespace\":\"SIGNAL\",\"indicator\":\"Abort trap: 6\",\"byProc\":\"nvim\",\"byPid\":57331},\r\n  \"extMods\" : {\"caller\":{\"thread_create\":0,\"thread_set_state\":0,\"task_for_pid\":0},\"system\":{\"thread_create\":0,\"thread_set_state\":0,\"task_for_pid\":0},\"targeted\":{\"thread_create\":0,\"thread_set_state\":0,\"task_for_pid\":0},\"warnings\":0},\r\n  \"faultingThread\" : 0,\r\n  \"threads\" : [{\"triggered\":true,\"id\":18079727,\"threadState\":{\"x\":[{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":46},{\"value\":1},{\"value\":2128},{\"value\":2371728053976051004},{\"value\":2371728050286769148},{\"value\":10},{\"value\":0},{\"value\":51},{\"value\":6122032376},{\"value\":1},{\"value\":1},{\"value\":328},{\"value\":8275164576},{\"value\":0},{\"value\":6},{\"value\":8124243648,\"symbolLocation\":0,\"symbol\":\"_main_thread\"},{\"value\":259},{\"value\":8124243872,\"symbolLocation\":224,\"symbol\":\"_main_thread\"},{\"value\":4350239181,\"symbolLocation\":14,\"symbol\":\".str.35\"},{\"value\":8106008576,\"symbolLocation\":5584,\"symbol\":\"read_memory\"},{\"value\":6122032368},{\"value\":6122032336},{\"value\":6122032368},{\"value\":6122032560}],\"flavor\":\"ARM_THREAD_STATE64\",\"lr\":{\"value\":6679628992},\"cpsr\":{\"value\":1073745920},\"fp\":{\"value\":6122031296},\"sp\":{\"value\":6122031264},\"esr\":{\"value\":1442840704,\"description\":\" Address size fault\"},\"pc\":{\"value\":6679400732,\"matchesCrashFrame\":1},\"far\":{\"value\":0}},\"queue\":\"com.apple.main-thread\",\"frames\":[{\"imageOffset\":41244,\"symbol\":\"__pthread_kill\",\"symbolLocation\":8,\"imageIndex\":7},{\"imageOffset\":27840,\"symbol\":\"pthread_kill\",\"symbolLocation\":288,\"imageIndex\":8},{\"imageOffset\":485952,\"symbol\":\"abort\",\"symbolLocation\":180,\"imageIndex\":9},{\"imageOffset\":482608,\"symbol\":\"__assert_rtn\",\"symbolLocation\":284,\"imageIndex\":9},{\"imageOffset\":2921444,\"symbol\":\"marktree_intersect_pair\",\"symbolLocation\":604,\"imageIndex\":6},{\"imageOffset\":2952488,\"symbol\":\"marktree_splice\",\"symbolLocation\":6040,\"imageIndex\":6},{\"imageOffset\":2399776,\"symbol\":\"extmark_splice_impl\",\"symbolLocation\":304,\"imageIndex\":6},{\"imageOffset\":2401744,\"symbol\":\"extmark_splice\",\"symbolLocation\":156,\"imageIndex\":6},{\"imageOffset\":1027364,\"symbol\":\"nvim_buf_set_text\",\"symbolLocation\":2456,\"imageIndex\":6},{\"imageOffset\":893000,\"symbol\":\"nlua_api_nvim_buf_set_text\",\"symbolLocation\":940,\"imageIndex\":6},{\"imageOffset\":352220,\"symbol\":\"lj_BC_FUNCC\",\"symbolLocation\":44,\"imageIndex\":6},{\"imageOffset\":443740,\"sourceLine\":1151,\"sourceFile\":\"lj_api.c\",\"symbol\":\"lua_pcall\",\"imageIndex\":6,\"symbolLocation\":228},{\"imageOffset\":1322768,\"symbol\":\"getnextac\",\"symbolLocation\":1188,\"imageIndex\":6},{\"imageOffset\":2222656,\"symbol\":\"do_cmdline\",\"symbolLocation\":2424,\"imageIndex\":6},{\"imageOffset\":1313944,\"symbol\":\"apply_autocmds_group\",\"symbolLocation\":2136,\"imageIndex\":6},{\"imageOffset\":1386188,\"symbol\":\"buf_write\",\"symbolLocation\":1012,\"imageIndex\":6},{\"imageOffset\":2173752,\"symbol\":\"do_write\",\"symbolLocation\":1280,\"imageIndex\":6},{\"imageOffset\":2249464,\"symbol\":\"execute_cmd0\",\"symbolLocation\":256,\"imageIndex\":6},{\"imageOffset\":2230260,\"symbol\":\"do_cmdline\",\"symbolLocation\":10028,\"imageIndex\":6},{\"imageOffset\":3253808,\"symbol\":\"nv_colon\",\"symbolLocation\":800,\"imageIndex\":6},{\"imageOffset\":3235292,\"symbol\":\"normal_execute\",\"symbolLocation\":9804,\"imageIndex\":6},{\"imageOffset\":4303296,\"symbol\":\"state_enter\",\"symbolLocation\":144,\"imageIndex\":6},{\"imageOffset\":2821880,\"symbol\":\"main\",\"symbolLocation\":15896,\"imageIndex\":6},{\"imageOffset\":24800,\"symbol\":\"start\",\"symbolLocation\":2360,\"imageIndex\":10}]},{\"id\":18082093,\"frames\":[{\"imageOffset\":6324,\"symbol\":\"mach_msg2_trap\",\"symbolLocation\":8,\"imageIndex\":7},{\"imageOffset\":81200,\"symbol\":\"mach_msg2_internal\",\"symbolLocation\":80,\"imageIndex\":7},{\"imageOffset\":42224,\"symbol\":\"mach_msg_overwrite\",\"symbolLocation\":476,\"imageIndex\":7},{\"imageOffset\":7224,\"symbol\":\"mach_msg\",\"symbolLocation\":24,\"imageIndex\":7},{\"imageOffset\":515748,\"symbol\":\"__CFRunLoopServiceMachPort\",\"symbolLocation\":160,\"imageIndex\":12},{\"imageOffset\":509804,\"symbol\":\"__CFRunLoopRun\",\"symbolLocation\":1208,\"imageIndex\":12},{\"imageOffset\":506972,\"symbol\":\"CFRunLoopRunSpecific\",\"symbolLocation\":608,\"imageIndex\":12},{\"imageOffset\":1022356,\"symbol\":\"CFRunLoopRun\",\"symbolLocation\":64,\"imageIndex\":12},{\"imageOffset\":873672,\"sourceLine\":723,\"sourceFile\":\"fsevents.c\",\"symbol\":\"uv__cf_loop_runner\",\"imageIndex\":6,\"symbolLocation\":88},{\"imageOffset\":28724,\"symbol\":\"_pthread_start\",\"symbolLocation\":136,\"imageIndex\":8},{\"imageOffset\":7740,\"symbol\":\"thread_start\",\"symbolLocation\":8,\"imageIndex\":8}],\"threadState\":{\"x\":[{\"value\":268451845},{\"value\":21592279046},{\"value\":8589934592},{\"value\":29699698851840},{\"value\":0},{\"value\":29699698851840},{\"value\":2},{\"value\":4294967295},{\"value\":18446744073709550527},{\"value\":6915},{\"value\":0},{\"value\":1},{\"value\":6915},{\"value\":124914},{\"value\":0},{\"value\":1099511627776},{\"value\":18446744073709551569},{\"value\":8275148848},{\"value\":0},{\"value\":4294967295},{\"value\":2},{\"value\":29699698851840},{\"value\":0},{\"value\":29699698851840},{\"value\":6130458680},{\"value\":8589934592},{\"value\":21592279046},{\"value\":21592279046},{\"value\":4412409862}],\"flavor\":\"ARM_THREAD_STATE64\",\"lr\":{\"value\":6679440688},\"cpsr\":{\"value\":4096},\"fp\":{\"value\":6130458528},\"sp\":{\"value\":6130458448},\"esr\":{\"value\":1442840704,\"description\":\" Address size fault\"},\"pc\":{\"value\":6679365812},\"far\":{\"value\":0}}},{\"id\":18082108,\"frames\":[{\"imageOffset\":20652,\"symbol\":\"__psynch_cvwait\",\"symbolLocation\":8,\"imageIndex\":7},{\"imageOffset\":30204,\"symbol\":\"_pthread_cond_wait\",\"symbolLocation\":1228,\"imageIndex\":8},{\"imageOffset\":854780,\"sourceLine\":798,\"sourceFile\":\"thread.c\",\"symbol\":\"uv_cond_wait\",\"imageIndex\":6,\"symbolLocation\":40},{\"imageOffset\":790792,\"sourceLine\":76,\"sourceFile\":\"threadpool.c\",\"symbol\":\"worker\",\"imageIndex\":6,\"symbolLocation\":116},{\"imageOffset\":28724,\"symbol\":\"_pthread_start\",\"symbolLocation\":136,\"imageIndex\":8},{\"imageOffset\":7740,\"symbol\":\"thread_start\",\"symbolLocation\":8,\"imageIndex\":8}],\"threadState\":{\"x\":[{\"value\":4},{\"value\":0},{\"value\":27904},{\"value\":0},{\"value\":0},{\"value\":160},{\"value\":0},{\"value\":0},{\"value\":6139473608},{\"value\":0},{\"value\":4350609104,\"symbolLocation\":24,\"symbol\":\"mutex\"},{\"value\":2},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":305},{\"value\":8275164504},{\"value\":0},{\"value\":4350609080,\"symbolLocation\":0,\"symbol\":\"mutex\"},{\"value\":4350609144,\"symbolLocation\":0,\"symbol\":\"cond\"},{\"value\":6139474144},{\"value\":0},{\"value\":0},{\"value\":27904},{\"value\":27904},{\"value\":28928},{\"value\":5140416736},{\"value\":4350609224,\"symbolLocation\":0,\"symbol\":\"wq\"}],\"flavor\":\"ARM_THREAD_STATE64\",\"lr\":{\"value\":6679631356},\"cpsr\":{\"value\":1610616832},\"fp\":{\"value\":6139473728},\"sp\":{\"value\":6139473584},\"esr\":{\"value\":1442840704,\"description\":\" Address size fault\"},\"pc\":{\"value\":6679380140},\"far\":{\"value\":0}}},{\"id\":18082109,\"frames\":[{\"imageOffset\":20652,\"symbol\":\"__psynch_cvwait\",\"symbolLocation\":8,\"imageIndex\":7},{\"imageOffset\":30204,\"symbol\":\"_pthread_cond_wait\",\"symbolLocation\":1228,\"imageIndex\":8},{\"imageOffset\":854780,\"sourceLine\":798,\"sourceFile\":\"thread.c\",\"symbol\":\"uv_cond_wait\",\"imageIndex\":6,\"symbolLocation\":40},{\"imageOffset\":790792,\"sourceLine\":76,\"sourceFile\":\"threadpool.c\",\"symbol\":\"worker\",\"imageIndex\":6,\"symbolLocation\":116},{\"imageOffset\":28724,\"symbol\":\"_pthread_start\",\"symbolLocation\":136,\"imageIndex\":8},{\"imageOffset\":7740,\"symbol\":\"thread_start\",\"symbolLocation\":8,\"imageIndex\":8}],\"threadState\":{\"x\":[{\"value\":4},{\"value\":0},{\"value\":27136},{\"value\":0},{\"value\":0},{\"value\":160},{\"value\":0},{\"value\":0},{\"value\":6147911368},{\"value\":0},{\"value\":4350609104,\"symbolLocation\":24,\"symbol\":\"mutex\"},{\"value\":2},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":305},{\"value\":8275164504},{\"value\":0},{\"value\":4350609080,\"symbolLocation\":0,\"symbol\":\"mutex\"},{\"value\":4350609144,\"symbolLocation\":0,\"symbol\":\"cond\"},{\"value\":6147911904},{\"value\":0},{\"value\":0},{\"value\":27136},{\"value\":27136},{\"value\":28160},{\"value\":5140409920},{\"value\":4350609224,\"symbolLocation\":0,\"symbol\":\"wq\"}],\"flavor\":\"ARM_THREAD_STATE64\",\"lr\":{\"value\":6679631356},\"cpsr\":{\"value\":1610616832},\"fp\":{\"value\":6147911488},\"sp\":{\"value\":6147911344},\"esr\":{\"value\":1442840704,\"description\":\" Address size fault\"},\"pc\":{\"value\":6679380140},\"far\":{\"value\":0}}},{\"id\":18082110,\"frames\":[{\"imageOffset\":20652,\"symbol\":\"__psynch_cvwait\",\"symbolLocation\":8,\"imageIndex\":7},{\"imageOffset\":30204,\"symbol\":\"_pthread_cond_wait\",\"symbolLocation\":1228,\"imageIndex\":8},{\"imageOffset\":854780,\"sourceLine\":798,\"sourceFile\":\"thread.c\",\"symbol\":\"uv_cond_wait\",\"imageIndex\":6,\"symbolLocation\":40},{\"imageOffset\":790792,\"sourceLine\":76,\"sourceFile\":\"threadpool.c\",\"symbol\":\"worker\",\"imageIndex\":6,\"symbolLocation\":116},{\"imageOffset\":28724,\"symbol\":\"_pthread_start\",\"symbolLocation\":136,\"imageIndex\":8},{\"imageOffset\":7740,\"symbol\":\"thread_start\",\"symbolLocation\":8,\"imageIndex\":8}],\"threadState\":{\"x\":[{\"value\":4},{\"value\":0},{\"value\":27392},{\"value\":0},{\"value\":0},{\"value\":160},{\"value\":0},{\"value\":0},{\"value\":6156349128},{\"value\":0},{\"value\":4350609104,\"symbolLocation\":24,\"symbol\":\"mutex\"},{\"value\":2},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":305},{\"value\":8275164504},{\"value\":0},{\"value\":4350609080,\"symbolLocation\":0,\"symbol\":\"mutex\"},{\"value\":4350609144,\"symbolLocation\":0,\"symbol\":\"cond\"},{\"value\":6156349664},{\"value\":0},{\"value\":0},{\"value\":27392},{\"value\":27392},{\"value\":28416},{\"value\":5167850640},{\"value\":4350609224,\"symbolLocation\":0,\"symbol\":\"wq\"}],\"flavor\":\"ARM_THREAD_STATE64\",\"lr\":{\"value\":6679631356},\"cpsr\":{\"value\":1610616832},\"fp\":{\"value\":6156349248},\"sp\":{\"value\":6156349104},\"esr\":{\"value\":1442840704,\"description\":\" Address size fault\"},\"pc\":{\"value\":6679380140},\"far\":{\"value\":0}}},{\"id\":18082111,\"frames\":[{\"imageOffset\":20652,\"symbol\":\"__psynch_cvwait\",\"symbolLocation\":8,\"imageIndex\":7},{\"imageOffset\":30204,\"symbol\":\"_pthread_cond_wait\",\"symbolLocation\":1228,\"imageIndex\":8},{\"imageOffset\":854780,\"sourceLine\":798,\"sourceFile\":\"thread.c\",\"symbol\":\"uv_cond_wait\",\"imageIndex\":6,\"symbolLocation\":40},{\"imageOffset\":790792,\"sourceLine\":76,\"sourceFile\":\"threadpool.c\",\"symbol\":\"worker\",\"imageIndex\":6,\"symbolLocation\":116},{\"imageOffset\":28724,\"symbol\":\"_pthread_start\",\"symbolLocation\":136,\"imageIndex\":8},{\"imageOffset\":7740,\"symbol\":\"thread_start\",\"symbolLocation\":8,\"imageIndex\":8}],\"threadState\":{\"x\":[{\"value\":260},{\"value\":0},{\"value\":27648},{\"value\":0},{\"value\":0},{\"value\":160},{\"value\":0},{\"value\":0},{\"value\":6164786888},{\"value\":0},{\"value\":4350609104,\"symbolLocation\":24,\"symbol\":\"mutex\"},{\"value\":2},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":305},{\"value\":8275164504},{\"value\":0},{\"value\":4350609080,\"symbolLocation\":0,\"symbol\":\"mutex\"},{\"value\":4350609144,\"symbolLocation\":0,\"symbol\":\"cond\"},{\"value\":6164787424},{\"value\":0},{\"value\":0},{\"value\":27648},{\"value\":27648},{\"value\":28672},{\"value\":5168530944},{\"value\":4350609224,\"symbolLocation\":0,\"symbol\":\"wq\"}],\"flavor\":\"ARM_THREAD_STATE64\",\"lr\":{\"value\":6679631356},\"cpsr\":{\"value\":1610616832},\"fp\":{\"value\":6164787008},\"sp\":{\"value\":6164786864},\"esr\":{\"value\":1442840704,\"description\":\" Address size fault\"},\"pc\":{\"value\":6679380140},\"far\":{\"value\":0}}},{\"id\":18241450,\"frames\":[{\"imageOffset\":7720,\"symbol\":\"start_wqthread\",\"symbolLocation\":0,\"imageIndex\":8}],\"threadState\":{\"x\":[{\"value\":6131036160},{\"value\":9239},{\"value\":6130499584},{\"value\":0},{\"value\":409604},{\"value\":18446744073709551615},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0},{\"value\":0}],\"flavor\":\"ARM_THREAD_STATE64\",\"lr\":{\"value\":0},\"cpsr\":{\"value\":4096},\"fp\":{\"value\":0},\"sp\":{\"value\":6131036160},\"esr\":{\"value\":1442840704,\"description\":\" Address size fault\"},\"pc\":{\"value\":6679608872},\"far\":{\"value\":0}}}],\r\n```",
            "created_at": "2024-04-16T18:46:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2059724947",
            "id": 2059724947,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM56xOiT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2059724947/reactions"
            },
            "updated_at": "2025-04-10T22:33:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2059724947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3860298?v=4",
                "events_url": "https://api.github.com/users/marcoSven/events{/privacy}",
                "followers_url": "https://api.github.com/users/marcoSven/followers",
                "following_url": "https://api.github.com/users/marcoSven/following{/other_user}",
                "gists_url": "https://api.github.com/users/marcoSven/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/marcoSven",
                "id": 3860298,
                "login": "marcoSven",
                "node_id": "MDQ6VXNlcjM4NjAyOTg=",
                "organizations_url": "https://api.github.com/users/marcoSven/orgs",
                "received_events_url": "https://api.github.com/users/marcoSven/received_events",
                "repos_url": "https://api.github.com/users/marcoSven/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/marcoSven/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/marcoSven/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/marcoSven",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "commit: 4f9311b759fff0371433fb5b5355fccb001d54e7\n\n```\nnvim: /home/chiller/.config/crools/crackman/src/neovim/src/nvim/marktree.c:375: unintersect_node: Assertion `seen' failed. \n```\n\nNo idea how to reproduce. But it happens from time to time. My config is [kickstart.nvim](https://github.com/nvim-lua/kickstart.nvim) with minimal changes. I would love to help here. Not sure how exactly. To get a more useful backtrace I have to run neovim with gdb? Or what can I do here to help debug this?",
            "created_at": "2024-10-26T05:47:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2439367820",
            "id": 2439367820,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6RZcyM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439367820/reactions"
            },
            "updated_at": "2024-10-26T05:47:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439367820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20344300?v=4",
                "events_url": "https://api.github.com/users/ChillerDragon/events{/privacy}",
                "followers_url": "https://api.github.com/users/ChillerDragon/followers",
                "following_url": "https://api.github.com/users/ChillerDragon/following{/other_user}",
                "gists_url": "https://api.github.com/users/ChillerDragon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ChillerDragon",
                "id": 20344300,
                "login": "ChillerDragon",
                "node_id": "MDQ6VXNlcjIwMzQ0MzAw",
                "organizations_url": "https://api.github.com/users/ChillerDragon/orgs",
                "received_events_url": "https://api.github.com/users/ChillerDragon/received_events",
                "repos_url": "https://api.github.com/users/ChillerDragon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ChillerDragon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ChillerDragon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ChillerDragon",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just got this error as well using LazyVim in WSL: ``nvim: ./src/nvim/marktree.c:375: unintersect_node: Assertion `seen' failed.``\n\nVersion info:\n```\nNVIM v0.11.0-dev\nBuild type: RelWithDebInfo\nLuaJIT 2.1.0-beta3\nCompilation: /usr/bin/cc -g -O2 -ffile-prefix-map=/build/neovim-QZdE9y/neovim-0.10.0~ubuntu1+git202410251104-e4a74e986c-971e32c878=. -flto=auto -ffat-lto-objects -flto=auto -ffat-lto-objects -fstack-protector-strong -Wformat -Werror=format-security -O2 -g -Og -g -flto -fno-fat-lto-objects -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wvla -Wdouble-promotion -Wmissing-noreturn -Wmissing-format-attribute -Wmissing-prototypes -fsigned-char -fstack-protector-strong -Wno-conversion -fno-common -Wno-unused-result -Wimplicit-fallthrough -fdiagnostics-color=auto  -DUNIT_TESTING -D_GNU_SOURCE -DINCLUDE_GENERATED_DECLARATIONS -DUTF8PROC_STATIC -I/usr/include/luajit-2.1 -I/build/neovim-QZdE9y/neovim-0.10.0~ubuntu1+git202410251104-e4a74e986c-971e32c878/.deps/usr/include -I/build/neovim-QZdE9y/neovim-0.10.0~ubuntu1+git202410251104-e4a74e986c-971e32c878/build/src/nvim/auto -I/build/neovim-QZdE9y/neovim-0.10.0~ubuntu1+git202410251104-e4a74e986c-971e32c878/build/include -I/build/neovim-QZdE9y/neovim-0.10.0~ubuntu1+git202410251104-e4a74e986c-971e32c878/build/cmake.config -I/build/neovim-QZdE9y/neovim-0.10.0~ubuntu1+git202410251104-e4a74e986c-971e32c878/src -I/usr/include \n\n```\n\nI got the error when trying to use `:w` on a Rust file. I happened to reopen the file immediately after and try to recover my one-line edit, but it was not recoverable. After making the exact same changes in the exact same way, I was able to reproduce the error. However, after using `:w` in a few places on the line instead of writing the whole edit in insert mode first, the error went away and I am no longer able to reproduce it.",
            "created_at": "2024-10-31T05:50:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2449053371",
            "id": 2449053371,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6R-Za7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449053371/reactions"
            },
            "updated_at": "2024-10-31T22:36:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449053371",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/58706544?v=4",
                "events_url": "https://api.github.com/users/Pstock7/events{/privacy}",
                "followers_url": "https://api.github.com/users/Pstock7/followers",
                "following_url": "https://api.github.com/users/Pstock7/following{/other_user}",
                "gists_url": "https://api.github.com/users/Pstock7/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Pstock7",
                "id": 58706544,
                "login": "Pstock7",
                "node_id": "MDQ6VXNlcjU4NzA2NTQ0",
                "organizations_url": "https://api.github.com/users/Pstock7/orgs",
                "received_events_url": "https://api.github.com/users/Pstock7/received_events",
                "repos_url": "https://api.github.com/users/Pstock7/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Pstock7/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Pstock7/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Pstock7",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "```\nNVIM v0.11.0-dev\nBuild type: RelWithDebInfo\nLuaJIT 2.1.0-beta3\nCompilation: /usr/bin/cc -g -O2 -ffile-prefix-map=/build/neovim-DLGqnJ/neovim-0.10.0~ubuntu1+git202410121141-45f8f957c0-971e32c878=. -flto=auto -ffat-lto-objects -flto=auto -ffat-lto-objects -fstack-protector-strong -Wformat -Werror=format-security -O2 -g -Og -g -flto -fno-fat-lto-objects -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wvla -Wdouble-promotion -Wmissing-noreturn -Wmissing-format-attribute -Wmissing-prototypes -fsigned-char -fstack-protector-strong -Wno-conversion -fno-common -Wno-unused-result -Wimplicit-fallthrough -fdiagnostics-color=auto  -DUNIT_TESTING -D_GNU_SOURCE -DINCLUDE_GENERATED_DECLARATIONS -DUTF8PROC_STATIC -I/usr/include/luajit-2.1 -I/build/neovim-DLGqnJ/neovim-0.10.0~ubuntu1+git202410121141-45f8f957c0-971e32c878/.deps/usr/include -I/build/neovim-DLGqnJ/neovim-0.10.0~ubuntu1+git202410121141-45f8f957c0-971e32c878/build/src/nvim/auto -I/build/neovim-DLGqnJ/neovim-0.10.0~ubuntu1+git202410121141-45f8f957c0-971e32c878/build/include -I/build/neovim-DLGqnJ/neovim-0.10.0~ubuntu1+git202410121141-45f8f957c0-971e32c878/build/cmake.config -I/build/neovim-DLGqnJ/neovim-0.10.0~ubuntu1+git202410121141-45f8f957c0-971e32c878/src -I/usr/include\n\n   system vimrc file: \"$VIM/sysinit.vim\"\n  fall-back for $VIM: \"/usr/share/nvim\"\n\n```\n\n```\nERROR: apport (pid 317530) Sat Nov  2 12:21:59 2024: called for pid 304798, signal 6, core limit 0, dump mode 1\nERROR: apport (pid 317530) Sat Nov  2 12:21:59 2024: executable: /usr/bin/nvim (command line \"nvim --embed .\")\nERROR: apport (pid 317530) Sat Nov  2 12:22:00 2024: gdbus call error: Error: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.gnome.SessionManager was not provided by any .service files\n\nERROR: apport (pid 317530) Sat Nov  2 12:22:00 2024: debug: session gdbus call:\nERROR: apport (pid 317530) Sat Nov  2 12:22:01 2024: wrote report /var/crash/_usr_bin_nvim.1000.crash\nERROR: apport (pid 318994) Sat Nov  2 12:22:29 2024: called for pid 317736, signal 6, core limit 0, dump mode 1\nERROR: apport (pid 318994) Sat Nov  2 12:22:29 2024: executable: /usr/bin/nvim (command line \"nvim --embed .\")\nERROR: apport (pid 318994) Sat Nov  2 12:22:30 2024: gdbus call error: Error: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.gnome.SessionManager was not provided by any .service files\n\nERROR: apport (pid 318994) Sat Nov  2 12:22:30 2024: debug: session gdbus call:\nERROR: apport (pid 318994) Sat Nov  2 12:22:30 2024: apport: report /var/crash/_usr_bin_nvim.1000.crash already exists and unseen, skipping to avoid disk usage DoS\nERROR: apport (pid 457586) Sat Nov  2 14:11:32 2024: called for pid 449405, signal 6, core limit 0, dump mode 1\nERROR: apport (pid 457586) Sat Nov  2 14:11:32 2024: executable: /usr/bin/nvim (command line \"nvim --embed .\")\nERROR: apport (pid 457586) Sat Nov  2 14:11:33 2024: gdbus call error: Error: GDBus.Error:org.freedesktop.DBus.Error.ServiceUnknown: The name org.gnome.SessionManager was not provided by any .service files\n\nERROR: apport (pid 457586) Sat Nov  2 14:11:33 2024: debug: session gdbus call:\nERROR: apport (pid 457586) Sat Nov  2 14:11:33 2024: apport: report /var/crash/_usr_bin_nvim.1000.crash already exists and unseen, skipping to avoid disk usage DoS\n```",
            "created_at": "2024-11-02T14:23:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2453007067",
            "id": 2453007067,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6SNerb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453007067/reactions"
            },
            "updated_at": "2024-11-02T14:23:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453007067",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44904160?v=4",
                "events_url": "https://api.github.com/users/buhaytza2005/events{/privacy}",
                "followers_url": "https://api.github.com/users/buhaytza2005/followers",
                "following_url": "https://api.github.com/users/buhaytza2005/following{/other_user}",
                "gists_url": "https://api.github.com/users/buhaytza2005/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/buhaytza2005",
                "id": 44904160,
                "login": "buhaytza2005",
                "node_id": "MDQ6VXNlcjQ0OTA0MTYw",
                "organizations_url": "https://api.github.com/users/buhaytza2005/orgs",
                "received_events_url": "https://api.github.com/users/buhaytza2005/received_events",
                "repos_url": "https://api.github.com/users/buhaytza2005/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/buhaytza2005/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/buhaytza2005/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/buhaytza2005",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nothing indicates that is the same problem as the error provides no information.",
            "created_at": "2024-11-02T15:11:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2453019242",
            "id": 2453019242,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6SNhpq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453019242/reactions"
            },
            "updated_at": "2024-11-02T15:11:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453019242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "My bad, forgot to actually screenshot it. The message I got was the same as everyone else: `unintersect_node: Assertion `seen' failed.`. It happened a few times in the last weeks but always at work so too busy to report. It always seems to happen in Rust files.\n\nThere is nothing at that timestamp in the LspLog. Looking at messages I can see the below:\n\n![Image](https://github.com/user-attachments/assets/0a23f05e-d592-4e05-925c-b8dd8bcef51f)\n\nI can upload the `/var/crash/_usr_bin_nvim.1000.crash` if that would be any help?\n\nLet me know if there's anything else that I could do to provide more information.\n",
            "created_at": "2024-11-02T15:26:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2453022886",
            "id": 2453022886,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6SNiim",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453022886/reactions"
            },
            "updated_at": "2024-11-02T15:26:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453022886",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44904160?v=4",
                "events_url": "https://api.github.com/users/buhaytza2005/events{/privacy}",
                "followers_url": "https://api.github.com/users/buhaytza2005/followers",
                "following_url": "https://api.github.com/users/buhaytza2005/following{/other_user}",
                "gists_url": "https://api.github.com/users/buhaytza2005/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/buhaytza2005",
                "id": 44904160,
                "login": "buhaytza2005",
                "node_id": "MDQ6VXNlcjQ0OTA0MTYw",
                "organizations_url": "https://api.github.com/users/buhaytza2005/orgs",
                "received_events_url": "https://api.github.com/users/buhaytza2005/received_events",
                "repos_url": "https://api.github.com/users/buhaytza2005/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/buhaytza2005/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/buhaytza2005/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/buhaytza2005",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I could consistently reproduce by recovering from swap file and redoing the same motions. But then I recompiled neovim and can no longer do it. Next time I can reproduce it what should I do? I did not see the marktree assert anymore at some point but it should be the same issue. It happend when I deleted a word from the beginning using ``dw``",
            "created_at": "2024-11-04T08:47:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2454119276",
            "id": 2454119276,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6SRuNs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454119276/reactions"
            },
            "updated_at": "2025-01-02T02:24:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454119276",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20344300?v=4",
                "events_url": "https://api.github.com/users/ChillerDragon/events{/privacy}",
                "followers_url": "https://api.github.com/users/ChillerDragon/followers",
                "following_url": "https://api.github.com/users/ChillerDragon/following{/other_user}",
                "gists_url": "https://api.github.com/users/ChillerDragon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ChillerDragon",
                "id": 20344300,
                "login": "ChillerDragon",
                "node_id": "MDQ6VXNlcjIwMzQ0MzAw",
                "organizations_url": "https://api.github.com/users/ChillerDragon/orgs",
                "received_events_url": "https://api.github.com/users/ChillerDragon/received_events",
                "repos_url": "https://api.github.com/users/ChillerDragon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ChillerDragon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ChillerDragon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ChillerDragon",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Updated backtraces are somewhat useful. Otherwise, what's needed is a reliable way to reproduce the issue. I know that's a lot to ask for, but that's what maintainers require. Only one bfredl understands the related code here, so if another maintainer (or anyone) volunteers to debug this, then they need a way to reproduce it.\n\nThis goes for all issues btw.",
            "created_at": "2024-11-04T08:53:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2454130588",
            "id": 2454130588,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6SRw-c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454130588/reactions"
            },
            "updated_at": "2024-11-04T08:53:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454130588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just got this crash (or a similar one), running nvim master branch (c7ec010ade0832e43c7a319ea69fae642771479d) and nvim-treesitter (679883ad31f1752cac92a4ca182cee8b2751d4f1). Maybe this backtrace is useful\n\n```           PID: 4758 (nvim)\n           UID: 1000 (stephan)\n           GID: 1000 (stephan)\n        Signal: 6 (ABRT)\n     Timestamp: Sat 2024-12-07 14:31:01 CET (3min 57s ago)\n  Command Line: nvim --embed\n    Executable: /usr/local/bin/nvim\n Control Group: /user.slice/user-1000.slice/user@1000.service/app.slice/kitty-3554-0.scope\n          Unit: user@1000.service\n     User Unit: kitty-3554-0.scope\n         Slice: user-1000.slice\n     Owner UID: 1000 (stephan)\n       Boot ID: 0e5694d57f994b9e8e6d741650915e7a\n    Machine ID: 4a1a7109cc85436db846372ec2d8ae2b\n      Hostname: fedora\n       Storage: /var/lib/systemd/coredump/core.nvim.1000.0e5694d57f994b9e8e6d741650915e7a.4758.1733578261000000.zst (present)\n  Size on Disk: 7.4M\n       Message: Process 4758 (nvim) of user 1000 dumped core.\n                \n                Module /home/stephan/.local/share/nvim/lazy/nvim-treesitter/parser/markdown_inline.so without build-id.\n                Module /home/stephan/.local/share/nvim/lazy/nvim-treesitter/parser/markdown_inline.so\n                Module /home/stephan/.local/share/nvim/lazy/nvim-treesitter/parser/markdown.so without build-id.\n                Module /home/stephan/.local/share/nvim/lazy/nvim-treesitter/parser/markdown.so\n                Module /home/stephan/.local/share/nvim/lazy/nvim-treesitter/parser/rust.so without build-id.\n                Module /home/stephan/.local/share/nvim/lazy/nvim-treesitter/parser/rust.so\n                Stack trace of thread 4758:\n                #0  0x00007f65ff4dac94 __pthread_kill_implementation (libc.so.6 + 0x72c94)\n                #1  0x00007f65ff481d1e raise (libc.so.6 + 0x19d1e)\n                #2  0x00007f65ff469942 abort (libc.so.6 + 0x1942)\n                #3  0x00007f65ff46985e __assert_fail_base.cold (libc.so.6 + 0x185e)\n                #4  0x00007f65ff479e47 __assert_fail (libc.so.6 + 0x11e47)\n                #5  0x0000000000544c2c unintersect_node (nvim + 0x144c2c)\n                #6  0x0000000000547699 marktree_intersect_pair (nvim + 0x147699)\n                #7  0x00000000005515ff marktree_splice (nvim + 0x1515ff)\n                #8  0x00000000004e2c56 extmark_splice_impl (nvim + 0xe2c56)\n                #9  0x00000000004e32ab extmark_apply_undo (nvim + 0xe32ab)\n                #10 0x0000000000651cbc u_undoredo (nvim + 0x251cbc)\n                #11 0x0000000000652583 u_doit (nvim + 0x252583)\n                #12 0x0000000000652612 u_undo (nvim + 0x252612)\n                #13 0x000000000057d110 nv_kundo (nvim + 0x17d110)\n                #14 0x000000000058051c nv_undo (nvim + 0x18051c)\n                #15 0x000000000057a8ca normal_execute (nvim + 0x17a8ca)\n                #16 0x000000000061829e state_enter (nvim + 0x21829e)\n                #17 0x0000000000577d84 normal_enter (nvim + 0x177d84)\n                #18 0x000000000053a49d main (nvim + 0x13a49d)\n                #19 0x00007f65ff46b248 __libc_start_call_main (libc.so.6 + 0x3248)\n                #20 0x00007f65ff46b30b __libc_start_main@@GLIBC_2.34 (libc.so.6 + 0x330b)\n                #21 0x0000000000402855 _start (nvim + 0x2855)\n                ELF object binary architecture: AMD x86-64```",
            "created_at": "2024-12-07T13:50:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2525142872",
            "id": 2525142872,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6Wgp9Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2525142872/reactions"
            },
            "updated_at": "2025-04-10T22:32:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2525142872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14291421?v=4",
                "events_url": "https://api.github.com/users/stephanmeesters/events{/privacy}",
                "followers_url": "https://api.github.com/users/stephanmeesters/followers",
                "following_url": "https://api.github.com/users/stephanmeesters/following{/other_user}",
                "gists_url": "https://api.github.com/users/stephanmeesters/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stephanmeesters",
                "id": 14291421,
                "login": "stephanmeesters",
                "node_id": "MDQ6VXNlcjE0MjkxNDIx",
                "organizations_url": "https://api.github.com/users/stephanmeesters/orgs",
                "received_events_url": "https://api.github.com/users/stephanmeesters/received_events",
                "repos_url": "https://api.github.com/users/stephanmeesters/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stephanmeesters/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stephanmeesters/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stephanmeesters",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm getting these crashes constantly throughout the year. Seems correlated with speed of my typing, so maybe some sort of race condition? ",
            "created_at": "2025-01-02T02:14:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2567228273",
            "id": 2567228273,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6ZBMtx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2567228273/reactions"
            },
            "updated_at": "2025-01-02T02:14:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2567228273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35433062?v=4",
                "events_url": "https://api.github.com/users/TpouHuK/events{/privacy}",
                "followers_url": "https://api.github.com/users/TpouHuK/followers",
                "following_url": "https://api.github.com/users/TpouHuK/following{/other_user}",
                "gists_url": "https://api.github.com/users/TpouHuK/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TpouHuK",
                "id": 35433062,
                "login": "TpouHuK",
                "node_id": "MDQ6VXNlcjM1NDMzMDYy",
                "organizations_url": "https://api.github.com/users/TpouHuK/orgs",
                "received_events_url": "https://api.github.com/users/TpouHuK/received_events",
                "repos_url": "https://api.github.com/users/TpouHuK/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TpouHuK/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TpouHuK/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TpouHuK",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I just ran into this issue using the Fedora 41 neovim package.\nI was trying to do an LSP format at the time.\n\n```\n           PID: 116319 (nvim)\n           UID: 1000 (sam)\n           GID: 1000 (sam)\n        Signal: 6 (ABRT)\n     Timestamp: Thu 2025-01-09 14:33:21 AEDT (4min 27s ago)\n  Command Line: nvim --embed frontend/src/routes\n    Executable: /usr/bin/nvim\n Control Group: /user.slice/user-1000.slice/session-7.scope\n          Unit: session-7.scope\n         Slice: user-1000.slice\n       Session: 7\n     Owner UID: 1000 (sam)\n       Boot ID: fbf14a44cd324f7fb89f9ca15569fff5\n    Machine ID: 489e131a47684cb6ae0ab7bae34265d0\n      Hostname: hal\n       Storage: /var/lib/systemd/coredump/core.nvim.1000.fbf14a44cd324f7fb89f9ca15569fff5.116319.1736393601000000.zst (present)\n  Size on Disk: 20.9M\n       Package: neovim/0.10.2-1.fc41\n      build-id: 5bfaf256ea46b0706749ac3b28fec72bd0c7dbd4\n       Message: Process 116319 (nvim) of user 1000 dumped core.\n                \n                Module libuv.so.1 from rpm libuv-1.49.2-1.fc41.x86_64\n                Module libluajit-5.1.so.2 from rpm luajit-2.1.1720049189-1.fc41.x86_64\n                Module libunibilium.so.4 from rpm unibilium-2.1.1-8.fc41.x86_64\n                Module libtree-sitter.so.0.23 from rpm tree-sitter-0.23.0-2.fc41.x86_64\n                Module libmsgpackc.so.2 from rpm msgpack-3.1.0-16.fc41.x86_64\n                Module lpeg.so from rpm lua-lpeg-1.1.0-2.fc41.x86_64\n                Module libvterm.so.0 from rpm libvterm-0.3.3-4.fc41.x86_64\n                Module libluv.so.1 from rpm lua-luv-1.48.0.2-2.fc41.x86_64\n                Module nvim from rpm neovim-0.10.2-1.fc41.x86_64\n                Stack trace of thread 116319:\n                #0  0x00007f59304510f4 __pthread_kill_implementation (libc.so.6 + 0x730f4)\n                #1  0x00007f59303f7fde raise (libc.so.6 + 0x19fde)\n                #2  0x00007f59303df942 abort (libc.so.6 + 0x1942)\n                #3  0x00007f59303df85e __assert_fail_base.cold (libc.so.6 + 0x185e)\n                #4  0x00007f59303f0107 __assert_fail (libc.so.6 + 0x12107)\n                #5  0x0000560352899f3b unintersect_node (nvim + 0x156f3b)\n                #6  0x000056035289ca0c marktree_intersect_pair (nvim + 0x159a0c)\n                #7  0x00005603528aa92f marktree_splice (nvim + 0x16792f)\n                #8  0x0000560352834748 extmark_splice_impl (nvim + 0xf1748)\n                #9  0x0000560352834ad7 extmark_splice (nvim + 0xf1ad7)\n                #10 0x000056035274ccca nvim_buf_set_text (nvim + 0x9cca)\n                #11 0x00005603528695c0 nlua_api_nvim_buf_set_text.lto_priv.0 (nvim + 0x1265c0)\n                #12 0x00007f59306f3a8b lj_BC_FUNCC (libluajit-5.1.so.2 + 0x3a8b)\n                #13 0x00007f5930707ba9 lua_pcall (libluajit-5.1.so.2 + 0x17ba9)\n                #14 0x000056035287bb3a nlua_pcall (nvim + 0x138b3a)\n                #15 0x00005603528838e8 nlua_schedule_event (nvim + 0x1408e8)\n                #16 0x0000560352979b51 state_handle_k_event (nvim + 0x236b51)\n                #17 0x00005603528d73cc nv_event.lto_priv.0 (nvim + 0x1943cc)\n                #18 0x00005603528d056f normal_execute.lto_priv.0 (nvim + 0x18d56f)\n                #19 0x0000560352979a1d state_enter (nvim + 0x236a1d)\n                #20 0x00005603528cf11f normal_enter (nvim + 0x18c11f)\n                #21 0x000056035288f6c1 main (nvim + 0x14c6c1)\n                #22 0x00007f59303e1248 __libc_start_call_main (libc.so.6 + 0x3248)\n                #23 0x00007f59303e130b __libc_start_main@@GLIBC_2.34 (libc.so.6 + 0x330b)\n                #24 0x0000560352747a25 _start (nvim + 0x4a25)\n                \n                Stack trace of thread 116321:\n                #0  0x00007f593044b7e9 __futex_abstimed_wait_common (libc.so.6 + 0x6d7e9)\n                #1  0x00007f593044e239 pthread_cond_wait@@GLIBC_2.3.2 (libc.so.6 + 0x70239)\n                #2  0x00007f59305ede7d uv_cond_wait (libuv.so.1 + 0x1be7d)\n                #3  0x00007f59305e07a6 worker (libuv.so.1 + 0xe7a6)\n                #4  0x00007f593044f148 start_thread (libc.so.6 + 0x71148)\n                #5  0x00007f59304d30cc __clone3 (libc.so.6 + 0xf50cc)\n                \n                Stack trace of thread 116322:\n                #0  0x00007f593044b7e9 __futex_abstimed_wait_common (libc.so.6 + 0x6d7e9)\n                #1  0x00007f593044e239 pthread_cond_wait@@GLIBC_2.3.2 (libc.so.6 + 0x70239)\n                #2  0x00007f59305ede7d uv_cond_wait (libuv.so.1 + 0x1be7d)\n                #3  0x00007f59305e07a6 worker (libuv.so.1 + 0xe7a6)\n                #4  0x00007f593044f148 start_thread (libc.so.6 + 0x71148)\n                #5  0x00007f59304d30cc __clone3 (libc.so.6 + 0xf50cc)\n                \n                Stack trace of thread 116324:\n                #0  0x00007f593044b7e9 __futex_abstimed_wait_common (libc.so.6 + 0x6d7e9)\n                #1  0x00007f593044e239 pthread_cond_wait@@GLIBC_2.3.2 (libc.so.6 + 0x70239)\n                #2  0x00007f59305ede7d uv_cond_wait (libuv.so.1 + 0x1be7d)\n                #3  0x00007f59305e07a6 worker (libuv.so.1 + 0xe7a6)\n                #4  0x00007f593044f148 start_thread (libc.so.6 + 0x71148)\n                #5  0x00007f59304d30cc __clone3 (libc.so.6 + 0xf50cc)\n                \n                Stack trace of thread 116323:\n                #0  0x00007f593044b7e9 __futex_abstimed_wait_common (libc.so.6 + 0x6d7e9)\n                #1  0x00007f593044e239 pthread_cond_wait@@GLIBC_2.3.2 (libc.so.6 + 0x70239)\n                #2  0x00007f59305ede7d uv_cond_wait (libuv.so.1 + 0x1be7d)\n                #3  0x00007f59305e07a6 worker (libuv.so.1 + 0xe7a6)\n                #4  0x00007f593044f148 start_thread (libc.so.6 + 0x71148)\n                #5  0x00007f59304d30cc __clone3 (libc.so.6 + 0xf50cc)\n                ELF object binary architecture: AMD x86-64\n```",
            "created_at": "2025-01-09T03:46:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2579125712",
            "id": 2579125712,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6ZulXQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2579125712/reactions"
            },
            "updated_at": "2025-04-10T22:32:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2579125712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1115625?v=4",
                "events_url": "https://api.github.com/users/bashtoni/events{/privacy}",
                "followers_url": "https://api.github.com/users/bashtoni/followers",
                "following_url": "https://api.github.com/users/bashtoni/following{/other_user}",
                "gists_url": "https://api.github.com/users/bashtoni/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bashtoni",
                "id": 1115625,
                "login": "bashtoni",
                "node_id": "MDQ6VXNlcjExMTU2MjU=",
                "organizations_url": "https://api.github.com/users/bashtoni/orgs",
                "received_events_url": "https://api.github.com/users/bashtoni/received_events",
                "repos_url": "https://api.github.com/users/bashtoni/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bashtoni/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bashtoni/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bashtoni",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "same backtrace on my side too on Fedora FC41, difficult to reproduce, maybe during an auto formatting pass (autcomd in the backtrace)\n\n```\n> nvim -v\nNVIM v0.10.2\nBuild type: RelWithDebInfo\nLuaJIT 2.1.1720049189\n\n```\n\nGDB backtrace\n```\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44\n44            return INTERNAL_SYSCALL_ERROR_P (ret) ? INTERNAL_SYSCALL_ERRNO (ret) : 0;\n[Current thread is 1 (Thread 0x7f7ffbb49740 (LWP 196228))]\n(gdb) bt\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44\n#1  0x00007f7ffbbf0163 in __pthread_kill_internal (threadid=<optimized out>, signo=6) at pthread_kill.c:78\n#2  0x00007f7ffbb96fde in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\n#3  0x00007f7ffbb7e942 in __GI_abort () at abort.c:79\n#4  0x00007f7ffbb7e85e in __assert_fail_base (fmt=0x7f7ffbd33cf0 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x564b8d60fe5d \"seen\",\n    file=file@entry=0x564b8d631108 \"/builddir/build/BUILD/neovim-0.10.2-build/neovim-0.10.2/src/nvim/marktree.c\", line=line@entry=375,\n    function=function@entry=0x564b8d667390 <__PRETTY_FUNCTION__.19> \"unintersect_node\") at assert.c:94\n#5  0x00007f7ffbb8f107 in __assert_fail (assertion=assertion@entry=0x564b8d60fe5d \"seen\", file=file@entry=0x564b8d631108 \"/builddir/build/BUILD/neovim-0.10.2-build/neovim-0.10.2/src/nvim/marktree.c\",\n    line=line@entry=375, function=function@entry=0x564b8d667390 <__PRETTY_FUNCTION__.19> \"unintersect_node\") at assert.c:103\n#6  0x0000564b8d46bf3b in unintersect_node (b=b@entry=0x564bad274920, x=0x564bad502450, id=id@entry=326417514508, strict=strict@entry=true) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/marktree.c:375\n#7  0x0000564b8d46ea0c in marktree_intersect_pair (b=b@entry=0x564bad274920, id=id@entry=326417514508, itr=itr@entry=0x7ffd39e3b890, end_itr=end_itr@entry=0x7ffd39e3b7b0, delete=delete@entry=true)\n    at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/marktree.c:427\n#8  0x0000564b8d477013 in marktree_del_itr (b=0x564bad274920, itr=0x7ffd39e3bb00, rev=false) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/marktree.c:560\n#9  0x0000564b8d404e0b in extmark_del (buf=buf@entry=0x564bad271980, itr=itr@entry=0x7ffd39e3bb00, key=..., restore=restore@entry=true) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/extmark.c:169\n#10 0x0000564b8d405c38 in extmark_clear (buf=0x564bad271980, ns_id=38, l_row=<optimized out>, l_col=<optimized out>, u_row=2147483646, u_col=2147483647)\n    at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/extmark.c:225\n#11 0x0000564b8d3262dd in nvim_buf_clear_namespace (buffer=<optimized out>, ns_id=38, line_start=0, line_end=2147483647, err=0x7ffd39e3bc50)\n    at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/api/extmark.c:989\n#12 0x0000564b8d4417b3 in nlua_api_nvim_buf_clear_namespace (lstate=0x7f7ffbfc2380) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/redhat-linux-build/src/nvim/auto/lua_api_c_bindings.generated.h:3299\n#13 0x00007f7ffbe92a8b in lj_BC_FUNCC () at buildvm_x86.dasc:859\n#14 0x00007f7ffbea6ba9 in lua_pcall (L=L@entry=0x7f7ffbfc2380, nargs=nargs@entry=1, nresults=nresults@entry=1, errfunc=errfunc@entry=-3) at /usr/src/debug/luajit-2.1.1720049189-1.fc41.x86_64/src/lj_api.c:1122\n#15 0x0000564b8d44db3a in nlua_pcall (lstate=0x7f7ffbfc2380, nargs=1, nresults=1) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/lua/executor.c:173\n#16 0x0000564b8d45b45a in nlua_call_ref (ref=<optimized out>, name=<optimized out>, args=..., mode=kRetNilBool, arena=0x0, err=0x0) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/lua/executor.c:1606\n#17 0x0000564b8d35233d in call_autocmd_callback (ac=ac@entry=0x564bacd3a710, apc=apc@entry=0x7ffd39e3c740) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/autocmd.c:2042\n#18 0x0000564b8d35454b in getnextac (c=<optimized out>, cookie=0x7ffd39e3c740, indent=<optimized out>, do_concat=<optimized out>) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/autocmd.c:2093\n#19 0x0000564b8d3e9a07 in do_cmdline (cmdline=<optimized out>, fgetline=0x564b8d35439c <getnextac>, cookie=0x7ffd39e3c740, flags=7) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/ex_docmd.c:578\n#20 0x0000564b8d353054 in apply_autocmds_group (event=EVENT_TEXTCHANGED, fname=<optimized out>, fname_io=<optimized out>, force=<optimized out>, group=group@entry=-3, buf=0x564bad271980, eap=0x0, data=0x0)\n    at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/autocmd.c:1827\n#21 0x0000564b8d35370c in apply_autocmds (event=<optimized out>, fname=<optimized out>, fname_io=<optimized out>, force=<optimized out>, buf=<optimized out>)\n    at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/autocmd.c:1498\n#22 0x0000564b8d4a278f in normal_check_text_changed (s=s@entry=0x7ffd39e3c8b0) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/normal.c:1303\n#23 0x0000564b8d4a2a80 in normal_check (state=0x7ffd39e3c8b0) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/normal.c:1434\n#24 0x0000564b8d54b9eb in state_enter (s=0x7ffd39e3c8b0) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/state.c:40\n#25 0x0000564b8d4a111f in normal_enter (cmdwin=false, noexmode=false) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/normal.c:518\n#26 0x0000564b8d4616c1 in main (argc=2, argv=<optimized out>) at /usr/src/debug/neovim-0.10.2-1.fc41.x86_64/src/nvim/main.c:662\n\n```\n\nValue of intersect : \n```\n(gdb) p x->intersect\n\n$11 = {size = 0, capacity = 4, items = 0x564bad502470, init_array = {0, 0, 0, 0}}\n\n```\n\nANALYSIS : \n\nI am not familiar with the code, but since intersect.size == 0, we won't be in the for loop.\n\nIt looks that having seen false is valid since having intersect.size == 0 looks valid ( since it happens )\nhence I do not quite understand why we have an assert in release here  ? As you see below the case where seen is false is managed by a if. \n\nI will be in favor to remove it.\n\nfor ref in marktree.c\n```\nstatic void unintersect_node(MarkTree *b, MTNode *x, uint64_t id, bool strict)\n{\n  assert(!(id & MARKTREE_END_FLAG));\n  bool seen = false;\n  size_t i;\n  for (i = 0; i < kv_size(x->intersect); i++) { // x->intersect.size == 0 as show in gdb\n    if (kv_A(x->intersect, i) < id) {\n      continue;\n    } else if (kv_A(x->intersect, i) == id) {\n      seen = true;\n      break;\n    } else {  // (kv_A(x->intersect, i) > id)\n      break;\n    }\n  }\n  if (strict) {\n    assert(seen);  // => crash here , assert is enabled in release, I will be in favor to remove this one, because the if is managing the case below\n  }\n\n  if (seen) {\n    if (i < kv_size(x->intersect) - 1) {\n      memmove(&kv_A(x->intersect, i), &kv_A(x->intersect, i + 1), (kv_size(x->intersect) - i - 1) *\n              sizeof(kv_A(x->intersect, i)));\n    }\n    kv_size(x->intersect)--;\n  }\n}\n```\nwhat is your feeling about it ? ",
            "created_at": "2025-01-13T21:51:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2588295509",
            "id": 2588295509,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6aRkFV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2588295509/reactions"
            },
            "updated_at": "2025-01-14T07:13:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2588295509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40841322?v=4",
                "events_url": "https://api.github.com/users/parniere/events{/privacy}",
                "followers_url": "https://api.github.com/users/parniere/followers",
                "following_url": "https://api.github.com/users/parniere/following{/other_user}",
                "gists_url": "https://api.github.com/users/parniere/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/parniere",
                "id": 40841322,
                "login": "parniere",
                "node_id": "MDQ6VXNlcjQwODQxMzIy",
                "organizations_url": "https://api.github.com/users/parniere/orgs",
                "received_events_url": "https://api.github.com/users/parniere/received_events",
                "repos_url": "https://api.github.com/users/parniere/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/parniere/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/parniere/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/parniere",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ye there is still an underlying bug elsewhere but that assert should only be in `Debug`, not in `RelWithDebInfo` . NDEBUG doesn't work but perhaps there is another flag we can use for `Debug` only.",
            "created_at": "2025-01-14T14:03:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2590004510",
            "id": 2590004510,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6aYFUe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590004510/reactions"
            },
            "updated_at": "2025-01-14T14:03:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590004510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm getting the same crash in `NVIM v0.11.0-dev-1537+gf4cff3077b` when I type `wr` and trigger gopls snippet, it happens not randomly, but every time after I enter that snippet:\n\nhttps://github.com/user-attachments/assets/52450777-bef5-4d8f-8510-4740ab590f9c\n\nI was not able get core backtrace, I have `ulimit -c` -> `unlimited`, both `coredumpctl` and `gdb` installed, and `coredumpctl -1 gdb` returns `No match found.` I'm using wsl, and `/etc/systemd/coredump.conf` contains these configs commented out:\n```\n[Coredump]\n#Storage=external\n#Compress=yes\n#ProcessSizeMax=2G\n#ExternalSizeMax=2G\n#JournalSizeMax=767M\n#MaxUse=\n#KeepFree=\n```",
            "created_at": "2025-01-19T09:06:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2600769186",
            "id": 2600769186,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6bBJai",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2600769186/reactions"
            },
            "updated_at": "2025-01-19T09:06:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2600769186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/109857267?v=4",
                "events_url": "https://api.github.com/users/39george/events{/privacy}",
                "followers_url": "https://api.github.com/users/39george/followers",
                "following_url": "https://api.github.com/users/39george/following{/other_user}",
                "gists_url": "https://api.github.com/users/39george/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/39george",
                "id": 109857267,
                "login": "39george",
                "node_id": "U_kgDOBoxJ8w",
                "organizations_url": "https://api.github.com/users/39george/orgs",
                "received_events_url": "https://api.github.com/users/39george/received_events",
                "repos_url": "https://api.github.com/users/39george/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/39george/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/39george/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/39george",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It happened to me moving around in a snippet, too. also yesterday in the same context. nightly build.\n\n```\nNVIM v0.11.0-dev-1589+g71507281fb\nBuild type: RelWithDebInfo\nLuaJIT 2.1.1736781742\nRun \"nvim -V1 -v\" for more info\n```\n\n```\nCore was generated by `/usr/bin/nvim --embed init.lua'.\nProgram terminated with signal SIGABRT, Aborted.\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44\n44\t     return INTERNAL_SYSCALL_ERROR_P (ret) ? INTERNAL_SYSCALL_ERRNO (ret) : 0;\n(gdb) bt\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44\n#1  0x00007ffff7d25463 in __pthread_kill_internal (threadid=<optimized out>, signo=6) at pthread_kill.c:78\n#2  0x00007ffff7ccc120 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\n#3  0x00007ffff7cb34c3 in __GI_abort () at abort.c:79\n#4  0x00007ffff7cb33df in __assert_fail_base (fmt=0x7ffff7e43c20 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x555555a802f8 \"seen\", \n    file=file@entry=0x555555a594d8 \"/home/runner/work/neovim/neovim/src/nvim/marktree.c\", line=line@entry=375, function=function@entry=0x555555a80ed0 <__PRETTY_FUNCTION__.19> \"unintersect_node\") at assert.c:94\n#5  0x00007ffff7cc4177 in __assert_fail (assertion=assertion@entry=0x555555a802f8 \"seen\", file=file@entry=0x555555a594d8 \"/home/runner/work/neovim/neovim/src/nvim/marktree.c\", line=line@entry=375, \n    function=function@entry=0x555555a80ed0 <__PRETTY_FUNCTION__.19> \"unintersect_node\") at assert.c:103\n#6  0x000055555592abec in unintersect_node (b=<optimized out>, strict=<optimized out>, id=<optimized out>, x=<error reading variable: Cannot access memory at address 0x0>)\n    at /home/runner/work/neovim/neovim/src/nvim/marktree.c:375\n#7  unintersect_node.constprop.0 (x=0x555555e21960, id=<optimized out>, strict=<optimized out>, b=<optimized out>) at /home/runner/work/neovim/neovim/src/nvim/marktree.c:359\n#8  0x000055555578d075 in marktree_intersect_pair (b=<optimized out>, id=25769803796, itr=0x7fffffffce10, end_itr=0x7fffffffcd30, delete=true) at /home/runner/work/neovim/neovim/src/nvim/marktree.c:427\n#9  0x0000555555799657 in marktree_del_itr (b=0x555555bd8548, itr=0x7fffffffd0c0, rev=<optimized out>) at /home/runner/work/neovim/neovim/src/nvim/marktree.c:560\n#10 0x000055555570f783 in extmark_del (buf=buf@entry=0x555555bd5540, itr=itr@entry=0x7fffffffd0c0, key=..., restore=restore@entry=true) at /home/runner/work/neovim/neovim/src/nvim/extmark.c:172\n#11 0x00005555557118f7 in extmark_clear (buf=0x555555bd5540, ns_id=3, l_row=<optimized out>, l_col=<optimized out>, u_row=2147483646, u_col=2147483647) at /home/runner/work/neovim/neovim/src/nvim/extmark.c:230\n#12 0x000055555575fbbd in nlua_api_nvim_buf_clear_namespace (lstate=0x7ffff7bf2380) at /home/runner/work/neovim/neovim/build/src/nvim/auto/lua_api_c_bindings.generated.h:3477\n#13 0x000055555599b196 in lj_BC_FUNCC ()\n#14 0x00005555559873c6 in lua_pcall (L=L@entry=0x7ffff7bf2380, nargs=nargs@entry=1, nresults=nresults@entry=1, errfunc=errfunc@entry=-3) at lj_api.c:1122\n#15 0x000055555576cffc in nlua_pcall (lstate=0x7ffff7bf2380, nargs=1, nresults=1) at /home/runner/work/neovim/neovim/src/nvim/lua/executor.c:175\n#16 0x000055555577d09d in nlua_call_ref_ctx (fast=<optimized out>, ref=<optimized out>, name=<optimized out>, args=..., mode=kRetNilBool, arena=0x0, err=0x0)\n    at /home/runner/work/neovim/neovim/src/nvim/lua/executor.c:1592\n#17 0x0000555555634a92 in nlua_call_ref (err=0x0, arena=0x0, mode=kRetNilBool, args=..., name=0x0, ref=<optimized out>) at /home/runner/work/neovim/neovim/src/nvim/lua/executor.c:1569\n#18 call_autocmd_callback (ac=ac@entry=0x555555c7cf60, apc=apc@entry=0x7fffffffdf40) at /home/runner/work/neovim/neovim/src/nvim/autocmd.c:2060\n#19 0x0000555555634d43 in getnextac (c=c@entry=58, cookie=cookie@entry=0x7fffffffdf40, indent=<optimized out>, do_concat=do_concat@entry=true) at /home/runner/work/neovim/neovim/src/nvim/autocmd.c:2111\n#20 0x00005555556f205e in do_cmdline (cmdline=<optimized out>, fgetline=0x555555634c10 <getnextac>, cookie=0x7fffffffdf40, flags=7) at /home/runner/work/neovim/neovim/src/nvim/ex_docmd.c:579\n#21 0x0000555555633395 in apply_autocmds_group (event=EVENT_TEXTCHANGED, fname=0x555555e10b50 \"/home/rmuir/.config/nvim/init.lua\", fname_io=<optimized out>, force=<optimized out>, group=<optimized out>, \n    buf=0x555555bd5540, eap=0x0, data=0x0) at /home/runner/work/neovim/neovim/src/nvim/autocmd.c:1844\n#22 0x00005555557ce2ba in apply_autocmds (buf=<optimized out>, force=false, fname_io=0x0, fname=0x0, event=EVENT_TEXTCHANGED) at /home/runner/work/neovim/neovim/src/nvim/autocmd.c:1498\n#23 normal_check_text_changed (s=0x7fffffffe0f0) at /home/runner/work/neovim/neovim/src/nvim/normal.c:1318\n#24 normal_check (state=0x7fffffffe0f0) at /home/runner/work/neovim/neovim/src/nvim/normal.c:1445\n#25 0x0000555555895940 in state_enter (s=0x7fffffffe0f0) at /home/runner/work/neovim/neovim/src/nvim/state.c:40\n#26 0x00005555557cc7b3 in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at /home/runner/work/neovim/neovim/src/nvim/normal.c:522\n#27 0x00005555555f105e in main (argc=<optimized out>, argv=<optimized out>) at /home/runner/work/neovim/neovim/src/nvim/main.c:651\n```",
            "created_at": "2025-01-21T01:54:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2603468363",
            "id": 2603468363,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6bLcZL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2603468363/reactions"
            },
            "updated_at": "2025-04-10T22:32:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2603468363",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/504194?v=4",
                "events_url": "https://api.github.com/users/rmuir/events{/privacy}",
                "followers_url": "https://api.github.com/users/rmuir/followers",
                "following_url": "https://api.github.com/users/rmuir/following{/other_user}",
                "gists_url": "https://api.github.com/users/rmuir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rmuir",
                "id": 504194,
                "login": "rmuir",
                "node_id": "MDQ6VXNlcjUwNDE5NA==",
                "organizations_url": "https://api.github.com/users/rmuir/orgs",
                "received_events_url": "https://api.github.com/users/rmuir/received_events",
                "repos_url": "https://api.github.com/users/rmuir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rmuir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rmuir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rmuir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "While I don't have a stack-trace to share, I too have encountered this bug a few times. My latest crash was due to ```neovim/src/nvim/message.c:315: msg_multihl: Assertion `msg_ext_kind == kind' failed.``` \n\nI tried to exit out of the output of this lua command ```:lua=vim.lsp.get_active_clients()``` and pressing either q or G. This issue seems be consistent.\n\nMy Neovim version:\n```\nNVIM v0.11.0-dev-1517+ga37784ad83\nBuild type: RelWithDebInfo\nLuaJIT 2.1.1734355927\n```",
            "created_at": "2025-01-22T02:56:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2606175351",
            "id": 2606175351,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6bVxR3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2606175351/reactions"
            },
            "updated_at": "2025-01-22T15:23:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2606175351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/120278066?v=4",
                "events_url": "https://api.github.com/users/hypnoticsTheWizard/events{/privacy}",
                "followers_url": "https://api.github.com/users/hypnoticsTheWizard/followers",
                "following_url": "https://api.github.com/users/hypnoticsTheWizard/following{/other_user}",
                "gists_url": "https://api.github.com/users/hypnoticsTheWizard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hypnoticsTheWizard",
                "id": 120278066,
                "login": "hypnoticsTheWizard",
                "node_id": "U_kgDOBytMMg",
                "organizations_url": "https://api.github.com/users/hypnoticsTheWizard/orgs",
                "received_events_url": "https://api.github.com/users/hypnoticsTheWizard/received_events",
                "repos_url": "https://api.github.com/users/hypnoticsTheWizard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hypnoticsTheWizard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hypnoticsTheWizard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hypnoticsTheWizard",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This happens to me now quite often, Neovim crashes and I am back on the terminal. I don't have a debug build and therefore not much info but it looks quite the same as the ones already mentioned, abort is called after or in `marktree_intersect_pair`:\n\n```\n#0  0x00007353d0094624 in ?? () from /usr/lib/libc.so.6\n#1  0x00007353d003aba0 in raise () from /usr/lib/libc.so.6\n#2  0x00007353d0022582 in abort () from /usr/lib/libc.so.6\n#3  0x00007353d00224eb in ?? () from /usr/lib/libc.so.6\n#4  0x0000640a702827cf in ?? ()\n#5  0x0000640a70445f5a in marktree_intersect_pair ()\n#6  0x0000640a70454e10 in marktree_splice ()\n#7  0x0000640a703c0622 in extmark_splice_impl ()\n#8  0x0000640a703c0a7b in ?? ()\n#9  0x0000640a702e2fc9 in deleted_lines_mark ()\n#10 0x0000640a704a6b6b in op_delete ()\n#11 0x0000640a704af336 in do_pending_operator ()\n#12 0x0000640a7048bf55 in ?? ()\n#13 0x0000640a70566a86 in state_enter ()\n#14 0x0000640a7048977a in normal_enter ()\n#15 0x0000640a70283dcd in main ()\n```\n\nIs there anything I can do to find the root cause?\n\n[EDIT]\nJust a couple of seconds later again, still no debug symbols but a longer callstack:\n\n```\n#0  0x00007fa46aff8624 in ?? () from /usr/lib/libc.so.6\n#1  0x00007fa46af9eba0 in raise () from /usr/lib/libc.so.6\n#2  0x00007fa46af86582 in abort () from /usr/lib/libc.so.6\n#3  0x00007fa46af864eb in ?? () from /usr/lib/libc.so.6\n#4  0x00005d0aaff3b7cf in ?? ()\n#5  0x00005d0ab00fef5a in marktree_intersect_pair ()\n#6  0x00005d0ab010de10 in marktree_splice ()\n#7  0x00005d0ab0079622 in extmark_splice_impl ()\n#8  0x00005d0aaff4694c in nvim_buf_set_lines ()\n#9  0x00005d0ab00c4c7d in ?? ()\n#10 0x00007fa46b2b7f06 in ?? () from /usr/lib/libluajit-5.1.so.2\n#11 0x00007fa46b2cc0ca in lua_pcall () from /usr/lib/libluajit-5.1.so.2\n#12 0x00005d0ab00dc684 in nlua_pcall ()\n#13 0x00005d0ab00ed740 in typval_exec_lua_callable ()\n#14 0x00005d0ab003012b in call_func ()\n#15 0x00005d0aaffee62e in callback_call ()\n#16 0x00005d0aaffa58f1 in ?? ()\n#17 0x00005d0aaffa5b21 in ?? ()\n#18 0x00005d0ab003d8d9 in multiqueue_process_events ()\n#19 0x00005d0ab00402bb in proc_wait ()\n#20 0x00005d0ab0013d2a in ?? ()\n#21 0x00005d0ab0000a27 in call_internal_func ()\n#22 0x00005d0ab003066a in call_func ()\n#23 0x00005d0ab00edc5a in nlua_call ()\n#24 0x00007fa46b2b7f06 in ?? () from /usr/lib/libluajit-5.1.so.2\n#25 0x00007fa46b2cc0ca in lua_pcall () from /usr/lib/libluajit-5.1.so.2\n#26 0x00005d0ab00dc684 in nlua_pcall ()\n#27 0x00005d0ab00ee281 in nlua_call_ref_ctx ()\n#28 0x00005d0aaff889a4 in getnextac ()\n#29 0x00005d0ab0053ef8 in do_cmdline ()\n#30 0x00005d0aaff87215 in apply_autocmds_group ()\n#31 0x00005d0aaff96dfd in ?? ()\n#32 0x00005d0aaff975cd in buf_write ()\n#33 0x00005d0ab0045bf9 in do_write ()\n#34 0x00005d0ab02c3f35 in ?? ()\n#35 0x00005d0ab0055ee0 in do_cmdline ()\n#36 0x00005d0ab0147dfc in ?? ()\n#37 0x00005d0ab0144eed in ?? ()\n#38 0x00005d0ab021fa86 in state_enter ()\n#39 0x00005d0ab014277a in normal_enter ()\n#40 0x00005d0aaff3cdcd in main ()\n```\n",
            "created_at": "2025-04-08T08:07:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2785594412",
            "id": 2785594412,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6mCMws",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785594412/reactions"
            },
            "updated_at": "2025-04-08T08:11:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785594412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/858144?v=4",
                "events_url": "https://api.github.com/users/fidelski/events{/privacy}",
                "followers_url": "https://api.github.com/users/fidelski/followers",
                "following_url": "https://api.github.com/users/fidelski/following{/other_user}",
                "gists_url": "https://api.github.com/users/fidelski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fidelski",
                "id": 858144,
                "login": "fidelski",
                "node_id": "MDQ6VXNlcjg1ODE0NA==",
                "organizations_url": "https://api.github.com/users/fidelski/orgs",
                "received_events_url": "https://api.github.com/users/fidelski/received_events",
                "repos_url": "https://api.github.com/users/fidelski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fidelski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fidelski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fidelski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looks like you've got the right plugin/config mix to trigger this. It goes without saying that providing a repro would be a massive help.",
            "created_at": "2025-04-08T08:17:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2785621102",
            "id": 2785621102,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6mCTRu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785621102/reactions"
            },
            "updated_at": "2025-04-08T08:17:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785621102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I see. Unfortunately I cannot reproduce it reliably. And I am using a massive amount of plugins and some numerous configs what doesn't make it easier. I could of course hint at a repository but this doesn't help I guess.\nI think I'll give it a try and create a debug build to get more information from the coredump etc.\n",
            "created_at": "2025-04-08T08:25:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2785642951",
            "id": 2785642951,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6mCYnH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785642951/reactions"
            },
            "updated_at": "2025-04-08T08:25:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2785642951",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/858144?v=4",
                "events_url": "https://api.github.com/users/fidelski/events{/privacy}",
                "followers_url": "https://api.github.com/users/fidelski/followers",
                "following_url": "https://api.github.com/users/fidelski/following{/other_user}",
                "gists_url": "https://api.github.com/users/fidelski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fidelski",
                "id": 858144,
                "login": "fidelski",
                "node_id": "MDQ6VXNlcjg1ODE0NA==",
                "organizations_url": "https://api.github.com/users/fidelski/orgs",
                "received_events_url": "https://api.github.com/users/fidelski/received_events",
                "repos_url": "https://api.github.com/users/fidelski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fidelski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fidelski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fidelski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I downloaded the sources, checked out the release-0.11 branch, built the debug build and started it from gdb. No issues so far. Running for multiple hours and everything runs very smoothly. I didn't even notice it's running from gdb and I had the impression the issue concerning the lags when using multiple languages with spellcheck was gone.\nNo idea whether this is due to the fact I was running Neovim from gdb (timing?) or this is an issue concerning the concrete version I was using. I am on Arch and the current version there is\n\n```\nNVIM v0.11.0                                                                                                                                                                                                       \nBuild type: RelWithDebInfo                                                                                                                                                                                         \nLuaJIT 2.1.1741730670 \n```\n\nMy current debug build is at\n```\nNVIM v0.11.1-dev-51+ga92155b86b                                                                                                                                                                                    \nBuild type: Debug                                                                                                                                                                                                  \nLuaJIT 2.1.1741730670\n```\n\nI will do further checks and try to reproduce the issue.",
            "created_at": "2025-04-08T17:16:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2787146481",
            "id": 2787146481,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6mIHrx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2787146481/reactions"
            },
            "updated_at": "2025-04-08T17:16:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2787146481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/858144?v=4",
                "events_url": "https://api.github.com/users/fidelski/events{/privacy}",
                "followers_url": "https://api.github.com/users/fidelski/followers",
                "following_url": "https://api.github.com/users/fidelski/following{/other_user}",
                "gists_url": "https://api.github.com/users/fidelski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fidelski",
                "id": 858144,
                "login": "fidelski",
                "node_id": "MDQ6VXNlcjg1ODE0NA==",
                "organizations_url": "https://api.github.com/users/fidelski/orgs",
                "received_events_url": "https://api.github.com/users/fidelski/received_events",
                "repos_url": "https://api.github.com/users/fidelski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fidelski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fidelski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fidelski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I cannot reproduce the issue with v0.11.1-dev-51+ga92155b86b - I have been running this version for two days now without any problem.\n",
            "created_at": "2025-04-10T13:41:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2793144321",
            "id": 2793144321,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6mfAAB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2793144321/reactions"
            },
            "updated_at": "2025-04-10T13:41:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2793144321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/858144?v=4",
                "events_url": "https://api.github.com/users/fidelski/events{/privacy}",
                "followers_url": "https://api.github.com/users/fidelski/followers",
                "following_url": "https://api.github.com/users/fidelski/following{/other_user}",
                "gists_url": "https://api.github.com/users/fidelski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fidelski",
                "id": 858144,
                "login": "fidelski",
                "node_id": "MDQ6VXNlcjg1ODE0NA==",
                "organizations_url": "https://api.github.com/users/fidelski/orgs",
                "received_events_url": "https://api.github.com/users/fidelski/received_events",
                "repos_url": "https://api.github.com/users/fidelski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fidelski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fidelski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fidelski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm able to reliably reproduce this, when starting a snippet, exiting the snippet and then deleting the cursor to end of the line, but oddly, only on a specific line in my file, and with a certain snippet. I'm trying to get to minimum reproducible example.\n\nI get this stack trace:\n```\n(gdb) bt\n#0  __pthread_kill_implementation (no_tid=0, signo=6, threadid=139922798836608) at ./nptl/pthread_kill.c:44\n#1  __pthread_kill_internal (signo=6, threadid=139922798836608) at ./nptl/pthread_kill.c:78\n#2  __GI___pthread_kill (threadid=139922798836608, signo=signo@entry=6) at ./nptl/pthread_kill.c:89\n#3  0x00007f4250bcb476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\n#4  0x00007f4250bb17f3 in __GI_abort () at ./stdlib/abort.c:79\n#5  0x00007f4250bb171b in __assert_fail_base (fmt=0x7f4250d66130 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\",\n    assertion=0x56424a1cdbb8 \"seen\", file=0x56424a1a9448 \"/home/tyler/software/neovim/src/nvim/marktree.c\", line=375,\n    function=<optimized out>) at ./assert/assert.c:92\n#6  0x00007f4250bc2e96 in __GI___assert_fail (assertion=assertion@entry=0x56424a1cdbb8 \"seen\",\n    file=file@entry=0x56424a1a9448 \"/home/tyler/software/neovim/src/nvim/marktree.c\", line=line@entry=375,\n    function=function@entry=0x56424a1ce6f0 <__PRETTY_FUNCTION__.19> \"unintersect_node\") at ./assert/assert.c:101\n#7  0x000056424a07b44e in unintersect_node (b=<optimized out>, strict=<optimized out>, id=<optimized out>, x=<optimized out>)\n    at /home/tyler/software/neovim/src/nvim/marktree.c:375\n#8  unintersect_node.constprop.0 (x=0x56424aacc0f0, id=<optimized out>, strict=<optimized out>, b=<optimized out>)\n    at /home/tyler/software/neovim/src/nvim/marktree.c:359\n#9  0x0000564249edbf09 in marktree_intersect_pair (b=0x56424a99de58, id=257698037768, itr=0x7ffd4635c930, end_itr=0x7ffd4635c850,\n    delete=true) at /home/tyler/software/neovim/src/nvim/marktree.c:427\n#10 0x0000564249ee9d38 in marktree_splice (b=0x56424a99de58, start_line=<optimized out>, start_col=<optimized out>,\n    old_extent_line=<optimized out>, old_extent_col=<optimized out>, new_extent_line=<optimized out>,\n    new_extent_col=<optimized out>) at /home/tyler/software/neovim/src/nvim/marktree.c:2096\n#11 0x0000564249e5f64e in extmark_splice_impl (buf=0x56424a99ae50, start_row=32, start_col=32, start_byte=912, old_row=0,\n    old_col=29, old_byte=29, new_row=0, new_col=0, new_byte=0, undo=kExtmarkUndo)\n    at /home/tyler/software/neovim/src/nvim/extmark.c:581\n#12 0x0000564249d96077 in extmark_splice (undo=kExtmarkUndo, new_byte=0, new_col=0, new_row=0, old_byte=29, old_col=29, old_row=0,\n    start_col=32, start_row=32, buf=0x56424a99ae50) at /home/tyler/software/neovim/src/nvim/extmark.c:551\n#13 extmark_splice_cols (undo=kExtmarkUndo, new_col=<optimized out>, old_col=<optimized out>, start_col=32, start_row=32,\n    buf=0x56424a99ae50) at /home/tyler/software/neovim/src/nvim/extmark.c:650\n#14 inserted_bytes (lnum=33, start_col=32, old_col=29, new_col=0) at /home/tyler/software/neovim/src/nvim/change.c:471\n#15 0x0000564249d98761 in del_bytes (count=29, fixpos_arg=<optimized out>, use_delcombine=<optimized out>)\n    at /home/tyler/software/neovim/src/nvim/change.c:945\n#16 0x0000564249f2f5a0 in op_delete (oap=0x7ffd4635d078) at /home/tyler/software/neovim/src/nvim/ops.c:1798\n#17 0x0000564249f3cbee in do_pending_operator (cap=0x7ffd4635d0d0, old_col=32, gui_yank=<optimized out>)\n    at /home/tyler/software/neovim/src/nvim/ops.c:6198\n#18 0x0000564249f1db71 in normal_finish_command (s=0x7ffd4635d060) at /home/tyler/software/neovim/src/nvim/normal.c:987\n#19 normal_execute (state=0x7ffd4635d060, key=<optimized out>) at /home/tyler/software/neovim/src/nvim/normal.c:1247\n#20 0x0000564249fe63ff in state_enter (s=0x7ffd4635d060) at /home/tyler/software/neovim/src/nvim/state.c:102\n#21 0x0000564249f1b163 in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>)\n    at /home/tyler/software/neovim/src/nvim/normal.c:522\n#22 0x0000564249d3f068 in main (argc=<optimized out>, argv=<optimized out>) at /home/tyler/software/neovim/src/nvim/main.c:651\n```",
            "created_at": "2025-04-15T21:18:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2807543397",
            "id": 2807543397,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6nV7Zl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2807543397/reactions"
            },
            "updated_at": "2025-04-15T21:18:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2807543397",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10226626?v=4",
                "events_url": "https://api.github.com/users/Calder-Ty/events{/privacy}",
                "followers_url": "https://api.github.com/users/Calder-Ty/followers",
                "following_url": "https://api.github.com/users/Calder-Ty/following{/other_user}",
                "gists_url": "https://api.github.com/users/Calder-Ty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Calder-Ty",
                "id": 10226626,
                "login": "Calder-Ty",
                "node_id": "MDQ6VXNlcjEwMjI2NjI2",
                "organizations_url": "https://api.github.com/users/Calder-Ty/orgs",
                "received_events_url": "https://api.github.com/users/Calder-Ty/received_events",
                "repos_url": "https://api.github.com/users/Calder-Ty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Calder-Ty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Calder-Ty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Calder-Ty",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "## Reproducing Info\nnvim version: NVIM v0.11.0; Build type: DEBUG; LuaJIT 2.1.1741730670;\nzig version: 0.14.0 (for reproducing)\nzls version: 0.14.0 (for reproducing)\n\nPlugins:\nlazy.nvim: v10.20.5\nblink.cmp: 0.10.0\nfriendly-snippets: efff286\nlspconfig: b972e71\ngitsigns: cdfcd9d (Probably not needed)\nnvim-treesitter: 6587a58\n\n## Steps to reproduce:\n1. Create new Directory `nvim-27196`.\n2. `cd` into the directory.\n3. `zig init` a project. This is not actually necessary but makes it easier for running the lsp\n4. `nvim src/main.zig`\n5. Delete the contents of main.zig and replace with the following:\n```zig\npub fn main() !void {\n}\n\n// Command-line interface definition.\nconst std = @import(\"std\");\nconst fs = std.fs;\n\n// \"2025-04-15 19:50:00.000000 UTC\",\"2025-04-15 20:20:00.165617 UTC\",\"2025-04-15 20:28:39.725218 UTC\"\nconst blah = std.once;\n```\n6. On line 7 type the following: `const zzz = std.io.BufferedWriter`. You should be given a snippet\nfrom the lsp. Accept the suggestion.\n7. Escape from insert mode. Your cursor should be on the opening `(`.\n8. type `D` to delete to end of line.\n9. System should have crashed.\n\n## Backtrace:\n```c\n#0  __pthread_kill_implementation (no_tid=0, signo=6, threadid=139783150467968) at ./nptl/pthread_kill.c:44\n#1  __pthread_kill_internal (signo=6, threadid=139783150467968) at ./nptl/pthread_kill.c:78\n#2  __GI___pthread_kill (threadid=139783150467968, signo=signo@entry=6) at ./nptl/pthread_kill.c:89\n#3  0x00007f21cd0bb476 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\n#4  0x00007f21cd0a17f3 in __GI_abort () at ./stdlib/abort.c:79\n#5  0x00007f21cd0a171b in __assert_fail_base (fmt=0x7f21cd256130 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=0x55af490a4722 \"seen\",\n    file=0x55af490a4680 \"/home/tyler/software/neovim/src/nvim/marktree.c\", line=375, function=<optimized out>) at ./assert/assert.c:94\n#6  0x00007f21cd0b2e96 in __GI___assert_fail (assertion=0x55af490a4722 \"seen\", file=0x55af490a4680 \"/home/tyler/software/neovim/src/nvim/marktree.c\", line=375,\n    function=0x55af490a4c00 <__PRETTY_FUNCTION__.17> \"unintersect_node\") at ./assert/assert.c:103\n#7  0x000055af48d7942a in unintersect_node (b=0x55af4944e1f8, x=0x55af496cc480, id=197568495624, strict=true) at /home/tyler/software/neovim/src/nvim/marktree.c:375\n#8  0x000055af48d796c9 in marktree_intersect_pair (b=0x55af4944e1f8, id=197568495624, itr=0x7ffd8f103670, end_itr=0x7ffd8f103750, delete=true)\n    at /home/tyler/software/neovim/src/nvim/marktree.c:427\n#9  0x000055af48d82ede in marktree_splice (b=0x55af4944e1f8, start_line=5, start_col=33, old_extent_line=0, old_extent_col=29, new_extent_line=0, new_extent_col=0)\n    at /home/tyler/software/neovim/src/nvim/marktree.c:2102\n#10 0x000055af48ce0f2e in extmark_splice_impl (buf=0x55af4944b1f0, start_row=5, start_col=33, start_byte=124, old_row=0, old_col=29, old_byte=29, new_row=0, new_col=0, new_byte=0,\n    undo=kExtmarkUndo) at /home/tyler/software/neovim/src/nvim/extmark.c:587\n#11 0x000055af48ce0d26 in extmark_splice (buf=0x55af4944b1f0, start_row=5, start_col=33, old_row=0, old_col=29, old_byte=29, new_row=0, new_col=0, new_byte=0, undo=kExtmarkUndo)\n    at /home/tyler/software/neovim/src/nvim/extmark.c:556\n#12 0x000055af48ce1344 in extmark_splice_cols (buf=0x55af4944b1f0, start_row=5, start_col=33, old_col=29, new_col=0, undo=kExtmarkUndo) at /home/tyler/software/neovim/src/nvim/extmark.c:657\n#13 0x000055af48bfd588 in inserted_bytes (lnum=6, start_col=33, old_col=29, new_col=0) at /home/tyler/software/neovim/src/nvim/change.c:473\n#14 0x000055af48bfe760 in del_bytes (count=29, fixpos_arg=true, use_delcombine=true) at /home/tyler/software/neovim/src/nvim/change.c:946\n#15 0x000055af48dcdfa1 in op_delete (oap=0x7ffd8f103eb8) at /home/tyler/software/neovim/src/nvim/ops.c:1798\n#16 0x000055af48ddbaa9 in do_pending_operator (cap=0x7ffd8f103f10, old_col=33, gui_yank=false) at /home/tyler/software/neovim/src/nvim/ops.c:6231\n#17 0x000055af48dbc58b in normal_finish_command (s=0x7ffd8f103ea0) at /home/tyler/software/neovim/src/nvim/normal.c:987\n#18 0x000055af48dbcf41 in normal_execute (state=0x7ffd8f103ea0, key=36) at /home/tyler/software/neovim/src/nvim/normal.c:1247\n#19 0x000055af48e9be54 in state_enter (s=0x7ffd8f103ea0) at /home/tyler/software/neovim/src/nvim/state.c:102\n#20 0x000055af48dbb08d in normal_enter (cmdwin=false, noexmode=false) at /home/tyler/software/neovim/src/nvim/normal.c:523\n#21 0x000055af48d5f06a in main (argc=2, argv=0x7ffd8f104288) at /home/tyler/software/neovim/src/nvim/main.c:651\n```\n\nThis crashes 100% of the time for me.\n",
            "created_at": "2025-04-18T14:53:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2815592741",
            "id": 2815592741,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6n0okl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2815592741/reactions"
            },
            "updated_at": "2025-04-18T14:53:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2815592741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10226626?v=4",
                "events_url": "https://api.github.com/users/Calder-Ty/events{/privacy}",
                "followers_url": "https://api.github.com/users/Calder-Ty/followers",
                "following_url": "https://api.github.com/users/Calder-Ty/following{/other_user}",
                "gists_url": "https://api.github.com/users/Calder-Ty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Calder-Ty",
                "id": 10226626,
                "login": "Calder-Ty",
                "node_id": "MDQ6VXNlcjEwMjI2NjI2",
                "organizations_url": "https://api.github.com/users/Calder-Ty/orgs",
                "received_events_url": "https://api.github.com/users/Calder-Ty/received_events",
                "repos_url": "https://api.github.com/users/Calder-Ty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Calder-Ty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Calder-Ty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Calder-Ty",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To \"stop the bleeding\", we could change this `true` to `false`? https://github.com/neovim/neovim/blob/34791f7988980c87a97eff8b75224be2ac449c78/src/nvim/marktree.c#L427\n\n@Calder-Ty can you try that",
            "created_at": "2025-04-18T15:20:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2815633682",
            "id": 2815633682,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6n0ykS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2815633682/reactions"
            },
            "updated_at": "2025-04-18T15:20:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2815633682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": " > [@Calder-Ty](https://github.com/Calder-Ty) can you try that\n\nYes, and indeed it does keep it from crashing. I'll run with this custom build for a while to see if i get any other crashes elsewhere. \n",
            "created_at": "2025-04-18T15:57:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2815693004",
            "id": 2815693004,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6n1BDM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2815693004/reactions"
            },
            "updated_at": "2025-04-18T15:57:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2815693004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10226626?v=4",
                "events_url": "https://api.github.com/users/Calder-Ty/events{/privacy}",
                "followers_url": "https://api.github.com/users/Calder-Ty/followers",
                "following_url": "https://api.github.com/users/Calder-Ty/following{/other_user}",
                "gists_url": "https://api.github.com/users/Calder-Ty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Calder-Ty",
                "id": 10226626,
                "login": "Calder-Ty",
                "node_id": "MDQ6VXNlcjEwMjI2NjI2",
                "organizations_url": "https://api.github.com/users/Calder-Ty/orgs",
                "received_events_url": "https://api.github.com/users/Calder-Ty/received_events",
                "repos_url": "https://api.github.com/users/Calder-Ty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Calder-Ty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Calder-Ty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Calder-Ty",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I just ran into this as well on v0.11.1 (from arch repos), though I'm unable to reproduce consistently (tried with the method above)\n\n<details><summary>Backtrace</summary>\n\n```c\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=0x6, no_tid=no_tid@entry=0x0) at pthread_kill.c:44\n        tid = <optimized out>\n        ret = 0x0\n        pd = <optimized out>\n        old_mask = {\n          __val = {0x652e04b873b5}\n        }\n        ret = <optimized out>\n#1  0x000075d3207af813 in __pthread_kill_internal (threadid=<optimized out>, signo=0x6) at pthread_kill.c:89\nNo locals.\n#2  0x000075d320755dc0 in __GI_raise (sig=sig@entry=0x6) at ../sysdeps/posix/raise.c:26\n        ret = <optimized out>\n#3  0x000075d32073d57a in __GI_abort () at abort.c:73\n        act = {\n          __sigaction_handler = {\n            sa_handler = 0x652e14df99a0,\n            sa_sigaction = 0x652e14df99a0\n          },\n          sa_mask = {\n            __val = {0x652e14df99a0, 0x15, 0x0, 0xe00000120, 0x652e14c99380, 0x652e14c48430, 0x800000006, 0xe00000125, 0xafd7b981ac9fd00, 0x652e14c48430, 0x652e14ac0500, 0x7ffd3c884188, 0x75d3208ff4e0, 0x7ffd3c884120, 0x75d320797728, 0x7ffd3c884240}\n          },\n          sa_flags = 0x1ac9fd00,\n          sa_restorer = 0x652e04bf5150 <__PRETTY_FUNCTION__.19>\n        }\n#4  0x000075d32073d4e3 in __assert_fail_base (fmt=<optimized out>, assertion=0x652e04b873b5 \"seen\", file=<optimized out>, line=<optimized out>, function=<optimized out>) at assert.c:118\n        str = 0x652e14df99a0 \"ٙ\\026F(e\"\n        total = <optimized out>\n#5  0x000075d32074ded0 in __assert_fail (assertion=<optimized out>, file=<optimized out>, line=<optimized out>, function=<optimized out>) at assert.c:127\nNo locals.\n#6  0x0000652e047e17cf in unintersect_node.isra.0 (x=0x652e14c99380, id=<optimized out>, strict=<optimized out>, b=<optimized out>) at /usr/src/debug/neovim/neovim/src/nvim/marktree.c:375\n        seen = 0x0\n        i = <optimized out>\n        __PRETTY_FUNCTION__ = <optimized out>\n#7  0x0000652e049a52da in marktree_intersect_pair (b=<optimized out>, id=0xe000000f0, itr=0x7ffd3c8845a0, end_itr=0x7ffd3c8844c0, delete=0x1) at /usr/src/debug/neovim/neovim/src/nvim/marktree.c:427\n        skip = <optimized out>\n        x = <error reading variable x (Cannot access memory at address 0x0)>\n        lvl = <optimized out>\n        maxlvl = <optimized out>\n#8  0x0000652e049b4290 in marktree_splice (b=<optimized out>, start_line=<optimized out>, start_col=<optimized out>, old_extent_line=<optimized out>, old_extent_col=<optimized out>, new_extent_line=<optimized out>, new_extent_col=<optimized out>) at /usr/src/debug/neovim/neovim/src/nvim/marktree.c:2116\n        startpos = {{\n            pos = {\n              row = 0x14,\n              col = 0x1b\n            },\n            lvl = 0x1,\n            x = 0x652e149f4120,\n            i = 0x0,\n            s = {{\n                oldcol = 0x0,\n                i = 0x3\n              }, {\n                oldcol = 0x0,\n                i = 0xb\n              }, {\n                oldcol = 0x0,\n                i = 0x15\n              }, {\n                oldcol = 0x1a,\n                i = 0x14\n              }, {\n                oldcol = 0x0,\n                i = 0x14\n              }, {\n                oldcol = 0x6f,\n                i = 0x2\n              }, {\n                oldcol = 0x0,\n                i = 0x14c25620\n              }, {\n                oldcol = 0x652e,\n                i = 0x5\n              }, {\n                oldcol = 0x0,\n                i = 0x3\n              }, {\n                oldcol = 0x1c,\n                i = 0x3\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }},\n            intersect_idx = 0x0,\n            intersect_pos = {\n              row = 0x0,\n              col = 0x0\n            },\n            intersect_pos_x = {\n              row = 0x0,\n              col = 0x0\n            }\n          }}\n        start_id = 0xe000000f0\n        d = {\n          id = <optimized out>,\n          old = 0x652e14c25620,\n          new = 0x652e14c996d0,\n          old_i = <optimized out>,\n          new_i = 0x0\n        }\n        i = 0x9\n        start = <optimized out>\n        old_extent = <optimized out>\n        new_extent = <optimized out>\n        may_delete = <optimized out>\n        same_line = <optimized out>\n        itr = {{\n            pos = {\n              row = 0x14,\n              col = 0x1b\n            },\n            lvl = 0x1,\n            x = 0x652e149f4120,\n            i = 0x0,\n            s = {{\n                oldcol = 0x0,\n                i = 0x3\n              }, {\n                oldcol = 0x0,\n                i = 0xb\n              }, {\n                oldcol = 0x0,\n                i = 0x15\n              }, {\n                oldcol = 0x1a,\n                i = 0x14\n              }, {\n                oldcol = 0x0,\n                i = 0x14\n              }, {\n                oldcol = 0x6f,\n                i = 0x2\n              }, {\n                oldcol = 0x0,\n                i = 0x14c25620\n              }, {\n                oldcol = 0x652e,\n                i = 0x5\n              }, {\n                oldcol = 0x0,\n                i = 0x3\n              }, {\n                oldcol = 0x1c,\n                i = 0x3\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              }},\n            intersect_idx = 0x0,\n            intersect_pos = {\n              row = 0x0,\n              col = 0x0\n            },\n            intersect_pos_x = {\n              row = 0x0,\n              col = 0x0\n            }\n          }}\n        enditr = {{\n            pos = {\n              row = 0x14,\n              col = 0x1b\n            },\n            lvl = 0x2,\n            x = 0x652e14c25620,\n            i = 0x4,\n            s = {{\n                oldcol = 0x0,\n                i = 0x3\n              }, {\n                oldcol = 0x1b,\n                i = 0x3\n              }, {\n                oldcol = 0x0,\n                i = 0x0\n              } <repeats 18 times>},\n            intersect_idx = 0x0,\n            intersect_pos = {\n              row = 0x0,\n              col = 0x0\n            },\n            intersect_pos_x = {\n              row = 0x0,\n              col = 0x0\n            }\n          }}\n        oldbase = {{\n            row = 0x0,\n            col = 0x0\n          }, {\n            row = 0x14,\n            col = 0x1c\n          }, {\n            row = 0x14,\n            col = 0x6f\n          }, {\n            row = 0x0,\n            col = 0x0\n          } <repeats 17 times>}\n        delta = <optimized out>\n        past_right = <optimized out>\n        moved = 0x1\n        damage = {\n          size = 0x1c,\n          capacity = 0x20,\n          items = 0x652e14f7ce70,\n          init_array = {{\n              id = 0xe000000fa,\n              old = 0x652e14c996d0,\n              new = 0x652e14c25620,\n              old_i = 0x0,\n              new_i = 0x4\n            }, {\n              id = 0xe000000f1,\n              old = 0x652e14c25620,\n              new = 0x652e14c996d0,\n              old_i = 0x4,\n              new_i = 0x0\n            }, {\n              id = 0xe0000010d,\n              old = 0x652e14c996d0,\n              new = 0x652e14c25620,\n              old_i = 0x1,\n              new_i = 0x3\n            }, {\n              id = 0xe000000f5,\n              old = 0x652e14c25620,\n              new = 0x652e14c996d0,\n              old_i = 0x3,\n              new_i = 0x1\n            }, {\n              id = 0xe00000106,\n              old = 0x652e14c996d0,\n              new = 0x652e14c25620,\n              old_i = 0x4,\n              new_i = 0x2\n            }, {\n              id = 0xe000000f3,\n              old = 0x652e14c25620,\n              new = 0x652e14c996d0,\n              old_i = 0x2,\n              new_i = 0x4\n            }, {\n              id = 0xe00000111,\n              old = 0x652e14c996d0,\n              new = 0x652e14c25620,\n              old_i = 0x5,\n              new_i = 0x1\n            }, {\n              id = 0xe000000f2,\n              old = 0x652e14c25620,\n              new = 0x652e14c996d0,\n              old_i = 0x1,\n              new_i = 0x5\n            }}\n        }\n        __PRETTY_FUNCTION__ = \"marktree_splice\"\n#9  0x0000652e0491f7cf in extmark_splice_impl (buf=0x652e14949500, start_row=0x14, start_col=0x1b, start_byte=0x257, old_row=0x0, old_col=0x55, old_byte=0x55, new_row=0x0, new_col=0x0, new_byte=0x0, undo=kExtmarkUndo) at /usr/src/debug/neovim/neovim/src/nvim/extmark.c:578\nNo locals.\n#10 0x0000652e048421b5 in extmark_splice (buf=0x652e14949500, start_row=0x14, start_col=0x1b, old_row=0x0, old_col=0x55, old_byte=0x55, new_row=0x0, new_col=0x0, new_byte=0x0, undo=kExtmarkUndo) at /usr/src/debug/neovim/neovim/src/nvim/extmark.c:546\n        offset = <optimized out>\n        offset = <optimized out>\n#11 extmark_splice_cols (buf=0x652e14949500, start_row=0x14, start_col=0x1b, old_col=<optimized out>, new_col=<optimized out>, undo=kExtmarkUndo) at /usr/src/debug/neovim/neovim/src/nvim/extmark.c:648\nNo locals.\n#12 inserted_bytes (lnum=lnum@entry=0x15, start_col=start_col@entry=0x1b, old_col=old_col@entry=0x55, new_col=new_col@entry=0x0) at /usr/src/debug/neovim/neovim/src/nvim/change.c:457\nNo locals.\n#13 0x0000652e0484330b in del_bytes (count=0x55, fixpos_arg=<optimized out>, use_delcombine=<optimized out>) at /usr/src/debug/neovim/neovim/src/nvim/change.c:938\n        lnum = <optimized out>\n        col = 0x1b\n        fixpos = <optimized out>\n        oldp = <optimized out>\n        oldlen = <optimized out>\n        movelen = <optimized out>\n        newlen = <optimized out>\n        alloc_newp = <optimized out>\n        newp = 0x652e14c35820 \"\\tg_usb_device_bulk_transfer\"\n#14 0x0000652e04a05ed4 in op_delete (oap=oap@entry=0x7ffd3c884e08) at /usr/src/debug/neovim/neovim/src/nvim/ops.c:1807\n        n = 0x55\n        lnum = <optimized out>\n        bd = {\n          startspaces = 0x0,\n          endspaces = 0x0,\n          textlen = 0x0,\n          textstart = 0x0,\n          textcol = 0x0,\n          start_vcol = 0x0,\n          end_vcol = 0x0,\n          is_short = 0x0,\n          is_MAX = 0x0,\n          is_oneChar = 0x0,\n          pre_whitesp = 0x0,\n          pre_whitesp_c = 0x0,\n          end_char_vcols = 0x0,\n          start_char_vcols = 0x0\n        }\n        old_lcount = 0x1d\n#15 0x0000652e04a06499 in op_change (oap=0x7ffd3c884e08) at /usr/src/debug/neovim/neovim/src/nvim/ops.c:2514\n        pre_textlen = 0x0\n        pre_indent = 0x0\n        firstline = <optimized out>\n        bd = {\n          startspaces = 0x0,\n          endspaces = 0x0,\n          textlen = 0x0,\n          textstart = 0x0,\n          textcol = 0x1ac9fd00,\n          start_vcol = 0xafd7b98,\n          end_vcol = 0x14bf4a30,\n          is_short = 0x652e,\n          is_MAX = 0x149596f0,\n          is_oneChar = 0x652e,\n          pre_whitesp = 0x3c884e28,\n          pre_whitesp_c = 0x7ffd,\n          end_char_vcols = 0x14949500,\n          start_char_vcols = 0x652e\n        }\n        l = 0x1b\n        save_finish_op = <optimized out>\n        retval = <optimized out>\n#16 0x0000652e04a0e57e in do_pending_operator (cap=0x7ffd3c884e60, old_col=0x1c, gui_yank=0x0) at /usr/src/debug/neovim/neovim/src/nvim/ops.c:6286\n        empty_region_error = <optimized out>\n        restart_edit_save = 0x0\n        include_line_break = <optimized out>\n        redo_yank = <optimized out>\n        l = <optimized out>\n        oap = <optimized out>\n        lbr_saved = <optimized out>\n        old_cursor = <optimized out>\n        redo_VIsual = {\n          rv_mode = 0x76,\n          rv_line_count = 0x1,\n          rv_vcol = 0x14,\n          rv_count = 0x0,\n          rv_arg = 0x0\n        }\n#17 0x0000652e049eb4d5 in normal_finish_command (s=0x7ffd3c884df0) at /usr/src/debug/neovim/neovim/src/nvim/normal.c:987\n        prev_finish_op = <optimized out>\n        normal_end = <optimized out>\n        prev_finish_op = <optimized out>\n#18 normal_execute (state=0x7ffd3c884df0, key=<optimized out>) at /usr/src/debug/neovim/neovim/src/nvim/normal.c:1247\n        s = 0x7ffd3c884df0\n        __PRETTY_FUNCTION__ = \"normal_execute\"\n#19 0x0000652e04ac60c6 in state_enter (s=0x7ffd3c884df0) at /usr/src/debug/neovim/neovim/src/nvim/state.c:102\n        check_result = <optimized out>\n        key = <optimized out>\n        execute_result = <optimized out>\n        getkey = <optimized out>\n#20 0x0000652e049e8cfa in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at /usr/src/debug/neovim/neovim/src/nvim/normal.c:523\n        state = {\n          state = {\n            check = 0x652e049ea520 <normal_check>,\n            execute = 0x652e049eaf60 <normal_execute>\n          },\n          command_finished = 0x0,\n          ctrl_w = 0x0,\n          need_flushbuf = 0x1,\n          set_prevcount = 0x1,\n          previous_got_int = 0x0,\n          cmdwin = 0x0,\n          noexmode = 0x0,\n          toplevel = 0x1,\n          oa = {\n            op_type = 0x3,\n            regname = 0x0,\n            motion_type = kMTCharWise,\n            motion_force = 0x0,\n            use_reg_one = 0x0,\n            inclusive = 0x1,\n            end_adjusted = 0x0,\n            start = {\n              lnum = 0x15,\n              col = 0x1b,\n              coladd = 0x0\n            },\n            end = {\n              lnum = 0x15,\n              col = 0x6f,\n              coladd = 0x0\n            },\n            cursor_start = {\n              lnum = 0x0,\n              col = 0x0,\n              coladd = 0x0\n            },\n            line_count = 0x1,\n            empty = 0x0,\n            is_VIsual = 0x0,\n            start_vcol = 0x32,\n            end_vcol = 0x45,\n            prev_opcount = 0x0,\n            prev_count0 = 0x0,\n            excl_tr_ws = 0x0\n          },\n          ca = {\n            oap = 0x7ffd3c884e08,\n            prechar = 0x0,\n            cmdchar = 0x24,\n            nchar = 0x0,\n            nchar_composing = '\\000' <repeats 31 times>,\n            nchar_len = 0x0,\n            extra_char = 0x0,\n            opcount = 0x0,\n            count0 = 0x0,\n            count1 = 0x1,\n            arg = 0x0,\n            retval = 0x0,\n            searchbuf = 0x0\n          },\n          mapped_len = 0x0,\n          old_mapped_len = 0x0,\n          idx = 0x26,\n          c = 0x24,\n          old_col = 0x1c,\n          old_pos = {\n            lnum = 0x15,\n            col = 0x1b,\n            coladd = 0x0\n          }\n        }\n        prev_oap = 0x0\n#21 0x0000652e047e2dcd in main (argc=<optimized out>, argv=<optimized out>) at /usr/src/debug/neovim/neovim/src/nvim/main.c:651\n        fname = <optimized out>\n        params = {\n          argc = 0x3,\n          argv = 0x7ffd3c885388,\n          use_vimrc = 0x0,\n          clean = 0x0,\n          n_commands = 0x0,\n          commands = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},\n          cmds_tofree = \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\",\n          n_pre_commands = 0x0,\n          pre_commands = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},\n          luaf = 0x0,\n          lua_arg0 = 0xffffffff,\n          edit_type = 0x1,\n          tagname = 0x0,\n          use_ef = 0x0,\n          input_istext = 0x0,\n          no_swap_file = 0x0,\n          use_debug_break_level = 0xffffffff,\n          window_count = 0x1,\n          window_layout = 0x0,\n          diff_mode = 0x0,\n          listen_addr = 0x0,\n          remote = 0x0,\n          server_addr = 0x0,\n          scriptin = 0x0,\n          scriptout = 0x0,\n          scriptout_append = 0x0,\n          had_stdin_file = 0x0\n        }\n        cwd = 0x0\n        has_term = <optimized out>\n        use_builtin_ui = <optimized out>\n        remote_ui = <optimized out>\n        use_remote_ui = <optimized out>\n        listen_and_embed = <optimized out>\n        vimrc_none = <optimized out>\n        __PRETTY_FUNCTION__ = \"main\"\n```\n\n</details>",
            "created_at": "2025-05-20T22:45:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2895996126",
            "id": 2895996126,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6snWTe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2895996126/reactions"
            },
            "updated_at": "2025-05-20T22:45:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2895996126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/21960678?v=4",
                "events_url": "https://api.github.com/users/baltitenger/events{/privacy}",
                "followers_url": "https://api.github.com/users/baltitenger/followers",
                "following_url": "https://api.github.com/users/baltitenger/following{/other_user}",
                "gists_url": "https://api.github.com/users/baltitenger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/baltitenger",
                "id": 21960678,
                "login": "baltitenger",
                "node_id": "MDQ6VXNlcjIxOTYwNjc4",
                "organizations_url": "https://api.github.com/users/baltitenger/orgs",
                "received_events_url": "https://api.github.com/users/baltitenger/received_events",
                "repos_url": "https://api.github.com/users/baltitenger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/baltitenger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baltitenger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/baltitenger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've been running my modified version for work for a month now, and haven't experienced anything strange.",
            "created_at": "2025-05-21T14:24:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2898163410",
            "id": 2898163410,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6svnbS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2898163410/reactions"
            },
            "updated_at": "2025-05-21T14:24:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2898163410",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10226626?v=4",
                "events_url": "https://api.github.com/users/Calder-Ty/events{/privacy}",
                "followers_url": "https://api.github.com/users/Calder-Ty/followers",
                "following_url": "https://api.github.com/users/Calder-Ty/following{/other_user}",
                "gists_url": "https://api.github.com/users/Calder-Ty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Calder-Ty",
                "id": 10226626,
                "login": "Calder-Ty",
                "node_id": "MDQ6VXNlcjEwMjI2NjI2",
                "organizations_url": "https://api.github.com/users/Calder-Ty/orgs",
                "received_events_url": "https://api.github.com/users/Calder-Ty/received_events",
                "repos_url": "https://api.github.com/users/Calder-Ty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Calder-Ty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Calder-Ty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Calder-Ty",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've recently gotten this error after adding some snippets (and heavily changing my configuration). I've also started to get duplicate completions from blink-cmp.\n\nThe assertion is done when `strict` is true, which happens in `marktree_intersect_pair` and `marktree_del_itr`, the latter of which is called in `extmark_del` and `extmark_set`, used in the api, see `:h extmark`, where strict can be passed as an option (defaults to `true`). Both luasnip and blink make use of extmarks extensively.\n\nMy understanding from around an hour of looking around is that this is related to the snippet and the completion plugins, and my suspicion is that it comes from a \"faulty snippet\", as extmarks are used for jump nodes etc. I got this error just after authoring my own (bad) snippets.",
            "created_at": "2025-06-12T06:42:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2965317394",
            "id": 2965317394,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6wvycS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2965317394/reactions"
            },
            "updated_at": "2025-06-12T08:47:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2965317394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/117492777?v=4",
                "events_url": "https://api.github.com/users/nordlender/events{/privacy}",
                "followers_url": "https://api.github.com/users/nordlender/followers",
                "following_url": "https://api.github.com/users/nordlender/following{/other_user}",
                "gists_url": "https://api.github.com/users/nordlender/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nordlender",
                "id": 117492777,
                "login": "nordlender",
                "node_id": "U_kgDOBwDMKQ",
                "organizations_url": "https://api.github.com/users/nordlender/orgs",
                "received_events_url": "https://api.github.com/users/nordlender/received_events",
                "repos_url": "https://api.github.com/users/nordlender/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nordlender/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nordlender/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nordlender",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "can someone send a pr with the change suggested in https://github.com/neovim/neovim/issues/27196#issuecomment-2815633682 ",
            "created_at": "2025-06-12T17:00:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2967591033",
            "id": 2967591033,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6w4dh5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2967591033/reactions"
            },
            "updated_at": "2025-06-12T17:00:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2967591033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@Calder-Ty I've been trying to reproduce this, I think I am almost there but not sure I get the right snippet. I get two different suggestions, but this is the first one:\n\n![Image](https://github.com/user-attachments/assets/6ce3329e-ecff-4e6b-89ad-840e08d1a91e)\n\nIs it the right one? ",
            "created_at": "2025-06-13T07:44:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2969417061",
            "id": 2969417061,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6w_bVl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2969417061/reactions"
            },
            "updated_at": "2025-06-13T07:44:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2969417061",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bfredl Yes, that is the correct snippet.",
            "created_at": "2025-06-16T14:00:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/27196#issuecomment-2976782571",
            "id": 2976782571,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27196",
            "node_id": "IC_kwDOAPphoM6xbhjr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2976782571/reactions"
            },
            "updated_at": "2025-06-16T14:00:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2976782571",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10226626?v=4",
                "events_url": "https://api.github.com/users/Calder-Ty/events{/privacy}",
                "followers_url": "https://api.github.com/users/Calder-Ty/followers",
                "following_url": "https://api.github.com/users/Calder-Ty/following{/other_user}",
                "gists_url": "https://api.github.com/users/Calder-Ty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Calder-Ty",
                "id": 10226626,
                "login": "Calder-Ty",
                "node_id": "MDQ6VXNlcjEwMjI2NjI2",
                "organizations_url": "https://api.github.com/users/Calder-Ty/orgs",
                "received_events_url": "https://api.github.com/users/Calder-Ty/received_events",
                "repos_url": "https://api.github.com/users/Calder-Ty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Calder-Ty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Calder-Ty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Calder-Ty",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 37,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27196/comments",
    "created_at": "2024-01-25T20:44:55Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27196/events",
    "html_url": "https://github.com/neovim/neovim/issues/27196",
    "id": 2101139442,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains minimal reproducing steps",
            "id": 435851959,
            "name": "has:repro",
            "node_id": "MDU6TGFiZWw0MzU4NTE5NTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:repro"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "marks, extmarks, decorations, virtual text",
            "id": 1680119719,
            "name": "marks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/marks"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27196/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 32,
        "created_at": "2025-05-30T23:27:41Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/51",
        "id": 12988090,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/51/labels",
        "node_id": "MI_kwDOAPphoM4Axi66",
        "number": 51,
        "open_issues": 23,
        "state": "open",
        "title": "0.11.3",
        "updated_at": "2025-06-16T23:24:54Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/51"
    },
    "node_id": "I_kwDOAPphoM59PNfy",
    "number": 27196,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 23,
        "-1": 0,
        "confused": 0,
        "eyes": 2,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 25,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27196/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27196/timeline",
    "title": "Assertion `seen` failure on marktree",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-06-16T14:00:49Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27196",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia",
        "user_view_type": "public"
    }
}