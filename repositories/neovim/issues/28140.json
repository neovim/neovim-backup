{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nAs far as I am aware, there is not a straightforward way to attach hook into lsp hover windows. Autocmds don't provide enough information to reliably extend hover doc functionality and I am unaware of a reliable strategy to get the window or buffer ids of hover floats.\r\n\r\nIt is possible to hook into them by overriding the `vim.lsp.handlers[vim.lsp.protocol.Methods.textDocument_hover]` function, but overriding built-in functions is a hack way of solving this problem.\n\n### Expected behavior\n\nUsers should be able to hook into the creation of lsp hover windows to attach keymaps, modify buffer contents, apply custom functions, etc.\r\n\r\nFor example, adding a keymap to scroll the hover docs window without entering the window should be straightforward and not require overriding built-in functions (see #27288).\r\n\r\nI could be totally ignorant to some strategy for doing this, but I cannot find anything useful after hours of research.\r\nI am also unfamiliar with Neovim's source, so the suggested solutions could be terrible ideas.\r\n\r\nI would love to implement these solutions myself, but I'm curious if this is even wanted/needed before working on it.\r\n\r\n### Possible Solutions\r\n\r\n#### Give Hover Doc Buffers a Unique Filetype\r\n\r\nThis is the most simple solution. This allows users to hook into the window creation via the `FileType` auevent.\r\nOne downside of this solution is that you have to discover the window id via the buffer id, which isn't ideal.\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd('Filetype', {\r\n    pattern = 'LspDocFloat',\r\n    callback = function(args)\r\n        vim.keymap.set('n', 'T', function() userFunction() end, { buffer = args.buf })\r\n    end\r\n})\r\n```\r\n\r\n#### Add an auevent for hover window creation\r\n\r\nMore complicated that adding a filetype, but potentially more useful. Would need to expose `args.win` and `args.buf`.\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd('HoverNew', {\r\n    callback = function(args)\r\n        vim.keymap.set('n', 'T', function() userFunction(args.win) end, { buffer = args.buf })\r\n    end\r\n})\r\n```\r\n\r\n#### Expose the buffer and window ids via `vim.lsp.buf.hover()`\r\n\r\nProbably not even possible since the handler that creates the float seems to only be invoked on server response.\r\nUsers could then wrap their own function and call it in a keymap.\r\n\r\n```lua\r\nfunction M.hover()\r\n    local winnr, bufnr = vim.lsp.buf.hover()\r\n    -- do whatever you want that requires the winnr/bufnr\r\nend\r\n\r\nvim.keymap.set('n', 'K', function() M.hover() end)\r\n```\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "The LSP hover function could set a `b:lsp` variable on the hover window, then autocmds can check that.\r\n\r\n> It is possible to hook into them by overriding the `vim.lsp.handlers[vim.lsp.protocol.Methods.textDocument_hover]` function, but overriding built-in functions is a hack way of solving this problem.\r\n\r\nsee\r\n\r\n- https://github.com/neovim/neovim/issues/24229\r\n- https://github.com/neovim/neovim/pull/22598#issuecomment-1463367606",
            "created_at": "2024-04-09T20:31:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/28140#issuecomment-2046000698",
            "id": 2046000698,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28140",
            "node_id": "IC_kwDOAPphoM558346",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2046000698/reactions"
            },
            "updated_at": "2024-09-07T10:54:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2046000698",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think this is out of scope for the built-in hover. There are plans to provide _some_ customisation (e.g. borders) but only for things that are valuable to enough users. We at least need to know some concrete applications rather than just \"attach keymaps, modify buffer contents, apply custom functions\". Otherwise, I don't think it justifies the maintenance burden.\n\nIf you want total control of the hover, then the solution if to provide your own. E.g. hover.nvim does exactly [this](https://github.com/lewis6991/hover.nvim/blob/main/lua/hover/providers/lsp.lua).",
            "created_at": "2024-10-31T09:23:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/28140#issuecomment-2449401390",
            "id": 2449401390,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28140",
            "node_id": "IC_kwDOAPphoM6R_uYu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449401390/reactions"
            },
            "updated_at": "2024-10-31T09:23:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449401390",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> If you want total control of the hover, then the solution if to provide your own.\n\nThere's a lot of middle ground between *roll your own hover* and *there's an option for round borders*. For example, many people (in my experience) want to be able [to close the hover without entering it](https://github.com/neovim/neovim/issues/27288) and [to scroll the hover without entering it](https://github.com/neovim/neovim/issues/20146). It would be great if it were easier to hook into the hover to add keybindings like that.",
            "created_at": "2024-10-31T18:24:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/28140#issuecomment-2450556160",
            "id": 2450556160,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28140",
            "node_id": "IC_kwDOAPphoM6SEIUA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2450556160/reactions"
            },
            "updated_at": "2024-10-31T18:24:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2450556160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> If you want total control of the hover, then the solution if to provide your own.\n\nI did provide my own for the better part of 6 months since creating this issue. I overrode `vim.lsp.handlers['textDocument/hover']` and it worked well for my use case. I just updated to nightly and #30982 has deprecated the handlers; my overrides are no longer working.\n\n> We at least need to know some concrete applications rather than just \"attach keymaps, modify buffer contents, apply custom functions\". Otherwise, I don't think it justifies the maintenance burden.\n\nThat's completely understandable. `vim.lsp` seems to be going through a lot of changes at the moment and I appreciate the work ya'll are doing. I still think that the ability to hook into the hover would be nice to have, but it's just that. If it's not worth it, out of scope, or too difficult to maintain than the default hover behavior is still great.",
            "created_at": "2024-11-14T06:01:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/28140#issuecomment-2475485118",
            "id": 2475485118,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28140",
            "node_id": "IC_kwDOAPphoM6TjOe-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2475485118/reactions"
            },
            "updated_at": "2024-11-17T18:06:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2475485118",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I was curious to see if I could add a simple hook and came up with this modification to `vim.lsp.buf.hover`.\n```diff\n8,9c8,12\n< --- @param config? vim.lsp.buf.hover.Opts\n< function M.hover(config)\n---\n> --- @param config? vim.lsp.buf.hover.Opts Configuration options for the floating window.\n> --- @param cb? fun(bufnr: integer, winid: integer, config?: vim.lsp.buf.hover.Opts) Optional callback function to be called after the hover is displayed.\n> function M.hover(config, cb)\n75c78,82\n<     lsp.util.open_floating_preview(contents, format, config)\n---\n>     local bufnr, winnr = lsp.util.open_floating_preview(contents, format, config)\n> \n>     if cb then\n>       cb(bufnr, winnr, config)\n>     end\n```\n\nAdding a callback function to `vim.lsp.buf.hover` that takes the bufnr, winnr, and the floating window config exposes everything one would need to extend the default behavior. I moved my customization from overriding the handlers into the callback and it works as it did previously.\n\n```lua\nvim.lsp.buf.hover({\n  border = 'rounded',\n  max_height = math.floor(vim.o.lines * 0.3),\n  max_width = math.floor(vim.o.columns * 0.4),\n}, function(bufnr, winnr, config)\n  -- whatever you want to do\nend)\n```\n\nI don't know if this is a rabbit-hole that core wants to go down or not. It does seem like an awfully simple way to give users the ability to do what they want with hover and signature help.",
            "created_at": "2024-11-14T07:26:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/28140#issuecomment-2475604531",
            "id": 2475604531,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28140",
            "node_id": "IC_kwDOAPphoM6Tjroz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2475604531/reactions"
            },
            "updated_at": "2024-11-14T07:39:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2475604531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Adding a callback function to `vim.lsp.buf.hover` that takes the bufnr, winnr, and the floating window config exposes everything one would need to extend the default behavior.\n\nGeneral solution is explored in https://github.com/neovim/neovim/issues/31206 and related discussions about a promise-like interface to LSP (and other parts of stdlib, eventually).",
            "created_at": "2024-11-17T18:08:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/28140#issuecomment-2481412055",
            "id": 2481412055,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28140",
            "node_id": "IC_kwDOAPphoM6T51fX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2481412055/reactions"
            },
            "updated_at": "2024-11-17T18:08:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2481412055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28140/comments",
    "created_at": "2024-04-01T01:04:38Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28140/events",
    "html_url": "https://github.com/neovim/neovim/issues/28140",
    "id": 2217296854,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28140/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6EKUPW",
    "number": 28140,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28140/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28140/timeline",
    "title": "LSP: hook into hover doc floating windows",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:58:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28140",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
        "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
        "followers_url": "https://api.github.com/users/roycrippen4/followers",
        "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
        "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/roycrippen4",
        "id": 54562558,
        "login": "roycrippen4",
        "node_id": "MDQ6VXNlcjU0NTYyNTU4",
        "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
        "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
        "repos_url": "https://api.github.com/users/roycrippen4/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/roycrippen4",
        "user_view_type": "public"
    }
}