{
    "active_lock_reason": "resolved",
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nWhen launching nvim with a custom directory (`nvim_appdata=somedir nvim`), I encountered this error from treesitter:\r\n![Screenshot 2024-03-20 130041](https://github.com/neovim/neovim/assets/52043856/0234c1ff-dcbd-426c-89e7-f6b827da2e3b)\r\nTo resolve the error, it seems likely that I need to install `nvim-treesitter` and the Lua parser. However, IMO, it shouldn't behave like this.\r\nPlease note:\r\n- The directory exists and does not contain any files.\r\n- I only encounter the error when opening a Lua file or the help.\r\n\r\n### Steps to reproduce\r\n\r\nNVIM_APPNAME=somedir nvim init.lua\r\n\r\n### Expected behavior\r\n\r\nPresent this screen without any error\r\n![Screenshot 2024-03-20 130943](https://github.com/neovim/neovim/assets/52043856/02f07c9a-4637-4a15-9c66-73eefa7b606e)\r\n\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-d326e04 Build type: RelWithDebInfo LuaJIT 2.1.1710088188 Run \"nvim -V1 -v\" for more info\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\ndon't use vim\r\n\r\n### Operating system/version\r\n\r\nwindows 11\r\n\r\n### Terminal name/version\r\n\r\nWindows Terminal v1.19.10573.0 with wsl\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nbuild from repo\r\n\r\n### Output of `cmake --system-information`\r\n\r\n<details>\r\n\r\n```console\r\nAvoid ctest truncation of output: CTEST_FULL_OUTPUT\r\n========================================================\r\n=== MAIN VARIABLES\r\n========================================================\r\nCMAKE_STATIC_LIBRARY_PREFIX == \"lib\"\r\nCMAKE_STATIC_LIBRARY_SUFFIX == \".a\"\r\nCMAKE_SHARED_LIBRARY_PREFIX == \"lib\"\r\nCMAKE_SHARED_LIBRARY_SUFFIX == \".so\"\r\nCMAKE_SHARED_MODULE_PREFIX == \"lib\"\r\nCMAKE_SHARED_MODULE_SUFFIX == \".so\"\r\n\r\n\r\nCMAKE_DL_LIBS == \"dl\"\r\nCMAKE_LIBRARY_PATH_FLAG == \"-L\"\r\nCMAKE_LINK_LIBRARY_FLAG == \"-l\"\r\nCMAKE_SKIP_RPATH == \"NO\"\r\nCMAKE_SYSTEM_INFO_FILE == \"Platform/Linux\"\r\nCMAKE_SYSTEM_NAME == \"Linux\"\r\nCMAKE_SYSTEM == \"Linux-5.15.146.1-microsoft-standard-WSL2\"\r\nCMAKE_CXX_COMPILER == \"/usr/bin/c++\"\r\nCMAKE_C_COMPILER == \"/usr/bin/cc\"\r\nCMAKE_COMPILER_IS_GNUCC == \"1\"\r\nCMAKE_COMPILER_IS_GNUCXX == \"1\"\r\n\r\n// C shared library flag\r\nCMAKE_SHARED_LIBRARY_C_FLAGS == \"-fPIC\"\r\nCMAKE_SHARED_LIBRARY_CREATE_C_FLAGS == \"-shared\"\r\nCMAKE_SHARED_LIBRARY_LINK_FLAGS == \"\"\r\nCMAKE_SHARED_LIBRARY_RUNTIME_FLAG == \"\"\r\nCMAKE_SHARED_LIBRARY_RUNTIME_FLAG_SEP == \"\"\r\nCMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS == \"-Wl,-Bstatic\"\r\nCMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS == \"-Wl,-Bdynamic\"\r\n\r\n// C shared module flags\r\nCMAKE_SHARED_MODULE_C_FLAGS  == \"-fPIC\"\r\nCMAKE_SHARED_MODULE_CREATE_C_FLAGS == \"-shared\"\r\nCMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS == \"-Wl,-Bstatic\"\r\nCMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS == \"-Wl,-Bdynamic\"\r\n\r\n// C exe flags\r\nCMAKE_EXE_LINK_STATIC_C_FLAGS == \"-Wl,-Bstatic\"\r\nCMAKE_EXE_LINK_DYNAMIC_C_FLAGS == \"-Wl,-Bdynamic\"\r\n\r\n// CXX shared library flags\r\nCMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS == \"-shared\"\r\nCMAKE_SHARED_LIBRARY_CXX_FLAGS == \"-fPIC\"\r\nCMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS == \"-rdynamic\"\r\nCMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG == \"-Wl,-rpath,\"\r\nCMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP == \":\"\r\nCMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS == \"-Wl,-Bstatic\"\r\nCMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS == \"-Wl,-Bdynamic\"\r\n\r\n// CXX shared module flags\r\nCMAKE_SHARED_MODULE_CREATE_CXX_FLAGS == \"-shared\"\r\nCMAKE_SHARED_MODULE_CXX_FLAGS == \"-fPIC\"\r\nCMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS == \"-Wl,-Bstatic\"\r\nCMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS == \"-Wl,-Bdynamic\"\r\n\r\n// CXX exe flags\r\nCMAKE_EXE_LINK_STATIC_CXX_FLAGS == \"-Wl,-Bstatic\"\r\nCMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS == \"-Wl,-Bdynamic\"\r\n\r\nCMAKE_USER_MAKE_RULES_OVERRIDE == \"\"\r\nCMAKE_VERBOSE_MAKEFILE == \"FALSE\"\r\nCMAKE_BUILD_TYPE == \"\"\r\nCMAKE_CXX_FLAGS == \"\"\r\nCMAKE_CXX_FLAGS_DEBUG == \"-g\"\r\nCMAKE_CXX_FLAGS_MINSIZEREL == \"-Os -DNDEBUG\"\r\nCMAKE_CXX_FLAGS_RELEASE == \"-O3 -DNDEBUG\"\r\nCMAKE_CXX_FLAGS_RELWITHDEBINFO == \"-O2 -g -DNDEBUG\"\r\n\r\nCMAKE_C_FLAGS == \"\"\r\nCMAKE_C_FLAGS_DEBUG == \"-g\"\r\nCMAKE_C_FLAGS_MINSIZEREL == \"-Os -DNDEBUG\"\r\nCMAKE_C_FLAGS_RELEASE == \"-O3 -DNDEBUG\"\r\nCMAKE_C_FLAGS_RELWITHDEBINFO == \"-O2 -g -DNDEBUG\"\r\n\r\n// build rules\r\nCMAKE_CXX_CREATE_SHARED_LIBRARY == \"<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>\"\r\nCMAKE_CXX_CREATE_SHARED_MODULE == \"<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>\"\r\nCMAKE_C_CREATE_SHARED_LIBRARY == \"<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>\"\r\nCMAKE_C_CREATE_SHARED_MODULE == \"<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>\"\r\nCMAKE_CXX_CREATE_STATIC_LIBRARY == \"\"\r\nCMAKE_C_CREATE_STATIC_LIBRARY == \"\"\r\nCMAKE_CXX_COMPILE_OBJECT == \"<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>\"\r\nCMAKE_C_COMPILE_OBJECT == \"<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>\"\r\nCMAKE_C_LINK_EXECUTABLE == \"<CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>\"\r\nCMAKE_CXX_LINK_EXECUTABLE == \"<CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>\"\r\n\r\n=================================================================\r\n=== VARIABLES\r\n=================================================================\r\nCMAKE_ADDR2LINE \"/usr/bin/addr2line\"\r\nCMAKE_AR \"/usr/bin/ar\"\r\nCMAKE_AR \"/usr/bin/ar\"\r\nCMAKE_AUTOGEN_ORIGIN_DEPENDS \"ON\"\r\nCMAKE_AUTOMOC_COMPILER_PREDEFINES \"ON\"\r\nCMAKE_AUTOMOC_MACRO_NAMES \"Q_OBJECT;Q_GADGET;Q_NAMESPACE;Q_NAMESPACE_EXPORT\"\r\nCMAKE_AUTOMOC_PATH_PREFIX \"OFF\"\r\nCMAKE_BASE_NAME \"g++\"\r\nCMAKE_BINARY_DIR \"/home/ksim/software/binaries/neovim/__cmake_systeminformation\"\r\nCMAKE_BUILD_TOOL \"/usr/bin/gmake\"\r\nCMAKE_BUILD_TYPE \"\"\r\nCMAKE_C11_COMPILE_FEATURES \"c_std_11;c_static_assert\"\r\nCMAKE_C11_EXTENSION_COMPILE_OPTION \"-std=gnu11\"\r\nCMAKE_C11_STANDARD_COMPILE_OPTION \"-std=c11\"\r\nCMAKE_C11_STANDARD__HAS_FULL_SUPPORT \"ON\"\r\nCMAKE_C17_COMPILE_FEATURES \"c_std_17\"\r\nCMAKE_C17_EXTENSION_COMPILE_OPTION \"-std=gnu17\"\r\nCMAKE_C17_STANDARD_COMPILE_OPTION \"-std=c17\"\r\nCMAKE_C23_COMPILE_FEATURES \"c_std_23\"\r\nCMAKE_C23_EXTENSION_COMPILE_OPTION \"-std=gnu2x\"\r\nCMAKE_C23_STANDARD_COMPILE_OPTION \"-std=c2x\"\r\nCMAKE_C90_COMPILE_FEATURES \"c_std_90;c_function_prototypes\"\r\nCMAKE_C90_EXTENSION_COMPILE_OPTION \"-std=gnu90\"\r\nCMAKE_C90_STANDARD_COMPILE_OPTION \"-std=c90\"\r\nCMAKE_C90_STANDARD__HAS_FULL_SUPPORT \"ON\"\r\nCMAKE_C99_COMPILE_FEATURES \"c_std_99;c_restrict;c_variadic_macros\"\r\nCMAKE_C99_EXTENSION_COMPILE_OPTION \"-std=gnu99\"\r\nCMAKE_C99_STANDARD_COMPILE_OPTION \"-std=c99\"\r\nCMAKE_C99_STANDARD__HAS_FULL_SUPPORT \"ON\"\r\nCMAKE_CFG_INTDIR \".\"\r\nCMAKE_COLOR_MAKEFILE \"ON\"\r\nCMAKE_COMMAND \"/usr/bin/cmake\"\r\nCMAKE_COMPILER_IS_GNUCC \"1\"\r\nCMAKE_COMPILER_IS_GNUCXX \"1\"\r\nCMAKE_CPACK_COMMAND \"/usr/bin/cpack\"\r\nCMAKE_CROSSCOMPILING \"FALSE\"\r\nCMAKE_CTEST_COMMAND \"/usr/bin/ctest\"\r\nCMAKE_CURRENT_BINARY_DIR \"/home/ksim/software/binaries/neovim/__cmake_systeminformation\"\r\nCMAKE_CURRENT_LIST_DIR \"/home/ksim/software/binaries/neovim/__cmake_systeminformation\"\r\nCMAKE_CURRENT_LIST_FILE \"/home/ksim/software/binaries/neovim/__cmake_systeminformation/CMakeLists.txt\"\r\nCMAKE_CURRENT_SOURCE_DIR \"/home/ksim/software/binaries/neovim/__cmake_systeminformation\"\r\nCMAKE_CXX11_COMPILE_FEATURES \"cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates\"\r\nCMAKE_CXX11_EXTENSION_COMPILE_OPTION \"-std=gnu++11\"\r\nCMAKE_CXX11_STANDARD_COMPILE_OPTION \"-std=c++11\"\r\nCMAKE_CXX11_STANDARD__HAS_FULL_SUPPORT \"ON\"\r\nCMAKE_CXX14_COMPILE_FEATURES \"cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates\"\r\nCMAKE_CXX14_EXTENSION_COMPILE_OPTION \"-std=gnu++14\"\r\nCMAKE_CXX14_STANDARD_COMPILE_OPTION \"-std=c++14\"\r\nCMAKE_CXX14_STANDARD__HAS_FULL_SUPPORT \"ON\"\r\nCMAKE_CXX17_COMPILE_FEATURES \"cxx_std_17\"\r\nCMAKE_CXX17_EXTENSION_COMPILE_OPTION \"-std=gnu++17\"\r\nCMAKE_CXX17_STANDARD_COMPILE_OPTION \"-std=c++17\"\r\nCMAKE_CXX20_COMPILE_FEATURES \"cxx_std_20\"\r\nCMAKE_CXX20_EXTENSION_COMPILE_OPTION \"-std=gnu++20\"\r\nCMAKE_CXX20_STANDARD_COMPILE_OPTION \"-std=c++20\"\r\nCMAKE_CXX23_COMPILE_FEATURES \"cxx_std_23\"\r\nCMAKE_CXX23_EXTENSION_COMPILE_OPTION \"-std=gnu++23\"\r\nCMAKE_CXX23_STANDARD_COMPILE_OPTION \"-std=c++23\"\r\nCMAKE_CXX98_COMPILE_FEATURES \"cxx_std_98;cxx_template_template_parameters\"\r\nCMAKE_CXX98_EXTENSION_COMPILE_OPTION \"-std=gnu++98\"\r\nCMAKE_CXX98_STANDARD_COMPILE_OPTION \"-std=c++98\"\r\nCMAKE_CXX98_STANDARD__HAS_FULL_SUPPORT \"ON\"\r\nCMAKE_CXX_ABI_COMPILED \"TRUE\"\r\nCMAKE_CXX_ARCHIVE_APPEND \"<CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS>\"\r\nCMAKE_CXX_ARCHIVE_APPEND_IPO \"\"/usr/bin/gcc-ar-11\" r <TARGET> <LINK_FLAGS> <OBJECTS>\"\r\nCMAKE_CXX_ARCHIVE_CREATE \"<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>\"\r\nCMAKE_CXX_ARCHIVE_CREATE_IPO \"\"/usr/bin/gcc-ar-11\" cr <TARGET> <LINK_FLAGS> <OBJECTS>\"\r\nCMAKE_CXX_ARCHIVE_FINISH \"<CMAKE_RANLIB> <TARGET>\"\r\nCMAKE_CXX_ARCHIVE_FINISH_IPO \"\"/usr/bin/gcc-ranlib-11\" <TARGET>\"\r\nCMAKE_CXX_BYTE_ORDER \"LITTLE_ENDIAN\"\r\nCMAKE_CXX_CL_SHOWINCLUDES_PREFIX \"\"\r\nCMAKE_CXX_COMPILER \"/usr/bin/c++\"\r\nCMAKE_CXX_COMPILER \"/usr/bin/c++\"\r\nCMAKE_CXX_COMPILER_ABI \"ELF\"\r\nCMAKE_CXX_COMPILER_AR \"/usr/bin/gcc-ar-11\"\r\nCMAKE_CXX_COMPILER_AR \"/usr/bin/gcc-ar-11\"\r\nCMAKE_CXX_COMPILER_ARCHITECTURE_ID \"\"\r\nCMAKE_CXX_COMPILER_ARG1 \"\"\r\nCMAKE_CXX_COMPILER_ENV_VAR \"CXX\"\r\nCMAKE_CXX_COMPILER_FRONTEND_VARIANT \"\"\r\nCMAKE_CXX_COMPILER_ID \"GNU\"\r\nCMAKE_CXX_COMPILER_ID_PLATFORM_CONTENT \"#define STRINGIFY_HELPER(X) #X\r\n#define STRINGIFY(X) STRINGIFY_HELPER(X)\r\n\r\n/* Identify known platforms by name.  */\r\n#if defined(__linux) || defined(__linux__) || defined(linux)\r\n# define PLATFORM_ID \"Linux\"\r\n\r\n#elif defined(__MSYS__)\r\n# define PLATFORM_ID \"MSYS\"\r\n\r\n#elif defined(__CYGWIN__)\r\n# define PLATFORM_ID \"Cygwin\"\r\n\r\n#elif defined(__MINGW32__)\r\n# define PLATFORM_ID \"MinGW\"\r\n\r\n#elif defined(__APPLE__)\r\n# define PLATFORM_ID \"Darwin\"\r\n\r\n#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)\r\n# define PLATFORM_ID \"Windows\"\r\n\r\n#elif defined(__FreeBSD__) || defined(__FreeBSD)\r\n# define PLATFORM_ID \"FreeBSD\"\r\n\r\n#elif defined(__NetBSD__) || defined(__NetBSD)\r\n# define PLATFORM_ID \"NetBSD\"\r\n\r\n#elif defined(__OpenBSD__) || defined(__OPENBSD)\r\n# define PLATFORM_ID \"OpenBSD\"\r\n\r\n#elif defined(__sun) || defined(sun)\r\n# define PLATFORM_ID \"SunOS\"\r\n\r\n#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)\r\n# define PLATFORM_ID \"AIX\"\r\n\r\n#elif defined(__hpux) || defined(__hpux__)\r\n# define PLATFORM_ID \"HP-UX\"\r\n\r\n#elif defined(__HAIKU__)\r\n# define PLATFORM_ID \"Haiku\"\r\n\r\n#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)\r\n# define PLATFORM_ID \"BeOS\"\r\n\r\n#elif defined(__QNX__) || defined(__QNXNTO__)\r\n# define PLATFORM_ID \"QNX\"\r\n\r\n#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)\r\n# define PLATFORM_ID \"Tru64\"\r\n\r\n#elif defined(__riscos) || defined(__riscos__)\r\n# define PLATFORM_ID \"RISCos\"\r\n\r\n#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)\r\n# define PLATFORM_ID \"SINIX\"\r\n\r\n#elif defined(__UNIX_SV__)\r\n# define PLATFORM_ID \"UNIX_SV\"\r\n\r\n#elif defined(__bsdos__)\r\n# define PLATFORM_ID \"BSDOS\"\r\n\r\n#elif defined(_MPRAS) || defined(MPRAS)\r\n# define PLATFORM_ID \"MP-RAS\"\r\n\r\n#elif defined(__osf) || defined(__osf__)\r\n# define PLATFORM_ID \"OSF1\"\r\n\r\n#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)\r\n# define PLATFORM_ID \"SCO_SV\"\r\n\r\n#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)\r\n# define PLATFORM_ID \"ULTRIX\"\r\n\r\n#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)\r\n# define PLATFORM_ID \"Xenix\"\r\n\r\n#elif defined(__WATCOMC__)\r\n# if defined(__LINUX__)\r\n#  define PLATFORM_ID \"Linux\"\r\n\r\n# elif defined(__DOS__)\r\n#  define PLATFORM_ID \"DOS\"\r\n\r\n# elif defined(__OS2__)\r\n#  define PLATFORM_ID \"OS2\"\r\n\r\n# elif defined(__WINDOWS__)\r\n#  define PLATFORM_ID \"Windows3x\"\r\n\r\n# elif defined(__VXWORKS__)\r\n#  define PLATFORM_ID \"VxWorks\"\r\n\r\n# else /* unknown platform */\r\n#  define PLATFORM_ID\r\n# endif\r\n\r\n#elif defined(__INTEGRITY)\r\n# if defined(INT_178B)\r\n#  define PLATFORM_ID \"Integrity178\"\r\n\r\n# else /* regular Integrity */\r\n#  define PLATFORM_ID \"Integrity\"\r\n# endif\r\n\r\n#else /* unknown platform */\r\n# define PLATFORM_ID\r\n\r\n#endif\r\n\r\n/* For windows compilers MSVC and Intel we can determine\r\n   the architecture of the compiler being used.  This is because\r\n   the compilers do not have flags that can change the architecture,\r\n   but rather depend on which compiler is being used\r\n*/\r\n#if defined(_WIN32) && defined(_MSC_VER)\r\n# if defined(_M_IA64)\r\n#  define ARCHITECTURE_ID \"IA64\"\r\n\r\n# elif defined(_M_ARM64EC)\r\n#  define ARCHITECTURE_ID \"ARM64EC\"\r\n\r\n# elif defined(_M_X64) || defined(_M_AMD64)\r\n#  define ARCHITECTURE_ID \"x64\"\r\n\r\n# elif defined(_M_IX86)\r\n#  define ARCHITECTURE_ID \"X86\"\r\n\r\n# elif defined(_M_ARM64)\r\n#  define ARCHITECTURE_ID \"ARM64\"\r\n\r\n# elif defined(_M_ARM)\r\n#  if _M_ARM == 4\r\n#   define ARCHITECTURE_ID \"ARMV4I\"\r\n#  elif _M_ARM == 5\r\n#   define ARCHITECTURE_ID \"ARMV5I\"\r\n#  else\r\n#   define ARCHITECTURE_ID \"ARMV\" STRINGIFY(_M_ARM)\r\n#  endif\r\n\r\n# elif defined(_M_MIPS)\r\n#  define ARCHITECTURE_ID \"MIPS\"\r\n\r\n# elif defined(_M_SH)\r\n#  define ARCHITECTURE_ID \"SHx\"\r\n\r\n# else /* unknown architecture */\r\n#  define ARCHITECTURE_ID \"\"\r\n# endif\r\n\r\n#elif defined(__WATCOMC__)\r\n# if defined(_M_I86)\r\n#  define ARCHITECTURE_ID \"I86\"\r\n\r\n# elif defined(_M_IX86)\r\n#  define ARCHITECTURE_ID \"X86\"\r\n\r\n# else /* unknown architecture */\r\n#  define ARCHITECTURE_ID \"\"\r\n# endif\r\n\r\n#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)\r\n# if defined(__ICCARM__)\r\n#  define ARCHITECTURE_ID \"ARM\"\r\n\r\n# elif defined(__ICCRX__)\r\n#  define ARCHITECTURE_ID \"RX\"\r\n\r\n# elif defined(__ICCRH850__)\r\n#  define ARCHITECTURE_ID \"RH850\"\r\n\r\n# elif defined(__ICCRL78__)\r\n#  define ARCHITECTURE_ID \"RL78\"\r\n\r\n# elif defined(__ICCRISCV__)\r\n#  define ARCHITECTURE_ID \"RISCV\"\r\n\r\n# elif defined(__ICCAVR__)\r\n#  define ARCHITECTURE_ID \"AVR\"\r\n\r\n# elif defined(__ICC430__)\r\n#  define ARCHITECTURE_ID \"MSP430\"\r\n\r\n# elif defined(__ICCV850__)\r\n#  define ARCHITECTURE_ID \"V850\"\r\n\r\n# elif defined(__ICC8051__)\r\n#  define ARCHITECTURE_ID \"8051\"\r\n\r\n# elif defined(__ICCSTM8__)\r\n#  define ARCHITECTURE_ID \"STM8\"\r\n\r\n# else /* unknown architecture */\r\n#  define ARCHITECTURE_ID \"\"\r\n# endif\r\n\r\n#elif defined(__ghs__)\r\n# if defined(__PPC64__)\r\n#  define ARCHITECTURE_ID \"PPC64\"\r\n\r\n# elif defined(__ppc__)\r\n#  define ARCHITECTURE_ID \"PPC\"\r\n\r\n# elif defined(__ARM__)\r\n#  define ARCHITECTURE_ID \"ARM\"\r\n\r\n# elif defined(__x86_64__)\r\n#  define ARCHITECTURE_ID \"x64\"\r\n\r\n# elif defined(__i386__)\r\n#  define ARCHITECTURE_ID \"X86\"\r\n\r\n# else /* unknown architecture */\r\n#  define ARCHITECTURE_ID \"\"\r\n# endif\r\n\r\n#elif defined(__TI_COMPILER_VERSION__)\r\n# if defined(__TI_ARM__)\r\n#  define ARCHITECTURE_ID \"ARM\"\r\n\r\n# elif defined(__MSP430__)\r\n#  define ARCHITECTURE_ID \"MSP430\"\r\n\r\n# elif defined(__TMS320C28XX__)\r\n#  define ARCHITECTURE_ID \"TMS320C28x\"\r\n\r\n# elif defined(__TMS320C6X__) || defined(_TMS320C6X)\r\n#  define ARCHITECTURE_ID \"TMS320C6x\"\r\n\r\n# else /* unknown architecture */\r\n#  define ARCHITECTURE_ID \"\"\r\n# endif\r\n\r\n#else\r\n#  define ARCHITECTURE_ID\r\n#endif\r\n\r\n/* Convert integer to decimal digit literals.  */\r\n#define DEC(n)                   \\\r\n  ('0' + (((n) / 10000000)%10)), \\\r\n  ('0' + (((n) / 1000000)%10)),  \\\r\n  ('0' + (((n) / 100000)%10)),   \\\r\n  ('0' + (((n) / 10000)%10)),    \\\r\n  ('0' + (((n) / 1000)%10)),     \\\r\n  ('0' + (((n) / 100)%10)),      \\\r\n  ('0' + (((n) / 10)%10)),       \\\r\n  ('0' +  ((n) % 10))\r\n\r\n/* Convert integer to hex digit literals.  */\r\n#define HEX(n)             \\\r\n  ('0' + ((n)>>28 & 0xF)), \\\r\n  ('0' + ((n)>>24 & 0xF)), \\\r\n  ('0' + ((n)>>20 & 0xF)), \\\r\n  ('0' + ((n)>>16 & 0xF)), \\\r\n  ('0' + ((n)>>12 & 0xF)), \\\r\n  ('0' + ((n)>>8  & 0xF)), \\\r\n  ('0' + ((n)>>4  & 0xF)), \\\r\n  ('0' + ((n)     & 0xF))\r\n\r\n/* Construct a string literal encoding the version number. */\r\n#ifdef COMPILER_VERSION\r\nchar const* info_version = \"INFO\" \":\" \"compiler_version[\" COMPILER_VERSION \"]\";\r\n\r\n/* Construct a string literal encoding the version number components. */\r\n#elif defined(COMPILER_VERSION_MAJOR)\r\nchar const info_version[] = {\r\n  'I', 'N', 'F', 'O', ':',\r\n  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\r\n  COMPILER_VERSION_MAJOR,\r\n# ifdef COMPILER_VERSION_MINOR\r\n  '.', COMPILER_VERSION_MINOR,\r\n#  ifdef COMPILER_VERSION_PATCH\r\n   '.', COMPILER_VERSION_PATCH,\r\n#   ifdef COMPILER_VERSION_TWEAK\r\n    '.', COMPILER_VERSION_TWEAK,\r\n#   endif\r\n#  endif\r\n# endif\r\n  ']','\\0'};\r\n#endif\r\n\r\n/* Construct a string literal encoding the internal version number. */\r\n#ifdef COMPILER_VERSION_INTERNAL\r\nchar const info_version_internal[] = {\r\n  'I', 'N', 'F', 'O', ':',\r\n  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',\r\n  'i','n','t','e','r','n','a','l','[',\r\n  COMPILER_VERSION_INTERNAL,']','\\0'};\r\n#elif defined(COMPILER_VERSION_INTERNAL_STR)\r\nchar const* info_version_internal = \"INFO\" \":\" \"compiler_version_internal[\" COMPILER_VERSION_INTERNAL_STR \"]\";\r\n#endif\r\n\r\n/* Construct a string literal encoding the version number components. */\r\n#ifdef SIMULATE_VERSION_MAJOR\r\nchar const info_simulate_version[] = {\r\n  'I', 'N', 'F', 'O', ':',\r\n  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\r\n  SIMULATE_VERSION_MAJOR,\r\n# ifdef SIMULATE_VERSION_MINOR\r\n  '.', SIMULATE_VERSION_MINOR,\r\n#  ifdef SIMULATE_VERSION_PATCH\r\n   '.', SIMULATE_VERSION_PATCH,\r\n#   ifdef SIMULATE_VERSION_TWEAK\r\n    '.', SIMULATE_VERSION_TWEAK,\r\n#   endif\r\n#  endif\r\n# endif\r\n  ']','\\0'};\r\n#endif\r\n\r\n/* Construct the string literal in pieces to prevent the source from\r\n   getting matched.  Store it in a pointer rather than an array\r\n   because some compilers will just produce instructions to fill the\r\n   array rather than assigning a pointer to a static array.  */\r\nchar const* info_platform = \"INFO\" \":\" \"platform[\" PLATFORM_ID \"]\";\r\nchar const* info_arch = \"INFO\" \":\" \"arch[\" ARCHITECTURE_ID \"]\";\r\n\"\r\nCMAKE_CXX_COMPILER_ID_RUN \"1\"\r\nCMAKE_CXX_COMPILER_ID_TEST_FLAGS \"-c;--c++;--ec++;--target=arm-arm-none-eabi -mcpu=cortex-m3;-c -I__does_not_exist__\"\r\nCMAKE_CXX_COMPILER_ID_TOOL_MATCH_INDEX \"2\"\r\nCMAKE_CXX_COMPILER_ID_TOOL_MATCH_REGEX \"\r\nLd[^\r\n]*(\r\n[       ]+[^\r\n]*)*\r\n[       ]+([^\r\n]+)[^\r\n]*-o[^\r\n]*CompilerIdCXX/(\\./)?(CompilerIdCXX.(framework|xctest|build/[^\r\n]+)/)?CompilerIdCXX[\r\n\\\"]\"\r\nCMAKE_CXX_COMPILER_ID_VENDORS \"IAR\"\r\nCMAKE_CXX_COMPILER_ID_VENDOR_REGEX_IAR \"IAR .+ Compiler\"\r\nCMAKE_CXX_COMPILER_INIT \"NOTFOUND\"\r\nCMAKE_CXX_COMPILER_LIST \"c++;CC;g++;aCC;cl;bcc;xlC;icpx;icx;clang++\"\r\nCMAKE_CXX_COMPILER_LOADED \"1\"\r\nCMAKE_CXX_COMPILER_NAMES \"c++\"\r\nCMAKE_CXX_COMPILER_PREDEFINES_COMMAND \"/usr/bin/c++;-dM;-E;-c;/usr/share/cmake-3.22/Modules/CMakeCXXCompilerABI.cpp\"\r\nCMAKE_CXX_COMPILER_PRODUCED_FILES \"a.out\"\r\nCMAKE_CXX_COMPILER_PRODUCED_OUTPUT \"\"\r\nCMAKE_CXX_COMPILER_RANLIB \"/usr/bin/gcc-ranlib-11\"\r\nCMAKE_CXX_COMPILER_RANLIB \"/usr/bin/gcc-ranlib-11\"\r\nCMAKE_CXX_COMPILER_SYSROOT \"\"\r\nCMAKE_CXX_COMPILER_VERSION \"11.4.0\"\r\nCMAKE_CXX_COMPILER_VERSION_INTERNAL \"\"\r\nCMAKE_CXX_COMPILER_WORKS \"TRUE\"\r\nCMAKE_CXX_COMPILER_WRAPPER \"\"\r\nCMAKE_CXX_COMPILE_FEATURES \"cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23\"\r\nCMAKE_CXX_COMPILE_OBJECT \"<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>\"\r\nCMAKE_CXX_COMPILE_OPTIONS_CREATE_PCH \"-x;c++-header;-include;<PCH_HEADER>\"\r\nCMAKE_CXX_COMPILE_OPTIONS_EXPLICIT_LANGUAGE \"-x;c++\"\r\nCMAKE_CXX_COMPILE_OPTIONS_INVALID_PCH \"-Winvalid-pch\"\r\nCMAKE_CXX_COMPILE_OPTIONS_IPO \"-flto;-fno-fat-lto-objects\"\r\nCMAKE_CXX_COMPILE_OPTIONS_PIC \"-fPIC\"\r\nCMAKE_CXX_COMPILE_OPTIONS_PIE \"-fPIE\"\r\nCMAKE_CXX_COMPILE_OPTIONS_SYSROOT \"--sysroot=\"\r\nCMAKE_CXX_COMPILE_OPTIONS_USE_PCH \"-include;<PCH_HEADER>\"\r\nCMAKE_CXX_COMPILE_OPTIONS_VISIBILITY \"-fvisibility=\"\r\nCMAKE_CXX_COMPILE_OPTIONS_VISIBILITY_INLINES_HIDDEN \"-fvisibility-inlines-hidden\"\r\nCMAKE_CXX_CREATE_ASSEMBLY_SOURCE \"<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>\"\r\nCMAKE_CXX_CREATE_PREPROCESSED_SOURCE \"<CMAKE_CXX_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>\"\r\nCMAKE_CXX_CREATE_SHARED_LIBRARY \"<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>\"\r\nCMAKE_CXX_CREATE_SHARED_MODULE \"<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>\"\r\nCMAKE_CXX_DEPENDS_USE_COMPILER \"TRUE\"\r\nCMAKE_CXX_DEPFILE_FORMAT \"gcc\"\r\nCMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT \"ON\"\r\nCMAKE_CXX_EXTENSIONS_DEFAULT \"ON\"\r\nCMAKE_CXX_FLAGS \"\"\r\nCMAKE_CXX_FLAGS_DEBUG \"-g\"\r\nCMAKE_CXX_FLAGS_DEBUG_INIT \" -g\"\r\nCMAKE_CXX_FLAGS_INIT \"  \"\r\nCMAKE_CXX_FLAGS_MINSIZEREL \"-Os -DNDEBUG\"\r\nCMAKE_CXX_FLAGS_MINSIZEREL_INIT \" -Os -DNDEBUG\"\r\nCMAKE_CXX_FLAGS_RELEASE \"-O3 -DNDEBUG\"\r\nCMAKE_CXX_FLAGS_RELEASE_INIT \" -O3 -DNDEBUG\"\r\nCMAKE_CXX_FLAGS_RELWITHDEBINFO \"-O2 -g -DNDEBUG\"\r\nCMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT \" -O2 -g -DNDEBUG\"\r\nCMAKE_CXX_IGNORE_EXTENSIONS \"inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC\"\r\nCMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES \"/usr/include/c++/11;/usr/include/x86_64-linux-gnu/c++/11;/usr/include/c++/11/backward;/usr/lib/gcc/x86_64-linux-gnu/11/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include\"\r\nCMAKE_CXX_IMPLICIT_LINK_DIRECTORIES \"/usr/lib/gcc/x86_64-linux-gnu/11;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib\"\r\nCMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES \"\"\r\nCMAKE_CXX_IMPLICIT_LINK_LIBRARIES \"stdc++;m;gcc_s;gcc;c;gcc_s;gcc\"\r\nCMAKE_CXX_INFORMATION_LOADED \"1\"\r\nCMAKE_CXX_LIBRARY_ARCHITECTURE \"x86_64-linux-gnu\"\r\nCMAKE_CXX_LINKER_PREFERENCE \"30\"\r\nCMAKE_CXX_LINKER_PREFERENCE_PROPAGATES \"1\"\r\nCMAKE_CXX_LINKER_WRAPPER_FLAG \"-Wl,\"\r\nCMAKE_CXX_LINKER_WRAPPER_FLAG_SEP \",\"\r\nCMAKE_CXX_LINK_EXECUTABLE \"<CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>\"\r\nCMAKE_CXX_LINK_OPTIONS_NO_PIE \"-no-pie\"\r\nCMAKE_CXX_LINK_OPTIONS_PIE \"-fPIE;-pie\"\r\nCMAKE_CXX_LINK_WHAT_YOU_USE_FLAG \"LINKER:--no-as-needed\"\r\nCMAKE_CXX_OUTPUT_EXTENSION \".o\"\r\nCMAKE_CXX_PLATFORM_ID \"Linux\"\r\nCMAKE_CXX_SIMULATE_ID \"\"\r\nCMAKE_CXX_SIMULATE_VERSION \"\"\r\nCMAKE_CXX_SIZEOF_DATA_PTR \"8\"\r\nCMAKE_CXX_SOURCE_FILE_EXTENSIONS \"C;M;c++;cc;cpp;cxx;mm;mpp;CPP;ixx;cppm\"\r\nCMAKE_CXX_STANDARD_COMPUTED_DEFAULT \"17\"\r\nCMAKE_CXX_STANDARD_DEFAULT \"17\"\r\nCMAKE_CXX_VERBOSE_FLAG \"-v\"\r\nCMAKE_CXX_XCODE_ARCHS \"\"\r\nCMAKE_C_ABI_COMPILED \"TRUE\"\r\nCMAKE_C_ARCHIVE_APPEND \"<CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS>\"\r\nCMAKE_C_ARCHIVE_APPEND_IPO \"\"/usr/bin/gcc-ar-11\" r <TARGET> <LINK_FLAGS> <OBJECTS>\"\r\nCMAKE_C_ARCHIVE_CREATE \"<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>\"\r\nCMAKE_C_ARCHIVE_CREATE_IPO \"\"/usr/bin/gcc-ar-11\" cr <TARGET> <LINK_FLAGS> <OBJECTS>\"\r\nCMAKE_C_ARCHIVE_FINISH \"<CMAKE_RANLIB> <TARGET>\"\r\nCMAKE_C_ARCHIVE_FINISH_IPO \"\"/usr/bin/gcc-ranlib-11\" <TARGET>\"\r\nCMAKE_C_BYTE_ORDER \"LITTLE_ENDIAN\"\r\nCMAKE_C_CL_SHOWINCLUDES_PREFIX \"\"\r\nCMAKE_C_COMPILER \"/usr/bin/cc\"\r\nCMAKE_C_COMPILER \"/usr/bin/cc\"\r\nCMAKE_C_COMPILER_ABI \"ELF\"\r\nCMAKE_C_COMPILER_AR \"/usr/bin/gcc-ar-11\"\r\nCMAKE_C_COMPILER_AR \"/usr/bin/gcc-ar-11\"\r\nCMAKE_C_COMPILER_ARCHITECTURE_ID \"\"\r\nCMAKE_C_COMPILER_ARG1 \"\"\r\nCMAKE_C_COMPILER_ENV_VAR \"CC\"\r\nCMAKE_C_COMPILER_FRONTEND_VARIANT \"\"\r\nCMAKE_C_COMPILER_ID \"GNU\"\r\nCMAKE_C_COMPILER_ID_PLATFORM_CONTENT \"#define STRINGIFY_HELPER(X) #X\r\n#define STRINGIFY(X) STRINGIFY_HELPER(X)\r\n\r\n/* Identify known platforms by name.  */\r\n#if defined(__linux) || defined(__linux__) || defined(linux)\r\n# define PLATFORM_ID \"Linux\"\r\n\r\n#elif defined(__MSYS__)\r\n# define PLATFORM_ID \"MSYS\"\r\n\r\n#elif defined(__CYGWIN__)\r\n# define PLATFORM_ID \"Cygwin\"\r\n\r\n#elif defined(__MINGW32__)\r\n# define PLATFORM_ID \"MinGW\"\r\n\r\n#elif defined(__APPLE__)\r\n# define PLATFORM_ID \"Darwin\"\r\n\r\n#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)\r\n# define PLATFORM_ID \"Windows\"\r\n\r\n#elif defined(__FreeBSD__) || defined(__FreeBSD)\r\n# define PLATFORM_ID \"FreeBSD\"\r\n\r\n#elif defined(__NetBSD__) || defined(__NetBSD)\r\n# define PLATFORM_ID \"NetBSD\"\r\n\r\n#elif defined(__OpenBSD__) || defined(__OPENBSD)\r\n# define PLATFORM_ID \"OpenBSD\"\r\n\r\n#elif defined(__sun) || defined(sun)\r\n# define PLATFORM_ID \"SunOS\"\r\n\r\n#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)\r\n# define PLATFORM_ID \"AIX\"\r\n\r\n#elif defined(__hpux) || defined(__hpux__)\r\n# define PLATFORM_ID \"HP-UX\"\r\n\r\n#elif defined(__HAIKU__)\r\n# define PLATFORM_ID \"Haiku\"\r\n\r\n#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)\r\n# define PLATFORM_ID \"BeOS\"\r\n\r\n#elif defined(__QNX__) || defined(__QNXNTO__)\r\n# define PLATFORM_ID \"QNX\"\r\n\r\n#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)\r\n# define PLATFORM_ID \"Tru64\"\r\n\r\n#elif defined(__riscos) || defined(__riscos__)\r\n# define PLATFORM_ID \"RISCos\"\r\n\r\n#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)\r\n# define PLATFORM_ID \"SINIX\"\r\n\r\n#elif defined(__UNIX_SV__)\r\n# define PLATFORM_ID \"UNIX_SV\"\r\n\r\n#elif defined(__bsdos__)\r\n# define PLATFORM_ID \"BSDOS\"\r\n\r\n#elif defined(_MPRAS) || defined(MPRAS)\r\n# define PLATFORM_ID \"MP-RAS\"\r\n\r\n#elif defined(__osf) || defined(__osf__)\r\n# define PLATFORM_ID \"OSF1\"\r\n\r\n#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)\r\n# define PLATFORM_ID \"SCO_SV\"\r\n\r\n#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)\r\n# define PLATFORM_ID \"ULTRIX\"\r\n\r\n#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)\r\n# define PLATFORM_ID \"Xenix\"\r\n\r\n#elif defined(__WATCOMC__)\r\n# if defined(__LINUX__)\r\n#  define PLATFORM_ID \"Linux\"\r\n\r\n# elif defined(__DOS__)\r\n#  define PLATFORM_ID \"DOS\"\r\n\r\n# elif defined(__OS2__)\r\n#  define PLATFORM_ID \"OS2\"\r\n\r\n# elif defined(__WINDOWS__)\r\n#  define PLATFORM_ID \"Windows3x\"\r\n\r\n# elif defined(__VXWORKS__)\r\n#  define PLATFORM_ID \"VxWorks\"\r\n\r\n# else /* unknown platform */\r\n#  define PLATFORM_ID\r\n# endif\r\n\r\n#elif defined(__INTEGRITY)\r\n# if defined(INT_178B)\r\n#  define PLATFORM_ID \"Integrity178\"\r\n\r\n# else /* regular Integrity */\r\n#  define PLATFORM_ID \"Integrity\"\r\n# endif\r\n\r\n#else /* unknown platform */\r\n# define PLATFORM_ID\r\n\r\n#endif\r\n\r\n/* For windows compilers MSVC and Intel we can determine\r\n   the architecture of the compiler being used.  This is because\r\n   the compilers do not have flags that can change the architecture,\r\n   but rather depend on which compiler is being used\r\n*/\r\n#if defined(_WIN32) && defined(_MSC_VER)\r\n# if defined(_M_IA64)\r\n#  define ARCHITECTURE_ID \"IA64\"\r\n\r\n# elif defined(_M_ARM64EC)\r\n#  define ARCHITECTURE_ID \"ARM64EC\"\r\n\r\n# elif defined(_M_X64) || defined(_M_AMD64)\r\n#  define ARCHITECTURE_ID \"x64\"\r\n\r\n# elif defined(_M_IX86)\r\n#  define ARCHITECTURE_ID \"X86\"\r\n\r\n# elif defined(_M_ARM64)\r\n#  define ARCHITECTURE_ID \"ARM64\"\r\n\r\n# elif defined(_M_ARM)\r\n#  if _M_ARM == 4\r\n#   define ARCHITECTURE_ID \"ARMV4I\"\r\n#  elif _M_ARM == 5\r\n#   define ARCHITECTURE_ID \"ARMV5I\"\r\n#  else\r\n#   define ARCHITECTURE_ID \"ARMV\" STRINGIFY(_M_ARM)\r\n#  endif\r\n\r\n# elif defined(_M_MIPS)\r\n#  define ARCHITECTURE_ID \"MIPS\"\r\n\r\n# elif defined(_M_SH)\r\n#  define ARCHITECTURE_ID \"SHx\"\r\n\r\n# else /* unknown architecture */\r\n#  define ARCHITECTURE_ID \"\"\r\n# endif\r\n\r\n#elif defined(__WATCOMC__)\r\n# if defined(_M_I86)\r\n#  define ARCHITECTURE_ID \"I86\"\r\n\r\n# elif defined(_M_IX86)\r\n#  define ARCHITECTURE_ID \"X86\"\r\n\r\n# else /* unknown architecture */\r\n#  define ARCHITECTURE_ID \"\"\r\n# endif\r\n\r\n#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)\r\n# if defined(__ICCARM__)\r\n#  define ARCHITECTURE_ID \"ARM\"\r\n\r\n# elif defined(__ICCRX__)\r\n#  define ARCHITECTURE_ID \"RX\"\r\n\r\n# elif defined(__ICCRH850__)\r\n#  define ARCHITECTURE_ID \"RH850\"\r\n\r\n# elif defined(__ICCRL78__)\r\n#  define ARCHITECTURE_ID \"RL78\"\r\n\r\n# elif defined(__ICCRISCV__)\r\n#  define ARCHITECTURE_ID \"RISCV\"\r\n\r\n# elif defined(__ICCAVR__)\r\n#  define ARCHITECTURE_ID \"AVR\"\r\n\r\n# elif defined(__ICC430__)\r\n#  define ARCHITECTURE_ID \"MSP430\"\r\n\r\n# elif defined(__ICCV850__)\r\n#  define ARCHITECTURE_ID \"V850\"\r\n\r\n# elif defined(__ICC8051__)\r\n#  define ARCHITECTURE_ID \"8051\"\r\n\r\n# elif defined(__ICCSTM8__)\r\n#  define ARCHITECTURE_ID \"STM8\"\r\n\r\n# else /* unknown architecture */\r\n#  define ARCHITECTURE_ID \"\"\r\n# endif\r\n\r\n#elif defined(__ghs__)\r\n# if defined(__PPC64__)\r\n#  define ARCHITECTURE_ID \"PPC64\"\r\n\r\n# elif defined(__ppc__)\r\n#  define ARCHITECTURE_ID \"PPC\"\r\n\r\n# elif defined(__ARM__)\r\n#  define ARCHITECTURE_ID \"ARM\"\r\n\r\n# elif defined(__x86_64__)\r\n#  define ARCHITECTURE_ID \"x64\"\r\n\r\n# elif defined(__i386__)\r\n#  define ARCHITECTURE_ID \"X86\"\r\n\r\n# else /* unknown architecture */\r\n#  define ARCHITECTURE_ID \"\"\r\n# endif\r\n\r\n#elif defined(__TI_COMPILER_VERSION__)\r\n# if defined(__TI_ARM__)\r\n#  define ARCHITECTURE_ID \"ARM\"\r\n\r\n# elif defined(__MSP430__)\r\n#  define ARCHITECTURE_ID \"MSP430\"\r\n\r\n# elif defined(__TMS320C28XX__)\r\n#  define ARCHITECTURE_ID \"TMS320C28x\"\r\n\r\n# elif defined(__TMS320C6X__) || defined(_TMS320C6X)\r\n#  define ARCHITECTURE_ID \"TMS320C6x\"\r\n\r\n# else /* unknown architecture */\r\n#  define ARCHITECTURE_ID \"\"\r\n# endif\r\n\r\n#else\r\n#  define ARCHITECTURE_ID\r\n#endif\r\n\r\n/* Convert integer to decimal digit literals.  */\r\n#define DEC(n)                   \\\r\n  ('0' + (((n) / 10000000)%10)), \\\r\n  ('0' + (((n) / 1000000)%10)),  \\\r\n  ('0' + (((n) / 100000)%10)),   \\\r\n  ('0' + (((n) / 10000)%10)),    \\\r\n  ('0' + (((n) / 1000)%10)),     \\\r\n  ('0' + (((n) / 100)%10)),      \\\r\n  ('0' + (((n) / 10)%10)),       \\\r\n  ('0' +  ((n) % 10))\r\n\r\n/* Convert integer to hex digit literals.  */\r\n#define HEX(n)             \\\r\n  ('0' + ((n)>>28 & 0xF)), \\\r\n  ('0' + ((n)>>24 & 0xF)), \\\r\n  ('0' + ((n)>>20 & 0xF)), \\\r\n  ('0' + ((n)>>16 & 0xF)), \\\r\n  ('0' + ((n)>>12 & 0xF)), \\\r\n  ('0' + ((n)>>8  & 0xF)), \\\r\n  ('0' + ((n)>>4  & 0xF)), \\\r\n  ('0' + ((n)     & 0xF))\r\n\r\n/* Construct a string literal encoding the version number. */\r\n#ifdef COMPILER_VERSION\r\nchar const* info_version = \"INFO\" \":\" \"compiler_version[\" COMPILER_VERSION \"]\";\r\n\r\n/* Construct a string literal encoding the version number components. */\r\n#elif defined(COMPILER_VERSION_MAJOR)\r\nchar const info_version[] = {\r\n  'I', 'N', 'F', 'O', ':',\r\n  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',\r\n  COMPILER_VERSION_MAJOR,\r\n# ifdef COMPILER_VERSION_MINOR\r\n  '.', COMPILER_VERSION_MINOR,\r\n#  ifdef COMPILER_VERSION_PATCH\r\n   '.', COMPILER_VERSION_PATCH,\r\n#   ifdef COMPILER_VERSION_TWEAK\r\n    '.', COMPILER_VERSION_TWEAK,\r\n#   endif\r\n#  endif\r\n# endif\r\n  ']','\\0'};\r\n#endif\r\n\r\n/* Construct a string literal encoding the internal version number. */\r\n#ifdef COMPILER_VERSION_INTERNAL\r\nchar const info_version_internal[] = {\r\n  'I', 'N', 'F', 'O', ':',\r\n  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',\r\n  'i','n','t','e','r','n','a','l','[',\r\n  COMPILER_VERSION_INTERNAL,']','\\0'};\r\n#elif defined(COMPILER_VERSION_INTERNAL_STR)\r\nchar const* info_version_internal = \"INFO\" \":\" \"compiler_version_internal[\" COMPILER_VERSION_INTERNAL_STR \"]\";\r\n#endif\r\n\r\n/* Construct a string literal encoding the version number components. */\r\n#ifdef SIMULATE_VERSION_MAJOR\r\nchar const info_simulate_version[] = {\r\n  'I', 'N', 'F', 'O', ':',\r\n  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',\r\n  SIMULATE_VERSION_MAJOR,\r\n# ifdef SIMULATE_VERSION_MINOR\r\n  '.', SIMULATE_VERSION_MINOR,\r\n#  ifdef SIMULATE_VERSION_PATCH\r\n   '.', SIMULATE_VERSION_PATCH,\r\n#   ifdef SIMULATE_VERSION_TWEAK\r\n    '.', SIMULATE_VERSION_TWEAK,\r\n#   endif\r\n#  endif\r\n# endif\r\n  ']','\\0'};\r\n#endif\r\n\r\n/* Construct the string literal in pieces to prevent the source from\r\n   getting matched.  Store it in a pointer rather than an array\r\n   because some compilers will just produce instructions to fill the\r\n   array rather than assigning a pointer to a static array.  */\r\nchar const* info_platform = \"INFO\" \":\" \"platform[\" PLATFORM_ID \"]\";\r\nchar const* info_arch = \"INFO\" \":\" \"arch[\" ARCHITECTURE_ID \"]\";\r\n\"\r\nCMAKE_C_COMPILER_ID_RUN \"1\"\r\nCMAKE_C_COMPILER_ID_TEST_FLAGS \"-c;-Aa;-D__CLASSIC_C__;--target=arm-arm-none-eabi -mcpu=cortex-m3;-c -I__does_not_exist__\"\r\nCMAKE_C_COMPILER_ID_TOOL_MATCH_INDEX \"2\"\r\nCMAKE_C_COMPILER_ID_TOOL_MATCH_REGEX \"\r\nLd[^\r\n]*(\r\n[       ]+[^\r\n]*)*\r\n[       ]+([^\r\n]+)[^\r\n]*-o[^\r\n]*CompilerIdC/(\\./)?(CompilerIdC.(framework|xctest|build/[^\r\n]+)/)?CompilerIdC[\r\n\\\"]\"\r\nCMAKE_C_COMPILER_ID_VENDORS \"IAR\"\r\nCMAKE_C_COMPILER_ID_VENDOR_REGEX_IAR \"IAR .+ Compiler\"\r\nCMAKE_C_COMPILER_INIT \"NOTFOUND\"\r\nCMAKE_C_COMPILER_LIST \"cc;gcc;cl;bcc;xlc;icx;clang\"\r\nCMAKE_C_COMPILER_LOADED \"1\"\r\nCMAKE_C_COMPILER_NAMES \"cc\"\r\nCMAKE_C_COMPILER_PREDEFINES_COMMAND \"/usr/bin/cc;-dM;-E;-c;/usr/share/cmake-3.22/Modules/CMakeCXXCompilerABI.cpp\"\r\nCMAKE_C_COMPILER_PRODUCED_FILES \"a.out\"\r\nCMAKE_C_COMPILER_PRODUCED_OUTPUT \"\"\r\nCMAKE_C_COMPILER_RANLIB \"/usr/bin/gcc-ranlib-11\"\r\nCMAKE_C_COMPILER_RANLIB \"/usr/bin/gcc-ranlib-11\"\r\nCMAKE_C_COMPILER_SYSROOT \"\"\r\nCMAKE_C_COMPILER_VERSION \"11.4.0\"\r\nCMAKE_C_COMPILER_VERSION_INTERNAL \"\"\r\nCMAKE_C_COMPILER_WORKS \"TRUE\"\r\nCMAKE_C_COMPILER_WRAPPER \"\"\r\nCMAKE_C_COMPILE_FEATURES \"c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert;c_std_17;c_std_23\"\r\nCMAKE_C_COMPILE_OBJECT \"<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>\"\r\nCMAKE_C_COMPILE_OPTIONS_CREATE_PCH \"-x;c-header;-include;<PCH_HEADER>\"\r\nCMAKE_C_COMPILE_OPTIONS_EXPLICIT_LANGUAGE \"-x;c\"\r\nCMAKE_C_COMPILE_OPTIONS_INVALID_PCH \"-Winvalid-pch\"\r\nCMAKE_C_COMPILE_OPTIONS_IPO \"-flto;-fno-fat-lto-objects\"\r\nCMAKE_C_COMPILE_OPTIONS_PIC \"-fPIC\"\r\nCMAKE_C_COMPILE_OPTIONS_PIE \"-fPIE\"\r\nCMAKE_C_COMPILE_OPTIONS_SYSROOT \"--sysroot=\"\r\nCMAKE_C_COMPILE_OPTIONS_USE_PCH \"-include;<PCH_HEADER>\"\r\nCMAKE_C_COMPILE_OPTIONS_VISIBILITY \"-fvisibility=\"\r\nCMAKE_C_CREATE_ASSEMBLY_SOURCE \"<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE>\"\r\nCMAKE_C_CREATE_PREPROCESSED_SOURCE \"<CMAKE_C_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE>\"\r\nCMAKE_C_CREATE_SHARED_LIBRARY \"<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>\"\r\nCMAKE_C_CREATE_SHARED_MODULE \"<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <SONAME_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES>\"\r\nCMAKE_C_DEPENDS_USE_COMPILER \"TRUE\"\r\nCMAKE_C_DEPFILE_FORMAT \"gcc\"\r\nCMAKE_C_EXTENSIONS_COMPUTED_DEFAULT \"ON\"\r\nCMAKE_C_EXTENSIONS_DEFAULT \"ON\"\r\nCMAKE_C_FLAGS \"\"\r\nCMAKE_C_FLAGS_DEBUG \"-g\"\r\nCMAKE_C_FLAGS_DEBUG_INIT \" -g\"\r\nCMAKE_C_FLAGS_INIT \"  \"\r\nCMAKE_C_FLAGS_MINSIZEREL \"-Os -DNDEBUG\"\r\nCMAKE_C_FLAGS_MINSIZEREL_INIT \" -Os -DNDEBUG\"\r\nCMAKE_C_FLAGS_RELEASE \"-O3 -DNDEBUG\"\r\nCMAKE_C_FLAGS_RELEASE_INIT \" -O3 -DNDEBUG\"\r\nCMAKE_C_FLAGS_RELWITHDEBINFO \"-O2 -g -DNDEBUG\"\r\nCMAKE_C_FLAGS_RELWITHDEBINFO_INIT \" -O2 -g -DNDEBUG\"\r\nCMAKE_C_IGNORE_EXTENSIONS \"h;H;o;O;obj;OBJ;def;DEF;rc;RC\"\r\nCMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES \"/usr/lib/gcc/x86_64-linux-gnu/11/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include\"\r\nCMAKE_C_IMPLICIT_LINK_DIRECTORIES \"/usr/lib/gcc/x86_64-linux-gnu/11;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib\"\r\nCMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES \"\"\r\nCMAKE_C_IMPLICIT_LINK_LIBRARIES \"gcc;gcc_s;c;gcc;gcc_s\"\r\nCMAKE_C_INFORMATION_LOADED \"1\"\r\nCMAKE_C_LIBRARY_ARCHITECTURE \"x86_64-linux-gnu\"\r\nCMAKE_C_LINKER_PREFERENCE \"10\"\r\nCMAKE_C_LINKER_WRAPPER_FLAG \"-Wl,\"\r\nCMAKE_C_LINKER_WRAPPER_FLAG_SEP \",\"\r\nCMAKE_C_LINK_EXECUTABLE \"<CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>\"\r\nCMAKE_C_LINK_OPTIONS_NO_PIE \"-no-pie\"\r\nCMAKE_C_LINK_OPTIONS_PIE \"-fPIE;-pie\"\r\nCMAKE_C_LINK_WHAT_YOU_USE_FLAG \"LINKER:--no-as-needed\"\r\nCMAKE_C_OUTPUT_EXTENSION \".o\"\r\nCMAKE_C_PLATFORM_ID \"Linux\"\r\nCMAKE_C_SIMULATE_ID \"\"\r\nCMAKE_C_SIMULATE_VERSION \"\"\r\nCMAKE_C_SIZEOF_DATA_PTR \"8\"\r\nCMAKE_C_SOURCE_FILE_EXTENSIONS \"c;m\"\r\nCMAKE_C_STANDARD_COMPUTED_DEFAULT \"17\"\r\nCMAKE_C_STANDARD_DEFAULT \"17\"\r\nCMAKE_C_VERBOSE_FLAG \"-v\"\r\nCMAKE_C_XCODE_ARCHS \"\"\r\nCMAKE_DEPFILE_FLAGS_C \"-MD -MT <DEP_TARGET> -MF <DEP_FILE>\"\r\nCMAKE_DEPFILE_FLAGS_CXX \"-MD -MT <DEP_TARGET> -MF <DEP_FILE>\"\r\nCMAKE_DLLTOOL \"CMAKE_DLLTOOL-NOTFOUND\"\r\nCMAKE_DL_LIBS \"dl\"\r\nCMAKE_EFFECTIVE_SYSTEM_NAME \"Linux\"\r\nCMAKE_EXECUTABLE_FORMAT \"ELF\"\r\nCMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG \"-Wl,-rpath-link,\"\r\nCMAKE_EXECUTABLE_RPATH_LINK_C_FLAG \"-Wl,-rpath-link,\"\r\nCMAKE_EXECUTABLE_RUNTIME_CXX_FLAG \"-Wl,-rpath,\"\r\nCMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP \":\"\r\nCMAKE_EXECUTABLE_RUNTIME_C_FLAG \"-Wl,-rpath,\"\r\nCMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP \":\"\r\nCMAKE_EXECUTABLE_SUFFIX \"\"\r\nCMAKE_EXE_EXPORTS_CXX_FLAG \"-Wl,--export-dynamic\"\r\nCMAKE_EXE_EXPORTS_C_FLAG \"-Wl,--export-dynamic\"\r\nCMAKE_EXE_LINKER_FLAGS \"\"\r\nCMAKE_EXE_LINKER_FLAGS_DEBUG \"\"\r\nCMAKE_EXE_LINKER_FLAGS_INIT \"  \"\r\nCMAKE_EXE_LINKER_FLAGS_MINSIZEREL \"\"\r\nCMAKE_EXE_LINKER_FLAGS_RELEASE \"\"\r\nCMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO \"\"\r\nCMAKE_EXE_LINK_DYNAMIC_CXX_FLAGS \"-Wl,-Bdynamic\"\r\nCMAKE_EXE_LINK_DYNAMIC_C_FLAGS \"-Wl,-Bdynamic\"\r\nCMAKE_EXE_LINK_STATIC_CXX_FLAGS \"-Wl,-Bstatic\"\r\nCMAKE_EXE_LINK_STATIC_C_FLAGS \"-Wl,-Bstatic\"\r\nCMAKE_EXPORT_COMPILE_COMMANDS \"\"\r\nCMAKE_EXTRA_GENERATOR \"\"\r\nCMAKE_FILES_DIRECTORY \"/CMakeFiles\"\r\nCMAKE_FIND_LIBRARY_PREFIXES \"lib\"\r\nCMAKE_FIND_LIBRARY_SUFFIXES \".so;.a\"\r\nCMAKE_GENERATOR \"Unix Makefiles\"\r\nCMAKE_GENERATOR_INSTANCE \"\"\r\nCMAKE_GENERATOR_PLATFORM \"\"\r\nCMAKE_GENERATOR_TOOLSET \"\"\r\nCMAKE_HOME_DIRECTORY \"/home/ksim/software/binaries/neovim/__cmake_systeminformation\"\r\nCMAKE_HOST_SYSTEM \"Linux-5.15.146.1-microsoft-standard-WSL2\"\r\nCMAKE_HOST_SYSTEM_NAME \"Linux\"\r\nCMAKE_HOST_SYSTEM_PROCESSOR \"x86_64\"\r\nCMAKE_HOST_SYSTEM_VERSION \"5.15.146.1-microsoft-standard-WSL2\"\r\nCMAKE_HOST_UNIX \"1\"\r\nCMAKE_INCLUDE_FLAG_C \"-I\"\r\nCMAKE_INCLUDE_FLAG_CXX \"-I\"\r\nCMAKE_INCLUDE_SYSTEM_FLAG_C \"-isystem \"\r\nCMAKE_INCLUDE_SYSTEM_FLAG_CXX \"-isystem \"\r\nCMAKE_INSTALL_DEFAULT_COMPONENT_NAME \"Unspecified\"\r\nCMAKE_INSTALL_PREFIX \"/usr/local\"\r\nCMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT \"1\"\r\nCMAKE_INSTALL_SO_NO_EXE \"1\"\r\nCMAKE_INTERNAL_PLATFORM_ABI \"ELF\"\r\nCMAKE_LIBRARY_ARCHITECTURE \"x86_64-linux-gnu\"\r\nCMAKE_LIBRARY_ARCHITECTURE_REGEX \"[a-z0-9_]+(-[a-z0-9_]+)?-linux-gnu[a-z0-9_]*\"\r\nCMAKE_LIBRARY_PATH_FLAG \"-L\"\r\nCMAKE_LIBRARY_PATH_TERMINATOR \"\"\r\nCMAKE_LINKER \"/usr/bin/ld\"\r\nCMAKE_LINKER \"/usr/bin/ld\"\r\nCMAKE_LINK_LIBRARY_FLAG \"-l\"\r\nCMAKE_LINK_LIBRARY_SUFFIX \"\"\r\nCMAKE_LINK_WHAT_YOU_USE_CHECK \"ldd;-u;-r\"\r\nCMAKE_MAJOR_VERSION \"3\"\r\nCMAKE_MAKE_PROGRAM \"/usr/bin/gmake\"\r\nCMAKE_MATCH_0 \"11.1 17\"\r\nCMAKE_MATCH_1 \"\"\r\nCMAKE_MATCH_2 \"\"\r\nCMAKE_MATCH_COUNT \"0\"\r\nCMAKE_MINIMUM_REQUIRED_VERSION \"3.22.1\"\r\nCMAKE_MINOR_VERSION \"22\"\r\nCMAKE_MODULE_LINKER_FLAGS \"\"\r\nCMAKE_MODULE_LINKER_FLAGS_DEBUG \"\"\r\nCMAKE_MODULE_LINKER_FLAGS_INIT \"  \"\r\nCMAKE_MODULE_LINKER_FLAGS_MINSIZEREL \"\"\r\nCMAKE_MODULE_LINKER_FLAGS_RELEASE \"\"\r\nCMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO \"\"\r\nCMAKE_MT \"\"\r\nCMAKE_NM \"/usr/bin/nm\"\r\nCMAKE_OBJCOPY \"/usr/bin/objcopy\"\r\nCMAKE_OBJDUMP \"/usr/bin/objdump\"\r\nCMAKE_PARENT_LIST_FILE \"/home/ksim/software/binaries/neovim/__cmake_systeminformation/CMakeLists.txt\"\r\nCMAKE_PATCH_VERSION \"1\"\r\nCMAKE_PCH_EXTENSION \".gch\"\r\nCMAKE_PCH_PROLOGUE \"#pragma GCC system_header\"\r\nCMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES \"/lib;/lib32;/lib64;/usr/lib;/usr/lib32;/usr/lib64\"\r\nCMAKE_PLATFORM_INFO_DIR \"/home/ksim/software/binaries/neovim/__cmake_systeminformation/CMakeFiles/3.22.1\"\r\nCMAKE_PLATFORM_INFO_INITIALIZED \"1\"\r\nCMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME \"1\"\r\nCMAKE_PROJECT_DESCRIPTION \"\"\r\nCMAKE_PROJECT_HOMEPAGE_URL \"\"\r\nCMAKE_PROJECT_NAME \"DumpInformation\"\r\nCMAKE_RANLIB \"/usr/bin/ranlib\"\r\nCMAKE_RANLIB \"/usr/bin/ranlib\"\r\nCMAKE_READELF \"/usr/bin/readelf\"\r\nCMAKE_ROOT \"/usr/share/cmake-3.22\"\r\nCMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS \"-shared\"\r\nCMAKE_SHARED_LIBRARY_CREATE_C_FLAGS \"-shared\"\r\nCMAKE_SHARED_LIBRARY_CXX_FLAGS \"-fPIC\"\r\nCMAKE_SHARED_LIBRARY_C_FLAGS \"-fPIC\"\r\nCMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS \"-rdynamic\"\r\nCMAKE_SHARED_LIBRARY_LINK_C_FLAGS \"-rdynamic\"\r\nCMAKE_SHARED_LIBRARY_LINK_DYNAMIC_CXX_FLAGS \"-Wl,-Bdynamic\"\r\nCMAKE_SHARED_LIBRARY_LINK_DYNAMIC_C_FLAGS \"-Wl,-Bdynamic\"\r\nCMAKE_SHARED_LIBRARY_LINK_STATIC_CXX_FLAGS \"-Wl,-Bstatic\"\r\nCMAKE_SHARED_LIBRARY_LINK_STATIC_C_FLAGS \"-Wl,-Bstatic\"\r\nCMAKE_SHARED_LIBRARY_PREFIX \"lib\"\r\nCMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG \"-Wl,-rpath-link,\"\r\nCMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG \"-Wl,-rpath-link,\"\r\nCMAKE_SHARED_LIBRARY_RPATH_ORIGIN_TOKEN \"$ORIGIN\"\r\nCMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG \"-Wl,-rpath,\"\r\nCMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP \":\"\r\nCMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG \"-Wl,-rpath,\"\r\nCMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP \":\"\r\nCMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG \"-Wl,-soname,\"\r\nCMAKE_SHARED_LIBRARY_SONAME_C_FLAG \"-Wl,-soname,\"\r\nCMAKE_SHARED_LIBRARY_SUFFIX \".so\"\r\nCMAKE_SHARED_LINKER_FLAGS \"\"\r\nCMAKE_SHARED_LINKER_FLAGS_DEBUG \"\"\r\nCMAKE_SHARED_LINKER_FLAGS_INIT \"  \"\r\nCMAKE_SHARED_LINKER_FLAGS_MINSIZEREL \"\"\r\nCMAKE_SHARED_LINKER_FLAGS_RELEASE \"\"\r\nCMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO \"\"\r\nCMAKE_SHARED_MODULE_CREATE_CXX_FLAGS \"-shared\"\r\nCMAKE_SHARED_MODULE_CREATE_C_FLAGS \"-shared\"\r\nCMAKE_SHARED_MODULE_CXX_FLAGS \"-fPIC\"\r\nCMAKE_SHARED_MODULE_C_FLAGS \"-fPIC\"\r\nCMAKE_SHARED_MODULE_LINK_DYNAMIC_CXX_FLAGS \"-Wl,-Bdynamic\"\r\nCMAKE_SHARED_MODULE_LINK_DYNAMIC_C_FLAGS \"-Wl,-Bdynamic\"\r\nCMAKE_SHARED_MODULE_LINK_STATIC_CXX_FLAGS \"-Wl,-Bstatic\"\r\nCMAKE_SHARED_MODULE_LINK_STATIC_C_FLAGS \"-Wl,-Bstatic\"\r\nCMAKE_SHARED_MODULE_PREFIX \"lib\"\r\nCMAKE_SHARED_MODULE_SUFFIX \".so\"\r\nCMAKE_SIZEOF_VOID_P \"8\"\r\nCMAKE_SKIP_INSTALL_RPATH \"NO\"\r\nCMAKE_SKIP_RPATH \"NO\"\r\nCMAKE_SOURCE_DIR \"/home/ksim/software/binaries/neovim/__cmake_systeminformation\"\r\nCMAKE_STATIC_LIBRARY_PREFIX \"lib\"\r\nCMAKE_STATIC_LIBRARY_SUFFIX \".a\"\r\nCMAKE_STATIC_LINKER_FLAGS \"\"\r\nCMAKE_STATIC_LINKER_FLAGS_DEBUG \"\"\r\nCMAKE_STATIC_LINKER_FLAGS_MINSIZEREL \"\"\r\nCMAKE_STATIC_LINKER_FLAGS_RELEASE \"\"\r\nCMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO \"\"\r\nCMAKE_STRIP \"/usr/bin/strip\"\r\nCMAKE_SYSTEM \"Linux-5.15.146.1-microsoft-standard-WSL2\"\r\nCMAKE_SYSTEM_INCLUDE_PATH \"/usr/include/X11\"\r\nCMAKE_SYSTEM_INFO_FILE \"Platform/Linux\"\r\nCMAKE_SYSTEM_LIBRARY_PATH \"/usr/lib/X11\"\r\nCMAKE_SYSTEM_LOADED \"1\"\r\nCMAKE_SYSTEM_NAME \"Linux\"\r\nCMAKE_SYSTEM_PREFIX_PATH \"/usr/local;/usr;/;/usr;/usr/local;/usr/X11R6;/usr/pkg;/opt\"\r\nCMAKE_SYSTEM_PROCESSOR \"x86_64\"\r\nCMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED \"1\"\r\nCMAKE_SYSTEM_SPECIFIC_INITIALIZE_LOADED \"1\"\r\nCMAKE_SYSTEM_VERSION \"5.15.146.1-microsoft-standard-WSL2\"\r\nCMAKE_TWEAK_VERSION \"0\"\r\nCMAKE_UNAME \"/usr/bin/uname\"\r\nCMAKE_VERBOSE_MAKEFILE \"FALSE\"\r\nCMAKE_VERSION \"3.22.1\"\r\nCOMPILER_BASENAME \"c++\"\r\nDumpInformation_BINARY_DIR \"/home/ksim/software/binaries/neovim/__cmake_systeminformation\"\r\nDumpInformation_DESCRIPTION \"\"\r\nDumpInformation_HOMEPAGE_URL \"\"\r\nDumpInformation_IS_TOP_LEVEL \"ON\"\r\nDumpInformation_SOURCE_DIR \"/home/ksim/software/binaries/neovim/__cmake_systeminformation\"\r\nMSVC_CXX_ARCHITECTURE_ID \"\"\r\nMSVC_C_ARCHITECTURE_ID \"\"\r\nPRESET_CMAKE_SYSTEM_NAME \"FALSE\"\r\nPROJECT_BINARY_DIR \"/home/ksim/software/binaries/neovim/__cmake_systeminformation\"\r\nPROJECT_DESCRIPTION \"\"\r\nPROJECT_HOMEPAGE_URL \"\"\r\nPROJECT_IS_TOP_LEVEL \"ON\"\r\nPROJECT_NAME \"DumpInformation\"\r\nPROJECT_SOURCE_DIR \"/home/ksim/software/binaries/neovim/__cmake_systeminformation\"\r\nRESULT_FILE \"/home/ksim/software/binaries/neovim/__cmake_systeminformation/results.txt\"\r\nRUN_CONFIGURE \"ON\"\r\nUNIX \"1\"\r\n_CMAKE_CUDA_IMPLICIT_INCLUDE_DIRECTORIES_INIT \"/usr/include\"\r\n_CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES_INIT \"/usr/include\"\r\n_CMAKE_CXX_IPO_MAY_BE_SUPPORTED_BY_COMPILER \"YES\"\r\n_CMAKE_CXX_IPO_SUPPORTED_BY_CMAKE \"YES\"\r\n_CMAKE_CXX_PIE_MAY_BE_SUPPORTED_BY_LINKER \"YES\"\r\n_CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES_INIT \"/usr/include\"\r\n_CMAKE_C_IPO_MAY_BE_SUPPORTED_BY_COMPILER \"YES\"\r\n_CMAKE_C_IPO_SUPPORTED_BY_CMAKE \"YES\"\r\n_CMAKE_C_PIE_MAY_BE_SUPPORTED_BY_LINKER \"YES\"\r\n_CMAKE_INSTALL_DIR \"/usr\"\r\n_CMAKE_TOOLCHAIN_LOCATION \"/usr/bin\"\r\n_INCLUDED_FILE \"/usr/share/cmake-3.22/Modules/Platform/Linux-GNU-CXX.cmake\"\r\n_INCLUDED_SYSTEM_INFO_FILE \"/usr/share/cmake-3.22/Modules/Platform/Linux.cmake\"\r\n_IN_TC \"0\"\r\n_SET_CMAKE_CXX_COMPILER_ARCHITECTURE_ID \"\"\r\n_SET_CMAKE_CXX_COMPILER_SYSROOT \"\"\r\n_SET_CMAKE_C_COMPILER_ARCHITECTURE_ID \"\"\r\n_SET_CMAKE_C_COMPILER_SYSROOT \"\"\r\n__COMPILER_CMAKE_COMMON_COMPILER_MACROS \"1\"\r\n__COMPILER_GNU \"1\"\r\n__LINUX_COMPILER_GNU \"1\"\r\n__UNIX_PATHS_INCLUDED \"1\"\r\n__gcc_hints \"/usr/bin\"\r\n__lto_flags \"-flto;-fno-fat-lto-objects\"\r\n__pch_header_C \"c-header\"\r\n__pch_header_CXX \"c++-header\"\r\n__pch_header_OBJC \"objective-c-header\"\r\n__pch_header_OBJCXX \"objective-c++-header\"\r\n__version_x \"11\"\r\n__version_x_y \"11.4\"\r\nincl \"/home/ksim/software/binaries/neovim/__cmake_systeminformation/This does not exists\"\r\nval \"0\"\r\n\r\n=================================================================\r\n=== COMMANDS\r\n=================================================================\r\n___cmake_include_compiler_wrapper\r\n___determine_compiler_id_test\r\n___resolve_tool_path\r\n___testcompiler_restoretrycompiletargettype\r\n___testcompiler_settrycompiletargettype\r\n__cmake_find_compiler\r\n__cmake_find_compiler_path\r\n__cmake_find_compiler_sysroot\r\n__cmake_include_compiler_wrapper\r\n__compiler_check_default_language_standard\r\n__compiler_gnu\r\n__determine_compiler_id_test\r\n__has_compiler_features\r\n__has_compiler_features_c\r\n__has_compiler_features_cuda\r\n__has_compiler_features_cxx\r\n__has_compiler_features_hip\r\n__linux_compiler_gnu\r\n__readfile\r\n__record_compiler_features\r\n__record_compiler_features_c\r\n__record_compiler_features_cuda\r\n__record_compiler_features_cxx\r\n__record_compiler_features_hip\r\n__resolve_tool_path\r\n__testcompiler_restoretrycompiletargettype\r\n__testcompiler_settrycompiletargettype\r\n_cmake_determine_compile_features\r\n_cmake_determine_compiler_abi\r\n_cmake_determine_compiler_id\r\n_cmake_determine_compiler_id_build\r\n_cmake_determine_compiler_id_check\r\n_cmake_determine_compiler_id_match_vendor\r\n_cmake_determine_compiler_id_vendor\r\n_cmake_determine_compiler_id_write\r\n_cmake_determine_msvc_showincludes_prefix\r\n_cmake_find_compiler\r\n_cmake_find_compiler_path\r\n_cmake_find_compiler_sysroot\r\n_cmake_parse_implicit_include_info\r\n_cmake_parse_implicit_include_line\r\n_cmake_parse_implicit_link_info\r\n_cmake_parse_library_architecture\r\n_compiler_id_detection\r\n_has_compiler_features\r\n_has_compiler_features_c\r\n_has_compiler_features_cuda\r\n_has_compiler_features_cxx\r\n_has_compiler_features_hip\r\n_printtestcompilerresult\r\n_printtestcompilerstatus\r\n_readfile\r\n_record_compiler_features\r\n_record_compiler_features_c\r\n_record_compiler_features_cuda\r\n_record_compiler_features_cxx\r\n_record_compiler_features_hip\r\nadd_compile_definitions\r\nadd_compile_options\r\nadd_custom_command\r\nadd_custom_target\r\nadd_definitions\r\nadd_dependencies\r\nadd_executable\r\nadd_library\r\nadd_link_options\r\nadd_subdirectory\r\nadd_test\r\naux_source_directory\r\nbreak\r\nbuild_command\r\nbuild_name\r\ncmake_determine_compile_features\r\ncmake_determine_compiler_abi\r\ncmake_determine_compiler_id\r\ncmake_determine_compiler_id_build\r\ncmake_determine_compiler_id_check\r\ncmake_determine_compiler_id_match_vendor\r\ncmake_determine_compiler_id_vendor\r\ncmake_determine_compiler_id_write\r\ncmake_determine_msvc_showincludes_prefix\r\ncmake_host_system_information\r\ncmake_initialize_per_config_variable\r\ncmake_language\r\ncmake_minimum_required\r\ncmake_parse_arguments\r\ncmake_parse_implicit_include_info\r\ncmake_parse_implicit_include_line\r\ncmake_parse_implicit_link_info\r\ncmake_parse_library_architecture\r\ncmake_path\r\ncmake_policy\r\ncmake_record_c_compile_features\r\ncmake_record_cuda_compile_features\r\ncmake_record_cxx_compile_features\r\ncmake_record_hip_compile_features\r\ncompiler_id_detection\r\nconfigure_file\r\ncontinue\r\ncreate_test_sourcelist\r\ndefine_property\r\nelse\r\nelseif\r\nenable_language\r\nenable_testing\r\nendforeach\r\nendfunction\r\nendif\r\nendmacro\r\nendwhile\r\nexec_program\r\nexecute_process\r\nexport\r\nexport_library_dependencies\r\nfile\r\nfind_file\r\nfind_library\r\nfind_package\r\nfind_path\r\nfind_program\r\nfltk_wrap_ui\r\nforeach\r\nfunction\r\nget_cmake_property\r\nget_directory_property\r\nget_filename_component\r\nget_property\r\nget_source_file_property\r\nget_target_property\r\nget_test_property\r\ngetdefaultwindowsprefixbase\r\nif\r\ninclude\r\ninclude_directories\r\ninclude_external_msproject\r\ninclude_guard\r\ninclude_regular_expression\r\ninstall\r\ninstall_files\r\ninstall_programs\r\ninstall_targets\r\nlink_directories\r\nlink_libraries\r\nlist\r\nload_cache\r\nload_command\r\nmacro\r\nmake_directory\r\nmark_as_advanced\r\nmath\r\nmessage\r\noption\r\noutput_required_files\r\nprinttestcompilerresult\r\nprinttestcompilerstatus\r\nproject\r\nqt_wrap_cpp\r\nqt_wrap_ui\r\nremove\r\nremove_definitions\r\nreturn\r\nseparate_arguments\r\nset\r\nset_directory_properties\r\nset_property\r\nset_source_files_properties\r\nset_target_properties\r\nset_tests_properties\r\nsite_name\r\nsource_group\r\nstring\r\nsubdir_depends\r\nsubdirs\r\ntarget_compile_definitions\r\ntarget_compile_features\r\ntarget_compile_options\r\ntarget_include_directories\r\ntarget_link_directories\r\ntarget_link_libraries\r\ntarget_link_options\r\ntarget_precompile_headers\r\ntarget_sources\r\ntry_compile\r\ntry_run\r\nunset\r\nuse_mangled_mesa\r\nutility_source\r\nvariable_requires\r\nvariable_watch\r\nwhile\r\nwrite_file\r\n\r\n=================================================================\r\n=== MACROS\r\n=================================================================\r\n_cmake_find_compiler\r\n_cmake_find_compiler_path\r\n__determine_compiler_id_test\r\n_cmake_find_compiler\r\n_cmake_find_compiler_path\r\n__determine_compiler_id_test\r\n__cmake_include_compiler_wrapper\r\n__compiler_check_default_language_standard\r\ncmake_record_c_compile_features\r\ncmake_record_cxx_compile_features\r\ncmake_record_cuda_compile_features\r\ncmake_record_hip_compile_features\r\n__compiler_gnu\r\n__linux_compiler_gnu\r\n__TestCompiler_setTryCompileTargetType\r\n__TestCompiler_restoreTryCompileTargetType\r\n__TestCompiler_setTryCompileTargetType\r\n__TestCompiler_restoreTryCompileTargetType\r\n_record_compiler_features\r\n_record_compiler_features_c\r\n_record_compiler_features_cxx\r\n_record_compiler_features_cuda\r\n_record_compiler_features_hip\r\n_has_compiler_features\r\n_has_compiler_features_c\r\n_has_compiler_features_cxx\r\n_has_compiler_features_cuda\r\n_has_compiler_features_hip\r\n__cmake_include_compiler_wrapper\r\n__TestCompiler_setTryCompileTargetType\r\n__TestCompiler_restoreTryCompileTargetType\r\n__TestCompiler_setTryCompileTargetType\r\n__TestCompiler_restoreTryCompileTargetType\r\n_record_compiler_features\r\n_record_compiler_features_c\r\n_record_compiler_features_cxx\r\n_record_compiler_features_cuda\r\n_record_compiler_features_hip\r\n_has_compiler_features\r\n_has_compiler_features_c\r\n_has_compiler_features_cxx\r\n_has_compiler_features_cuda\r\n_has_compiler_features_hip\r\n\r\n=================================================================\r\n=== OTHER\r\n=================================================================\r\nINCLUDE_DIRECTORY: /home/ksim/software/binaries/neovim/__cmake_systeminformation\r\nINCLUDE_DIRECTORY: /home/ksim/software/binaries/neovim/__cmake_systeminformation\r\nINCLUDE_REGULAR_EXPRESSION: ^.*$\r\n```\r\n\r\n</details>",
    "closed_at": "2024-03-20T20:03:16Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52043856?v=4",
        "events_url": "https://api.github.com/users/Akimcx/events{/privacy}",
        "followers_url": "https://api.github.com/users/Akimcx/followers",
        "following_url": "https://api.github.com/users/Akimcx/following{/other_user}",
        "gists_url": "https://api.github.com/users/Akimcx/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Akimcx",
        "id": 52043856,
        "login": "Akimcx",
        "node_id": "MDQ6VXNlcjUyMDQzODU2",
        "organizations_url": "https://api.github.com/users/Akimcx/orgs",
        "received_events_url": "https://api.github.com/users/Akimcx/received_events",
        "repos_url": "https://api.github.com/users/Akimcx/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Akimcx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Akimcx/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Akimcx",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "does it happen with `--clean` ?\r\n\r\n    NVIM_APPNAME=somedir nvim --clean",
            "created_at": "2024-03-20T17:19:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2010137723",
            "id": 2010137723,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM530ER7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010137723/reactions"
            },
            "updated_at": "2024-03-20T20:01:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010137723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You need to make sure Neovim can see the `/usr/local/lib/nvim` directory, where parsers are installed (by default). If you use a custom install, make sure you handle this location as well.",
            "created_at": "2024-03-20T17:33:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2010188818",
            "id": 2010188818,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM530QwS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010188818/reactions"
            },
            "updated_at": "2024-03-20T17:33:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010188818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> does it happen with `--clean` ?\r\n> \r\n> ```\r\n> NVIM_APPNAME=somedir nvim --clean\r\n> ```\r\n\r\nYes, it does",
            "created_at": "2024-03-20T17:57:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2010267591",
            "id": 2010267591,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM530j_H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010267591/reactions"
            },
            "updated_at": "2024-03-20T17:57:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010267591",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52043856?v=4",
                "events_url": "https://api.github.com/users/Akimcx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Akimcx/followers",
                "following_url": "https://api.github.com/users/Akimcx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Akimcx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Akimcx",
                "id": 52043856,
                "login": "Akimcx",
                "node_id": "MDQ6VXNlcjUyMDQzODU2",
                "organizations_url": "https://api.github.com/users/Akimcx/orgs",
                "received_events_url": "https://api.github.com/users/Akimcx/received_events",
                "repos_url": "https://api.github.com/users/Akimcx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Akimcx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Akimcx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Akimcx",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You need to make sure Neovim can see the `/usr/local/lib/nvim` directory, where parsers are installed (by default). If you use a custom install, make sure you handle this location as well.\r\n\r\nNot sure how,??",
            "created_at": "2024-03-20T17:58:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2010269002",
            "id": 2010269002,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM530kVK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010269002/reactions"
            },
            "updated_at": "2024-03-20T17:58:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010269002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52043856?v=4",
                "events_url": "https://api.github.com/users/Akimcx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Akimcx/followers",
                "following_url": "https://api.github.com/users/Akimcx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Akimcx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Akimcx",
                "id": 52043856,
                "login": "Akimcx",
                "node_id": "MDQ6VXNlcjUyMDQzODU2",
                "organizations_url": "https://api.github.com/users/Akimcx/orgs",
                "received_events_url": "https://api.github.com/users/Akimcx/received_events",
                "repos_url": "https://api.github.com/users/Akimcx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Akimcx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Akimcx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Akimcx",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't know how you build and install Nvim; those details are missing from your issue report. Please add them.",
            "created_at": "2024-03-20T18:01:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2010274674",
            "id": 2010274674,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM530lty",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010274674/reactions"
            },
            "updated_at": "2024-03-20T18:01:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010274674",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I don't know how you build and install Nvim; those details are missing from your issue report. Please add them.\r\n\r\nDone",
            "created_at": "2024-03-20T19:04:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2010391947",
            "id": 2010391947,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM531CWL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010391947/reactions"
            },
            "updated_at": "2024-03-20T19:04:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010391947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52043856?v=4",
                "events_url": "https://api.github.com/users/Akimcx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Akimcx/followers",
                "following_url": "https://api.github.com/users/Akimcx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Akimcx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Akimcx",
                "id": 52043856,
                "login": "Akimcx",
                "node_id": "MDQ6VXNlcjUyMDQzODU2",
                "organizations_url": "https://api.github.com/users/Akimcx/orgs",
                "received_events_url": "https://api.github.com/users/Akimcx/received_events",
                "repos_url": "https://api.github.com/users/Akimcx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Akimcx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Akimcx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Akimcx",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That doesn't answer my question; these are just the standard variables. We need complete, reproducible steps.",
            "created_at": "2024-03-20T19:08:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2010401853",
            "id": 2010401853,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM531Ew9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010401853/reactions"
            },
            "updated_at": "2024-03-20T19:09:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010401853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> That doesn't answer my question; these are just the standard variables. We need complete, reproducible steps.\r\n\r\nI've just follow the instruction in `README.md` \r\n- Clone the repo with `gh repo clone neovim/neovim`\r\n- run `sudo make install`",
            "created_at": "2024-03-20T19:25:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2010450060",
            "id": 2010450060,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM531QiM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010450060/reactions"
            },
            "updated_at": "2024-03-20T19:25:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010450060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52043856?v=4",
                "events_url": "https://api.github.com/users/Akimcx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Akimcx/followers",
                "following_url": "https://api.github.com/users/Akimcx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Akimcx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Akimcx",
                "id": 52043856,
                "login": "Akimcx",
                "node_id": "MDQ6VXNlcjUyMDQzODU2",
                "organizations_url": "https://api.github.com/users/Akimcx/orgs",
                "received_events_url": "https://api.github.com/users/Akimcx/received_events",
                "repos_url": "https://api.github.com/users/Akimcx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Akimcx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Akimcx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Akimcx",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Then please check \n1. Whether `/usr/local/lib/nvim` exists and contains the parsers\n2. What :checkhealth says about vim.treesitter \n3. What `:echo &rtp` says\n\nThe latter with nvim --clean, first without specifying NVIM_APPNAME. ",
            "created_at": "2024-03-20T19:41:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2010480197",
            "id": 2010480197,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM531X5F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010480197/reactions"
            },
            "updated_at": "2024-03-20T19:41:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010480197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well, first, I want to thank you for your help. However, I opted for the nuclear route and rebuilt Neovim, which fixed the issue. I'm not sure what kind of silly mistake I made, and I'm sorry if I caused you to waste your time.\r\nAgain, thank you.",
            "created_at": "2024-03-20T20:03:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2010522517",
            "id": 2010522517,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM531iOV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010522517/reactions"
            },
            "updated_at": "2024-03-20T20:03:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2010522517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52043856?v=4",
                "events_url": "https://api.github.com/users/Akimcx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Akimcx/followers",
                "following_url": "https://api.github.com/users/Akimcx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Akimcx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Akimcx",
                "id": 52043856,
                "login": "Akimcx",
                "node_id": "MDQ6VXNlcjUyMDQzODU2",
                "organizations_url": "https://api.github.com/users/Akimcx/orgs",
                "received_events_url": "https://api.github.com/users/Akimcx/received_events",
                "repos_url": "https://api.github.com/users/Akimcx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Akimcx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Akimcx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Akimcx",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I installed nvim from the latest binary release instead of from dnf.",
            "created_at": "2024-06-12T12:12:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2162855683",
            "id": 2162855683,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM6A6o8D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162855683/reactions"
            },
            "updated_at": "2024-06-12T12:12:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162855683",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/845012?v=4",
                "events_url": "https://api.github.com/users/mcourteaux/events{/privacy}",
                "followers_url": "https://api.github.com/users/mcourteaux/followers",
                "following_url": "https://api.github.com/users/mcourteaux/following{/other_user}",
                "gists_url": "https://api.github.com/users/mcourteaux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mcourteaux",
                "id": 845012,
                "login": "mcourteaux",
                "node_id": "MDQ6VXNlcjg0NTAxMg==",
                "organizations_url": "https://api.github.com/users/mcourteaux/orgs",
                "received_events_url": "https://api.github.com/users/mcourteaux/received_events",
                "repos_url": "https://api.github.com/users/mcourteaux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mcourteaux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mcourteaux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mcourteaux",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've been hunting down the same problem for days. There's either something wrong with the bundled parsers available on Fedora 40 (`dnf install neovim`), or I'm missing/misunderstanding an install step.\r\n\r\nI can easily reproduce with a Docker container:\r\n```\r\n$ docker run --rm -it fedora:40\r\n[root@f58b51d76c66 /]# dnf install -y neovim\r\n[root@f58b51d76c66 /]# nvim foo.lua\r\n\r\nError detected while processing BufNewFile Autocommands for \"*\":\r\nError executing lua callback: /usr/share/nvim/runtime/filetype.lua:35: Error executing lua: /usr/share/nvim/runtime/fi\r\nletype.lua:36: BufNewFile Autocommands for \"*\"..FileType Autocommands for \"*\"..function <SNR>1_LoadFTPlugin[20]..scrip\r\nt /usr/share/nvim/runtime/ftplugin/lua.lua: Vim(runtime):E5113: Error while calling lua chunk: /usr/share/nvim/runtime\r\n/lua/vim/treesitter/language.lua:107: no parser for 'lua' language, see :help treesitter-parsers\r\nstack traceback:\r\n        [C]: in function 'error'\r\n        /usr/share/nvim/runtime/lua/vim/treesitter/language.lua:107: in function 'add'\r\n        /usr/share/nvim/runtime/lua/vim/treesitter/languagetree.lua:111: in function 'new'\r\n        /usr/share/nvim/runtime/lua/vim/treesitter.lua:41: in function '_create_parser'\r\n        /usr/share/nvim/runtime/lua/vim/treesitter.lua:108: in function 'get_parser'\r\n        /usr/share/nvim/runtime/lua/vim/treesitter.lua:416: in function 'start'\r\n        /usr/share/nvim/runtime/ftplugin/lua.lua:2: in main chunk\r\n        [C]: in function 'nvim_cmd'\r\n        /usr/share/nvim/runtime/filetype.lua:36: in function </usr/share/nvim/runtime/filetype.lua:35>\r\n        [C]: in function 'nvim_buf_call'\r\n        /usr/share/nvim/runtime/filetype.lua:35: in function </usr/share/nvim/runtime/filetype.lua:10>\r\nstack traceback:\r\n        [C]: in function 'nvim_cmd'\r\n        /usr/share/nvim/runtime/filetype.lua:36: in function </usr/share/nvim/runtime/filetype.lua:35>\r\n        [C]: in function 'nvim_buf_call'\r\n        /usr/share/nvim/runtime/filetype.lua:35: in function </usr/share/nvim/runtime/filetype.lua:10>\r\nstack traceback:\r\n        [C]: in function 'nvim_buf_call'\r\n        /usr/share/nvim/runtime/filetype.lua:35: in function </usr/share/nvim/runtime/filetype.lua:10>\r\nPress ENTER or type command to continue\r\n```\r\n\r\nPossibly related package bug: https://bugzilla.redhat.com/show_bug.cgi?id=2283574\r\n\r\nI worked around the problem by installing the plugin myself and explicitly calling `:TSInstallSync lua` (plus `vimdoc`).",
            "created_at": "2024-06-24T02:44:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2185483737",
            "id": 2185483737,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM6CQ9XZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185483737/reactions"
            },
            "updated_at": "2024-06-24T02:44:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185483737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009441?v=4",
                "events_url": "https://api.github.com/users/JohnStarich/events{/privacy}",
                "followers_url": "https://api.github.com/users/JohnStarich/followers",
                "following_url": "https://api.github.com/users/JohnStarich/following{/other_user}",
                "gists_url": "https://api.github.com/users/JohnStarich/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JohnStarich",
                "id": 1009441,
                "login": "JohnStarich",
                "node_id": "MDQ6VXNlcjEwMDk0NDE=",
                "organizations_url": "https://api.github.com/users/JohnStarich/orgs",
                "received_events_url": "https://api.github.com/users/JohnStarich/received_events",
                "repos_url": "https://api.github.com/users/JohnStarich/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JohnStarich/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JohnStarich/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JohnStarich",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  There's either something wrong with the bundled parsers available on Fedora 40 (dnf install neovim)\r\n\r\nYes, that is very likely. And you **must** install the bundled parsers via nvim-treesitter if you use nvim-treesitter.",
            "created_at": "2024-06-24T07:53:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2185846469",
            "id": 2185846469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM6CSV7F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185846469/reactions"
            },
            "updated_at": "2024-06-24T07:53:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185846469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I worked around the problem by installing the plugin myself and explicitly calling `:TSInstallSync lua` (plus `vimdoc`).\r\n\r\nThe problem was still there after I called `:TSInstallSync lua`. :(\r\n",
            "created_at": "2024-07-05T11:52:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2210738996",
            "id": 2210738996,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM6DxTM0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2210738996/reactions"
            },
            "updated_at": "2024-07-05T11:52:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2210738996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/77189208?v=4",
                "events_url": "https://api.github.com/users/ShelpAm/events{/privacy}",
                "followers_url": "https://api.github.com/users/ShelpAm/followers",
                "following_url": "https://api.github.com/users/ShelpAm/following{/other_user}",
                "gists_url": "https://api.github.com/users/ShelpAm/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ShelpAm",
                "id": 77189208,
                "login": "ShelpAm",
                "node_id": "MDQ6VXNlcjc3MTg5MjA4",
                "organizations_url": "https://api.github.com/users/ShelpAm/orgs",
                "received_events_url": "https://api.github.com/users/ShelpAm/received_events",
                "repos_url": "https://api.github.com/users/ShelpAm/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ShelpAm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ShelpAm/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ShelpAm",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "My solution was:\r\nsudo ln -s /usr/lib/x86_64-linux-gnu/nvim/ /usr/lib64/nvim\r\n\r\nbecause I noticed that /usr/lib64/nvim is already in my rtp in vim:\r\necho &rtp\r\n\r\n/home/anton/.config/nvim-min,/home/anton/.local/share/nvim-min/site,/home/anton/.local/share/nvim-min/laz\r\ny/lazy.nvim,/usr/share/nvim/runtime,/usr/share/nvim/runtime/pack/dist/opt/matchit,/usr/lib64/nvim,/home/a\r\nnton/.config/nvim-min/after,/home/anton/.local/state/nvim-min/lazy/readme",
            "created_at": "2024-08-09T10:35:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2277654739",
            "id": 2277654739,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM6HwkDT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2277654739/reactions"
            },
            "updated_at": "2024-08-09T10:35:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2277654739",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1727634?v=4",
                "events_url": "https://api.github.com/users/antonpetrovmain/events{/privacy}",
                "followers_url": "https://api.github.com/users/antonpetrovmain/followers",
                "following_url": "https://api.github.com/users/antonpetrovmain/following{/other_user}",
                "gists_url": "https://api.github.com/users/antonpetrovmain/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antonpetrovmain",
                "id": 1727634,
                "login": "antonpetrovmain",
                "node_id": "MDQ6VXNlcjE3Mjc2MzQ=",
                "organizations_url": "https://api.github.com/users/antonpetrovmain/orgs",
                "received_events_url": "https://api.github.com/users/antonpetrovmain/received_events",
                "repos_url": "https://api.github.com/users/antonpetrovmain/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antonpetrovmain/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antonpetrovmain/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antonpetrovmain",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "There is probably a **<ins>bad hacky way</ins>** which completely disables treesitter with `init.lua`, but it works for me and don't requires installing parsers which i don't use:\r\n\r\n```\r\nvim.treesitter.start = function() return end\r\n```\r\nTested with neovim 0.10.0 from pkgsrc.",
            "created_at": "2024-08-27T16:20:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2313005304",
            "id": 2313005304,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM6J3aj4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2313005304/reactions"
            },
            "updated_at": "2024-08-27T16:20:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2313005304",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20815458?v=4",
                "events_url": "https://api.github.com/users/dartvader316/events{/privacy}",
                "followers_url": "https://api.github.com/users/dartvader316/followers",
                "following_url": "https://api.github.com/users/dartvader316/following{/other_user}",
                "gists_url": "https://api.github.com/users/dartvader316/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dartvader316",
                "id": 20815458,
                "login": "dartvader316",
                "node_id": "MDQ6VXNlcjIwODE1NDU4",
                "organizations_url": "https://api.github.com/users/dartvader316/orgs",
                "received_events_url": "https://api.github.com/users/dartvader316/received_events",
                "repos_url": "https://api.github.com/users/dartvader316/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dartvader316/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dartvader316/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dartvader316",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This issue has been mentioned on **Neovim Discourse**. There might be relevant details there:\n\nhttps://neovim.discourse.group/t/neovim-v0-10-0-with-empty-configuration-errors-on-load-of-any-lua-file/4929/6\n",
            "created_at": "2024-12-13T03:34:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2540465530",
            "id": 2540465530,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM6XbG16",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2540465530/reactions"
            },
            "updated_at": "2024-12-13T03:34:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2540465530",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/79666652?v=4",
                "events_url": "https://api.github.com/users/neovim-discourse/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim-discourse/followers",
                "following_url": "https://api.github.com/users/neovim-discourse/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim-discourse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim-discourse",
                "id": 79666652,
                "login": "neovim-discourse",
                "node_id": "MDQ6VXNlcjc5NjY2NjUy",
                "organizations_url": "https://api.github.com/users/neovim-discourse/orgs",
                "received_events_url": "https://api.github.com/users/neovim-discourse/received_events",
                "repos_url": "https://api.github.com/users/neovim-discourse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim-discourse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim-discourse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/neovim-discourse",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hit this bug on Ubuntu, installed nvim from the unstable PPA, then added lazy nvim package manager, with no plugins added, this bug happens on opening a lua file.\n\nNot sure if the mistake is on lazy nvim's side or on nvim itself's side but I've followed all the appropriate steps and hit this",
            "created_at": "2025-04-01T21:59:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/27951#issuecomment-2770780013",
            "id": 2770780013,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27951",
            "node_id": "IC_kwDOAPphoM6lJr9t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2770780013/reactions"
            },
            "updated_at": "2025-04-01T22:00:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2770780013",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1339925?v=4",
                "events_url": "https://api.github.com/users/jknightdoeswork/events{/privacy}",
                "followers_url": "https://api.github.com/users/jknightdoeswork/followers",
                "following_url": "https://api.github.com/users/jknightdoeswork/following{/other_user}",
                "gists_url": "https://api.github.com/users/jknightdoeswork/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jknightdoeswork",
                "id": 1339925,
                "login": "jknightdoeswork",
                "node_id": "MDQ6VXNlcjEzMzk5MjU=",
                "organizations_url": "https://api.github.com/users/jknightdoeswork/orgs",
                "received_events_url": "https://api.github.com/users/jknightdoeswork/received_events",
                "repos_url": "https://api.github.com/users/jknightdoeswork/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jknightdoeswork/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jknightdoeswork/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jknightdoeswork",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 18,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27951/comments",
    "created_at": "2024-03-20T17:15:14Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27951/events",
    "html_url": "https://github.com/neovim/neovim/issues/27951",
    "id": 2198092217,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "Issues that are closed as \"invalid\"",
            "id": 77997477,
            "name": "closed:invalid",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Nw==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:invalid"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "packaging and distributing Nvim to users",
            "id": 124686703,
            "name": "distribution",
            "node_id": "MDU6TGFiZWwxMjQ2ODY3MDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/distribution"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27951/labels{/name}",
    "locked": true,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6DBDm5",
    "number": 27951,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27951/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27951/timeline",
    "title": "No Parser Found for 'lua' Language in Treesitter",
    "type": null,
    "updated_at": "2025-04-01T22:00:15Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27951",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52043856?v=4",
        "events_url": "https://api.github.com/users/Akimcx/events{/privacy}",
        "followers_url": "https://api.github.com/users/Akimcx/followers",
        "following_url": "https://api.github.com/users/Akimcx/following{/other_user}",
        "gists_url": "https://api.github.com/users/Akimcx/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Akimcx",
        "id": 52043856,
        "login": "Akimcx",
        "node_id": "MDQ6VXNlcjUyMDQzODU2",
        "organizations_url": "https://api.github.com/users/Akimcx/orgs",
        "received_events_url": "https://api.github.com/users/Akimcx/received_events",
        "repos_url": "https://api.github.com/users/Akimcx/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Akimcx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Akimcx/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Akimcx",
        "user_view_type": "public"
    }
}