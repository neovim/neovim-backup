{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nAccording to the documentation [here](https://neovim.io/doc/user/vimfn.html#jobstart()) `jobstart` should return -1 when the `cmd` argument is a list and the first element in the list is a non-executable. Instead, jobstart will throw an error. \n\n### Steps to reproduce\n\n`touch /tmp/to-run`\ncreate the lua file `/tmp/lua.lua` with the following content: \n```lua\nlocal result = vim.fn.jobstart({'/tmp/to-run'}, {})\nprint(vim.inspect(result))\n```\n`nvim --clean`\n`:luafile /tmp/lua.lua`\n\n### Expected behavior\n\nthe `result` variable should be instantiated with -1 and the result should be printed. Instead, an error is throws: \n\n```\nE5113: Error while calling lua chunk: Vim:E475: Invalid value for argument cmd: '/tmp/to-run' is not executable                                                     \nstack traceback:                                                                                                                                                             \n        [C]: in function 'jobstart'                                                                                                                                          \n        /home/lixa/tmp/lua8.lua:1: in main chunk                                                                                                                             \nPress ENTER or type command to continue\n```\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0-dev-1345+g8ab5a69885\n\n### Vim (not Nvim) behaves the same?\n\nn/a\n\n### Operating system/version\n\nLinux 6.13.3-zen1-1-zen #1 ZEN SMP PREEMPT_DYNAMIC Tue, 18 Feb 2025 19:01:45 +0000 x86_64 GNU/Linux\n\n### Terminal name/version\n\nXTerm(397)\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\napp image from the latest nightly",
    "closed_at": "2025-09-04T20:38:05Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "It does both, though it'll be hard to see from Lua:\n\n```vim\n:echo jobstart([\"foo\"])\n\" E475: Invalid value for argument cmd: 'foo' is not executable\n\" -1\n```\n\nMaybe the fact it errors should be documented clearer in `:h jobstart()` though (rather than just `:h E475`)",
            "created_at": "2025-09-04T16:24:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/35629#issuecomment-3254511563",
            "id": 3254511563,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35629",
            "node_id": "IC_kwDOAPphoM7B--fL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3254511563/reactions"
            },
            "updated_at": "2025-09-04T16:26:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3254511563",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I understand. However, shouldn't `:echo jobstart(['foo'])` be equivalent with `lua =vim.fn.jobstart({'foo'})`?",
            "created_at": "2025-09-04T19:21:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/35629#issuecomment-3255264216",
            "id": 3255264216,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35629",
            "node_id": "IC_kwDOAPphoM7CB2PY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3255264216/reactions"
            },
            "updated_at": "2025-09-04T19:21:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3255264216",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5187873?v=4",
                "events_url": "https://api.github.com/users/cosminadrianpopescu/events{/privacy}",
                "followers_url": "https://api.github.com/users/cosminadrianpopescu/followers",
                "following_url": "https://api.github.com/users/cosminadrianpopescu/following{/other_user}",
                "gists_url": "https://api.github.com/users/cosminadrianpopescu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cosminadrianpopescu",
                "id": 5187873,
                "login": "cosminadrianpopescu",
                "node_id": "MDQ6VXNlcjUxODc4NzM=",
                "organizations_url": "https://api.github.com/users/cosminadrianpopescu/orgs",
                "received_events_url": "https://api.github.com/users/cosminadrianpopescu/received_events",
                "repos_url": "https://api.github.com/users/cosminadrianpopescu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cosminadrianpopescu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cosminadrianpopescu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cosminadrianpopescu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Vim script errors are converted to Lua errors, which divert control flow.\nIt's more akin to `:try | echo jobstart(['foo']) | endtry` or other abortable Vim script contexts.\n\n(If you really want to see the return value from Lua, `:=vim._with({emsg_silent = true}, function() return vim.fn.jobstart({\"foo\"}) end)` could work, but that's a secreeeet... ðŸ¤«)",
            "created_at": "2025-09-04T20:26:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/35629#issuecomment-3255501408",
            "id": 3255501408,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35629",
            "node_id": "IC_kwDOAPphoM7CCwJg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3255501408/reactions"
            },
            "updated_at": "2025-09-04T20:41:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3255501408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> the `result` variable should be instantiated with -1 and the result should be printed\n\nAs Sean nicely outlined, that's jus a vimscript quirk. In Lua you (thankefully) can't raise an error and return a value.\n\nThis issue is not actionable. We cannot repeat language-level semantics in the docs for every function. And, in Lua `vim.system()` is preferred.",
            "created_at": "2025-09-04T20:38:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/35629#issuecomment-3255560798",
            "id": 3255560798,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35629",
            "node_id": "IC_kwDOAPphoM7CC-pe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3255560798/reactions"
            },
            "updated_at": "2025-09-04T20:38:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3255560798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you for the clarifications @justinmk \n\nI would say that this is a documentation issue however, at least to my understanding. Now I understand better how `jobstart` works. \n\nReading the documentation, I would never expect the function to throw an error when the first argument is a list (maybe for an empty list). I think the documentation should clearly specify that the function actually will throw an error. \n\nMy use case was to try to determine if a file is executable or not at the moment of the execution. If the file was not executable, I would return a nice warning message without any errors. And by reading the documentation I thought I could do it using the return result. \n\nRegarding `vim._with`, workaround, that always returns `-1` (regardless if the file does not exists or it's actually not executable), so still I would argue that the documentation is really not accurate. Since `vim._with` returns always `-1` and this is probably something private (not supposed to be used in plugins), I would assume that I can achieve the same result using a `pcall`. \n\nAnyway, thank you @seandewar and @justinmk for the clarifications. ",
            "created_at": "2025-09-05T11:12:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/35629#issuecomment-3257983278",
            "id": 3257983278,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35629",
            "node_id": "IC_kwDOAPphoM7CMOEu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3257983278/reactions"
            },
            "updated_at": "2025-09-05T11:12:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3257983278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5187873?v=4",
                "events_url": "https://api.github.com/users/cosminadrianpopescu/events{/privacy}",
                "followers_url": "https://api.github.com/users/cosminadrianpopescu/followers",
                "following_url": "https://api.github.com/users/cosminadrianpopescu/following{/other_user}",
                "gists_url": "https://api.github.com/users/cosminadrianpopescu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cosminadrianpopescu",
                "id": 5187873,
                "login": "cosminadrianpopescu",
                "node_id": "MDQ6VXNlcjUxODc4NzM=",
                "organizations_url": "https://api.github.com/users/cosminadrianpopescu/orgs",
                "received_events_url": "https://api.github.com/users/cosminadrianpopescu/received_events",
                "repos_url": "https://api.github.com/users/cosminadrianpopescu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cosminadrianpopescu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cosminadrianpopescu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cosminadrianpopescu",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35629/comments",
    "created_at": "2025-09-04T15:15:37Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35629/events",
    "html_url": "https://github.com/neovim/neovim/issues/35629",
    "id": 3384223582,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35629/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7Jtyde",
    "number": 35629,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35629/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35629/timeline",
    "title": "jobstart throws an error instead of returning a code",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-05T11:12:47Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35629",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5187873?v=4",
        "events_url": "https://api.github.com/users/cosminadrianpopescu/events{/privacy}",
        "followers_url": "https://api.github.com/users/cosminadrianpopescu/followers",
        "following_url": "https://api.github.com/users/cosminadrianpopescu/following{/other_user}",
        "gists_url": "https://api.github.com/users/cosminadrianpopescu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/cosminadrianpopescu",
        "id": 5187873,
        "login": "cosminadrianpopescu",
        "node_id": "MDQ6VXNlcjUxODc4NzM=",
        "organizations_url": "https://api.github.com/users/cosminadrianpopescu/orgs",
        "received_events_url": "https://api.github.com/users/cosminadrianpopescu/received_events",
        "repos_url": "https://api.github.com/users/cosminadrianpopescu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/cosminadrianpopescu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cosminadrianpopescu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/cosminadrianpopescu",
        "user_view_type": "public"
    }
}