{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nAlthough https://github.com/neovim/neovim/issues/11474 is closed, Nvim still has [test/client/](https://github.com/neovim/neovim/tree/64b0e6582ae8c273efbe39109bcb261079c2bcd4/test/client) because Nvim itself cannot yet easily perform as a RPC host which can *receive* requests/notifications. This is because:\n\n- no way to define a RPC method/notification handler in a Nvim Lua plugin\n\n### Expected behavior\n\nEliminate `test/client/`. Nvim Lua plugins can easily:\n\n- define a RPC method handler, so a client can make a RPC request to `foo` and the method handler can handle it and return a result. Just like node-client, pynvim, etc., already can.\n    - design: implement as `RpcRequest` event (autocmd)?\n        - ⚠  need ability for autocmds to (1) receive parameters and (2) return results.\n            - allows [vim.on_func()](https://github.com/neovim/neovim/pull/22598) to fully use the event subsystem, and avoid reinventing its own event subsystem",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "What about adding **on_rpc** callback in **sockconnect()**/**jobstart()**'s opts table in the same way as **on_data/on_stdout/on_stderr** (but definitely with different input arguments such as message type, ID etc.)? \n\nIt could be useful to retrieve RPC events which are always asynchronous. Maybe there can be an extra argument in **rpcrequest()** call to say whether you want to block here (and get the response as the return value - this will not be in **on_rpc** then) or not (and get message ID e.g. - when **on_rpc** callback will be called you can compare ID against returned one). Or maybe it's better to make two separate functions for this.",
            "created_at": "2025-01-18T14:36:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/31868#issuecomment-2599742575",
            "id": 2599742575,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31868",
            "node_id": "IC_kwDOAPphoM6a9Oxv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599742575/reactions"
            },
            "updated_at": "2025-01-18T14:42:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599742575",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51197614?v=4",
                "events_url": "https://api.github.com/users/librolibro/events{/privacy}",
                "followers_url": "https://api.github.com/users/librolibro/followers",
                "following_url": "https://api.github.com/users/librolibro/following{/other_user}",
                "gists_url": "https://api.github.com/users/librolibro/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/librolibro",
                "id": 51197614,
                "login": "librolibro",
                "node_id": "MDQ6VXNlcjUxMTk3NjE0",
                "organizations_url": "https://api.github.com/users/librolibro/orgs",
                "received_events_url": "https://api.github.com/users/librolibro/received_events",
                "repos_url": "https://api.github.com/users/librolibro/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/librolibro/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/librolibro/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/librolibro",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What about adding **on_rpc** callback in **sockconnect()**/**jobstart()**'s opts table in the same way as **on_data/on_stdout/on_stderr**\n\nMakes sense, no objection. Not sure that it's the full, long-term vision though.\n\n> It could be useful to retrieve RPC events which are always asynchronous. Maybe there can be an extra argument in **rpcrequest()** call to say whether you want to block here\n\nI like the idea of `rpcrequest(…, on_result? :fun(…))` where the presence of the callback makes it async.\n\n- eliminates the need for `rpcnotify()`\n- matches similar patterns that are emerging elsewhere (`LanguageTree:parse(…, on_parse)`)\n\nNote that https://github.com/neovim/neovim/issues/8658#issuecomment-401264339 mentions some complications with asynchronous `rpcrequest()`.",
            "created_at": "2025-01-19T23:40:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/31868#issuecomment-2601071240",
            "id": 2601071240,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31868",
            "node_id": "IC_kwDOAPphoM6bCTKI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2601071240/reactions"
            },
            "updated_at": "2025-01-19T23:57:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2601071240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31868/comments",
    "created_at": "2025-01-05T01:22:08Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31868/events",
    "html_url": "https://github.com/neovim/neovim/issues/31868",
    "id": 2769067633,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "channels, RPC, msgpack",
            "id": 242522707,
            "name": "channels-rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channels-rpc"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins as RPC coprocesses (node.js, python, etc)",
            "id": 652698463,
            "name": "remote-plugin",
            "node_id": "MDU6TGFiZWw2NTI2OTg0NjM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/remote-plugin"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31868/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 0,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 6,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-01-19T23:55:57Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "I_kwDOAPphoM6lDJ5x",
    "number": 31868,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31868/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 3
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31868/timeline",
    "title": "Nvim can be a Lua host; Lua plugins can define RPC method/request handlers",
    "updated_at": "2025-01-19T23:57:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31868",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}