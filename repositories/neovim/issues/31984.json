{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\n`LanguageTree:contains(range)` returns `true` if `range` fits between start of first and end of last regions included in `LanguageTree`. This can lead to unexpected results if the regions are far apart with regions from other language trees in between.\n\nThe particular issue of determining the \"correct\" (most local) language tree is currently solved in built-in commenting [by taking \"the deepest\" tree that contains reference range](https://github.com/neovim/neovim/blob/3fdc4302415972eb5d98ba832372236be3d22572/runtime/lua/vim/_comment.lua#L30-L48) as the most local. This doesn't always work as described in \"Steps to reproduce\".\n\nI believe #18678 was meant to fix this by additionally iterating through language tree's regions to determine the result. Not sure why it was not merged, but its implementation seems to be outdated at this point.\n\n### Steps to reproduce\n\nBasically, [this part of code](https://github.com/neovim/neovim/blob/3fdc4302415972eb5d98ba832372236be3d22572/runtime/lua/vim/treesitter/languagetree.lua#L1073-L1096). \n \nHere is a more practical example from @ribru17 (minimized from [this comment](https://github.com/neovim/neovim/pull/31950#issuecomment-2585790850)) that currently affects built-in commenting:\n\n1. Install and enabled tree-sitter parsers for ['markdown'](https://github.com/tree-sitter-grammars/tree-sitter-markdown) and ['html'](https://github.com/tree-sitter/tree-sitter-html). For example, through `:TSInstall` from [nvim-treesitter/nvim-treesitter](https://github.com/nvim-treesitter/nvim-treesitter).\n2. Define the following function:\n    ```lua\n    _G.get_langtree_info = function()\n      local pos = vim.api.nvim_win_get_cursor(0)\n      local ref_range = { pos[1] - 1, pos[2], pos[1] - 1, pos[2] }\n\n      local res = {}\n      local function traverse(lang_tree)\n        table.insert(res, {\n          contains = lang_tree:contains(ref_range),\n          lang = lang_tree:lang(),\n          included_regions = lang_tree:included_regions(),\n        })\n        for _, child_lang_tree in pairs(lang_tree:children()) do\n          traverse(child_lang_tree)\n        end\n      end\n      traverse(vim.treesitter.get_parser(0))\n\n      return res\n    end\n    ```\n3. Open the following markdown file and put cursor inside code block (third line):\n    ````markdown\n    <!-- html -->\n    ```lua\n    local a = 1\n    ```\n    <!-- html -->\n    ````\n4. Execute `:=get_langtree_info()`. It returns the following output:\n    ```lua\n    { {\n        contains = true,\n        included_regions = { {} },\n        lang = \"markdown\"\n      }, {\n        contains = true,\n        included_regions = { { { 0, 0, 0, 1, 0, 14 }, { 4, 0, 37, 5, 0, 51 } } },\n        lang = \"html\"\n      }, {\n        contains = true,\n        included_regions = { { { 2, 0, 21, 3, 0, 33 } } },\n        lang = \"lua\"\n      } }\n    ```\n\nAll language trees report that \"cursor range\" is contained inside them, although only one of them includes a region whose range contains cursor range.\n\nSide note: this particular case does not currently work with built-in commenting because both 'html' and 'lua' language trees are sibling trees. This results in a hard to reproduce issue: sometimes 'lua' will be traversed first and sometimes 'html' (due to no order guarantees in `pairs`).\n\n### Expected behavior\n\n`LanguageTree:contains()` respects its included regions when computing the result. Basically add an extra `for` loop for included regions (either [here](https://github.com/neovim/neovim/blob/3fdc4302415972eb5d98ba832372236be3d22572/runtime/lua/vim/treesitter/languagetree.lua#L1074-L1081) or [here](https://github.com/neovim/neovim/blob/3fdc4302415972eb5d98ba832372236be3d22572/runtime/lua/vim/treesitter/languagetree.lua#L1089-L1093)).\n\nThis can also be solved directly in `vim._comment`, but I think it is more reasonable to update `LanguageTree:contains()`.\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0-dev-1498+g6719276040\n\n### Vim (not Nvim) behaves the same?\n\nNo\n\n### Operating system/version\n\nEndeavourOS Linux x86_64, 6.12.9-arch1-1\n\n### Terminal name/version\n\nGhostty 1.0.1-arch\n\n### $TERM environment variable\n\nxterm-ghostty\n\n### Installation\n\nappimage",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31984/comments",
    "created_at": "2025-01-12T18:17:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31984/events",
    "html_url": "https://github.com/neovim/neovim/issues/31984",
    "id": 2782618482,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31984/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6l22Ny",
    "number": 31984,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31984/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31984/timeline",
    "title": "`LanguageTree:contains()` does not respect gaps in included regions",
    "updated_at": "2025-01-12T18:17:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31984",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}