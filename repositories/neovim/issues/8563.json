{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I notice the terminal buffer has a few things which are inconsistent with \"normal\" text buffers.  I think it would be better and more logical if terminal buffers work more like regular buffers.\r\n\r\n# `set list` not working in terminal buffers.\r\n\r\nOne thing thing which is inconsistent with normal buffers is that `set list` will not work on terminal buffers.\r\n\r\n# Missing output becomes blank lines\r\n\r\nWhen a terminal window has been opened and the user has typed a few commands, such that the whole terminal window is not filled up and exits from terminal mode, there are a lot of blank lines in the terminal buffer.\r\n\r\nExample (user is in terminal mode):\r\n\r\n    +-------------------------------------------------------------------------+\r\n    |$ ls                                                                     |\r\n    |decode.c  encode.c  executor.c  gc.c  typval.c           typval_encode.h |\r\n    |decode.h  encode.h  executor.h  gc.h  typval_encode.c.h  typval.h        |\r\n    |$ █                                                                      |\r\n    |                                                                         |\r\n    |                                                                         |\r\n    |                                                                         |\r\n    |                                                                         |\r\n    |                                                                         |\r\n    |--TERMINAL--                                                             |\r\n    +-------------------------------------------------------------------------+\r\n\r\nWhat happens when user exits from terminal mode:\r\n\r\n    +-------------------------------------------------------------------------+\r\n    |$ ls                                                                     |\r\n    |decode.c  encode.c  executor.c  gc.c  typval.c           typval_encode.h |\r\n    |decode.h  encode.h  executor.h  gc.h  typval_encode.c.h  typval.h        |\r\n    |$                                                                        |\r\n    |                                                                         |\r\n    |                                                                         |\r\n    |                                                                         |\r\n    |                                                                         |\r\n    |█                                                                        |\r\n    |                                                                         |\r\n    +-------------------------------------------------------------------------+\r\n\r\nThe current behavior is inconsistent because the missing `~`-signs for missing text will show up and the user cannot move past the last terminal output line if and only if the terminal buffer output overflows the current window.\r\n\r\nI think it would make more sense if lines which haven't been output by the terminal job will become missing lines in the buffer, even when the terminal output have not overflown.\r\n\r\n# Proposal\r\n\r\nI think it would be better if `set list` works in the terminal buffer, and lines which have not been output by the terminal application will always show up as empty lines in the terminal buffer.\r\n\r\nA side effect of having missing lines not becoming blank lines in the terminal buffer is that the cursor position can't start at the lower left corner anymore when exiting terminal mode.  I propose that this behavior is changed so the cursor position when exiting terminal mode will always be the position which the cursor had when inside terminal mode.\r\n\r\nWhat is proposed to happen when user exits from terminal mode (note the `~` characters indicating missing lines in the buffer):\r\n\r\n    +-------------------------------------------------------------------------+\r\n    |$ ls                                                                     |\r\n    |decode.c  encode.c  executor.c  gc.c  typval.c           typval_encode.h |\r\n    |decode.h  encode.h  executor.h  gc.h  typval_encode.c.h  typval.h        |\r\n    |$ █                                                                      |\r\n    |~                                                                        |\r\n    |~                                                                        |\r\n    |~                                                                        |\r\n    |~                                                                        |\r\n    |~                                                                        |\r\n    |                                                                         |\r\n    +-------------------------------------------------------------------------+\r\n\r\nImplementing this should be possible. Vim has implemented the kind of behavior which I propose.\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Yes this would be nice. We need help though. Patches welcome.",
            "created_at": "2018-06-15T19:48:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/8563#issuecomment-397724710",
            "id": 397724710,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8563",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzcyNDcxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397724710/reactions"
            },
            "updated_at": "2018-06-15T19:48:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/397724710",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk If you could give me a pointer to where the buffer is drawn to the window ( especially where the case is handled that the buffer is too small and the tilde is used ), i would try to tackle this! \r\n\r\nupdate: found the `win_draw_end` function and screen.c: 1484",
            "created_at": "2018-07-29T11:34:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/8563#issuecomment-408670214",
            "id": 408670214,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8563",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwODY3MDIxNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/408670214/reactions"
            },
            "updated_at": "2018-07-29T11:59:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/408670214",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17451647?v=4",
                "events_url": "https://api.github.com/users/MichaHoffmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/MichaHoffmann/followers",
                "following_url": "https://api.github.com/users/MichaHoffmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/MichaHoffmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MichaHoffmann",
                "id": 17451647,
                "login": "MichaHoffmann",
                "node_id": "MDQ6VXNlcjE3NDUxNjQ3",
                "organizations_url": "https://api.github.com/users/MichaHoffmann/orgs",
                "received_events_url": "https://api.github.com/users/MichaHoffmann/received_events",
                "repos_url": "https://api.github.com/users/MichaHoffmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MichaHoffmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MichaHoffmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MichaHoffmann",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Okay i found the function `static void refresh_screen(Terminal *term, buf_T *buf)` on line 1218 in terminal.c. \r\n\r\nThis function will make sure that the buffer `buf` always has as many lines as the window height ( vterm height is set in line 372 of terminal.c to be window height ). I'm not sure if this issue can be solved with libvterm.",
            "created_at": "2018-08-02T06:19:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/8563#issuecomment-409818717",
            "id": 409818717,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8563",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTgxODcxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409818717/reactions"
            },
            "updated_at": "2023-09-18T03:35:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/409818717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17451647?v=4",
                "events_url": "https://api.github.com/users/MichaHoffmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/MichaHoffmann/followers",
                "following_url": "https://api.github.com/users/MichaHoffmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/MichaHoffmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MichaHoffmann",
                "id": 17451647,
                "login": "MichaHoffmann",
                "node_id": "MDQ6VXNlcjE3NDUxNjQ3",
                "organizations_url": "https://api.github.com/users/MichaHoffmann/orgs",
                "received_events_url": "https://api.github.com/users/MichaHoffmann/received_events",
                "repos_url": "https://api.github.com/users/MichaHoffmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MichaHoffmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MichaHoffmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MichaHoffmann",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There is a one-line change that may achieve the desired behavior:\r\n```diff\r\ndiff --git a/src/nvim/terminal.c b/src/nvim/terminal.c\r\nindex 499f31454e..3b4bd4f04d 100644\r\n--- a/src/nvim/terminal.c\r\n+++ b/src/nvim/terminal.c\r\n@@ -288,7 +288,7 @@ void terminal_open(Terminal **termpp, buf_T *buf, TerminalOptions opts)\r\n   // force a initial refresh of the screen to ensure the buffer will always\r\n   // have as many lines as screen rows when refresh_scrollback is called\r\n   rv->invalid_start = 0;\r\n-  rv->invalid_end = opts.height;\r\n+  rv->invalid_end = -1;\r\n \r\n   aco_save_T aco;\r\n   aucmd_prepbuf(&aco, buf);\r\n```\r\nAlthough it also changes the behavior of cursor position in Normal mode.",
            "created_at": "2024-02-11T01:21:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/8563#issuecomment-1937382480",
            "id": 1937382480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8563",
            "node_id": "IC_kwDOAPphoM5zehxQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937382480/reactions"
            },
            "updated_at": "2024-02-11T01:24:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937382480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It would amazing to have this baked into neovim\r\nJust like was achieve in https://github.com/chomosuke/term-edit.nvim, though it doesn't work for all keybinds AFAIK",
            "created_at": "2024-06-05T12:52:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/8563#issuecomment-2149787285",
            "id": 2149787285,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8563",
            "node_id": "IC_kwDOAPphoM6AIyaV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2149787285/reactions"
            },
            "updated_at": "2024-06-05T12:52:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2149787285",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28672915?v=4",
                "events_url": "https://api.github.com/users/amitlevy21/events{/privacy}",
                "followers_url": "https://api.github.com/users/amitlevy21/followers",
                "following_url": "https://api.github.com/users/amitlevy21/following{/other_user}",
                "gists_url": "https://api.github.com/users/amitlevy21/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amitlevy21",
                "id": 28672915,
                "login": "amitlevy21",
                "node_id": "MDQ6VXNlcjI4NjcyOTE1",
                "organizations_url": "https://api.github.com/users/amitlevy21/orgs",
                "received_events_url": "https://api.github.com/users/amitlevy21/received_events",
                "repos_url": "https://api.github.com/users/amitlevy21/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amitlevy21/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amitlevy21/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amitlevy21",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/xb-bx/editable-term.nvim looks minimal. If it works well, we should upstream it.",
            "created_at": "2025-04-14T15:03:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/8563#issuecomment-2802019894",
            "id": 2802019894,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8563",
            "node_id": "IC_kwDOAPphoM6nA242",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2802019894/reactions"
            },
            "updated_at": "2025-04-14T15:03:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2802019894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/8563/comments",
    "created_at": "2018-06-15T18:54:02Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/8563/events",
    "html_url": "https://github.com/neovim/neovim/issues/8563",
    "id": 332880321,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/8563/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUzMzI4ODAzMjE=",
    "number": 8563,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 2,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/8563/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/8563/timeline",
    "title": "Make terminal buffer behave more like normal buffers",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/8563",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11559411?v=4",
        "events_url": "https://api.github.com/users/ryvnf/events{/privacy}",
        "followers_url": "https://api.github.com/users/ryvnf/followers",
        "following_url": "https://api.github.com/users/ryvnf/following{/other_user}",
        "gists_url": "https://api.github.com/users/ryvnf/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ryvnf",
        "id": 11559411,
        "login": "ryvnf",
        "node_id": "MDQ6VXNlcjExNTU5NDEx",
        "organizations_url": "https://api.github.com/users/ryvnf/orgs",
        "received_events_url": "https://api.github.com/users/ryvnf/received_events",
        "repos_url": "https://api.github.com/users/ryvnf/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ryvnf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ryvnf/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ryvnf",
        "user_view_type": "public"
    }
}