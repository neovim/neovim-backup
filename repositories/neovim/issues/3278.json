{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "Current proposal:\n\n```\n                     hierarchical part\n          ┌──────────────────┴──────────────────┐\nterminal://username@localhost/usr/local/bin/bash:1234/path/cwd/?ls;echo foo;#optional-name\n└───┬───┘ └───┬───┘ └───┬───┘└─────────┬────────┘└─┬─┘└───┬────┘└────┬─────┘└─────┬─────┘\n scheme      user     host        path to shell    pid    cwd       query       fragment\n```\n\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Why user and host? Also do not forget that path to shell may contain strings like `:1234`, though this is unlikely. I would suggest then\n\n```\nterm://[{user}@{host}][:{cwd}]//[{shell}+{shellcmdflag}+]{args}[#{pid}]\n```\n\n. The `{args}` part is tricky: it is a representation of the arguments _list_ which in some cases _will_ contain things like spaces, `//`, `:`, `+` and other characters. Suggested escaping scheme: separate arguments with `+`, urlencode `+`, `%` and `#` inside arguments, allow urlencoding anything inside arguments and `{shell}+{shellcmdflag}` part. `{cwd}` should never contain trailing directory separator.\n\n`user@host:`, `//{cwd}` and `#{pid}` parts may be omitted when terminal is opened by the user. `{&sh}+{&shcf}+` part is omitted _only_ when terminal is launched without using shell (e.g. `call termopen(['ls'])`, but not `call termopen('ls')`: basically every terminal described by this URI is opened using list syntax, just in case of `call termopen('ls')` `{args}` will be a single argument). After terminal was opened it is always renamed to the _full_ URI:\n\n```\nterm://{user}@{host}:{cwd}//{args}#{pid}\n```\n\nfor saving inside a session file. Still do not understand what’s the reason for `{user}` and `{host}`. `{pid}` may be replaced with `optional-name`, it is not relevant and serves the single purpose of making unique name.\n\nThis variant is mostly different from current scheme by changing meaning and encoding of `{args}` (note: the best thing is changing the encoding), location and meaning of `#{pid}` (only changes how it appears in regex and not anything else) and additions of `{user}@{host}`. `{args}` is the best part of it: currently `call termopen(['ls', '.'])` produces `term://.//{pid}:ls` which is not different from `:term ls`, even though latter is launched using shell and former contains additional argument.\n",
            "created_at": "2015-08-31T19:16:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/3278#issuecomment-136473009",
            "id": 136473009,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3278",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjQ3MzAwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136473009/reactions"
            },
            "updated_at": "2015-08-31T19:16:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136473009",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "# Reference Information:\n\nGeneric URI:\n`<scheme>:<hierarchical part>[?<query>][#<fragment>]`\n\nSSH URI:\n`ssh://[<user>[;fingerprint=<host-key fingerprint>]@]<host>[:<port>]`\n\nURI Docs:\n[RFC 3986](https://tools.ietf.org/html/rfc3986)\n[STD 66](http://tools.ietf.org/html/std66)\n\nUsing vim via SCP:\n`vim scp://remoteuser@server.tld//path/to/document`\n",
            "created_at": "2015-09-01T01:33:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/3278#issuecomment-136546395",
            "id": 136546395,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3278",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjU0NjM5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136546395/reactions"
            },
            "updated_at": "2015-09-01T01:34:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136546395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/820137?v=4",
                "events_url": "https://api.github.com/users/vito-c/events{/privacy}",
                "followers_url": "https://api.github.com/users/vito-c/followers",
                "following_url": "https://api.github.com/users/vito-c/following{/other_user}",
                "gists_url": "https://api.github.com/users/vito-c/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vito-c",
                "id": 820137,
                "login": "vito-c",
                "node_id": "MDQ6VXNlcjgyMDEzNw==",
                "organizations_url": "https://api.github.com/users/vito-c/orgs",
                "received_events_url": "https://api.github.com/users/vito-c/received_events",
                "repos_url": "https://api.github.com/users/vito-c/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vito-c/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vito-c/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vito-c",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I was thinking having the username and host would future proof the uri in case a feature was added that allowed the terminal command to start an ssh session. \n\nI was hoping we could group the pid with the shell information. As you mentioned the pid provides uniqueness. \n\n> `{pid}` may be replaced with optional-name, it is not relevant and serves the single purpose of making unique name.\n\nIf you made the pid optional and allow it to be replaced by `optional-name` then collisions will occur if two terminals are started with the same optional-name. \n\nI see your point though about possible `:1234` in the shell path. I think separation with a `:` was used because it felt natural to treat the numeric part the similar to how a port is treated.\n\nTreating the commands as a query to the shell also makes sense hence the `?` separation. @ZyX-I I think in your above examples the args were commands?\n\nI agree that the commands would need to be url encoded. \n\n`term://[{user}@{host}]:[{cwd}]//[{shell}+{shellcmdflag}+]//{pid}?{cmds}#{optional name}`\n",
            "created_at": "2015-09-01T01:34:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/3278#issuecomment-136546490",
            "id": 136546490,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3278",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjU0NjQ5MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136546490/reactions"
            },
            "updated_at": "2025-10-03T05:02:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136546490",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/820137?v=4",
                "events_url": "https://api.github.com/users/vito-c/events{/privacy}",
                "followers_url": "https://api.github.com/users/vito-c/followers",
                "following_url": "https://api.github.com/users/vito-c/following{/other_user}",
                "gists_url": "https://api.github.com/users/vito-c/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vito-c",
                "id": 820137,
                "login": "vito-c",
                "node_id": "MDQ6VXNlcjgyMDEzNw==",
                "organizations_url": "https://api.github.com/users/vito-c/orgs",
                "received_events_url": "https://api.github.com/users/vito-c/received_events",
                "repos_url": "https://api.github.com/users/vito-c/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vito-c/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vito-c/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vito-c",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@vito-c I ignored the URI scheme because I see no sense in following it: this is NeoVim own format. `{args}` is _one_ command, because you _can’t_ use `:term` with more then one command. Basically this is a translation of `termopen()` call. For the same reason I am _not_ separating `{args}` from `{shell}+{shellcmdflag}`: if shell _is_ used it will be part of `{args}`, if shell is not it will not be there. I do not see where you can get `{cmds}`, NeoVim cannot track commands that are launched _after_ starting the shell, so `{cmds}` has no reason to exist.\n",
            "created_at": "2015-09-01T05:20:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/3278#issuecomment-136589889",
            "id": 136589889,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3278",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjU4OTg4OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136589889/reactions"
            },
            "updated_at": "2015-09-01T05:20:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136589889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "My primary concern is the ability to distinguish multiple interactive shells with friendly names. So that I can quickly switch betweeen them.\n\nCurrently,\n- With `call termopen(['cmd', 'cmdflag', 'args'])`:\n  - Only `cmd` is included in the terminal buffer name(or URI).\n- With `call termopen('shellcmd')`:\n  - Only `shellcmd` comes into the buffer name.\n\nSo to make my shells easily distinguishable, I would start a shell with:\n\n```\ncall termopen('exec bash;: foo')\n```\n\nThis works, but it's a little bit expensive than `call termopen(['bash'])`. And the resulting URI is not in a good format, but easily distinguishable.\n\n@justinmk \nHow about just including `join(['cmd', 'cmdflag', 'args'])` in the buffer name? Though it seems only `cmd` is remembered in a session file, which I think can be improved.\n",
            "created_at": "2015-09-01T08:14:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/3278#issuecomment-136630985",
            "id": 136630985,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3278",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjYzMDk4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136630985/reactions"
            },
            "updated_at": "2025-10-03T05:02:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136630985",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1585463?v=4",
                "events_url": "https://api.github.com/users/bohrshaw/events{/privacy}",
                "followers_url": "https://api.github.com/users/bohrshaw/followers",
                "following_url": "https://api.github.com/users/bohrshaw/following{/other_user}",
                "gists_url": "https://api.github.com/users/bohrshaw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bohrshaw",
                "id": 1585463,
                "login": "bohrshaw",
                "node_id": "MDQ6VXNlcjE1ODU0NjM=",
                "organizations_url": "https://api.github.com/users/bohrshaw/orgs",
                "received_events_url": "https://api.github.com/users/bohrshaw/received_events",
                "repos_url": "https://api.github.com/users/bohrshaw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bohrshaw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bohrshaw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bohrshaw",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "## Workaround For Terminal Name Removal:\n\nQuick side not for those who are looking for an easy way to key their current terminals via a names in the buffer. @BohrShaw \n\n```\ncall termopen('bash;#foo')\ncall termopen('bash;#bar')\n```\n\nUsing a bash comment will at least give you more useful buffer names. \n\nWhich gives me an idea why don't we just add `#` and then `optional-name` to the end of the commands? That would be easy to implement and executing `#optional-name` in the shell is a comment... though I'm not sure that would work across different shell implementations  \n\nLet's clarify our expectations please let me know if these are correct or if you want me to add to them.\n\n## Expectations:\n\nUsing Just the URI & vim's session\n1. The shell should be able to be restarted with the correct flags\n2. The initial command set passed to the shell should be able to be invoked\n3. The buffer name should be unique\n4. There should be a way to add a easily human readable name.\n\n@ZyX-I \n\n> I ignored the URI scheme because I see no sense in following it: this is NeoVim own format. {args} is one command, because you can’t use :term with more then one command. Basically this is a translation of termopen() call. For the same reason I am not separating {args} from {shell}+{shellcmdflag}: if shell is used it will be part of {args}, if shell is not it will not be there. I do not see where you can get {cmds}, NeoVim cannot track commands that are launched after starting the shell, so {cmds} has no reason to exist.\n\nWell the URI is a good standard to follow. It will be easier for people to figure out what is going on and is a standard already used inside vim (see the scp file edit above). The point of the {cmds} is to separate the arguments passed to the shell when it is started from the initial commands that are run after the shell has begun. For example if I start the bash shell with `--rcfile` and run the command top\n\nI think we could make username@hostname optional but I would like to see it included. I was thinking a little bit more and had some ideas for features. Imagine calling `termopen(['ssh','remoteuser@server.tld', 'ls'])` and then you `gf` on a file name in the buffer and the file is opened in your current neovim session via `scp://remoteuser@server.tld//path/to/document` then you have your local vim setup with all your vimscripts ready to edit the file.\n",
            "created_at": "2015-09-02T14:35:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/3278#issuecomment-137105155",
            "id": 137105155,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3278",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzEwNTE1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/137105155/reactions"
            },
            "updated_at": "2025-10-03T05:05:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/137105155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/820137?v=4",
                "events_url": "https://api.github.com/users/vito-c/events{/privacy}",
                "followers_url": "https://api.github.com/users/vito-c/followers",
                "following_url": "https://api.github.com/users/vito-c/following{/other_user}",
                "gists_url": "https://api.github.com/users/vito-c/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vito-c",
                "id": 820137,
                "login": "vito-c",
                "node_id": "MDQ6VXNlcjgyMDEzNw==",
                "organizations_url": "https://api.github.com/users/vito-c/orgs",
                "received_events_url": "https://api.github.com/users/vito-c/received_events",
                "repos_url": "https://api.github.com/users/vito-c/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vito-c/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vito-c/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vito-c",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> there is also apparently `:file SomeName` which renames the terminal buffer to be a friendly name. I wonder if there was any side effects with that.\r\n\r\nI am very late, but since it is still open: note that `:file` spawns an unlisted buffer if there is already a buffer name. Also, `:0file` (remove name) doesn't seem to work on terminal buffers: #https://github.com/voldikss/vim-floaterm/issues/162",
            "created_at": "2020-09-08T06:51:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/3278#issuecomment-688657462",
            "id": 688657462,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3278",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODY1NzQ2Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/688657462/reactions"
            },
            "updated_at": "2020-09-08T06:51:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/688657462",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/34595875?v=4",
                "events_url": "https://api.github.com/users/adigitoleo/events{/privacy}",
                "followers_url": "https://api.github.com/users/adigitoleo/followers",
                "following_url": "https://api.github.com/users/adigitoleo/following{/other_user}",
                "gists_url": "https://api.github.com/users/adigitoleo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/adigitoleo",
                "id": 34595875,
                "login": "adigitoleo",
                "node_id": "MDQ6VXNlcjM0NTk1ODc1",
                "organizations_url": "https://api.github.com/users/adigitoleo/orgs",
                "received_events_url": "https://api.github.com/users/adigitoleo/received_events",
                "repos_url": "https://api.github.com/users/adigitoleo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/adigitoleo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/adigitoleo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/adigitoleo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> there is also apparently `:file SomeName` which renames the terminal buffer to be a friendly name. I wonder if there was any side effects with that.\r\n\r\nAnother side effect is that it doesn't work with sessions, noted [here](https://github.com/neovim/neovim/issues/2488#issuecomment-537141127).\r\n\r\n`call termopen('bash;#foo')` or `:terminal bash \\# some name` is the best workaround I've found so far.",
            "created_at": "2022-02-25T08:18:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/3278#issuecomment-1050633052",
            "id": 1050633052,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3278",
            "node_id": "IC_kwDOAPphoM4-n2Nc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1050633052/reactions"
            },
            "updated_at": "2022-02-25T08:18:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1050633052",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17042548?v=4",
                "events_url": "https://api.github.com/users/ernstwi/events{/privacy}",
                "followers_url": "https://api.github.com/users/ernstwi/followers",
                "following_url": "https://api.github.com/users/ernstwi/following{/other_user}",
                "gists_url": "https://api.github.com/users/ernstwi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ernstwi",
                "id": 17042548,
                "login": "ernstwi",
                "node_id": "MDQ6VXNlcjE3MDQyNTQ4",
                "organizations_url": "https://api.github.com/users/ernstwi/orgs",
                "received_events_url": "https://api.github.com/users/ernstwi/received_events",
                "repos_url": "https://api.github.com/users/ernstwi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ernstwi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ernstwi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ernstwi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\n- https://github.com/neovim/neovim/pull/35951 supports specifying the command+args as a JSON array, which is necessary for `jobstart` to set an unambiguous buffer name. \n    - The reverse case of `:edit term://...` still works as normal, since in that case the user is providing the argument delimiting (quoting).\n\n\nWe can still plan to implement an improved URI.\n\n- The `#{pid}` fragment seems interesting.",
            "created_at": "2025-09-29T21:49:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/3278#issuecomment-3349170701",
            "id": 3349170701,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3278",
            "node_id": "IC_kwDOAPphoM7HoEoN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3349170701/reactions"
            },
            "updated_at": "2025-10-03T04:56:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3349170701",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/3278/comments",
    "created_at": "2015-08-31T16:58:23Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/3278/events",
    "html_url": "https://github.com/neovim/neovim/issues/3278",
    "id": 104090902,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/3278/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 128,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-12-25T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 75,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-10-04T16:48:30Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "MDU6SXNzdWUxMDQwOTA5MDI=",
    "number": 3278,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/3278/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/3278/timeline",
    "title": "URI for terminal  (term://...)",
    "type": null,
    "updated_at": "2025-10-03T05:39:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/3278",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/820137?v=4",
        "events_url": "https://api.github.com/users/vito-c/events{/privacy}",
        "followers_url": "https://api.github.com/users/vito-c/followers",
        "following_url": "https://api.github.com/users/vito-c/following{/other_user}",
        "gists_url": "https://api.github.com/users/vito-c/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vito-c",
        "id": 820137,
        "login": "vito-c",
        "node_id": "MDQ6VXNlcjgyMDEzNw==",
        "organizations_url": "https://api.github.com/users/vito-c/orgs",
        "received_events_url": "https://api.github.com/users/vito-c/received_events",
        "repos_url": "https://api.github.com/users/vito-c/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vito-c/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vito-c/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vito-c",
        "user_view_type": "public"
    }
}