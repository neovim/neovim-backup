{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "This is a *tracking issue*, not a manifesto. Corrections welcome unless they are nit-picks.\n\n# Problem\n\nThe C core of nvim has been armored by a lot of static analysis and compiler flags, which has greatly improved quality. But C still has these problems:\n\n- crashes from invalid pointers, arrays not bounds-checked\n- nul-terminated strings are awkward and have a perf cost\n- memory management takes effort and asan doesn't detect all the leaks\n- lack of modern language abstractions (e.g. generics) makes particular parts of the code over complicated and specialized (e.g. marktree, Lua/vimscript bridge).\n\n# Goal\n\nThe strategy of Nvim has always been to lift logic out of C and into Lua where possible. And that still looks like a productive path. But if there is a \"better C\" which allows us to completely *freeze* the remaining C bits and shift to the \"better C\", at near-zero cost, then we should consider that.\n\nC gives us the following benefits:\n\n- broad cross-platform support\n- fast builds\n- leverage existing C codebase\n\n# Proposal\n\nThis issue evaluates whether we can maintain the above benefits, while gaining new ones, by leveraging:\n\n## rust\n\n- pros\n    - tooling\n    - rich type system\n    - borrow checker gives strong guarantees\n    - language level macros\n    - large collection of libraries \n- cons\n    - slow build times\n    - interop with C libraries has nonzero friction\n    - mediocre cross-compiling support\n\n## odin\n\n- pros\n    - Simpler language (vs zig)\n    - Easy interop with C\n    - Supports defer and different allocators like Zig\n    - Good performance and error messages\n    - Fast compilation\n    - Has bounds checking and all the usual modern goodies\n- cons\n    - cross-compiling: can compile to other targets but it only compiles into objects, you have to have the platform's linker to be able to link it.\n    - not 1.0 (but the creator has stated that the language is pretty much done)\n    - No build system or package manager\n\n## zig\n\n- pros\n    - comptime\n      - replaces the Lua generator scripts that create C code (e.g. `gen_api_dispatch.lua`).\n    - zero-friction interop with legacy C code/libraries\n    - easy cross-compile to mac/linux/win, from a single CI job #26455 \n    - can replace CMake #26455\n- cons\n    - still in beta\n    - tooling not as good as C or Rust (e.g. LSP)\n\n\n## c++\n\n- cons\n    - conflicts with Lua's garbage collector, because it is garbage\n\n\n\n---\n\nprevious: https://github.com/neovim/neovim/issues/8669\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "In terms of evaluating the languages, here are my thoughts:\n\nC++ is the most 'obvious' choice, but it strikes me as just trading one flavour of brittle for another, and seeing as the issue doesn't list any pros nor elaborates on the con(s), I assume there's not much desire present to discuss it as a serious option, so I will mainly focus on Zig and Rust.\n\nI don't have very deep knowledge of Zig as a language, but purely in terms of tooling, moving parts of C to Zig would be significantly easier/faster especially early on, due to its first-class C integration. However, due to the language being in beta, and there being no indication of a stable release in the foreseeable future (the 1.0.0 GitHub milestone sits at 0% complete, with hundreds of issues assigned to it) and due to the fact that the language addresses the issues outlined with at least some caveats (e.g. memory management is still largely manual, strings still need to be utf-8 validated, Zig generics work *very* differently from most modern languages), it's difficult to say whether things would remain smooth sailing into the long term.\n\nI do have a lot of experience with Rust, and while I do think that adopting Rust's tooling and build system into Neovim's codebase would undoubtedly come with a significant upfront cost, in terms of bridging to C code, I think Rust would be very well equipped to handle Neovim's dependencies like Lua(jit), UTF-8 handling, libuv, etc, which could open the door to large, favorable refactors across the codebase, especially as Neovim's \"style\" (for lack of a better word) of C is already decently modernized, meaning the \"friction\" mentioned would be mitigated somewhat.\n\nAs a contributor, I am eager to put my money where my mouth is. While my contributions to Neovim have been relatively small thus far, primarily on the Lua side, since I don't have the time to fully immersive myself in Neovim's C codebase, adding a high level language (particularly Rust in my case, but Zig potentially also) would mean I could dedicate significantly more time and energy to the project, something that I would be very happy (even actively excited) to do.",
            "created_at": "2024-10-08T09:33:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2399347385",
            "id": 2399347385,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6PAyK5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 21,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 21,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2399347385/reactions"
            },
            "updated_at": "2025-05-04T17:46:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2399347385",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "While the approach of using another language is very attractive in terms of code safety and maintainability, I am concerned about the decreased compatibility with Vim and the difficulty of porting features.",
            "created_at": "2024-10-08T09:47:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2399377593",
            "id": 2399377593,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6PA5i5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2399377593/reactions"
            },
            "updated_at": "2024-10-08T09:47:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2399377593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I am concerned about the decreased compatibility with Vim and the difficulty of porting features.\n\nThis is a non-goal. The point of Neovim was to be a fork of Vim, and thus the two projects will diverge over time.\n\nAlso there is no plan on rewriting the entirety of Neovim, only specific parts of the codebase that could benefit from a rewrite. Files like `drawline.c`, `drawscreen.c`, `eval.c` are not likely to be effected by this. However, things like: the marktree, Nvim API, options, diff, folding, treesitter, Lua, would all be candidates for a rewrite.",
            "created_at": "2024-10-08T09:53:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2399394128",
            "id": 2399394128,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6PA9lQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 22,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 23,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2399394128/reactions"
            },
            "updated_at": "2024-10-08T11:47:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2399394128",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In addition, the two most lowest-hanging fruits (in order) for a rewrite is going to be be:\n\n- **Build system**. Our present build system is written mostly in cmake, and contains little code from vim makefiles. \n- Meta code generators: these are lua scripts reading in some c code and spitting out more c code.\n\nIn both cases these involve replacing code in cmake and lua, i e places we have taken a mandatory dependency on languages that _vim_ does not depend on. Thus the ship of \"vim compatibility\" in regards of language choice has sailed a looong time ago. ",
            "created_at": "2024-10-08T12:07:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2399663834",
            "id": 2399663834,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6PB_ba",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 10,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2399663834/reactions"
            },
            "updated_at": "2024-10-08T12:07:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2399663834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This issue is not a discussion. Only trying to gather useful technical attributes to have a clear picture about our options. No more debates please.",
            "created_at": "2024-10-09T10:18:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2401916183",
            "id": 2401916183,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6PKlUX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 11,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 12,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2401916183/reactions"
            },
            "updated_at": "2024-10-13T20:28:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2401916183",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Since no one mentioned Go, I will try to fill the gap:\n\nRust, while being a beautiful and incredibly powerful language, may require a lot of work to migrate, as the translation of design choices is not always obvious from a syntactically simple C to a language with a lot more features and a completely different paradigm (arguable).\nGo, on the other hand, is extremely simple, readable, and IMO plays in the very same field as C does (Rust feels much more like a C++ alternative than C). The syntax simplicity and fast learning curve (for those know C at least) might be a factor worth considering to make the transition easier for existing contributors.\nAt the same time, Go has just enough additional abstraction to move faster and with safety. The tooling is also decent (maybe not as good as Rust in that regard though).\nGarbage collection is a pain sometimes, but I am not sure how critical of a drawback it might be in case of Neovim.",
            "created_at": "2024-11-17T22:45:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2481646374",
            "id": 2481646374,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6T6usm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 4,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2481646374/reactions"
            },
            "updated_at": "2024-11-18T04:23:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2481646374",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12471703?v=4",
                "events_url": "https://api.github.com/users/olzhasar/events{/privacy}",
                "followers_url": "https://api.github.com/users/olzhasar/followers",
                "following_url": "https://api.github.com/users/olzhasar/following{/other_user}",
                "gists_url": "https://api.github.com/users/olzhasar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/olzhasar",
                "id": 12471703,
                "login": "olzhasar",
                "node_id": "MDQ6VXNlcjEyNDcxNzAz",
                "organizations_url": "https://api.github.com/users/olzhasar/orgs",
                "received_events_url": "https://api.github.com/users/olzhasar/received_events",
                "repos_url": "https://api.github.com/users/olzhasar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/olzhasar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/olzhasar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/olzhasar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "and how is Go's interop with C? I think that's a blocker.",
            "created_at": "2024-11-17T23:31:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2481673025",
            "id": 2481673025,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6T61NB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2481673025/reactions"
            },
            "updated_at": "2024-11-17T23:31:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2481673025",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And that's why Go isn't listed.",
            "created_at": "2024-11-18T01:27:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2481746813",
            "id": 2481746813,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6T7HN9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2481746813/reactions"
            },
            "updated_at": "2024-11-18T01:27:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2481746813",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Neovim is a moderately large C project at around 250,000 LOC.\n\nThat C code is not going anywhere, so incorporating two build chains would be the worst of all worlds, that's what  would happen if Rust or Go were chosen as alternatives to C in Neovim.\n\nZig to seems like the only appropriate choice for Neovim due to:\n\n- Zig is a C-compiler, so all the existing Neovim C code and any future Neovim Zig code would be compiled by **one compiler** (no other choice provides this simplicity)\n- Zig is also a modern language, hence new modules could be developed in this new language leveraging some of the nice capabilities of the language such as: comptime, null pointer checks, array bound checks etc\n- Zig is a build system, somewhat like `cargo`, but not a separate tool; so the `CMake` build-system Neovim currently uses could be incrementally be replaced by Zig the build tool\n- Zig is an excellent & simple cross-compiler, no external tooling required, everything to cross-compile is built-in\n\nGo is a garbage-collected language which is a complexity Neovim should not need to deal with when interfacing manual-memory-managed C to & from garbage-collected Go.\n\nRust brings with it language & build complexity; also the compiler is really slow, a problem that Zig will avoid once it's custom backend & optimizer are full developed.\n\nBun & Ghostty are built with Zig, it is used in the real-world now, though version 1.0 has not been released.\n\nMy 2cents, apologies for breaking @justinmk rule of `This issue is not a discussion`. It will now exit this discussion and just lurk quietly.",
            "created_at": "2024-11-18T03:38:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2481879672",
            "id": 2481879672,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6T7np4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 27,
                "-1": 0,
                "confused": 0,
                "eyes": 8,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 35,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2481879672/reactions"
            },
            "updated_at": "2024-11-18T03:38:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2481879672",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here's a interesting technical write-up on Zig, and how it compares to Rust.\nhttps://strongly-typed-thoughts.net/blog/zig-2025",
            "created_at": "2025-02-09T13:43:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2646309755",
            "id": 2646309755,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6du3t7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646309755/reactions"
            },
            "updated_at": "2025-02-09T15:42:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646309755",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8403455?v=4",
                "events_url": "https://api.github.com/users/deathtrip/events{/privacy}",
                "followers_url": "https://api.github.com/users/deathtrip/followers",
                "following_url": "https://api.github.com/users/deathtrip/following{/other_user}",
                "gists_url": "https://api.github.com/users/deathtrip/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/deathtrip",
                "id": 8403455,
                "login": "deathtrip",
                "node_id": "MDQ6VXNlcjg0MDM0NTU=",
                "organizations_url": "https://api.github.com/users/deathtrip/orgs",
                "received_events_url": "https://api.github.com/users/deathtrip/received_events",
                "repos_url": "https://api.github.com/users/deathtrip/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/deathtrip/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/deathtrip/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/deathtrip",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://strongly-typed-thoughts.net/blog/zig-2025\n\n> comptime ... feels like C++ templates back again, \n\nThat is a very shallow comparision.",
            "created_at": "2025-02-09T15:21:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2646354394",
            "id": 2646354394,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6dvCna",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646354394/reactions"
            },
            "updated_at": "2025-02-09T15:21:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646354394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Here's a interesting technical write-up on Zig, and how it compares to Rust. https://strongly-typed-thoughts.net/blog/zig-2025\n\nComparisons to Rust are likely irrelevant since the Neovim core team have made it known that Rust is not backward compatible with existing Neovim source code.\n\nThe Neovim project is well advised to avoid the drama that is now occurring in the Linux kernel related to Rust and API interfacing.\n\nHelix already exists as a pure Rust model editor for those interested.\n\nNeovim needs to delicately manage a 30+ year old C code base. Zig has a compelling solution for C code, one that other languages do not provide.",
            "created_at": "2025-02-10T00:35:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2646689771",
            "id": 2646689771,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6dwUfr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 15,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 15,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646689771/reactions"
            },
            "updated_at": "2025-02-10T00:35:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646689771",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Again, this is not meant to be a HN debate club, please stick to factual comparisons _between_ languages. Rhetorical questions on the form \"if you do things in a bad way, aren't things going to be bad?\" provide no new information. ",
            "created_at": "2025-04-07T12:04:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2783103681",
            "id": 2783103681,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6l4srB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 11,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 11,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2783103681/reactions"
            },
            "updated_at": "2025-04-07T12:04:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2783103681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "If the reason to port to zig is that \"importing C code is easy\", I wanted to leave this link here: https://ziggit.dev/t/cimport-going-away/5132\n\nDue to the divorce from LLVM Zig intends to remove @cImport and instead you'll have to generate a binding through the build system so it is no different than any other language with a binding generator after that happens.\n\nAnother thing is, sure, there's ghostty and bun using it, but the language does indeed break and andrew famously made a post \"please don't use zig in production\" because he's not afraid of breaking things but people did it anyway. So is the project willing to follow the rat race of zig changing and semantics possibly changing? (there's issues about changing semantics, where big zig projects list their pet peeves).\n\nAlong with the fact that despite zls being quite decent ish, it still breaks with comptime stuff and the language relies quite heavily on it.\n\n---\nWith the unbiased stuff out of the way. I personally find Odin a better \"better C\" language, so that's the language I would vouch for, and it's also tested in production through the JangaFX programs.\n\nIt doesn't have comptime like zig, but honestly there's nothing wrong with generating code through lua or a separate program.\n\nPros:\n- Simpler language\n- Easy interop with C\n- Supports defer and different allocators like Zig\n- Good performance and error messages\n- Fast compilation\n- Has bounds checking and all the usual modern goodies\n\nCons:\n- Also not 1.0 but quite stable, the creator has stated that the language is pretty much done and there's only a few roadblocks for 1.0 afaict\n- No build system or package manager (can be a pro for some)",
            "created_at": "2025-05-04T15:58:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2849289615",
            "id": 2849289615,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6p1LWP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849289615/reactions"
            },
            "updated_at": "2025-05-04T16:12:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849289615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28673457?v=4",
                "events_url": "https://api.github.com/users/RaphGL/events{/privacy}",
                "followers_url": "https://api.github.com/users/RaphGL/followers",
                "following_url": "https://api.github.com/users/RaphGL/following{/other_user}",
                "gists_url": "https://api.github.com/users/RaphGL/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/RaphGL",
                "id": 28673457,
                "login": "RaphGL",
                "node_id": "MDQ6VXNlcjI4NjczNDU3",
                "organizations_url": "https://api.github.com/users/RaphGL/orgs",
                "received_events_url": "https://api.github.com/users/RaphGL/received_events",
                "repos_url": "https://api.github.com/users/RaphGL/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/RaphGL/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RaphGL/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/RaphGL",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> wanted to leave this link here: https://ziggit.dev/t/cimport-going-away/5132\n> \n> Due to the divorce from LLVM Zig intends to remove @cImport and instead you'll have to generate a binding through the build system so it is no different than any other language with a binding generator after that happens.\n\nhttps://ziggit.dev/t/cimport-going-away/5132/9 indicates that the ergonomics will be similar to the current situation. I don't think that's \"no different than other binding generators\".\n\n> is the project willing to follow the rat race of zig changing and semantics possibly changing? \n\nwe have a build.zig and will be monitoring it. we haven't made a decision.\n\nI added Odin to the list, thanks.\n\nWhat is the cross-compilation story for Odin? That's a major pro for zig.",
            "created_at": "2025-05-04T16:07:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2849293681",
            "id": 2849293681,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6p1MVx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849293681/reactions"
            },
            "updated_at": "2025-05-04T16:11:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849293681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> What is the cross-compilation story for Odin? That's a major pro for zig.\n\nOdin allows to compile to other targets but it only compiles into objects, you have to have the platform's linker to be able to link it. So you effectively cannot fully cross compile from Linux to Windows or any other target.",
            "created_at": "2025-05-04T16:34:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/30678#issuecomment-2849304051",
            "id": 2849304051,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30678",
            "node_id": "IC_kwDOAPphoM6p1O3z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849304051/reactions"
            },
            "updated_at": "2025-05-04T16:34:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849304051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28673457?v=4",
                "events_url": "https://api.github.com/users/RaphGL/events{/privacy}",
                "followers_url": "https://api.github.com/users/RaphGL/followers",
                "following_url": "https://api.github.com/users/RaphGL/following{/other_user}",
                "gists_url": "https://api.github.com/users/RaphGL/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/RaphGL",
                "id": 28673457,
                "login": "RaphGL",
                "node_id": "MDQ6VXNlcjI4NjczNDU3",
                "organizations_url": "https://api.github.com/users/RaphGL/orgs",
                "received_events_url": "https://api.github.com/users/RaphGL/received_events",
                "repos_url": "https://api.github.com/users/RaphGL/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/RaphGL/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RaphGL/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/RaphGL",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 16,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30678/comments",
    "created_at": "2024-10-05T17:34:32Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30678/events",
    "html_url": "https://github.com/neovim/neovim/issues/30678",
    "id": 2568232469,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 4457150369,
            "name": "architecture",
            "node_id": "LA_kwDOAPphoM8AAAABCaq3oQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/architecture"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30678/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 277,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 320,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-05-10T14:46:06Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6ZFB4V",
    "number": 30678,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 58,
        "-1": 1,
        "confused": 3,
        "eyes": 12,
        "heart": 0,
        "hooray": 6,
        "laugh": 26,
        "rocket": 6,
        "total_count": 112,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30678/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30678/timeline",
    "title": "alternative to C for Nvim core",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-10T14:38:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30678",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}