{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nThe issue is related to the fact that nvim blocks while handlers are transforming data on lsp server response. Most noticeable in things like lsp references (in my case a test with 2000 entries in references, takes up to 10 seconds to show up in the qf list, after the server responds with the results - the server actually returns the results faster (in about 2-3 secs) than in takes nvim to process them and put them in the qf list), we have to also consider also other lsp calls which might have negative impact / be slow etc. (e.g. filter over workspace symbols, with short or widely matching query). \r\n\r\nThe issue with lsp references is that once the lsp handler is called, editor blocks while results are being transformed. That processing should be done in a coroutine, where control should be yielded back to the main thread, the coroutine should be only be allowed to have a fixed about of time to work/do it's thing, and give control back, to unblock the editor.\r\n\r\n### Expected behavior\r\n\r\nThe editor should not be blocking while the handler is processing the results from lsp requests. There could be a general solution or api where we are also allowed to easily customize and transform the results in handlers and the coroutine action happens transparently to the user / api consumer.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Just to make sure, in your config/usage LSP request-response is done asynchronously rather than synchronously, right? If you have any benchmark/profiling, or minimal reproduction to demonstrate the performance issue you're having, that'd be very helpful to make sure we are all on the same page. `vim.lsp.util.locations_to_items()` might be the synchronous bottleneck but I'm not quite sure this will be *that* slow.\r\n\r\nI can also notice a little short freezing as soon as the response handler callback is called, when the # of items in a response to a `textDocument/references` request is >10,000, but for me this is kind of bearable (0.1~0.2 seconds) -- not as annoying as yours (10 seconds). But on a slower machine this could be more noticeable; so a precise profiling or reproduction would be appreciated.\r\n",
            "created_at": "2024-01-06T17:52:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/26924#issuecomment-1879767252",
            "id": 1879767252,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26924",
            "node_id": "IC_kwDOAPphoM5wCvjU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879767252/reactions"
            },
            "updated_at": "2024-01-06T17:54:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879767252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, i have been testing this with a default configuration, the request is as always async, and after the request is done, i can browse through the editor for about 2-3 seconds, until the response comes in, when it does nvim locks up until the qflist is opened with the results. I will try to time the paths within the handler and outside of it, since a repro config would be much harder to pull. But will try to provide as much info as possible, a dump of the results table etc.",
            "created_at": "2024-01-06T18:01:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/26924#issuecomment-1879769404",
            "id": 1879769404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26924",
            "node_id": "IC_kwDOAPphoM5wCwE8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879769404/reactions"
            },
            "updated_at": "2024-01-06T18:03:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879769404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here is some brief information, after calling references, the response comes in 3 seconds, during which the editor is NOT blocked (as expected). Note that once the hot path is optimized by lua jit, it drops significantly, to around a second or so (approx). But would still make it good candidate for coroutine, to minimize stutters. \r\n\r\n[results.txt](https://github.com/neovim/neovim/files/13850741/results.txt) - results table as returned by the server.\r\n\r\n```\r\nspent in buf_request: 0 sec\r\nspent in locations_to_items: 13 sec\r\nspent in after qf population: 0 sec\r\n```",
            "created_at": "2024-01-06T18:15:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/26924#issuecomment-1879773228",
            "id": 1879773228,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26924",
            "node_id": "IC_kwDOAPphoM5wCxAs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879773228/reactions"
            },
            "updated_at": "2024-01-06T18:17:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879773228",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The reason why `locations_to_items()` is slow is: because it *reads* the line for each location item *eagerly* (if the file/buffer is not loaded, it loads a buffer and then read it):\r\n\r\nhttps://github.com/neovim/neovim/blob/v0.9.5/runtime/lua/vim/lsp/util.lua#L1822\r\nhttps://github.com/neovim/neovim/blob/v0.9.5/runtime/lua/vim/lsp/util.lua#L237-L317\r\n\r\nwhich is all synchronous, not quite efficient. This also has something to do with disk I/O speed. On Java, things would be much worse because reading would need to deal with extracting JAR (zip) files.... This should be improved by deferring the execution of `get_lines` as lazily as possible in an asynchronous context.",
            "created_at": "2024-01-06T19:03:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/26924#issuecomment-1879785062",
            "id": 1879785062,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26924",
            "node_id": "IC_kwDOAPphoM5wCz5m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879785062/reactions"
            },
            "updated_at": "2024-01-06T19:04:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879785062",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related https://github.com/neovim/neovim/issues/20783",
            "created_at": "2024-01-06T21:21:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/26924#issuecomment-1879833057",
            "id": 1879833057,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26924",
            "node_id": "IC_kwDOAPphoM5wC_nh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879833057/reactions"
            },
            "updated_at": "2024-01-06T21:21:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879833057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`setqflist` allows adding to an existing list so we could break up `locations_to_items` over several event loop iterations. We already do this for semantic tokens.",
            "created_at": "2024-10-31T09:57:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/26924#issuecomment-2449464462",
            "id": 2449464462,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26924",
            "node_id": "IC_kwDOAPphoM6R_9yO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449464462/reactions"
            },
            "updated_at": "2024-10-31T09:57:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449464462",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `setqflist` allows adding to an existing list so we could break up `locations_to_items` over several event loop iterations\n\nSomewhat related? https://github.com/neovim/neovim/pull/30868",
            "created_at": "2024-12-06T12:49:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/26924#issuecomment-2523153449",
            "id": 2523153449,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26924",
            "node_id": "IC_kwDOAPphoM6WZEQp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2523153449/reactions"
            },
            "updated_at": "2024-12-06T12:49:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2523153449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26924/comments",
    "created_at": "2024-01-06T17:27:14Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26924/events",
    "html_url": "https://github.com/neovim/neovim/issues/26924",
    "id": 2068735510,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "FEF2C0",
            "default": false,
            "description": "performance, latency, cpu/memory usage",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26924/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM57TmYW",
    "number": 26924,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26924/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26924/timeline",
    "title": "LSP performance: use coroutine during transformation of huge responses from language servers",
    "updated_at": "2025-01-17T15:27:29Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26924",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
        "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
        "followers_url": "https://api.github.com/users/asmodeus812/followers",
        "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
        "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/asmodeus812",
        "id": 15955811,
        "login": "asmodeus812",
        "node_id": "MDQ6VXNlcjE1OTU1ODEx",
        "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
        "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
        "repos_url": "https://api.github.com/users/asmodeus812/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/asmodeus812",
        "user_view_type": "public"
    }
}