{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "vim/neovim names its file buffers according to the path passed to `:e`. When the passed path is relative the buffer name becomes relative, when it's absolute the buffer name becomes absolute. But then `:cd X` and `:lcd X` rename the buffers to become absolute if outside X, otherwise relative. Even worse: an `:lcd` in any window will also update names for other windows (indeed, this is the reason my hack -see below- works).\n\nThis behavior is not consistent and thus confusing: sometimes absolute means outside the current working directory, sometimes not. For quickfix, which parses the output of external command, this often implies that files in the current directory are shown with absolute paths (in case the external command happens to report the full path). I would go to say the behavior is wrong.\n\nThis was discussed a time ago in vim mailing list but never really addressed:   \n\nhttps://groups.google.com/forum/#!topic/vim_use/Vq0z2DJH2So\n\n(And see my awful workaround at the end: `0split | lcd . | quit`, I would like to remove it from my config for good!)\n\nThere are two issues described there:\n- [ ] Consistently set buffer names on creation. The obvious rule is: relative if inside current working directory, otherwise absolute.\n- [ ] It would be nice if `getcwd()` could specify whether the desired cwd is the local or the global one. \n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "If you agree this is a bug I will hack a patch and open a PR. Otherwise I will manage to live with my current workaround.\n",
            "created_at": "2015-11-29T19:19:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160454642",
            "id": 160454642,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ1NDY0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160454642/reactions"
            },
            "updated_at": "2015-11-29T19:19:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160454642",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2845433?v=4",
                "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
                "followers_url": "https://api.github.com/users/memeplex/followers",
                "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
                "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/memeplex",
                "id": 2845433,
                "login": "memeplex",
                "node_id": "MDQ6VXNlcjI4NDU0MzM=",
                "organizations_url": "https://api.github.com/users/memeplex/orgs",
                "received_events_url": "https://api.github.com/users/memeplex/received_events",
                "repos_url": "https://api.github.com/users/memeplex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/memeplex",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Where does this make a difference? I can only imagine having a difference in a status line, which is fixed by proper `&statusline` setting.\n",
            "created_at": "2015-11-29T19:34:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160456021",
            "id": 160456021,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ1NjAyMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160456021/reactions"
            },
            "updated_at": "2015-11-29T19:34:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160456021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "quickfix tend to open a number of files inside the \"current project\" and the buffer list becomes quickly cluttered with an incoherent mix of short relative names and long absolute ones (all of them based on the same project root).\n\nAutomation becomes harder also, as it's not possible to depend on a regular, simple behavior (in fact, that's how I hit this).\n\nTo recap: inconsistency and clutter.\n",
            "created_at": "2015-11-29T19:41:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160458310",
            "id": 160458310,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ1ODMxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160458310/reactions"
            },
            "updated_at": "2015-11-29T19:42:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160458310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2845433?v=4",
                "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
                "followers_url": "https://api.github.com/users/memeplex/followers",
                "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
                "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/memeplex",
                "id": 2845433,
                "login": "memeplex",
                "node_id": "MDQ6VXNlcjI4NDU0MzM=",
                "organizations_url": "https://api.github.com/users/memeplex/orgs",
                "received_events_url": "https://api.github.com/users/memeplex/received_events",
                "repos_url": "https://api.github.com/users/memeplex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/memeplex",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Did not saw anything like this. Though I have an autocommand in my vimrc which upon switching to a window changes its directory to the project root (determined by presence of the VCS-specific directories like .hg) or file directory (in case nothing like this was found), effectively doing the same thing your workaround does I think.\n",
            "created_at": "2015-11-29T19:46:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160460348",
            "id": 160460348,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ2MDM0OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160460348/reactions"
            },
            "updated_at": "2015-11-29T19:46:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160460348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "That approach is not without problems. Auto-calling `cd` on window change would modify a global setting, while auto-calling `lcd` would establish a local setting. In general, both alternatives are wrong, as they impose a scope (global or local) for the setting which may be undesirable for the case being. Moreover, it's not possible to honour the current window cwd scope (global or local) as it's not possible to know whether the current working directory was globally or locally set by the user.\n\nThat's why my workaround open a discardable window to execute `lcd`, and that's why it's so ugly.\n",
            "created_at": "2015-11-29T19:57:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160461377",
            "id": 160461377,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ2MTM3Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160461377/reactions"
            },
            "updated_at": "2015-11-29T19:57:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160461377",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2845433?v=4",
                "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
                "followers_url": "https://api.github.com/users/memeplex/followers",
                "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
                "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/memeplex",
                "id": 2845433,
                "login": "memeplex",
                "node_id": "MDQ6VXNlcjI4NDU0MzM=",
                "organizations_url": "https://api.github.com/users/memeplex/orgs",
                "received_events_url": "https://api.github.com/users/memeplex/received_events",
                "repos_url": "https://api.github.com/users/memeplex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/memeplex",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@memeplex Did you try using `:file` in a workaround? At least this is the command designed specifically for changing buffer name.\n",
            "created_at": "2015-11-29T20:35:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160467380",
            "id": 160467380,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ2NzM4MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160467380/reactions"
            },
            "updated_at": "2015-11-29T20:36:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160467380",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This caused me lot of pain when building dirvish.vim. `:file` is not a great solution because it leaves an extra buffer around. It also makes it very difficult to determine whether a resolved buffer exists. \n\nIt makes ZERO sense for a buffer name to be anything except absolute path. Pretty/relative name is a matter of configuring the status line.\n",
            "created_at": "2015-11-29T20:41:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160469146",
            "id": 160469146,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ2OTE0Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160469146/reactions"
            },
            "updated_at": "2015-11-29T20:42:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160469146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The \"always absolute\" criterion is the most coherent one, except that vim uses the buffer name both as a UI thing and as a filename. The \"always absolute\" criterion will thus imply that everywhere the buffer name could be shown, a decision must be taken about how to show it. One place is the modeline. Another place is the buffer list (I wouldn't like to get long absoulte paths for files in the current working directory there). There will be other places, for sure. \"Always absolute\" is logically more sound, as it separates different concerns, but could trigger the need for a number of new format options (how to show the buffer name here and there). \"Relative inside the cwd/Absolute outside the cwd\" could be a simpler to implement compromise (I guess it's just a matter of normalizing the name on file buffer creation), as it's what vim/nvim already poorly does.\n",
            "created_at": "2015-11-29T20:55:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160470644",
            "id": 160470644,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ3MDY0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160470644/reactions"
            },
            "updated_at": "2015-11-29T20:55:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160470644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2845433?v=4",
                "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
                "followers_url": "https://api.github.com/users/memeplex/followers",
                "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
                "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/memeplex",
                "id": 2845433,
                "login": "memeplex",
                "node_id": "MDQ6VXNlcjI4NDU0MzM=",
                "organizations_url": "https://api.github.com/users/memeplex/orgs",
                "received_events_url": "https://api.github.com/users/memeplex/received_events",
                "repos_url": "https://api.github.com/users/memeplex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/memeplex",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "+1 on always absolute. I see 2 pros:\n- We don't know how people will like to format their paths in the UI. It makes more sense to make all context available.\n- Easier logic in neovim core (ex: comparing if two paths are the same)\n\nAlso. Sometimes the cwd doesn't matter. Very often I open files from here and there and I don't care if one of those is under my cwd.\n",
            "created_at": "2015-11-30T15:36:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160663246",
            "id": 160663246,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDY2MzI0Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160663246/reactions"
            },
            "updated_at": "2015-11-30T15:36:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160663246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4336260?v=4",
                "events_url": "https://api.github.com/users/stellarhoof/events{/privacy}",
                "followers_url": "https://api.github.com/users/stellarhoof/followers",
                "following_url": "https://api.github.com/users/stellarhoof/following{/other_user}",
                "gists_url": "https://api.github.com/users/stellarhoof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stellarhoof",
                "id": 4336260,
                "login": "stellarhoof",
                "node_id": "MDQ6VXNlcjQzMzYyNjA=",
                "organizations_url": "https://api.github.com/users/stellarhoof/orgs",
                "received_events_url": "https://api.github.com/users/stellarhoof/received_events",
                "repos_url": "https://api.github.com/users/stellarhoof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stellarhoof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stellarhoof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stellarhoof",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I would vote for “always relative if under the current dir” if not the fact that places where this matters (powerline statusline and command-t for switching buffers) are ignoring what Vim thinks is a buffer name and use their own means of deciding what exactly to show.\n\nAFAIR I would not welcome this change though when I was using `:b` for switching buffers in place of command-t.\n\n> Easier logic in neovim core (ex: comparing if two paths are the same)\n\nWhere have you seen this? Buffers have `b_ffname` attached which contain absolute path and if code deals with `buf_T` structures it may simply use `b_ffname`.\n",
            "created_at": "2015-11-30T15:55:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160669584",
            "id": 160669584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDY2OTU4NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160669584/reactions"
            },
            "updated_at": "2015-11-30T15:55:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160669584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Where have you seen this? Buffers have b_ffname attached which contain absolute path and if code deals with buf_T structures it may simply use b_ffname.\n\n@ZyX-I Sorry you definitely have much more domain knowledge on vim's codebase. I was just talking in the abstract\n",
            "created_at": "2015-11-30T16:25:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160678838",
            "id": 160678838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDY3ODgzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160678838/reactions"
            },
            "updated_at": "2015-11-30T16:25:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160678838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4336260?v=4",
                "events_url": "https://api.github.com/users/stellarhoof/events{/privacy}",
                "followers_url": "https://api.github.com/users/stellarhoof/followers",
                "following_url": "https://api.github.com/users/stellarhoof/following{/other_user}",
                "gists_url": "https://api.github.com/users/stellarhoof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stellarhoof",
                "id": 4336260,
                "login": "stellarhoof",
                "node_id": "MDQ6VXNlcjQzMzYyNjA=",
                "organizations_url": "https://api.github.com/users/stellarhoof/orgs",
                "received_events_url": "https://api.github.com/users/stellarhoof/received_events",
                "repos_url": "https://api.github.com/users/stellarhoof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stellarhoof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stellarhoof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stellarhoof",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@azure-satellite I cannot say that I know all places where file names are compared, so you had some chances to prove yourself. But what I do know is the existence of `b_ffname` `buf_T` structure attribute which makes these chances unlikely and one of the points in defence of your position invalid.\n\nBy the way, one thing absolute paths: Vim tends to use `~/`-style paths in many places and sometimes even compare _these_ paths: e.g. replacing ~absolute path with /absolute path was advertised as one of the advantages of ShaDa format (which also simplified some code). I.e. buffer had `b_ffname` attribute, but viminfo file for some reason contained ~absolute path and thus determining one of the global marks belongs to one of the existing buffers involved iterating over buffers, using `home_replace_save` on each `b_ffname` (which turns /absolute to ~absolute) and only then comparing the paths for equality (do not ask me why instead of doing this ~absolute path was not expanded to /absolute when reading mark). I simply use plain `b_ffname` in ShaDa code because this is clearer then messing with ~absolute paths in any fashion, even in saner one. ~absolute paths are still used in a number of places: e.g. in swap file headers.\n\nThus even if absolute paths are the way to go, there is still a question whether they need to be ~absolute when possible.\n\n---\n\n~absolute is short-hand for “`~/`-style absolute path” (example: `~/.config/nvim`).\n\n/absolute is a short-hand for “fully expanded absolute path” (example: `/home/zyx/.config/nvim`).\n",
            "created_at": "2015-11-30T16:45:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-160685261",
            "id": 160685261,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDY4NTI2MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160685261/reactions"
            },
            "updated_at": "2015-11-30T16:46:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/160685261",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Only concrete issue I see here is this:\n\n> or quickfix, which parses the output of external command, this often implies that files in the current directory are shown with absolute paths\n\nJust a quickfix bug?\n\nSee also https://github.com/vim/vim/issues/549.\n",
            "created_at": "2016-01-07T00:31:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-169508895",
            "id": 169508895,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTUwODg5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/169508895/reactions"
            },
            "updated_at": "2016-01-07T00:31:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/169508895",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "As I see it, quickfix is consistent with the arguably inconsistent file buffer naming rule: create a buffer with the name given as is, then relativize it upon any call to cd or lcd in any window. I would expect that either the name is absolute forever when the buffer is created that way, either the name is absolute only when outside the current working directory. The current behavior is a confusing mix of those alternatives. \"Fixing\" quickfix would be ok but ad hoc.\n",
            "created_at": "2016-01-07T00:42:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-169510515",
            "id": 169510515,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTUxMDUxNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/169510515/reactions"
            },
            "updated_at": "2016-01-07T00:42:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/169510515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2845433?v=4",
                "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
                "followers_url": "https://api.github.com/users/memeplex/followers",
                "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
                "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/memeplex",
                "id": 2845433,
                "login": "memeplex",
                "node_id": "MDQ6VXNlcjI4NDU0MzM=",
                "organizations_url": "https://api.github.com/users/memeplex/orgs",
                "received_events_url": "https://api.github.com/users/memeplex/received_events",
                "repos_url": "https://api.github.com/users/memeplex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/memeplex",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I would expect that either the name is absolute forever when the buffer is created that way\n\nBut that wouldn't fix the quickfix issue, unless I'm missing something.\n",
            "created_at": "2016-01-07T00:46:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-169511107",
            "id": 169511107,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTUxMTEwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/169511107/reactions"
            },
            "updated_at": "2016-01-07T00:46:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/169511107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "No, it wouldn't. That's why my proposal was to follow the relative inside cwd, absolute elsewhere rule. vim/neovim already follows this rule except at buffer creation. That's what I find inconsistent. But other people here prefer the always absolute rule. Nevertheless, I think this last rule may have to introduce a distinction between the buffer name and its presentation, which is currently missing.\n",
            "created_at": "2016-01-07T00:56:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-169512442",
            "id": 169512442,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTUxMjQ0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/169512442/reactions"
            },
            "updated_at": "2016-01-07T00:59:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/169512442",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2845433?v=4",
                "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
                "followers_url": "https://api.github.com/users/memeplex/followers",
                "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
                "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/memeplex",
                "id": 2845433,
                "login": "memeplex",
                "node_id": "MDQ6VXNlcjI4NDU0MzM=",
                "organizations_url": "https://api.github.com/users/memeplex/orgs",
                "received_events_url": "https://api.github.com/users/memeplex/received_events",
                "repos_url": "https://api.github.com/users/memeplex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/memeplex",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Suffering from this problem.",
            "created_at": "2017-01-09T21:09:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-271408482",
            "id": 271408482,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTQwODQ4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/271408482/reactions"
            },
            "updated_at": "2017-01-09T21:09:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/271408482",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2898670?v=4",
                "events_url": "https://api.github.com/users/hiberabyss/events{/privacy}",
                "followers_url": "https://api.github.com/users/hiberabyss/followers",
                "following_url": "https://api.github.com/users/hiberabyss/following{/other_user}",
                "gists_url": "https://api.github.com/users/hiberabyss/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hiberabyss",
                "id": 2898670,
                "login": "hiberabyss",
                "node_id": "MDQ6VXNlcjI4OTg2NzA=",
                "organizations_url": "https://api.github.com/users/hiberabyss/orgs",
                "received_events_url": "https://api.github.com/users/hiberabyss/received_events",
                "repos_url": "https://api.github.com/users/hiberabyss/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hiberabyss/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hiberabyss/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hiberabyss",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure it is relevant to this issue, but a patch ([8.0.1781](https://github.com/vim/vim/commit/a796d46f29e3cc235cc981696d7ee80faccb5000)) was recently merged in Vim, whose purpose seems to be to always shorten the filepaths (making them relative to the current working directory when they're below the latter, I suppose).",
            "created_at": "2018-05-02T13:48:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-385983717",
            "id": 385983717,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTk4MzcxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/385983717/reactions"
            },
            "updated_at": "2018-05-02T13:49:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/385983717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8505073?v=4",
                "events_url": "https://api.github.com/users/lacygoill/events{/privacy}",
                "followers_url": "https://api.github.com/users/lacygoill/followers",
                "following_url": "https://api.github.com/users/lacygoill/following{/other_user}",
                "gists_url": "https://api.github.com/users/lacygoill/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lacygoill",
                "id": 8505073,
                "login": "lacygoill",
                "node_id": "MDQ6VXNlcjg1MDUwNzM=",
                "organizations_url": "https://api.github.com/users/lacygoill/orgs",
                "received_events_url": "https://api.github.com/users/lacygoill/received_events",
                "repos_url": "https://api.github.com/users/lacygoill/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lacygoill/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lacygoill/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lacygoill",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've also felt that's annoying:\r\nhttps://github.com/neovim/neovim/pull/8967",
            "created_at": "2018-09-07T20:50:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/3764#issuecomment-419562139",
            "id": 419562139,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3764",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTU2MjEzOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/419562139/reactions"
            },
            "updated_at": "2018-09-07T20:50:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/419562139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2970549?v=4",
                "events_url": "https://api.github.com/users/P4Cu/events{/privacy}",
                "followers_url": "https://api.github.com/users/P4Cu/followers",
                "following_url": "https://api.github.com/users/P4Cu/following{/other_user}",
                "gists_url": "https://api.github.com/users/P4Cu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/P4Cu",
                "id": 2970549,
                "login": "P4Cu",
                "node_id": "MDQ6VXNlcjI5NzA1NDk=",
                "organizations_url": "https://api.github.com/users/P4Cu/orgs",
                "received_events_url": "https://api.github.com/users/P4Cu/received_events",
                "repos_url": "https://api.github.com/users/P4Cu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/P4Cu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/P4Cu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/P4Cu",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 19,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/3764/comments",
    "created_at": "2015-11-29T19:11:15Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/3764/events",
    "html_url": "https://github.com/neovim/neovim/issues/3764",
    "id": 119379845,
    "labels": [
        {
            "color": "F9D0C4",
            "default": false,
            "description": "wrong behavior inherited from vim",
            "id": 154310492,
            "name": "bug-vim",
            "node_id": "MDU6TGFiZWwxNTQzMTA0OTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-vim"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 6937717172,
            "name": "quickfix",
            "node_id": "LA_kwDOAPphoM8AAAABnYUptA",
            "url": "https://api.github.com/repos/neovim/neovim/labels/quickfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/3764/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUxMTkzNzk4NDU=",
    "number": 3764,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/3764/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/3764/timeline",
    "title": "quickfix: Relative/absolute filenames mess",
    "updated_at": "2025-01-19T11:46:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/3764",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2845433?v=4",
        "events_url": "https://api.github.com/users/memeplex/events{/privacy}",
        "followers_url": "https://api.github.com/users/memeplex/followers",
        "following_url": "https://api.github.com/users/memeplex/following{/other_user}",
        "gists_url": "https://api.github.com/users/memeplex/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/memeplex",
        "id": 2845433,
        "login": "memeplex",
        "node_id": "MDQ6VXNlcjI4NDU0MzM=",
        "organizations_url": "https://api.github.com/users/memeplex/orgs",
        "received_events_url": "https://api.github.com/users/memeplex/received_events",
        "repos_url": "https://api.github.com/users/memeplex/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/memeplex/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/memeplex/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/memeplex",
        "user_view_type": "public"
    }
}