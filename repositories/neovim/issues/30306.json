{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nCurrently there is no way to configure built-in `vim.snippet` behavior. This recently became a problem after introduction of not configurable \"session only\" mappings for snippet navigation (see #30198).\r\n\r\n### Expected behavior\r\n\r\nSome way for users to configure how certain aspects of snippets expansion is done. As per [this comment](https://github.com/neovim/neovim/issues/30198#issuecomment-2336620609), it might be a good idea to define the scope before deciding on this.\r\n\r\nHere are some suggestions:\r\n- Implement `vim.snippet.config()`, similar in spirit to `vim.diagnostic.config()`. Currently this seems like the best (future-proof, already familiar) design. See also [this comment](https://github.com/neovim/neovim/issues/30198#issuecomment-2336624245) for some counter-points.\r\n- Allow `opts` in `vim.snippet.expand()`. This allows configuration on a call level which might be good for plugins that leverage it. However, it also might be too granular to the point of not solving the issue for built-in functionality (see [this comment](https://github.com/neovim/neovim/issues/30198#issuecomment-2336583394)).\r\n- Implement `SnippetEnter` and `SnippetLeave` events (see #26449) for users to be able to perform actions only inside snippet session. Not *exactly* the snippet configuration, but at least *some* way for users to act on snippet expansion.\r\n\r\ncc @MariaSolOs, @mfussenegger, @clason",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Since the current snippet settings aren't specific to a session but instead configure the entire snippet expansion logic, using `opts` in `vim.snippet.expand` might have a lot of \"global\" properties that IMO don't really belong to that function. I would lean towards `vim.snippet.config`, with maybe a `on_expand` callback to include the behavior from the former point.",
            "created_at": "2024-09-08T15:29:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/30306#issuecomment-2336726971",
            "id": 2336726971,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30306",
            "node_id": "IC_kwDOAPphoM6LR5-7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336726971/reactions"
            },
            "updated_at": "2024-09-08T15:29:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336726971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Currently this seems like the best (future-proof, already familiar) design\r\n\r\nI find this assessment a bit odd given the points already made in the linked issue:\r\n\r\n- `vim.diagnostic.config` is the exception, not the rule in core. There are global/local buffer/window options for most of the other configurations. `diagnostic.config` is the exception because it required namespace scoping. That's not required for snippets.\r\n- It would require a keymap DSL, which was already identified as sub-optimal in other issues/plugin guide PRs.\r\n\r\n> Allow opts in vim.snippet.expand(). This allows configuration on a call level which might be good for plugins that leverage it. However, it also might be too granular to the point of not solving the issue for built-in functionality (see this comment).\r\n\r\nMaybe I haven't been clear enough in the other issue. This is a no-go for me. I don't see us adding a `vim.completion.enable({ snippet_keymap =  })` _and_ a `vim.lsp.buf.code_action({ snippet_keymap = ... })` _and_ `vim.lsp.future_snippet_use_case...`\r\n\r\nBesides spreading the configuration to each function that triggers `vim.snippet.expand` under the hood, it also suffers from the keymap-DSL problem, unless we'd make it `on_snippet_start` triggers, but at that point we'd be emulating snippet autocmds.\r\n\r\n---\r\n\r\nPlease let us not introduce new ways of doing things. \r\nThis should either be:\r\n\r\n- A global keybinding instead of context dependent that's set as default which users can override like other default keybindings.\r\n- https://github.com/neovim/neovim/issues/26449",
            "created_at": "2024-09-08T18:52:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/30306#issuecomment-2336787042",
            "id": 2336787042,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30306",
            "node_id": "IC_kwDOAPphoM6LSIpi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336787042/reactions"
            },
            "updated_at": "2024-09-08T18:52:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336787042",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@mfussenegger, this issue is **not** about not configurable keymaps. They are mentioned as a driver for creating this and discussed in #30198.\r\n\r\nThis is meant as a place for a general discussion (as per [this comment](https://github.com/neovim/neovim/issues/30198#issuecomment-2336620609)). Hence locating all suggested approaches in one place for reference (however strongly you put some of them as a no-go for you).\r\n\r\n> I find this assessment a bit odd given the points already made in the linked issue:\r\n\r\nI also find both of the points a bit odd because they don't show anything strong specifically against the `vim.snippet.config` approach.",
            "created_at": "2024-09-08T19:02:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/30306#issuecomment-2336790363",
            "id": 2336790363,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30306",
            "node_id": "IC_kwDOAPphoM6LSJdb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336790363/reactions"
            },
            "updated_at": "2024-09-08T19:04:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336790363",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, but the discussion then becomes (too) quickly about keymaps. The point of such an issue would be to collect _what_ to configure before starting to propose _how_. ",
            "created_at": "2024-09-08T19:09:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/30306#issuecomment-2336792370",
            "id": 2336792370,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30306",
            "node_id": "IC_kwDOAPphoM6LSJ8y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336792370/reactions"
            },
            "updated_at": "2024-09-08T19:09:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336792370",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30306/comments",
    "created_at": "2024-09-08T10:11:39Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30306/events",
    "html_url": "https://github.com/neovim/neovim/issues/30306",
    "id": 2512304531,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 6207355257,
            "name": "snippet",
            "node_id": "LA_kwDOAPphoM8AAAABcfy5eQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/snippet"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30306/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 285,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 339,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-04T21:53:41Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6VvrmT",
    "number": 30306,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30306/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30306/timeline",
    "title": "Configuration of built-in snippets",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30306",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}