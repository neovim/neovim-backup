{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nNeovim opens language parsers in a way that blocks other processes from overwriting them, and does not release the associated file handle until Neovim closes. This prevents the reinstallation and upgrade of language parsers on Windows after the parser has been loaded.\n\n### Steps to reproduce\n\nThese reproduction steps use `lazy.nvim` and `nvim-treesitter`, but manually installing a parser where Neovim can pick it up will trigger the error as well.\r\n\r\n1. Install a language parser like `:TSInstall rust`, or manually by installing it in the correct directory for Neovim to find it.\r\n2. Close Neovim if it was open, then open a file that uses an installed parser.\r\n3. Inspect the tree with `:InspectTree` (this is just one way of being sure the language parser was loaded)\r\n4. Close the tree and the buffer if you want, but keep the same instance of Neovim open.\r\n5. Attempt to reinstall the language parser (or manually replace it).\r\n6. Observe an error indicating access is denied.\r\n\r\nI'm not sure why, but reinstalling immediately after the initial installation results in no message at all.\r\n\r\nFor reference, I reproduced this initially with a simple `init.lua`:\r\n\r\n```lua init.lua\r\nlocal lazypath = vim.fn.stdpath(\"data\") .. \"/lazy/lazy.nvim\"\r\nif not (vim.uv or vim.loop).fs_stat(lazypath) then\r\n\tvim.fn.system({\r\n\t\t\"git\",\r\n\t\t\"clone\",\r\n\t\t\"--filter=blob:none\",\r\n\t\t\"https://github.com/folke/lazy.nvim.git\",\r\n\t\t\"--branch=stable\", -- latest stable release\r\n\t\tlazypath,\r\n\t})\r\nend\r\nvim.opt.rtp:prepend(lazypath)\r\n\r\nrequire(\"lazy\").setup({\r\n\t\"nvim-treesitter/nvim-treesitter\",\r\n\tbranch = \"main\",\r\n\tbuild = \":TSUpdate\",\r\n\tlazy = false,\r\n})\r\n```\r\n\r\nThen I tried to rule out the involvement of `nvim-treesitter` and even `lazy.nvim` by cleaning out the configuration and data files, leaving behind only `C:\\Users\\User\\AppData\\Local\\nvim-data\\site`, which held the parser in `parser\\rust.so`. Then I just used a sanity-check `init.lua`:\r\n\r\n```lua init.lua\r\nprint(\"Hello, world!\")\r\n```\r\n\r\nThe problem still occurred.\r\n\r\nWindows has a way of [locking files](https://superuser.com/questions/1500604/why-cant-you-change-the-name-of-an-open-file-in-windows), depending on how they are opened, so it seems like that is causing the problem, which is made worse because they don't seem to be closed until Neovim itself is closed.\n\n### Expected behavior\n\nI would expect treesitter language parsers to be replaceable, even when in use, so they can always be upgraded from within Neovim.\n\n### Neovim version (nvim -v)\n\n0.10.0-dev-2976+g208852126\n\n### Vim (not Nvim) behaves the same?\n\nno?\n\n### Operating system/version\n\nWindows 10 Pro 22H2\n\n### Terminal name/version\n\nWindows Terminal 1.19.10821.0\n\n### $TERM environment variable\n\nN/A - it's empty\n\n### Installation\n\nDownloaded `nvim-win64.zip` from the repository's release assets, but it also exists in 0.9.x versions installed with `winget`, including 0.9.5.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm not sure there's much we can do here, to be honest. Tree-sitter itself is not eager in releasing parsers, and we cache them for hard won performance reasons. \n\nI general, Neovim doesn't really support hot reloading, and this is a corollary of that. ",
            "created_at": "2024-04-22T20:23:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2070888158",
            "id": 2070888158,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57bz7e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2070888158/reactions"
            },
            "updated_at": "2024-04-22T20:23:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2070888158",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Neovim doesn't really support hot reloading, and this is a corollary of that.\r\n\r\nIn this case, on Windows, (potentially) all Nvim processes would need to be closed in order to update a TS parser. That's a bit different than not supporting hot-reload.",
            "created_at": "2024-04-23T09:13:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2071809578",
            "id": 2071809578,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57fU4q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2071809578/reactions"
            },
            "updated_at": "2024-04-23T09:13:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2071809578",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That is fair. Implementing proper garbage collection would be a significant overhead, though. ",
            "created_at": "2024-04-23T09:15:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2071813978",
            "id": 2071813978,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57fV9a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2071813978/reactions"
            },
            "updated_at": "2024-04-23T09:15:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2071813978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk Correct. If any Neovim process has opened it at least once during its lifetime, the language parser cannot be deleted until that process ends or calls `uv_dlclose` on it. However, it can be moved and renamed as long as it remains on the same filesystem. [Microsoft's advice](https://learn.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-updates) is to move it out of the way, install the new one, then use [`MoveFileExA`](https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-movefileexa) with the `MOVEFILE_DELAY_UNTIL_REBOOT` flag to tell Windows to delete the file automatically during the next reboot.\r\n\r\n@clason For Neovim to facilitate proper reinstallation of language parsers on Windows, it would have to be modified to keep track of the file handle it creates with `uv_dlopen` and also allow other processes to tell it to call `uv_dlclose` on them, but then there's the issue of when to load the language parser again. Should it trust that a follow-up message will arrive with news that the parser can be loaded? Or watch the filesystem for changes that may never come because of unrelated installation issues? Plus, the plugins would still have to be modified to support the new functionality. It would be much simpler to expect plugins to follow Microsoft's recommended three step process for reinstallation of dynamic-link libraries.",
            "created_at": "2024-04-23T14:18:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2072439572",
            "id": 2072439572,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57husU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2072439572/reactions"
            },
            "updated_at": "2024-04-23T14:18:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2072439572",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35066367?v=4",
                "events_url": "https://api.github.com/users/FlippingBinary/events{/privacy}",
                "followers_url": "https://api.github.com/users/FlippingBinary/followers",
                "following_url": "https://api.github.com/users/FlippingBinary/following{/other_user}",
                "gists_url": "https://api.github.com/users/FlippingBinary/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/FlippingBinary",
                "id": 35066367,
                "login": "FlippingBinary",
                "node_id": "MDQ6VXNlcjM1MDY2MzY3",
                "organizations_url": "https://api.github.com/users/FlippingBinary/orgs",
                "received_events_url": "https://api.github.com/users/FlippingBinary/received_events",
                "repos_url": "https://api.github.com/users/FlippingBinary/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/FlippingBinary/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FlippingBinary/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/FlippingBinary",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We can at least ensure that our parser object (er... \"LanguageTree\") has an API for releasing/destroying parsers. Making it work \"properly\" might require some work (maybe an upstream TS patch), it sounds like.",
            "created_at": "2024-04-23T14:22:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2072451166",
            "id": 2072451166,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57hxhe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2072451166/reactions"
            },
            "updated_at": "2024-04-23T14:22:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2072451166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It would be much simpler to expect plugins to follow Microsoft's recommended three step process for reinstallation of dynamic-link libraries.\r\n\r\nI don't quite agree. People do expect that installed plugins/whatever are available immediately, and we shouldn't paper over that: Updating a parser that is in use is just not well-defined. And speaking of nvim-treesitter: it _doesn't_ load parsers itself; that is handled by Neovim. It will be loaded when it is requested and is not yet loaded.\r\n\r\n> We can at least ensure that our parser object (er... \"LanguageTree\") has an API for releasing/destroying parsers. \r\n\r\nThere is a tree-sitter API for that which is exposed (privately); the overhead is for tracking \"use\" of the parser, which we currently don't do at all. It's in fact not so obvious when a parser is to no longer \"used\" for a buffer (e.g., if injections are created or destroyed).",
            "created_at": "2024-04-23T14:32:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2072485846",
            "id": 2072485846,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57h5_W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2072485846/reactions"
            },
            "updated_at": "2024-04-23T14:35:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2072485846",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": ">I don't quite agree. People do expect that installed plugins/whatever are available immediately, and we shouldn't paper over that: Updating a parser that is in use is just not well-defined. And speaking of nvim-treesitter: it doesn't load parsers itself; that is handled by Neovim. It will be loaded when it is requested and is not yet loaded.\r\n\r\nI agree that people do expect that installed components are available immediately, but I'm not suggesting something that would interfere with that goal. Quite the contrary. The current behavior on Windows when reinstalling a loaded language parser with `nvim-treesitter` is that the new parser does not take effect at all, _even after restarting Neovim_. It relies on the user to identify which parser failed to install, close all affected instances of Neovim, and launch a call to `:TSInstall <language>` in a new instance before the language parser is loaded. This is very far from meeting that expectation of having it available immediately. It's a great goal, but the problem I'm highlighting is easy to fix in a way that brings the behavior on Windows in line with the behavior on Linux with the added ability to let the user know that the change didn't take effect immediately. On Linux, the user would remain unaware because `nvim-treesitter` just replaces the language parser on disk without having the ability to tell Neovim to reload it. Still, asking the user to restart Neovim to finalize a change is a whole lot better than failing to reinstall a parser.\r\n\r\n@justinmk If Neovim adds an API just for releasing or destroying language parsers, it would still have to coordinate with every running Neovim process and there is no guarantee that all of them would be capable of releasing a lock (there are many reasons why Neovim might freeze up, especially on Windows). Otherwise, the old parser would remain locked, and the [algorithm I outlined](https://github.com/nvim-treesitter/nvim-treesitter/issues/6494#issuecomment-2072439724) in the `nvim-treesitter` repository would still need to be followed.\r\n\r\nTo fix the bug on Windows, something -- either `nvim-treesitter` or Neovim -- would have to move the old one out of the way, install the new one, then either delete the stale one or flag it for deletion on reboot.\r\n\r\nFor Neovim to fix it, an API could be added for copying new language parsers to an installation location. Then Neovim could reliably replace the old parser (renaming and flagging the old one for deletion on Windows, if necessary), and immediately load the new one. Adding this functionality in Neovim would be beneficial to all users because it would bring with it the ability to immediately load a new language parser, which is lacking on all platforms.",
            "created_at": "2024-04-23T17:17:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2072970039",
            "id": 2072970039,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57jwM3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2072970039/reactions"
            },
            "updated_at": "2024-04-23T17:17:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2072970039",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35066367?v=4",
                "events_url": "https://api.github.com/users/FlippingBinary/events{/privacy}",
                "followers_url": "https://api.github.com/users/FlippingBinary/followers",
                "following_url": "https://api.github.com/users/FlippingBinary/following{/other_user}",
                "gists_url": "https://api.github.com/users/FlippingBinary/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/FlippingBinary",
                "id": 35066367,
                "login": "FlippingBinary",
                "node_id": "MDQ6VXNlcjM1MDY2MzY3",
                "organizations_url": "https://api.github.com/users/FlippingBinary/orgs",
                "received_events_url": "https://api.github.com/users/FlippingBinary/received_events",
                "repos_url": "https://api.github.com/users/FlippingBinary/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/FlippingBinary/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FlippingBinary/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/FlippingBinary",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> For Neovim to fix it, an API could be added for copying new language parsers to an installation location. Then Neovim could reliably replace the old parser (renaming and flagging the old one for deletion on Windows, if necessary), and immediately load the new one. Adding this functionality in Neovim would be beneficial to all users because it would bring with it the ability to immediately load a new language parser, which is lacking on all platforms.\r\n\r\nThis is something libuv should handle. If you can find out the right flags for that, I'll happily use them on Windows.",
            "created_at": "2024-04-23T17:19:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2072973432",
            "id": 2072973432,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57jxB4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2072973432/reactions"
            },
            "updated_at": "2024-04-23T17:19:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2072973432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> This is something libuv should handle. If you can find out the right flags for that, I'll happily use them on Windows.\r\n\r\nThe correct flag when using `MoveFileExA` from the Win32 API is `MOVEFILE_DELAY_UNTIL_REBOOT`, using the process shown below that I copied from Microsoft's article on [Dynamic-Link Library Updates](https://learn.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-updates).\r\n\r\n> It is not necessary to restart the computer if you perform the following steps:\r\n> \r\n> 1. Use the [MoveFileEx](https://learn.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-movefileexa) function to rename the DLL being replaced. Do not specify `MOVEFILE_COPY_ALLOWED`, and make sure the renamed file is on the same volume that contains the original file. You could also simply rename the file in the same directory by giving it a different extension.\r\n> 2. Copy the new DLL to the directory that contains the renamed DLL. All applications will now use the new DLL.\r\n> 3. Use [MoveFileEx](https://learn.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-movefileexa) with `MOVEFILE_DELAY_UNTIL_REBOOT` to delete the renamed DLL.\r\n\r\n`MoveFileEx` takes three arguments: The path to move from, the path to move to, and the flags. To delete a file, just use `NULL` for the second argument.\r\n\r\nFor example, using `szDeleteFile` to hold the path of the file that needs to be deleted on reboot:\r\n\r\n```c++\r\nMoveFileEx(szDeleteFile, NULL, MOVEFILE_DELAY_UNTIL_REBOOT);\r\n```\r\n\r\nWhat it actually does is create a registry entry, so the success or failure of the command indicates its ability to create that registry entry.",
            "created_at": "2024-04-23T17:57:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2073045865",
            "id": 2073045865,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57kCtp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2073045865/reactions"
            },
            "updated_at": "2024-04-23T17:57:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2073045865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35066367?v=4",
                "events_url": "https://api.github.com/users/FlippingBinary/events{/privacy}",
                "followers_url": "https://api.github.com/users/FlippingBinary/followers",
                "following_url": "https://api.github.com/users/FlippingBinary/following{/other_user}",
                "gists_url": "https://api.github.com/users/FlippingBinary/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/FlippingBinary",
                "id": 35066367,
                "login": "FlippingBinary",
                "node_id": "MDQ6VXNlcjM1MDY2MzY3",
                "organizations_url": "https://api.github.com/users/FlippingBinary/orgs",
                "received_events_url": "https://api.github.com/users/FlippingBinary/received_events",
                "repos_url": "https://api.github.com/users/FlippingBinary/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/FlippingBinary/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FlippingBinary/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/FlippingBinary",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That's not a libuv API, though -- and we use those exclusively.",
            "created_at": "2024-04-23T17:58:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2073048585",
            "id": 2073048585,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57kDYJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2073048585/reactions"
            },
            "updated_at": "2024-04-23T17:58:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2073048585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Okay, I've looked into `libuv`'s method of deleting files. It looks like their `uv_fs_unlink` ultimately results in a call to Win32's [`NtSetInformationFile`](https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-ntsetinformationfile) with a [`FILE_DISPOSITION_INFORMATION`](https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/ntddk/ns-ntddk-_file_disposition_information) object containing a delete flag. According to Microsoft's [remarks](https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/ntddk/ns-ntddk-_file_disposition_information#remarks) on that structure, the file is deleted when the last file handle to it is closed if it can't be deleted immediately. This seems better than the `MoveFileEx` method, if it truly works.\r\n\r\nSo simply deleting the old one with `uv_fs_unlink` should cause it to be deleted automatically when the last handle is closed. Moving the old one to a new location before deleting it with `uv_fs_unlink` would allow the new parser to be installed in the meantime.",
            "created_at": "2024-04-23T19:11:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2073225401",
            "id": 2073225401,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57kui5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2073225401/reactions"
            },
            "updated_at": "2024-04-23T19:27:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2073225401",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35066367?v=4",
                "events_url": "https://api.github.com/users/FlippingBinary/events{/privacy}",
                "followers_url": "https://api.github.com/users/FlippingBinary/followers",
                "following_url": "https://api.github.com/users/FlippingBinary/following{/other_user}",
                "gists_url": "https://api.github.com/users/FlippingBinary/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/FlippingBinary",
                "id": 35066367,
                "login": "FlippingBinary",
                "node_id": "MDQ6VXNlcjM1MDY2MzY3",
                "organizations_url": "https://api.github.com/users/FlippingBinary/orgs",
                "received_events_url": "https://api.github.com/users/FlippingBinary/received_events",
                "repos_url": "https://api.github.com/users/FlippingBinary/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/FlippingBinary/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FlippingBinary/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/FlippingBinary",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, so we don't need to manually clean up. That makes this much more tenable on the nvim-treesitter side. I'll see what I can do. ",
            "created_at": "2024-04-23T19:34:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2073280398",
            "id": 2073280398,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57k7-O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 5,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2073280398/reactions"
            },
            "updated_at": "2024-04-23T19:34:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2073280398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi everyone! Nothing to add here. Just wanted to say I have this error as well. I kind of daily drive Neovim on Windows and I am also getting this error as well. :( \r\n\r\nI am looking forward to the fix! :)",
            "created_at": "2024-04-25T01:24:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/28462#issuecomment-2076138240",
            "id": 2076138240,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28462",
            "node_id": "IC_kwDOAPphoM57v1sA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2076138240/reactions"
            },
            "updated_at": "2024-04-25T06:23:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2076138240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44507272?v=4",
                "events_url": "https://api.github.com/users/Wizard451345/events{/privacy}",
                "followers_url": "https://api.github.com/users/Wizard451345/followers",
                "following_url": "https://api.github.com/users/Wizard451345/following{/other_user}",
                "gists_url": "https://api.github.com/users/Wizard451345/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Wizard451345",
                "id": 44507272,
                "login": "Wizard451345",
                "node_id": "MDQ6VXNlcjQ0NTA3Mjcy",
                "organizations_url": "https://api.github.com/users/Wizard451345/orgs",
                "received_events_url": "https://api.github.com/users/Wizard451345/received_events",
                "repos_url": "https://api.github.com/users/Wizard451345/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Wizard451345/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Wizard451345/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Wizard451345",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28462/comments",
    "created_at": "2024-04-22T20:07:35Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28462/events",
    "html_url": "https://github.com/neovim/neovim/issues/28462",
    "id": 2257374094,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "file metadata/attributes, filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28462/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 285,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 339,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-07-04T21:53:41Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6GjMuO",
    "number": 28462,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28462/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28462/timeline",
    "title": "Windows: treesitter language parsers are not released, preventing reinstallation",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:38:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28462",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35066367?v=4",
        "events_url": "https://api.github.com/users/FlippingBinary/events{/privacy}",
        "followers_url": "https://api.github.com/users/FlippingBinary/followers",
        "following_url": "https://api.github.com/users/FlippingBinary/following{/other_user}",
        "gists_url": "https://api.github.com/users/FlippingBinary/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/FlippingBinary",
        "id": 35066367,
        "login": "FlippingBinary",
        "node_id": "MDQ6VXNlcjM1MDY2MzY3",
        "organizations_url": "https://api.github.com/users/FlippingBinary/orgs",
        "received_events_url": "https://api.github.com/users/FlippingBinary/received_events",
        "repos_url": "https://api.github.com/users/FlippingBinary/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/FlippingBinary/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/FlippingBinary/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/FlippingBinary",
        "user_view_type": "public"
    }
}