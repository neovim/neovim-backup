{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nBoth  reproducible on `latest` and `nightly`. \n\nI use treesitter to query some special code block in python code. In this case, I want to capture the content of  string expression statement in special range.\n\nBut the `start` parameter is respected, but `stop` parameter don't.\n\n\n### Steps to reproduce\n\nSave below code as `minimal.lua`, and `nvim -l minimal.lua`\n```lua\nlocal query = vim.treesitter.query.parse(\n    \"python\",\n    [[\n            (module\n                (expression_statement\n                    (string\n                        (string_start) \n                        (string_content) @cellcontent\n                        (string_end)\n                    )\n                )\n            )\n    ]]\n)\nlocal code = table.concat({\n    \"# %% [md]\",                        -- line 0\n    '\"\"\"',                              -- line 1\n    \"this is markdown content\",         -- line 2\n    \"```python\",                        -- line 2\n    \"foo\",                              -- line 3\n    \"```\",                              -- line 4\n    '\"\"\"',                              -- line 5\n    \"# %% [markdown]\",                  -- line 6\n    '\"\"\"',                              -- line 7\n    \"this is another markdown content\", -- line 8\n    \"```lua\",                           -- line 9\n    \"bar\",                              -- line 10\n    \"```\",                              -- line 11\n    '\"\"\"',                              -- line 12\n}, \"\\n\")\n\nlocal lang_tree = vim.treesitter.get_string_parser(code, \"python\")\nlocal root = lang_tree:parse()[1]:root()\n\ndo\n    --- case 1\n    local starts = vim.iter(query:iter_captures(root, code, 6))\n        :filter(function(id)\n            return query.captures[id] == \"cellcontent\"\n        end)\n        :map(function(_, node)\n            local row = node:start()\n            return row\n        end)\n        :totable()\n    vim.print(starts)\n    -- assert.is_same({ 8 }, starts)\n    assert(#starts==1)\n    assert(starts[1]==8)\nend\ndo\n    --- case 2\n    local starts = vim.iter(query:iter_captures(root, code, 0, 6))\n        :filter(function(id)\n            return query.captures[id] == \"cellcontent\"\n        end)\n        :map(function(_, node)\n            local row = node:start()\n            return row\n        end)\n        :totable()\n    vim.print(starts)\n    -- assert.is_same({ 1 }, starts)\n    assert(#starts==1, \"only should first string expr\")\n    assert(starts[1]==1, \"should capture first string expr\")\nend\n```\n\n\n### Expected behavior\n\nI expect pass two test cases, and output:\n```\n{ 8 }\n{ 1 }\n```\nBut I got:\n```\n{ 8 }\n{ 1, 8 }\nE5113: Error while calling lua chunk: mini.lua:65: only should first string expr\nstack traceback:\n        [C]: in function 'assert'\n        mini.lua:65: in main chunk\n```\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0-dev-1529+g9e0d40f7e4\n\n### Vim (not Nvim) behaves the same?\n\nnvim only\n\n### Operating system/version\n\n 6.12.8-arch1-1\n\n### Terminal name/version\n\nalacritty+tmux\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nAUR",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "In this particular case, the weirdness comes from the fact that tree-sitter treats patterns with the language's root node (`module` in this case) specially and doesn't _always_ consider it when checking for intersection with the provided range (it seems that they haven't documented that). If the root node wasn't special, all matches would've been found for any range intersecting the tree.\n\nYou can replace the query in the example with something like this:\n```scheme\n(\n    (expression_statement\n        (string\n            (string_start)\n            (string_content) @cellcontent\n            (string_end)\n        )\n    ) @_node\n    (#has-parent? @_node module)\n)\n```\n\nso that the root node isn't considered in the intersection tests.\n\nBut note that the range is for filtering out matches. Individual captures returned by the iterator can still be outside the provided range if the match as a whole intersects the range. ",
            "created_at": "2025-01-13T04:13:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/31963#issuecomment-2586142337",
            "id": 2586142337,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31963",
            "node_id": "IC_kwDOAPphoM6aJWaB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586142337/reactions"
            },
            "updated_at": "2025-01-13T04:29:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586142337",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for you reply, It's work for me.",
            "created_at": "2025-01-13T15:00:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/31963#issuecomment-2587340245",
            "id": 2587340245,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31963",
            "node_id": "IC_kwDOAPphoM6aN63V",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587340245/reactions"
            },
            "updated_at": "2025-01-13T15:00:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587340245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24972096?v=4",
                "events_url": "https://api.github.com/users/AbaoFromCUG/events{/privacy}",
                "followers_url": "https://api.github.com/users/AbaoFromCUG/followers",
                "following_url": "https://api.github.com/users/AbaoFromCUG/following{/other_user}",
                "gists_url": "https://api.github.com/users/AbaoFromCUG/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AbaoFromCUG",
                "id": 24972096,
                "login": "AbaoFromCUG",
                "node_id": "MDQ6VXNlcjI0OTcyMDk2",
                "organizations_url": "https://api.github.com/users/AbaoFromCUG/orgs",
                "received_events_url": "https://api.github.com/users/AbaoFromCUG/received_events",
                "repos_url": "https://api.github.com/users/AbaoFromCUG/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AbaoFromCUG/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AbaoFromCUG/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AbaoFromCUG",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31963/comments",
    "created_at": "2025-01-11T12:30:21Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31963/events",
    "html_url": "https://github.com/neovim/neovim/issues/31963",
    "id": 2781821907,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is not fixed but can be circumvented until then",
            "id": 435850181,
            "name": "has:workaround",
            "node_id": "MDU6TGFiZWw0MzU4NTAxODE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:workaround"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31963/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6lzzvT",
    "number": 31963,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31963/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31963/timeline",
    "title": "Treesitter `query:iter_captures()` don't respect `stop` parameter",
    "updated_at": "2025-01-17T14:59:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31963",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24972096?v=4",
        "events_url": "https://api.github.com/users/AbaoFromCUG/events{/privacy}",
        "followers_url": "https://api.github.com/users/AbaoFromCUG/followers",
        "following_url": "https://api.github.com/users/AbaoFromCUG/following{/other_user}",
        "gists_url": "https://api.github.com/users/AbaoFromCUG/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/AbaoFromCUG",
        "id": 24972096,
        "login": "AbaoFromCUG",
        "node_id": "MDQ6VXNlcjI0OTcyMDk2",
        "organizations_url": "https://api.github.com/users/AbaoFromCUG/orgs",
        "received_events_url": "https://api.github.com/users/AbaoFromCUG/received_events",
        "repos_url": "https://api.github.com/users/AbaoFromCUG/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/AbaoFromCUG/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AbaoFromCUG/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/AbaoFromCUG",
        "user_view_type": "public"
    }
}