{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen connected to a remote ui executing `:q` will close the remote server, I guess this makes sense in the way that the command is being run by the backend and not the UI, but it's not intuitive or desired, I wish to quit without killing the backend\n\n### Steps to reproduce\n\nnvim --listen 127.0.0.1:8888 --headless\r\nnvim --server 127.0.0.1:8888 --remote-ui\r\n:q\n\n### Expected behavior\n\nThe UI should disconnect from the server but not to kill it\n\n### Neovim version (nvim -v)\n\n0.10.x\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nmacOS 13.2.1\n\n### Terminal name/version\n\niTerm\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nhomebrew",
    "closed_at": "2025-02-10T18:21:49Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't think this should be changed.",
            "created_at": "2023-04-14T23:42:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-1509396759",
            "id": 1509396759,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM5Z95EX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 14,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 14,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509396759/reactions"
            },
            "updated_at": "2023-04-14T23:42:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509396759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't think this should be changed.\r\n\r\nI don't think we should try to detach the `tui` with `:q`, but a way to detach the current `tui` should be implemented. \r\n\r\nEven now, it is possible to terminate only `tui` by using `call chanclose(id)` with the channel id obtained by `echo nvim_list_uis()` as an argument. However, it is not easy to use because users need to remember the correspondence between `tui` and channel `id`.\r\n\r\nTo begin with, #18375 has the following disadvantages, \r\n\r\n- Increased memory usage\r\n- Startup time is increased by the amount of child processes that need to be forked\r\n- Lots of bugs ;-<\r\n\r\nso it is unlikely to be beneficial to users unless it is used as follows\r\n\r\n```\r\nnohup nvim --listen /tmp/nvim.pipe --headless > /dev/null 2>&1 0< /dev/null &!\r\nnvim --server /tmp/nvim.pipe --remote-ui\r\n```\r\n\r\nIn that case, we would love to have this feature.",
            "created_at": "2023-04-15T13:34:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-1509831000",
            "id": 1509831000,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM5Z_jFY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 14,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 6,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 20,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509831000/reactions"
            },
            "updated_at": "2023-04-15T13:34:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509831000",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11682285?v=4",
                "events_url": "https://api.github.com/users/erw7/events{/privacy}",
                "followers_url": "https://api.github.com/users/erw7/followers",
                "following_url": "https://api.github.com/users/erw7/following{/other_user}",
                "gists_url": "https://api.github.com/users/erw7/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/erw7",
                "id": 11682285,
                "login": "erw7",
                "node_id": "MDQ6VXNlcjExNjgyMjg1",
                "organizations_url": "https://api.github.com/users/erw7/orgs",
                "received_events_url": "https://api.github.com/users/erw7/received_events",
                "repos_url": "https://api.github.com/users/erw7/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/erw7/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/erw7/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/erw7",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > I don't think this should be changed.\r\n> \r\n> I don't think we should try to detach the `tui` with `:q`, but a way to detach the current `tui` should be implemented.\r\n> \r\n> Even now, it is possible to terminate only `tui` by using `call chanclose(id)` with the channel id obtained by `echo nvim_list_uis()` as an argument. However, it is not easy to use because users need to remember the correspondence between `tui` and channel `id`.\r\n> \r\n> To begin with, #18375 has the following disadvantages,\r\n> \r\n> * Increased memory usage\r\n> * Startup time is increased by the amount of child processes that need to be forked\r\n> * Lots of bugs ;-<\r\n> \r\n> so it is unlikely to be beneficial to users unless it is used as follows\r\n> \r\n> ```\r\n> nohup nvim --listen /tmp/nvim.pipe --headless > /dev/null 2>&1 0< /dev/null &!\r\n> nvim --server /tmp/nvim.pipe --remote-ui\r\n> ```\r\n> \r\n> In that case, we would love to have this feature.\r\n\r\nThanks for the info. I came up with a function to disconnect all remote-ui sessions:\r\n\r\n```lua\r\n  vim.keymap.set('n', '<leader>q', function()\r\n    for _, ui in pairs(vim.api.nvim_list_uis()) do\r\n      if ui.chan and not ui.stdout_tty then\r\n        vim.fn.chanclose(ui.chan)\r\n      end\r\n    end\r\n  end, { noremap = true })\r\n```\r\n\r\nThis is working for my use case, but I am not 100% sure that ui.stdout_tty is the correct condition to check. But, if I use your nohup commands in combination with this I can have a long living neovim session. Hopefully this helps someone ðŸ™‚",
            "created_at": "2023-07-26T13:56:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-1651862823",
            "id": 1651862823,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM5idW0n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 5,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1651862823/reactions"
            },
            "updated_at": "2024-09-10T16:09:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1651862823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10135646?v=4",
                "events_url": "https://api.github.com/users/mikesmithgh/events{/privacy}",
                "followers_url": "https://api.github.com/users/mikesmithgh/followers",
                "following_url": "https://api.github.com/users/mikesmithgh/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikesmithgh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mikesmithgh",
                "id": 10135646,
                "login": "mikesmithgh",
                "node_id": "MDQ6VXNlcjEwMTM1NjQ2",
                "organizations_url": "https://api.github.com/users/mikesmithgh/orgs",
                "received_events_url": "https://api.github.com/users/mikesmithgh/received_events",
                "repos_url": "https://api.github.com/users/mikesmithgh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mikesmithgh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikesmithgh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mikesmithgh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Even now, it is possible to terminate only tui by using call chanclose(id) with the channel id obtained by echo nvim_list_uis() as an argument. However, it is not easy to use because users need to remember the correspondence between tui and channel id.\r\n\r\nIs there a way, when connecting from 2 terminals to the same nvim headless server to know which channel belong to which terminal? This would be handy when I try to disconnect from a single terminal to not have to disconnect the other also. \r\n\r\nThe way I understand it right now, I can do `call chanclose(id)`. But if the `nvim_list_uis()` returns more than one ui, how would I know which channel to close?",
            "created_at": "2023-10-04T19:53:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-1747542033",
            "id": 1747542033,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM5oKWAR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1747542033/reactions"
            },
            "updated_at": "2023-10-04T22:43:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1747542033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5187873?v=4",
                "events_url": "https://api.github.com/users/cosminadrianpopescu/events{/privacy}",
                "followers_url": "https://api.github.com/users/cosminadrianpopescu/followers",
                "following_url": "https://api.github.com/users/cosminadrianpopescu/following{/other_user}",
                "gists_url": "https://api.github.com/users/cosminadrianpopescu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cosminadrianpopescu",
                "id": 5187873,
                "login": "cosminadrianpopescu",
                "node_id": "MDQ6VXNlcjUxODc4NzM=",
                "organizations_url": "https://api.github.com/users/cosminadrianpopescu/orgs",
                "received_events_url": "https://api.github.com/users/cosminadrianpopescu/received_events",
                "repos_url": "https://api.github.com/users/cosminadrianpopescu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cosminadrianpopescu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cosminadrianpopescu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cosminadrianpopescu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> if the `nvim_list_uis()` returns more than one ui, how would I know which channel to close?\r\n\r\n`:help nvim_set_client_info()`",
            "created_at": "2023-10-04T22:43:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-1747747941",
            "id": 1747747941,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM5oLIRl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1747747941/reactions"
            },
            "updated_at": "2023-10-04T22:43:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1747747941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "How can I call `nvim_set_client_info` from the Neovim TUI?\r\n\r\nI'm currently implementing a sort of proof of concept for a tmux-style start/detach/reattach workflow with Neovim and libuv. I got as far as automatically starting sessions as needed, but I don't know how to uniquely identify the neovim client itself such that it can detach only itself and not everyone else.\r\n\r\nThe Neovim TUI itself does not seem to call `set_client_info`. Is there any way to maybe map a channel ID to the PID of the client? A simple check like that would be easy to implement.\r\n\r\nHere's a screen recording of what works so far: The lua script runs using `nvim -ll` and uses `vim.uv` to handle the client-server logic: https://asciinema.org/a/8ptwM9Vm0xbI3jjy9q6o1ne9t",
            "created_at": "2024-08-23T09:33:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2306693816",
            "id": 2306693816,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6JfVq4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2306693816/reactions"
            },
            "updated_at": "2024-08-23T09:42:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2306693816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> but I don't know how to uniquely identify the neovim client itself\n\nNvim currently uses `stdin_tty || stdout_tty` to guess (with reasonable certainty) that a UI is the TUI: https://github.com/neovim/neovim/blob/7588ff2d8986e343d440dc8e025b1b5d4d8974b5/src/nvim/ui.c#L162-L166\n\n> The Neovim TUI itself does not seem to call `nvim_set_client_info `\n\nFixed: https://github.com/neovim/neovim/pull/30397",
            "created_at": "2024-08-29T15:33:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2318162472",
            "id": 2318162472,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6KLFoo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2318162472/reactions"
            },
            "updated_at": "2025-02-06T12:14:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2318162472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've been thinking about the problem some more and I think the ideal way to do this would be an API function that returns information about the client that made the API request (similar to how many Web APIs have a /me/ or /self/ endpoint that returns information about the API client/authenticated app).\r\n\r\nAt minimum, this would return the server side of the UI channel that gets returned by `nvim_list_uis`.\r\n\r\nThe reason `set_client_info` by itself is insufficient is that even if the TUI uniquely identifies itself, the client has to iterate over *all* UIs, then call `get_chan_info` for each one, then look at the `client` info to try and identify itself. But that requires some ability to retrieve/compare the client info against the one retrieved from the API.\r\n\r\nHowever, as far as I can tell, all process related APIs run in the context of the server, not the client. E.g. `uv.os_getpid()` alwats returns the PID of the server, not the client. So I'm not sure where the client would hold onto its unique data to be able to retrieve it during this step.\r\n\r\nThe server however can very quickly figure out which client sent an API/RPC request, so a 'who am I' function would be fairly straightforward to implement on the server side, and it would sidestep the issue of needing to check the channel of every single UI, and the issue of every client needing to have some way to uniquely identify itself out of the list of UIs, and needing.\r\n\r\nActually, looking at the docs `nvim_get_chan_info` says it takes a 'channel_id, or 0 for current channel'. I believe 0 is currently only applicable in the context of channel callbacks. Maybe `get_chan_info(0)` outside of a callback could be made to return the current API client's channel?\r\n\r\nI'm not familiar enough with the exact ins and outs of Neovim's current client/server architecture, but I do think something along the lines of what I described would be the best way to move towards detachable UIs.",
            "created_at": "2024-09-09T07:47:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337374591",
            "id": 2337374591,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LUYF_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337374591/reactions"
            },
            "updated_at": "2024-09-09T08:18:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337374591",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `nvim_get_chan_info` says it takes a 'channel_id, or 0 for current channel'. I believe 0 is currently only applicable in the context of channel callbacks\r\n\r\nIt allows any API client to get its own client info, without needing to lookup the exact channel id.",
            "created_at": "2024-09-09T08:18:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337439418",
            "id": 2337439418,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LUn66",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337439418/reactions"
            },
            "updated_at": "2024-09-09T08:18:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337439418",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "only the client info? It returned `vim.empty_dict()` for me. If it returned the channel id too, that would be very helpful since it makes calling `chanclose` for detaching trivial.",
            "created_at": "2024-09-09T08:39:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337490807",
            "id": 2337490807,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LU0d3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337490807/reactions"
            },
            "updated_at": "2024-09-09T09:14:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337490807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It returned `vim.empty_dict()` for me\r\n\r\nfrom what context? you need to call it from a API client (which implicitly has a channel). \r\n\r\n> If it returned the channel id too\r\n\r\nit does. that's mentioned in the docs.",
            "created_at": "2024-09-09T08:46:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337507617",
            "id": 2337507617,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LU4kh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337507617/reactions"
            },
            "updated_at": "2024-09-09T09:14:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337507617",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > It returned `vim.empty_dict()` for me\r\n> \r\n> from what context? you need to call it from a API client (which implicitly has a channel).\r\n> \r\n> > If it returned the channel id too\r\n> \r\n> it does. that's mentioned in the docs.\r\n\r\n`:lua =vim.api.nvim_get_chan_info(0)`\r\n\r\nI figured this would be equivalent to what I can do from inside of a plugin.",
            "created_at": "2024-09-09T09:07:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337555921",
            "id": 2337555921,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LVEXR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337555921/reactions"
            },
            "updated_at": "2024-09-09T09:14:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337555921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You need to use a API client. Calling it inside Nvim will not work as you don't need a channel to call an API inside Nvim.",
            "created_at": "2024-09-09T09:09:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337562469",
            "id": 2337562469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LVF9l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337562469/reactions"
            },
            "updated_at": "2024-09-09T09:10:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337562469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "How do I obtain an API client from inside a plugin that runs in the server process? Is there a way to run the plugin code in the TUI client not the server?",
            "created_at": "2024-09-09T09:12:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337568494",
            "id": 2337568494,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LVHbu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337568494/reactions"
            },
            "updated_at": "2024-09-09T09:12:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337568494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "https://github.com/neovim/neovim/discussions/30314 posted.",
            "created_at": "2024-09-09T09:28:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337603922",
            "id": 2337603922,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LVQFS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337603922/reactions"
            },
            "updated_at": "2024-09-09T09:28:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337603922",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> please start a thread at https://github.com/neovim/neovim/discussions , this is not relevant to this issue. the problem that you are trying to solve is not clear.\r\n\r\nThe issue that @LunarLambda tries to solve is this: try to start a neovim headless (let's call it nvim-server). Then, open in any graphical environment an xterm (let's call it xterm A). from xterm A, connect to nvim-server. \r\n\r\nNow, open another xterm in the same graphical environment (let's call it xterm B). from xterm B, again connect to the same nvim-server. \r\n\r\nNow, @LunarLambda wants to disconnect only from xterm B, leaving xterm A instance connected. \r\n\r\nHow can chan_id of xterm B can be associated with the the current running nvim client instance in xterm B, so disconnecting nvim client from xterm B (by doing chanclose) does not disconnect nvim client from xterm A instance.\r\n\r\n@LunarLambda correct me if i'm wrong...",
            "created_at": "2024-09-09T09:31:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337611032",
            "id": 2337611032,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LVR0Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337611032/reactions"
            },
            "updated_at": "2024-09-09T09:35:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337611032",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5187873?v=4",
                "events_url": "https://api.github.com/users/cosminadrianpopescu/events{/privacy}",
                "followers_url": "https://api.github.com/users/cosminadrianpopescu/followers",
                "following_url": "https://api.github.com/users/cosminadrianpopescu/following{/other_user}",
                "gists_url": "https://api.github.com/users/cosminadrianpopescu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cosminadrianpopescu",
                "id": 5187873,
                "login": "cosminadrianpopescu",
                "node_id": "MDQ6VXNlcjUxODc4NzM=",
                "organizations_url": "https://api.github.com/users/cosminadrianpopescu/orgs",
                "received_events_url": "https://api.github.com/users/cosminadrianpopescu/received_events",
                "repos_url": "https://api.github.com/users/cosminadrianpopescu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cosminadrianpopescu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cosminadrianpopescu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cosminadrianpopescu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yeah that's basically it. See also the discussion I linked. I will move things there so this isn't being talked about in two disparate places",
            "created_at": "2024-09-09T09:33:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337615277",
            "id": 2337615277,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LVS2t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337615277/reactions"
            },
            "updated_at": "2024-09-09T09:33:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337615277",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Copying proposal from https://github.com/neovim/neovim/discussions/30314#discussioncomment-10589960 :\n\n> How can a client detach itself?\n\nSpecifically you mean the *nvim builtin UI client*. Any other client can call `nvim_get_chan_info(0)` to get its channel id. But the `nvim` builtin UI client doesn't expose a way for users/plugins to execute code from its \"local\" context.\n\nFor the default case where the nvim ui spawns the server as a *child* process, I think it should work if (1) the `nvim` server is spawned with `detach=true`, (2) terminating the *parent* (ui) process should allow the *child* (server) to continue running.\n\nFor the non-default case (`nvim --remote-ui`), there are some obvious potential workarounds, such as storing a flag (`nvim --server ./hello.sock --remote-send ':let ui=42<cr>' && nvim --remote-ui ...`).\n\nI see least two clear next steps:\n\n1. ~~`nvim --server ... +cmd` should execute `+cmd` in the remote server.~~\n    - Oh, `nvim --server ... --remote +cmd` works. bleh.\n2. âœ… For the builtin nvim TUI, \"current UI\" has no mapping to the list of UIs.\n    - If I run `:detach`, how will the server know which UI is the \"current UI\"?\n    - ~~The UI can listen for `ctrl-z` and handle it specially.~~ Or all input sent from a UI would be mapped to the relevant channel id. \n3. âœ… the builtin UI should call `nvim_set_client_info` to provide all possible info about itself, including PID.\n    - but that still doesn't solve (2).\n",
            "created_at": "2024-09-09T11:33:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337867984",
            "id": 2337867984,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LWQjQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337867984/reactions"
            },
            "updated_at": "2025-02-09T22:27:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337867984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> For the non-default case (nvim --remote-ui), there are some obvious potential workarounds, such as storing a flag (nvim --server ./hello.sock --remote-send ':let ui=42<cr>' && nvim --remote-ui ...).\r\n\r\nI don't think this actually works. Doing `:let ui=42<cr>` sets the flag still on the server side. \r\n\r\nAssuming I am in xterm A, I do there `nvim --server ./hello.sock --remote-send ':let ui=42<cr>' && nvim --remote-ui ...`. Now, in xterm A I am connected to `hello.sock` and the flag is set to 42. \r\n\r\nNow, in xterm B, I do `nvim --server ./hello.sock --remote-send ':let ui=43<cr>' && nvim --remote-ui ...`. Now, in xterm B I am also connected to `hello.sock`. But since the let has been ran on the server, not client side, I am assuming that in both xterm A and xterm B, the value of the flag is 43. So, disconnecting 43 (by doing chanclose on the chan_id identified via the ui flag == 43), would still disconnect both. \r\n\r\n@justinmk am I wrong? Maybe I misunderstood something?",
            "created_at": "2024-09-09T11:58:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337926252",
            "id": 2337926252,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LWexs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337926252/reactions"
            },
            "updated_at": "2024-09-09T12:17:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337926252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5187873?v=4",
                "events_url": "https://api.github.com/users/cosminadrianpopescu/events{/privacy}",
                "followers_url": "https://api.github.com/users/cosminadrianpopescu/followers",
                "following_url": "https://api.github.com/users/cosminadrianpopescu/following{/other_user}",
                "gists_url": "https://api.github.com/users/cosminadrianpopescu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cosminadrianpopescu",
                "id": 5187873,
                "login": "cosminadrianpopescu",
                "node_id": "MDQ6VXNlcjUxODc4NzM=",
                "organizations_url": "https://api.github.com/users/cosminadrianpopescu/orgs",
                "received_events_url": "https://api.github.com/users/cosminadrianpopescu/received_events",
                "repos_url": "https://api.github.com/users/cosminadrianpopescu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cosminadrianpopescu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cosminadrianpopescu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cosminadrianpopescu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Doing `:let ui=42<cr>` sets the flag still on the server side.\r\n\r\nThe point is that whatever script calls `--remote-send ':let ui=...'` can set a hint that it uses later. It's a hack though.\r\n\r\n> disconnecting 43 (by doing chanclose on the chan_id identified via the ui flag == 43), would still disconnect both.\r\n\r\nNo, chanclose() on the correct channel-id only closes the associated ui client.",
            "created_at": "2024-09-09T12:17:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2337966591",
            "id": 2337966591,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LWon_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337966591/reactions"
            },
            "updated_at": "2024-09-09T12:53:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2337966591",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "With https://github.com/neovim/neovim/pull/30319 , `ctrl-z` will detach the current UI (works for any UI/TUI/GUI). Please try it out.",
            "created_at": "2024-09-09T15:59:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2338500224",
            "id": 2338500224,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6LYq6A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2338500224/reactions"
            },
            "updated_at": "2024-09-10T09:47:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2338500224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "#32385 adds a `:detach` command. Followup work is tracked in https://github.com/neovim/neovim/pull/30319 .\n\nDoes NOT work on Windows yet.\n\n> ~~Define environment variable `__NVIM_DETACH=1` _before_ starting `nvim`~~\n",
            "created_at": "2025-02-10T18:23:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2648884489",
            "id": 2648884489,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6d4sUJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2648884489/reactions"
            },
            "updated_at": "2025-02-10T19:16:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2648884489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> does it work normally?\n\nOn debug it aborts with explicit popup error. On release it just aborts quietly. I'm not able to use the `:detach` command since it immediately aborts.",
            "created_at": "2025-02-10T18:47:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2648936296",
            "id": 2648936296,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6d449o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2648936296/reactions"
            },
            "updated_at": "2025-02-10T19:16:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2648936296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Does it always abort, or only if you define `__NVIM_DETACH=1` ?",
            "created_at": "2025-02-10T19:11:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2648990416",
            "id": 2648990416,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6d5GLQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2648990416/reactions"
            },
            "updated_at": "2025-02-10T19:17:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2648990416",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Only if `__NVIM_DETACH` is defined.",
            "created_at": "2025-02-10T19:15:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/23093#issuecomment-2649001862",
            "id": 2649001862,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23093",
            "node_id": "IC_kwDOAPphoM6d5I-G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2649001862/reactions"
            },
            "updated_at": "2025-02-10T19:17:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2649001862",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 25,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23093/comments",
    "created_at": "2023-04-14T17:00:31Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23093/events",
    "html_url": "https://github.com/neovim/neovim/issues/23093",
    "id": 1668607778,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "channels, RPC, msgpack",
            "id": 242522707,
            "name": "channels-rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channels-rpc"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 406104372,
            "name": "server",
            "node_id": "MDU6TGFiZWw0MDYxMDQzNzI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/server"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "remote UI, --remote commands, p2p / peer-to-peer",
            "id": 2269137131,
            "name": "remote",
            "node_id": "MDU6TGFiZWwyMjY5MTM3MTMx",
            "url": "https://api.github.com/repos/neovim/neovim/labels/remote"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23093/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 157,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 35,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-02-10T18:21:49Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "I_kwDOAPphoM5jdO8i",
    "number": 23093,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 23,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 23,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23093/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23093/timeline",
    "title": "detach the current TUI (nvim continues headlessly)",
    "updated_at": "2025-02-10T19:17:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23093",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3936773?v=4",
        "events_url": "https://api.github.com/users/eloytoro/events{/privacy}",
        "followers_url": "https://api.github.com/users/eloytoro/followers",
        "following_url": "https://api.github.com/users/eloytoro/following{/other_user}",
        "gists_url": "https://api.github.com/users/eloytoro/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/eloytoro",
        "id": 3936773,
        "login": "eloytoro",
        "node_id": "MDQ6VXNlcjM5MzY3NzM=",
        "organizations_url": "https://api.github.com/users/eloytoro/orgs",
        "received_events_url": "https://api.github.com/users/eloytoro/received_events",
        "repos_url": "https://api.github.com/users/eloytoro/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/eloytoro/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eloytoro/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/eloytoro",
        "user_view_type": "public"
    }
}