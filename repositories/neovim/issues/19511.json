{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Neovim version (nvim -v)\n\nv0.8.0-dev-nightly-4-ge9b58a619\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\ndebian\n\n### Terminal name/version\n\nxterm\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nappimage\n\n### How to reproduce the issue\n\nSave the following script as ~/test.lua\r\n```lua\r\ncur_row = cur_row or 1\r\nvim.api.nvim_buf_add_highlight(0, -1, \"IncSearch\", 0, 0, -1)\r\nfunction doit()\r\n\t-- Clear the highlight of the current row and sets the highlight again.\r\n\t-- Ideally it should be a nop as we clear and set back the same highlight\r\n\t-- \"IncSearch\". In effect, we should see one more line highlighted as\r\n\t-- \"IncSearch\" when this script is executed once.\r\n\tvim.api.nvim_buf_clear_namespace(0, -1, cur_row - 1, cur_row)\r\n\tvim.api.nvim_buf_add_highlight(0, -1, \"IncSearch\", cur_row - 1, 0, -1)\r\n\tcur_row = cur_row + 1\r\n\t-- However, with conceallevel set, nvim_buf_add_highlight did not compensate\r\n\t-- nvim_buf_clear_namespace and thus we see one new row is highlighted as\r\n\t-- \"IncSearch\" but the previous line got cleared. If the following lines are\r\n\t-- commented, there's no such problem.\r\n\tlocal old = vim.wo.conceallevel\r\n\tvim.wo.conceallevel = 0\r\n\tvim.wo.conceallevel = old\r\nend\r\n\r\ndoit()\r\n```\r\n$ nvim -u NORC ~/test.lua\r\n:luafile %\r\n:luafile %\r\n:luafile %\n\n### Expected behavior\n\nExpected to see all lines become highlighted after several calls to `luafile %`. \n\n### Actual behavior\n\nOnly one line is highlighted.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This can be fixed by skipping end marks at the starting position of the cleared region:\r\n```diff\r\ndiff --git a/src/nvim/extmark.c b/src/nvim/extmark.c\r\nindex f4a6a0268..95b099416 100644\r\n--- a/src/nvim/extmark.c\r\n+++ b/src/nvim/extmark.c\r\n@@ -267,6 +267,10 @@ bool extmark_clear(buf_T *buf, uint32_t ns_id, int l_row, colnr_T l_col, int u_r\r\n       continue;\r\n     }\r\n \r\n+    if (mt_end(mark) && mark.pos.row == l_row && mark.pos.col == l_col) {\r\n+      goto next_mark;\r\n+    }\r\n+\r\n     assert(mark.ns > 0 && mark.id > 0);\r\n     if (mark.ns == ns_id || all_ns) {\r\n       marks_cleared = true;\r\n@@ -285,9 +289,11 @@ bool extmark_clear(buf_T *buf, uint32_t ns_id, int l_row, colnr_T l_col, int u_r\r\n         }\r\n         map_put(uint64_t, ssize_t)(&delete_set, other, decor_id);\r\n       }\r\n-    } else {\r\n-      marktree_itr_next(buf->b_marktree, itr);\r\n+      continue;\r\n     }\r\n+\r\n+next_mark:\r\n+    marktree_itr_next(buf->b_marktree, itr);\r\n   }\r\n   uint64_t id;\r\n   ssize_t decor_id;\r\n```\r\n\r\nHowever, it seems unclear how `nvim_buf_clear_namespace` should treat end marks. All tests using this API still pass if all end marks are skipped:\r\n```diff\r\ndiff --git a/src/nvim/extmark.c b/src/nvim/extmark.c\r\nindex f4a6a0268..672c06381 100644\r\n--- a/src/nvim/extmark.c\r\n+++ b/src/nvim/extmark.c\r\n@@ -267,6 +267,10 @@ bool extmark_clear(buf_T *buf, uint32_t ns_id, int l_row, colnr_T l_col, int u_r\r\n       continue;\r\n     }\r\n \r\n+    if (mt_end(mark)) {\r\n+      goto next_mark;\r\n+    }\r\n+\r\n     assert(mark.ns > 0 && mark.id > 0);\r\n     if (mark.ns == ns_id || all_ns) {\r\n       marks_cleared = true;\r\n@@ -285,9 +289,11 @@ bool extmark_clear(buf_T *buf, uint32_t ns_id, int l_row, colnr_T l_col, int u_r\r\n         }\r\n         map_put(uint64_t, ssize_t)(&delete_set, other, decor_id);\r\n       }\r\n-    } else {\r\n-      marktree_itr_next(buf->b_marktree, itr);\r\n+      continue;\r\n     }\r\n+\r\n+next_mark:\r\n+    marktree_itr_next(buf->b_marktree, itr);\r\n   }\r\n   uint64_t id;\r\n   ssize_t decor_id;\r\n```\r\n\r\n`nvim_buf_get_extmarks` also always skips end marks. Related #17270",
            "created_at": "2023-05-28T23:36:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/19511#issuecomment-1566305193",
            "id": 1566305193,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19511",
            "node_id": "IC_kwDOAPphoM5dW-up",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566305193/reactions"
            },
            "updated_at": "2023-05-28T23:36:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566305193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hello maintainers ðŸ‘‹ \n\nI'm not sure if this is where the discussion should happen, apologies if I'm in the wrong place!\n\nFWIW I think it is safe to assume that when someone creates an extmark on line 1 which covers the entire line using `-1` as end _column_ value, they are not likely to expect `vim.api.nvim_buf_clear_namespace(buf, ns, 1, 1)` to also clear line 1.\n\nIt would be lovely if this could even be default behavior but that would be a breaking change I assume so as an alternative maybe there could be an option to specify that it should stick to specified lines exclusively:\n\n```lua\nvim.api.nvim_buf_clear_namespace(buf, ns, 1, 1, { exact = true })\n```\n\nOf course this is just an example, I'm not sure what is best. That's best left for the experts to determine :)\n\nThe primary advantage would be that plugin authors or init.lua tweakers would no longer have to care about \"what is the end of the line\" for highlighting. It removes the need to get the line length from the buffer and use that just to prevent the implicit \"overflow-into-next-line\" behavior.\n\nI hope this explanation makes some sense and doesn't offend, I truly enjoy writing all my code in Neovim on a daily basis and love all that you do to improve Neovim even more! Thank you all so much for building and improving on the foundation of Vim!\n",
            "created_at": "2025-03-29T16:00:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/19511#issuecomment-2763590369",
            "id": 2763590369,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19511",
            "node_id": "IC_kwDOAPphoM6kuQrh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2763590369/reactions"
            },
            "updated_at": "2025-04-25T21:48:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2763590369",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3225058?v=4",
                "events_url": "https://api.github.com/users/SidOfc/events{/privacy}",
                "followers_url": "https://api.github.com/users/SidOfc/followers",
                "following_url": "https://api.github.com/users/SidOfc/following{/other_user}",
                "gists_url": "https://api.github.com/users/SidOfc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/SidOfc",
                "id": 3225058,
                "login": "SidOfc",
                "node_id": "MDQ6VXNlcjMyMjUwNTg=",
                "organizations_url": "https://api.github.com/users/SidOfc/orgs",
                "received_events_url": "https://api.github.com/users/SidOfc/received_events",
                "repos_url": "https://api.github.com/users/SidOfc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/SidOfc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SidOfc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/SidOfc",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/19511/comments",
    "created_at": "2022-07-26T05:34:33Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/19511/events",
    "html_url": "https://github.com/neovim/neovim/issues/19511",
    "id": 1317721244,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "issue needs attention from an expert, or PR proposes significant changes to architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "marks, extmarks, decorations, virtual text",
            "id": 1680119719,
            "name": "marks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/marks"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/19511/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5OitSc",
    "number": 19511,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/19511/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/19511/timeline",
    "title": "nvim_buf_clear_namespace removes extmarks with end_col = -1 on line before specified range",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:37:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/19511",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1246394?v=4",
        "events_url": "https://api.github.com/users/ipod825/events{/privacy}",
        "followers_url": "https://api.github.com/users/ipod825/followers",
        "following_url": "https://api.github.com/users/ipod825/following{/other_user}",
        "gists_url": "https://api.github.com/users/ipod825/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ipod825",
        "id": 1246394,
        "login": "ipod825",
        "node_id": "MDQ6VXNlcjEyNDYzOTQ=",
        "organizations_url": "https://api.github.com/users/ipod825/orgs",
        "received_events_url": "https://api.github.com/users/ipod825/received_events",
        "repos_url": "https://api.github.com/users/ipod825/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ipod825/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ipod825/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ipod825",
        "user_view_type": "public"
    }
}