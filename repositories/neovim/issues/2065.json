{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "The \";\" key is real nice to repeat f,t and T,F motions and save keystrokes.\n### Problematic\n\nIn real life, us english is not the only spoken language and in many keyboard layouts, you have to leave aside keys like \"[\", \"]\", \"`\" and even sometimes \";\" in favor of direct acces to dead keys or accentuated characters such as \"é\", \"ç\",\"à\" and so on.\nPart of the solution to this is to reclaim the accuented characters in normal mode by remaping them to the much useful bracket operators.\n\nAfter doing this, your are still missing direct-one-keystroke-action keys because of the dead keys (vim registers nothing as nothing is sent to vim untill you type a second key).\n### Solutions\n\nHere comes the idea of key overloading. We could add a configuration option to overload the \";\" and \",\" with more movements.\n### What i have tried before\n\nI tried a few plugins before but i found there are no elegant solutions; as soon as the users remaps one of the motion keys everything is screwed up. As far as i know, you have to implement a kind of proxy to register the last pressed motion key.\n### Benefits and usage scenario\n\nA user would add in his .vimrc something like:\n\n_set motion_repeat_overload_options+=<C-D>,<C-U>,<C-E>,<C-Y>,\"[[\",\"]]\", <PageUp>,<PageDown>,...._\n\nand then any of those motions could be repeat by \";\" and reversed by \",\"\n### How does this help with the above problematic and why is it cool?\n- More 2 keystrokes motion are replaced by a single keystroke.\n- You can remap <Space> to \";\" (IMHO the space key is the biggest and dumbest by default in normal mode. Maybe you use it in some clever way i have not thought of). Anyway, with this scheme you can even simulate a browser behavior. Say You hit the distant <PageDown> or <C-D> once and then you can read down by hitting <Space> again assuming 3+ pages.\n- You can remap the \";\" to something else (if you had direct acces to it) or simply make good use of the extra power of that key.\n### Going a step further\n\nLet's say you remap \",\" to <S-Space>, one could reverse the \"cruising\" direction by hitting the <S-Space> once, and then continue moving in that direction simply hitting <Space> again. Here you would save a second key on a normal layout. This direction toggling would of course be the subject of another vim option.\n\nAny thoughts on this?\n\nBest regards,\n",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6591100?v=4",
        "events_url": "https://api.github.com/users/archf/events{/privacy}",
        "followers_url": "https://api.github.com/users/archf/followers",
        "following_url": "https://api.github.com/users/archf/following{/other_user}",
        "gists_url": "https://api.github.com/users/archf/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/archf",
        "id": 6591100,
        "login": "archf",
        "node_id": "MDQ6VXNlcjY1OTExMDA=",
        "organizations_url": "https://api.github.com/users/archf/orgs",
        "received_events_url": "https://api.github.com/users/archf/received_events",
        "repos_url": "https://api.github.com/users/archf/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/archf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/archf/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/archf",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "How about creating a read-only variable named `v:commands` (and option `cmdlen` with obvious meaning) which is a list of elements like `[\"n\", \"[\", 1, '\"']` (4-tuple (normal mode, command, count, register)), `[\"c\", \"substitute\", 1, \"/foo/bar/g\"]` (4-tuple (command mode, command name, count, command arg(s))), `[\"i\", \"R\", 1, \"foobar\"]` (4-tuple (insert mode, mode type, count, inserted text) (insert mode commands like `<Left>` are recorded as normal mode commands)).\n\nIn `v:commands` flow control commands are not recorded and if one command is identical to the previous one (but not to one of the previous ones) then it is not put in the list again, instead count is incremented.\n\nThe reasoning is the following:\n1. This variant is far more universal then adding motion_repeat_overload_options.\n2. This variant makes it possible for plugins to fullfill requests like “make dot repeat cNext”.\n3. This variant ought to be faster then running autocommand for everything and contains less potential bugs (I do not think though that emitting non-blocking _msgpack_ events for this is a bad idea).\n4. There is much potential space for optimisation: e.g. after porting VimL to some better backend (e.g. luaJIT or whatever) it would be possible to use `UserCommand *user_commands` directly via userdata with metatable or the equivalent in place of creating a VimL list.\n\nNote that I see how you can implement _this_ request by remapping a bunch of commands at once. But this will not work always: e.g. if you run a motion that was noremapped for some reason remapping will not help.\n",
            "created_at": "2015-02-26T19:46:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/2065#issuecomment-76254409",
            "id": 76254409,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjU0NDA5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76254409/reactions"
            },
            "updated_at": "2015-02-26T19:46:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76254409",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ZyX-I In general I think we should embrace \"stacks\" as a core concept (in practice this may just mean adding `push()` and `pop()` for Lists), and expose number read-only (in most cases) stacks for lots of information that is currently lost:\n- normal mode commands (as you elucidated), including motions\n- changes (with metadata)\n- `:messages` history\n- yank/delete history\n",
            "created_at": "2015-02-26T20:20:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/2065#issuecomment-76261973",
            "id": 76261973,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjYxOTcz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76261973/reactions"
            },
            "updated_at": "2015-02-26T20:20:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76261973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I like the idea of exposing read only variables. It is really more universal.\n\nSay we'd have:\nv:motions -> contains the last motions + operator if it exists  (ex: \"fa\" or \"tw\" or <C-D>)\n\nOne could write simple script to enhance any key in any way he likes.\n",
            "created_at": "2015-02-27T03:09:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/2065#issuecomment-76323498",
            "id": 76323498,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2MzIzNDk4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76323498/reactions"
            },
            "updated_at": "2015-02-27T15:02:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76323498",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6591100?v=4",
                "events_url": "https://api.github.com/users/archf/events{/privacy}",
                "followers_url": "https://api.github.com/users/archf/followers",
                "following_url": "https://api.github.com/users/archf/following{/other_user}",
                "gists_url": "https://api.github.com/users/archf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/archf",
                "id": 6591100,
                "login": "archf",
                "node_id": "MDQ6VXNlcjY1OTExMDA=",
                "organizations_url": "https://api.github.com/users/archf/orgs",
                "received_events_url": "https://api.github.com/users/archf/received_events",
                "repos_url": "https://api.github.com/users/archf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/archf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/archf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/archf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I do not like the idea of separating some kinds of operations. `v:motions` is less useful then my `v:commands` and can be relatively easy created from `v:commands`. Though `v:commands` definition needs to be improved because it does not work well with operator-pending and visual modes.\n",
            "created_at": "2015-02-27T15:12:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/2065#issuecomment-76409174",
            "id": 76409174,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDA5MTc0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76409174/reactions"
            },
            "updated_at": "2015-02-27T15:12:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76409174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk Specifically stacks there are only convenient for write operations from the core (I do not see any need in having anything, but push and pop for modifying them: core will mostly either use push or “amend” (pop n times, modify, push)). For plugin developers it is more convenient to work with them as with lists.\n\nIt is OK if stacks will be RW lists/arrays/ring buffers with W part limited to push/pop pair not accessible outside of core C code and random access (i.e. full List RO API: iter, getitem[, getslice], len) for R part not accessible from core C code, but accessible from the API and VimL (is this what you meant by “in practice” part?). But I would not say having actual stacks is a good idea.\n",
            "created_at": "2015-02-27T15:24:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/2065#issuecomment-76411258",
            "id": 76411258,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDExMjU4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76411258/reactions"
            },
            "updated_at": "2015-02-27T15:24:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76411258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ZyX-I Stacks may be orthogonal to the goal here. But as an aside, I am interested in adding more support for concepts from https://github.com/dahu/vim-stack. Maybe not for these RO structures though.\n",
            "created_at": "2015-02-27T17:05:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/2065#issuecomment-76430051",
            "id": 76430051,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2065",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDMwMDUx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76430051/reactions"
            },
            "updated_at": "2015-02-27T17:05:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76430051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/2065/comments",
    "created_at": "2015-02-26T17:14:35Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/2065/events",
    "html_url": "https://github.com/neovim/neovim/issues/2065",
    "id": 59105523,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "needs a clear design proposal",
            "id": 124510010,
            "name": "needs:design",
            "node_id": "MDU6TGFiZWwxMjQ1MTAwMTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:design"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/2065/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 260,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 297,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-01-20T17:56:23Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU1OTEwNTUyMw==",
    "number": 2065,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/2065/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/2065/timeline",
    "title": "configure \";\" and \",\" to repeat more motions ",
    "updated_at": "2025-01-17T16:18:59Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/2065",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6591100?v=4",
        "events_url": "https://api.github.com/users/archf/events{/privacy}",
        "followers_url": "https://api.github.com/users/archf/followers",
        "following_url": "https://api.github.com/users/archf/following{/other_user}",
        "gists_url": "https://api.github.com/users/archf/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/archf",
        "id": 6591100,
        "login": "archf",
        "node_id": "MDQ6VXNlcjY1OTExMDA=",
        "organizations_url": "https://api.github.com/users/archf/orgs",
        "received_events_url": "https://api.github.com/users/archf/received_events",
        "repos_url": "https://api.github.com/users/archf/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/archf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/archf/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/archf",
        "user_view_type": "public"
    }
}