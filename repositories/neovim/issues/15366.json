{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Neovim Version\n\n0.5.0\n\n### Operating system/version:\n\nmacOS 11.4\n\n### Terminal name/version:\n\niTerm 3.4.8\n\n### TERM environment variable\n\nxterm-256color\n\n### Installation\n\nhomebrew\n\n### Steps to reproduce\n\n##  In `nvim -u NORC`:\r\n\r\n###  Step 1: Define the following autogroup **using Lua**:\r\n\r\n```\r\n:lua vim.api.nvim_command(\"augroup testgroup\\nautocmd BufEnter * :echo 'one'\\nautocmd BufEnter * :echo 'two'\\nautocmd BufEnter * :echo 'three'\\naugroup end\")\r\n```\r\n\r\n### Step 2: Repeatedly open files â€” observe the exploding output each time\r\n\r\n```\r\n:enew\r\n:enew\r\n:enew\r\n:enew\r\n:enew\r\n```\r\n\r\n##  In `nvim -u NONE`:\r\n\r\nSame as above.\n\n### Vim\n\nDoes not apply\n\n### Expected behavior\n\nAfter each call to `:enew`, Neovim should print\r\n\r\n```\r\none\r\ntwo\r\nthree\r\n```\n\n### Actual behavior\n\nAfter the first call to `:enew`, Neovim prints:\r\n\r\n```\r\none\r\n```\r\n\r\nAfter the second call to `:enew`, Neovim prints:\r\n\r\n```\r\none\r\ntwo\r\n```\r\n\r\nAfter the third call to `:enew`, Neovim prints:\r\n\r\n```\r\none\r\ntwo\r\ntwo\r\nthree\r\n```\r\n\r\nAfter the fourth call to `:enew`, Neovim prints:\r\n\r\n```\r\none\r\ntwo\r\ntwo\r\nthree\r\none\r\ntwo\r\ntwo\r\nthree\r\ntwo\r\nthree\r\nthree\r\n```\r\n\r\nAfter the fifth call to `:enew`, Neovim prints:\r\n\r\n```\r\none\r\ntwo\r\ntwo\r\nthree\r\ntwo\r\nthree\r\nthree\r\ntwo\r\nthree\r\nthree\r\nthree\r\ntwo\r\nthree\r\nthree\r\nthree\r\n```\r\n\r\nAnd so on. The above is nondeterministic, so the output will be different each time.\r\n\r\n**Notably, this behavior does not happen when the augroup is defined via vanilla VimL**",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Also, possibly related:\r\n\r\nIf the first command in the autogroup is `au!`, there is an error.",
            "created_at": "2021-08-14T01:12:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/15366#issuecomment-898787076",
            "id": 898787076,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15366",
            "node_id": "IC_kwDOAPphoM41kmcE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898787076/reactions"
            },
            "updated_at": "2021-08-14T01:12:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898787076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1744438?v=4",
                "events_url": "https://api.github.com/users/danielyli/events{/privacy}",
                "followers_url": "https://api.github.com/users/danielyli/followers",
                "following_url": "https://api.github.com/users/danielyli/following{/other_user}",
                "gists_url": "https://api.github.com/users/danielyli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/danielyli",
                "id": 1744438,
                "login": "danielyli",
                "node_id": "MDQ6VXNlcjE3NDQ0Mzg=",
                "organizations_url": "https://api.github.com/users/danielyli/orgs",
                "received_events_url": "https://api.github.com/users/danielyli/received_events",
                "repos_url": "https://api.github.com/users/danielyli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/danielyli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/danielyli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/danielyli",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I can reproduce this, but it doesn't happen if you use\r\n\r\n```vim\r\n:lua vim.cmd(\"augroup testgroup\\nautocmd BufEnter * :echo 'one'\\nautocmd BufEnter * :echo 'two'\\nautocmd BufEnter * :echo 'three'\\naugroup end\")\r\n```\r\n\r\nWhat I *suspect* is happening is that the auto commands are actually being defined like this (in Vimscript):\r\n\r\n```vim\r\nautocmd BufEnter * echo 'one' | autocmd BufEnter * echo 'two' | autocmd BufEnter * echo 'three'\r\n```\r\n\r\nWe can group this with virtual parentheses to make more clear what is happening:\r\n\r\n```vim\r\nautocmd BufEnter * (echo 'one' | autocmd BufEnter * (echo 'two' | autocmd BufEnter * echo 'three'))\r\n```\r\n\r\nSo the first BufEnter autocmd creates a second autocmd which in turn creates a third autocmd.\r\n\r\nI'm not sure if this is a bug or not, since `vim.api.nvim_command` is typically used to run an ex command as if it were typed verbatim in the command prompt, while `vim.cmd` (which uses `vim.api.nvim_exec`) treats the input as if it were being `:source`d from a file.",
            "created_at": "2021-08-14T01:29:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/15366#issuecomment-898789011",
            "id": 898789011,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15366",
            "node_id": "IC_kwDOAPphoM41km6T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898789011/reactions"
            },
            "updated_at": "2021-08-14T01:29:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898789011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The meaning of `\\n` changes depending on wether the operation is search or replace/substitute:\r\n\r\n`:h \\n`\r\n> \\n\tmatches an end-of-line\t\t\t\t*/\\n*\r\n\tWhen matching in a string instead of buffer text a literal newline\r\n\tcharacter is matched.\r\n\r\n\r\n`:h s/\\n`\r\n> \\n\t  insert a \\<NL\\> (\\<NUL\\> in the file)\r\n  (does NOT break the line)\t\t\t     *s/\\n*\r\n\r\nYou can see the null-byte characters `^@` (0x00) when checking the resulting augroup:\r\n\r\n```\r\n:au testgroup                                                                                                                                                                \r\n--- Autocommands ---                                                                                                                                                         \r\ntestgroup  BufEnter                                                                                                                                                          \r\n    *         :echo 'one'^@autocmd BufEnter * :echo 'two'^@autocmd BufEnter * :echo 'three'^@augroup end \r\n```\r\nThe result is as @gpanders described; The autocommands are getting created on each iteration.\r\n\r\n`vim.cmd` , some concatenation using `string.char(10)`, or ~~`nvim_command([[...]])` with actual newlines~~ should all work.",
            "created_at": "2021-08-14T02:16:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/15366#issuecomment-898797451",
            "id": 898797451,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15366",
            "node_id": "IC_kwDOAPphoM41ko-L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898797451/reactions"
            },
            "updated_at": "2021-08-14T09:08:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898797451",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1448118?v=4",
                "events_url": "https://api.github.com/users/sunjon/events{/privacy}",
                "followers_url": "https://api.github.com/users/sunjon/followers",
                "following_url": "https://api.github.com/users/sunjon/following{/other_user}",
                "gists_url": "https://api.github.com/users/sunjon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sunjon",
                "id": 1448118,
                "login": "sunjon",
                "node_id": "MDQ6VXNlcjE0NDgxMTg=",
                "organizations_url": "https://api.github.com/users/sunjon/orgs",
                "received_events_url": "https://api.github.com/users/sunjon/received_events",
                "repos_url": "https://api.github.com/users/sunjon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sunjon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sunjon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sunjon",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Using `[[` `]]` with real newlines produces the same error. I used `\\n` in the example to keep it all on one line so that itâ€™s easy to copy and paste.",
            "created_at": "2021-08-14T02:28:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/15366#issuecomment-898799623",
            "id": 898799623,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15366",
            "node_id": "IC_kwDOAPphoM41kpgH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898799623/reactions"
            },
            "updated_at": "2021-08-14T21:11:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898799623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1744438?v=4",
                "events_url": "https://api.github.com/users/danielyli/events{/privacy}",
                "followers_url": "https://api.github.com/users/danielyli/followers",
                "following_url": "https://api.github.com/users/danielyli/following{/other_user}",
                "gists_url": "https://api.github.com/users/danielyli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/danielyli",
                "id": 1744438,
                "login": "danielyli",
                "node_id": "MDQ6VXNlcjE3NDQ0Mzg=",
                "organizations_url": "https://api.github.com/users/danielyli/orgs",
                "received_events_url": "https://api.github.com/users/danielyli/received_events",
                "repos_url": "https://api.github.com/users/danielyli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/danielyli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/danielyli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/danielyli",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "You're right. I'd unintentionally used `vim.cmd` in my test.",
            "created_at": "2021-08-14T02:56:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/15366#issuecomment-898804947",
            "id": 898804947,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15366",
            "node_id": "IC_kwDOAPphoM41kqzT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898804947/reactions"
            },
            "updated_at": "2021-08-14T02:56:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898804947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1448118?v=4",
                "events_url": "https://api.github.com/users/sunjon/events{/privacy}",
                "followers_url": "https://api.github.com/users/sunjon/followers",
                "following_url": "https://api.github.com/users/sunjon/following{/other_user}",
                "gists_url": "https://api.github.com/users/sunjon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sunjon",
                "id": 1448118,
                "login": "sunjon",
                "node_id": "MDQ6VXNlcjE0NDgxMTg=",
                "organizations_url": "https://api.github.com/users/sunjon/orgs",
                "received_events_url": "https://api.github.com/users/sunjon/received_events",
                "repos_url": "https://api.github.com/users/sunjon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sunjon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sunjon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sunjon",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15366/comments",
    "created_at": "2021-08-14T01:08:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/15366/events",
    "html_url": "https://github.com/neovim/neovim/issues/15366",
    "id": 970786390,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/15366/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5NzA3ODYzOTA=",
    "number": 15366,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/15366/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/15366/timeline",
    "title": "autocmds in an augroup nondeterministically execute repeatedly when defined from Lua",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:35:49Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/15366",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1744438?v=4",
        "events_url": "https://api.github.com/users/danielyli/events{/privacy}",
        "followers_url": "https://api.github.com/users/danielyli/followers",
        "following_url": "https://api.github.com/users/danielyli/following{/other_user}",
        "gists_url": "https://api.github.com/users/danielyli/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/danielyli",
        "id": 1744438,
        "login": "danielyli",
        "node_id": "MDQ6VXNlcjE3NDQ0Mzg=",
        "organizations_url": "https://api.github.com/users/danielyli/orgs",
        "received_events_url": "https://api.github.com/users/danielyli/received_events",
        "repos_url": "https://api.github.com/users/danielyli/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/danielyli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/danielyli/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/danielyli",
        "user_view_type": "public"
    }
}