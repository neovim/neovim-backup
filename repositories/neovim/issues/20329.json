{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Feature already in Vim?\n\nNo\n\n### Feature description\n\nSince you can preview the results of `:s/` for example, I think you should also be able to preview the results of visual block inserting. Let's say we have this block of text:\r\n\r\n```\r\ntext1\r\ntext2\r\ntext3\r\n```\r\n\r\nAt the top left, I press <kbd>Control-V</kbd> to enter visual block mode. I go down twice and then press <kbd>Shift-I</kbd>. At this point I should be able to see three cursors in front of each line. As I type some text, I should be seeing the text on all of the lines, not just the top one. This should definitely be the default behavior, just like `incsearch`.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Also, the same should be true if you use a command like `4i` which will duplicate your insertion four times.",
            "created_at": "2022-10-03T15:15:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/20329#issuecomment-1265623603",
            "id": 1265623603,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20329",
            "node_id": "IC_kwDOAPphoM5Lb-Iz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1265623603/reactions"
            },
            "updated_at": "2022-10-03T15:15:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1265623603",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/92645199?v=4",
                "events_url": "https://api.github.com/users/amarz45/events{/privacy}",
                "followers_url": "https://api.github.com/users/amarz45/followers",
                "following_url": "https://api.github.com/users/amarz45/following{/other_user}",
                "gists_url": "https://api.github.com/users/amarz45/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amarz45",
                "id": 92645199,
                "login": "amarz45",
                "node_id": "U_kgDOBYWnTw",
                "organizations_url": "https://api.github.com/users/amarz45/orgs",
                "received_events_url": "https://api.github.com/users/amarz45/received_events",
                "repos_url": "https://api.github.com/users/amarz45/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amarz45/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amarz45/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amarz45",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm interested in trying to tackle this issue. I've been exploring the code and it seems like, while on insert mode, the buffer is updated in real time. And, when leaving insert mode, the text for the other affected locations is computed and inserted.\n\nThis differs from `:s`, where the changes are made only when the command is submitted. So, the changes made by the preview function can be discarded.\n\nSo, what would be the preferred approach in this case? I can think of:\n\n- keep inserting the visual block text while leaving insert mode. Add a preview while typing. \n    - would this imply that the real time regular insert mode text would also be a preview and would also need to be inserted later? \n- update the visual block text in real time\n    - the text should be computed early\n    - i think this should be handled as a special case in the functions that handle insert mode changes\n    - the code for inserting the visual block text while leaving insert mode should be removed\n- some other approach (?\n\nAlso, is the code diverging from its Vim counterpart a concern?",
            "created_at": "2024-12-23T18:31:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/20329#issuecomment-2560140299",
            "id": 2560140299,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20329",
            "node_id": "IC_kwDOAPphoM6YmKQL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2560140299/reactions"
            },
            "updated_at": "2024-12-30T20:42:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2560140299",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> is the code diverging from its Vim counterpart a concern?\n\nno\n\n> keep inserting the visual block text while leaving insert mode\n\nI don't understand what this means.\n\n> This differs from `:s`, where the changes are made only when the command is submitted.\n\n`:s` preview works like this: (1) it actually performs the edits, then (2) it uses undo to discard the changes, and (3) prunes the undo-tree.\n\nFor visual block changes, I suggest this approach:\n\n1. instead of waiting until the end to apply the changes, just do it immediately, on each keypress\n2. if user cancels via `ctrl-c`, perform an undo + prune (similar to `:s` preview)",
            "created_at": "2024-12-30T20:41:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/20329#issuecomment-2565898343",
            "id": 2565898343,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20329",
            "node_id": "IC_kwDOAPphoM6Y8IBn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565898343/reactions"
            },
            "updated_at": "2024-12-30T20:44:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565898343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "How should we handle newlines? Currently, doing `<c-v>jIsomething<esc>` results in\n\n```\nsomething\nsomething\n```\n\nbut doing `<c-v>jIsomething<cr><esc>` results in\n\n```\nsomething\n\n```\n\nShould the same thing happen when updating the text in real time? I guess it should be possible using undo.",
            "created_at": "2024-12-30T22:54:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/20329#issuecomment-2565985975",
            "id": 2565985975,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20329",
            "node_id": "IC_kwDOAPphoM6Y8da3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565985975/reactions"
            },
            "updated_at": "2024-12-30T22:54:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565985975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I would expect that we just call the current code earlier, so it behaves exactly the same as it already does.",
            "created_at": "2024-12-31T15:22:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/20329#issuecomment-2566532654",
            "id": 2566532654,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20329",
            "node_id": "IC_kwDOAPphoM6Y-i4u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566532654/reactions"
            },
            "updated_at": "2024-12-31T15:22:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566532654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't think that's 100% possible, I'm gonna give a few examples I've encountered while tinkering with a naive implementation.\n\nSince the current implementation\n\n1. Gets the newly inserted text when exiting insert mode\n\nhttps://github.com/neovim/neovim/blob/665a0e85c4788cb2847e270c333c0aee306f07ad/src/nvim/ops.c#L2448\n\n2. Inserts it in the respective places\n\nhttps://github.com/neovim/neovim/blob/665a0e85c4788cb2847e270c333c0aee306f07ad/src/nvim/ops.c#L2473-L2475\n\nI've encountered the following problems:\n\n## backspaces\n\nIt doesn't handle `<bs>`, `<c-w>`, `<c-u>` or any other form of insert mode text deletion because it doesn't need to. When inserting text in real time this would be necessary. I'm my on-progress naive implementation I'm handling it  in `del_bytes`\n\nhttps://github.com/neovim/neovim/blob/665a0e85c4788cb2847e270c333c0aee306f07ad/src/nvim/change.c#L871\n\n## newlines\n\nIt doesn't do anything if the cursor moved to a different line\n\nhttps://github.com/neovim/neovim/blob/665a0e85c4788cb2847e270c333c0aee306f07ad/src/nvim/ops.c#L2372-L2374\n\nIt would have to undo only the visual block inserted text to keep the current behavior.\n\nI was trying the idea of simply disabling visual block insert when a newline is entered and continue as regular insert mode, hence my question.\n",
            "created_at": "2024-12-31T16:01:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/20329#issuecomment-2566558248",
            "id": 2566558248,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20329",
            "node_id": "IC_kwDOAPphoM6Y-pIo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566558248/reactions"
            },
            "updated_at": "2024-12-31T16:01:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566558248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Now that I understand your expectations and the code better, I think this could be done more like how `:s` works. Saving the undo information, performing the changes on each keystroke and restoring the undo information.\n\nI guess I could do it inside of `insert_handle_key`\n\nhttps://github.com/neovim/neovim/blob/665a0e85c4788cb2847e270c333c0aee306f07ad/src/nvim/edit.c#L705",
            "created_at": "2024-12-31T16:08:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/20329#issuecomment-2566562967",
            "id": 2566562967,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20329",
            "node_id": "IC_kwDOAPphoM6Y-qSX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566562967/reactions"
            },
            "updated_at": "2024-12-31T16:08:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566562967",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\n> It doesn't handle `<bs>`, `<c-w>`, `<c-u>` or any other form of insert mode text deletion\n\nYeah, one approach would be to replay each key similar to a macro. See also [paste_store](https://github.com/neovim/neovim/blob/0bef3b911cc262a007fb4412d864c1832d1268ad/src/nvim/getchar.c#L3223) for a related concept.\n\nBut that could get tricky, may be equivalent to a \"multicursor\" implementation.\n\n\n> I think this could be done more like how `:s` works\n\nSGTM. With test coverage, we can always change the implementation later.\n",
            "created_at": "2024-12-31T17:17:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/20329#issuecomment-2566605202",
            "id": 2566605202,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20329",
            "node_id": "IC_kwDOAPphoM6Y-0mS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566605202/reactions"
            },
            "updated_at": "2024-12-31T17:18:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566605202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "FYI: https://github.com/phanen/vbi.nvim as a workaround before it land in core.",
            "created_at": "2025-10-03T15:50:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/20329#issuecomment-3366254773",
            "id": 3366254773,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20329",
            "node_id": "IC_kwDOAPphoM7IpPi1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3366254773/reactions"
            },
            "updated_at": "2025-10-03T15:50:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3366254773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/91544758?v=4",
                "events_url": "https://api.github.com/users/phanen/events{/privacy}",
                "followers_url": "https://api.github.com/users/phanen/followers",
                "following_url": "https://api.github.com/users/phanen/following{/other_user}",
                "gists_url": "https://api.github.com/users/phanen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phanen",
                "id": 91544758,
                "login": "phanen",
                "node_id": "U_kgDOBXTctg",
                "organizations_url": "https://api.github.com/users/phanen/orgs",
                "received_events_url": "https://api.github.com/users/phanen/received_events",
                "repos_url": "https://api.github.com/users/phanen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phanen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phanen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phanen",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20329/comments",
    "created_at": "2022-09-24T18:39:12Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/20329/events",
    "html_url": "https://github.com/neovim/neovim/issues/20329",
    "id": 1384775428,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1471818957,
            "name": "multicursor",
            "node_id": "MDU6TGFiZWwxNDcxODE4OTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/multicursor"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/20329/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 746,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 637,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-10-05T18:26:43Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5Sif8E",
    "number": 20329,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 31,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 3,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 34,
        "url": "https://api.github.com/repos/neovim/neovim/issues/20329/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/20329/timeline",
    "title": "Visual block insert – preview results",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-10-03T18:43:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/20329",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/92645199?v=4",
        "events_url": "https://api.github.com/users/amarz45/events{/privacy}",
        "followers_url": "https://api.github.com/users/amarz45/followers",
        "following_url": "https://api.github.com/users/amarz45/following{/other_user}",
        "gists_url": "https://api.github.com/users/amarz45/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/amarz45",
        "id": 92645199,
        "login": "amarz45",
        "node_id": "U_kgDOBYWnTw",
        "organizations_url": "https://api.github.com/users/amarz45/orgs",
        "received_events_url": "https://api.github.com/users/amarz45/received_events",
        "repos_url": "https://api.github.com/users/amarz45/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/amarz45/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/amarz45/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/amarz45",
        "user_view_type": "public"
    }
}