{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWith certain settings triggering autocompletion freezes nvim.\n\n### Steps to reproduce\n\n```\nlua vim.lsp.enable({'pyright'})\nset ac\nset complete=o,.,w,b,u,t\nset completeopt=noselect\n```\n\nThen open a python file and try typing anything. I don't think it's a problem with ruff specifically, because it once happened (I think; not 100% sure) with clangd as well.\n\n### Expected behavior\n\nNo UI freezes.\n\n### Nvim version (nvim -v)\n\nNVIM v0.12.0-dev-a9a4c27\n\n### Vim (not Nvim) behaves the same?\n\nnot tested\n\n### Operating system/version\n\nLinux 6.15.9-arch1-1 x86_64 GNU/Linux\n\n### Terminal name/version\n\nst 0.9\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\naur",
    "closed_at": "2025-08-08T14:40:58Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I managed to get a backtrace to the place where the hangup happens:\n\n```\n#0  0x00007ffff7c931ce in ?? () from target:/usr/lib/libc.so.6\n#1  0x00007ffff7c931f4 in ?? () from target:/usr/lib/libc.so.6\n#2  0x00007ffff7d1acd5 in epoll_pwait () from target:/usr/lib/libc.so.6\n#3  0x0000555555aacd13 in uv.io_poll ()\n#4  0x0000555555a98367 in uv_run ()\n#5  0x000055555570a082 in loop_uv_run (loop=0x555555c50e40 <main_loop>, ms=-1)\n    at /home/honza/dev/neovim/src/nvim/event/loop.c:61\n#6  0x000055555570a0de in loop_poll_events (loop=0x555555c50e40 <main_loop>, ms=-1)\n    at /home/honza/dev/neovim/src/nvim/event/loop.c:82\n#7  0x000055555595fa53 in ui_client_run (remote_ui=false) at /home/honza/dev/neovim/src/nvim/ui_client.c:180\n#8  0x00005555557ca646 in main (argc=2, argv=0x7fffffffdc48) at /home/honza/dev/neovim/src/nvim/main.c:348\n```",
            "created_at": "2025-08-04T16:41:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/35163#issuecomment-3151482212",
            "id": 3151482212,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35163",
            "node_id": "IC_kwDOAPphoM67181k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3151482212/reactions"
            },
            "updated_at": "2025-08-04T16:41:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3151482212",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/30779172?v=4",
                "events_url": "https://api.github.com/users/Dook97/events{/privacy}",
                "followers_url": "https://api.github.com/users/Dook97/followers",
                "following_url": "https://api.github.com/users/Dook97/following{/other_user}",
                "gists_url": "https://api.github.com/users/Dook97/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Dook97",
                "id": 30779172,
                "login": "Dook97",
                "node_id": "MDQ6VXNlcjMwNzc5MTcy",
                "organizations_url": "https://api.github.com/users/Dook97/orgs",
                "received_events_url": "https://api.github.com/users/Dook97/received_events",
                "repos_url": "https://api.github.com/users/Dook97/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Dook97/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Dook97/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Dook97",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Not analyzed if the cause can be similar, but first characters (e.g. for `table`) with the following init.lua get lost when typing until getting the first completion result:\n```lua\nrequire('vim._extui').enable({enable = true, msg = {target = 'msg'}})\n\nvim.o.autocomplete = true\nvim.opt.complete:append('o')\nvim.go.completeopt = 'popup,menuone,noinsert,fuzzy'\n\nvim.lsp.config('lua_ls', {\n  cmd = {'lua-language-server'},\n  filetypes = {'lua'},\n  root_markers = {'.git'},\n  settings = {\n    Lua = {\n      runtime = {\n        version = 'LuaJIT',\n        path = {\n          'lua/?.lua',\n          'lua/?/init.lua',\n        },\n      },\n      workspace = {\n        checkThirdParty = false,\n        library = {\n          vim.env.VIMRUNTIME\n        }\n      }\n    }\n  }\n})\n\nvim.lsp.enable('lua_ls')\nvim.api.nvim_create_autocmd('LspAttach', {\n  callback = function (ev)\n    vim.lsp.completion.enable(true, ev.data.client_id, ev.buf, {autotrigger = false})\n  end\n})\n\nlocal keycodes = {\n  cr = vim.keycode('<CR>'),\n  cy = vim.keycode('<C-y>'),\n  ce = vim.keycode('<C-e>'),\n}\n\nvim.keymap.set({'i'}, '<CR>', function ()\n  if vim.fn.pumvisible() == 0 then\n    return '<CR>'\n  end\n\n  if vim.fn.complete_info({'selected'}).selected ~= -1 then\n    return keycodes.cy\n  end\n\n  return keycodes.ce\nend, {expr = true})\n```\n\nScreenshot after typing `Gota`:\n\n<img width=\"964\" height=\"407\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4c0a1b76-75a2-4d5b-8706-8f905227ae50\" />",
            "created_at": "2025-08-04T18:12:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/35163#issuecomment-3151868835",
            "id": 3151868835,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35163",
            "node_id": "IC_kwDOAPphoM673bOj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3151868835/reactions"
            },
            "updated_at": "2025-08-04T18:12:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3151868835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Cannot reproduce. The steps to reproduce don't even use LSP omnifunc.",
            "created_at": "2025-08-04T22:47:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/35163#issuecomment-3152654803",
            "id": 3152654803,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35163",
            "node_id": "IC_kwDOAPphoM676bHT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3152654803/reactions"
            },
            "updated_at": "2025-08-04T22:49:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3152654803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "But with slightly modified steps I can trigger a heap-buffer-overflow:\n```\n=================================================================\n==30967==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7bf89560854f at pc 0x555d3644ada4 bp 0x7ffcb3f2e8d0 sp 0x7ffcb3f2e090\nREAD of size 1 at 0x7bf89560854f thread T0\n    #0 0x555d3644ada3 in __asan_memmove (**/build/bin/nvim+0xd72da3) (BuildId: d0afdc0e43fd3ab3eb967f2972e2b36581347e18)\n    #1 0x555d36e3dd1d in prepend_startcol_text **/src/nvim/insexpand.c:1379:3\n    #2 0x555d36e448f4 in set_compl_globals **/src/nvim/insexpand.c:5469:7\n    #3 0x555d36e435a3 in get_cpt_func_completion_matches **/src/nvim/insexpand.c:6224:3\n    #4 0x555d36e503c2 in get_next_completion_match **/src/nvim/insexpand.c:4389:7\n    #5 0x555d36e4bc5d in ins_compl_get_exp **/src/nvim/insexpand.c:4628:23\n    #6 0x555d36e49ee2 in find_next_completion_match **/src/nvim/insexpand.c:4997:22\n    #7 0x555d36e381e8 in ins_compl_next **/src/nvim/insexpand.c:5100:7\n    #8 0x555d36e39016 in ins_complete **/src/nvim/insexpand.c:5908:11\n    #9 0x555d368ed0f1 in insert_do_complete **/src/nvim/edit.c:1255:7\n    #10 0x555d368f2201 in insert_handle_key **/src/nvim/edit.c:1242:7\n    #11 0x555d368d4b25 in insert_execute **/src/nvim/edit.c:707:10\n    #12 0x555d376cf005 in state_enter **/src/nvim/state.c:102:26\n    #13 0x555d368db5ee in insert_enter **/src/nvim/edit.c:342:5\n    #14 0x555d368d1609 in edit **/src/nvim/edit.c:1332:3\n    #15 0x555d371de729 in invoke_edit **/src/nvim/normal.c:6275:7\n    #16 0x555d371b8892 in nv_edit **/src/nvim/normal.c:6247:5\n    #17 0x555d371a3a4a in normal_execute **/src/nvim/normal.c:1246:3\n    #18 0x555d376cf005 in state_enter **/src/nvim/state.c:102:26\n    #19 0x555d37186631 in normal_enter **/src/nvim/normal.c:523:3\n    #20 0x555d36f0bd19 in main **/src/nvim/main.c:655:3\n    #21 0x7fd896427674 in __libc_start_call_main /usr/src/debug/glibc/glibc/csu/../sysdeps/nptl/libc_start_call_main.h:58:16\n    #22 0x7fd896427728 in __libc_start_main /usr/src/debug/glibc/glibc/csu/../csu/libc-start.c:360:3\n    #23 0x555d3634d004 in _start (**/build/bin/nvim+0xc75004) (BuildId: d0afdc0e43fd3ab3eb967f2972e2b36581347e18)\n\n0x7bf89560854f is located 1 bytes before 2-byte region [0x7bf895608550,0x7bf895608552)\nallocated by thread T0 here:\n    #0 0x555d3644e1f5 in malloc (**/build/bin/nvim+0xd761f5) (BuildId: d0afdc0e43fd3ab3eb967f2972e2b36581347e18)\n    #1 0x555d370a87e4 in try_malloc **/src/nvim/memory.c:115:15\n    #2 0x555d370a8a44 in xmalloc **/src/nvim/memory.c:149:15\n    #3 0x555d367235c3 in ins_char_bytes **/src/nvim/change.c:773:16\n    #4 0x555d36723e78 in ins_char **/src/nvim/change.c:711:3\n    #5 0x555d368e514e in insertchar **/src/nvim/edit.c:2054:7\n    #6 0x555d368f260a in insert_special **/src/nvim/edit.c:1856:5\n    #7 0x555d368f1ffd in insert_handle_key **/src/nvim/edit.c:1227:7\n    #8 0x555d368d4b25 in insert_execute **/src/nvim/edit.c:707:10\n    #9 0x555d376cf005 in state_enter **/src/nvim/state.c:102:26\n    #10 0x555d368db5ee in insert_enter **/src/nvim/edit.c:342:5\n    #11 0x555d368d1609 in edit **/src/nvim/edit.c:1332:3\n    #12 0x555d371de729 in invoke_edit **/src/nvim/normal.c:6275:7\n    #13 0x555d371b8892 in nv_edit **/src/nvim/normal.c:6247:5\n    #14 0x555d371a3a4a in normal_execute **/src/nvim/normal.c:1246:3\n    #15 0x555d376cf005 in state_enter **/src/nvim/state.c:102:26\n    #16 0x555d37186631 in normal_enter **/src/nvim/normal.c:523:3\n    #17 0x555d36f0bd19 in main **/src/nvim/main.c:655:3\n    #18 0x7fd896427674 in __libc_start_call_main /usr/src/debug/glibc/glibc/csu/../sysdeps/nptl/libc_start_call_main.h:58:16\n    #19 0x7fd896427728 in __libc_start_main /usr/src/debug/glibc/glibc/csu/../csu/libc-start.c:360:3\n    #20 0x555d3634d004 in _start (**/build/bin/nvim+0xc75004) (BuildId: d0afdc0e43fd3ab3eb967f2972e2b36581347e18)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow (**/build/bin/nvim+0xd72da3) (BuildId: d0afdc0e43fd3ab3eb967f2972e2b36581347e18) in __asan_memmove\nShadow bytes around the buggy address:\n  0x7bf895608280: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x7bf895608300: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x7bf895608380: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x7bf895608400: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x7bf895608480: fa fa fd fa fa fa fd fa fa fa fd fd fa fa 01 fa\n=>0x7bf895608500: fa fa 00 fa fa fa 01 fa fa[fa]02 fa fa fa fd fd\n  0x7bf895608580: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x7bf895608600: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x7bf895608680: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa\n  0x7bf895608700: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x7bf895608780: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==30967==ABORTING\n```\n```vim\nset filetype=python\nlua vim.lsp.enable({'pyright'})\nset omnifunc=v:lua.vim.lsp.omnifunc\nset ac\nset complete=o,.,w,b,u,t\nset completeopt=noselect\n```\nStill doesn't freeze without ASAN though.",
            "created_at": "2025-08-04T22:54:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/35163#issuecomment-3152684973",
            "id": 3152684973,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35163",
            "node_id": "IC_kwDOAPphoM676iet",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3152684973/reactions"
            },
            "updated_at": "2025-08-04T22:54:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3152684973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The steps to reproduce don't even use LSP omnifunc.\n\nBut doesn't Nvim auto set omnifunc to LSP one if an LSP with completion support is attached?",
            "created_at": "2025-08-05T04:58:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/35163#issuecomment-3153294552",
            "id": 3153294552,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35163",
            "node_id": "IC_kwDOAPphoM6783TY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3153294552/reactions"
            },
            "updated_at": "2025-08-05T04:58:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3153294552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, but the steps to reproduce do not configure any LSP server.",
            "created_at": "2025-08-05T05:21:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/35163#issuecomment-3153333520",
            "id": 3153333520,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35163",
            "node_id": "IC_kwDOAPphoM679A0Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3153333520/reactions"
            },
            "updated_at": "2025-08-05T05:21:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3153333520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@zeertzjq \n\nhttps://github.com/user-attachments/assets/def9a0ef-171c-4449-9e06-370d64ce101b\n\nNotice how when I change the window size, the statusline is not redrawn.\n\n> Yes, but the steps to reproduce do not configure any LSP server.\n\nHmm, I'm not sure. Does `nvim --clean` still look at `lsp/server.lua` when enabling a server? You can see a diagnostic, so it's running in the video 🤔 Here's my conf for pyright:\n\n```lua\nreturn {\n  cmd = { 'pyright-langserver', '--stdio' },\n  root_markers = { 'requirements.txt' },\n  filetypes = { 'python' },\n  settings = {\n    pyright = {\n      disableOrganizeImports = true,\n    },\n    python = {\n      analysis = {\n        ignore = { '*' }\n      }\n    }\n  }\n}\n```",
            "created_at": "2025-08-05T07:42:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/35163#issuecomment-3153899566",
            "id": 3153899566,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35163",
            "node_id": "IC_kwDOAPphoM67_LAu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3153899566/reactions"
            },
            "updated_at": "2025-08-05T08:38:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3153899566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/30779172?v=4",
                "events_url": "https://api.github.com/users/Dook97/events{/privacy}",
                "followers_url": "https://api.github.com/users/Dook97/followers",
                "following_url": "https://api.github.com/users/Dook97/following{/other_user}",
                "gists_url": "https://api.github.com/users/Dook97/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Dook97",
                "id": 30779172,
                "login": "Dook97",
                "node_id": "MDQ6VXNlcjMwNzc5MTcy",
                "organizations_url": "https://api.github.com/users/Dook97/orgs",
                "received_events_url": "https://api.github.com/users/Dook97/received_events",
                "repos_url": "https://api.github.com/users/Dook97/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Dook97/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Dook97/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Dook97",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`'autocomplete'` is not needed to reproduce this issue, as the same happens when triggering the completion manually with Ctrl-N. I think the same thing as https://github.com/neovim/neovim/issues/34416#issuecomment-2964701741 is happening here, but the `noselect` additionally causes a hang. Since tagfunc overriding the completion is unexpected, it's not clear how to deal with this. I'd recommend not combining `o` with `t` in `'complete'` when using both LSP omnifunc and LSP tagfunc.",
            "created_at": "2025-08-05T09:30:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/35163#issuecomment-3154297902",
            "id": 3154297902,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35163",
            "node_id": "IC_kwDOAPphoM68AsQu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3154297902/reactions"
            },
            "updated_at": "2025-08-05T09:37:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3154297902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35163/comments",
    "created_at": "2025-08-04T16:15:35Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35163/events",
    "html_url": "https://github.com/neovim/neovim/issues/35163",
    "id": 3290044280,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35163/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7EGhd4",
    "number": 35163,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35163/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35163/timeline",
    "title": "`complete^=o` with LSP omnifunc freezes nvim",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-08T14:40:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35163",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/30779172?v=4",
        "events_url": "https://api.github.com/users/Dook97/events{/privacy}",
        "followers_url": "https://api.github.com/users/Dook97/followers",
        "following_url": "https://api.github.com/users/Dook97/following{/other_user}",
        "gists_url": "https://api.github.com/users/Dook97/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Dook97",
        "id": 30779172,
        "login": "Dook97",
        "node_id": "MDQ6VXNlcjMwNzc5MTcy",
        "organizations_url": "https://api.github.com/users/Dook97/orgs",
        "received_events_url": "https://api.github.com/users/Dook97/received_events",
        "repos_url": "https://api.github.com/users/Dook97/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Dook97/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Dook97/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Dook97",
        "user_view_type": "public"
    }
}