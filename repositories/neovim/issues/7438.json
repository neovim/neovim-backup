{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I would like to request a vimscript function or api function that should negate the effect of the `--headless` command line switch. Lets call it `nvim_launch_builtin_tui()` for now. I imagine something like this:\r\n```vim\r\nif My_condition()\r\n  call nvim_launch_builtin_tui()\r\n  \" now it looks as if we did start nvim without --headless\r\nelse\r\n  \" this text will go directly to stdout\r\n  echo \"running headless\"\r\nendif'\r\n```\r\nand then one would do `nvim --headless -S above-file.vim`. Depending on the user function `My_condition` one would effectively end up in a \"normal\" TUI nvim instance or in a headless nvim.\r\n\r\nIf I can express the logic of the `My_condition()` vimscript function in the `my_condition` shell command/function I can currently do something similar with this shell script:\r\n```sh\r\nif my_condition; then\r\n  # this now *is* a nvim without --headless\r\n  nvim\r\nelse\r\n  # this text will go directly to stdout\r\n  nvim --headless --cmd 'echo \"running headless\"'\r\nfi\r\n```\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "What's the use case? \r\n\r\nWe should at least provide a way to connect the TUI to another nvim instance. ",
            "created_at": "2017-10-24T18:58:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/7438#issuecomment-339095725",
            "id": 339095725,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7438",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTA5NTcyNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/339095725/reactions"
            },
            "updated_at": "2017-10-24T18:58:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/339095725",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "*My* use case at least would be to simplify the implementation of https://github.com/lucc/nvimpager. I have something like the \"my_condition\" stuff above but the shell version is much more complicated and inacurate than what I assume the vimscript version would be.\r\n\r\nCurrently I have kind of this control flow in the shell script:\r\n1. make a guess which arguments are files and which are command line switches for nvim\r\n1. check if we should read from stdin, if so, save stdin to a temp file.\r\n1. guess if all files combined will fit on the screen (just count lines, don't consider wrapping or conceal)\r\n1. depending on the above start `nvim` in my \"pager mode\" or `nvim --headless` in my \"cat mode\"\r\n\r\nWith a `nvim_launch_builtin_tui()` function I guess I could implement this in vimscript:\r\n1. (still in the shell) start `nvim --headless` with all options and file arguments given by the user\r\n1. decide if we should read stdin\r\n1. count file arguments and their size (should be more accurate here)\r\n1. depending on the above call `nvim_launch_builtin_tui()` to go to \"pager mode\" or continue in \"cat mode\"\r\n\r\n\r\nAbout your additional remark:\r\n> We should at least provide a way to connect the TUI to another nvim instance.\r\n\r\nDo you mean one could start a headless nvim in the background (maybe even a systemd unit) and then connect a TUI to it from any xterm window? That sounds like a very nice use case similar to `emacsclient -ct`, which I consider a very interesting (although unrelated to this PR) use case.",
            "created_at": "2017-10-24T21:33:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/7438#issuecomment-339139203",
            "id": 339139203,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7438",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTEzOTIwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/339139203/reactions"
            },
            "updated_at": "2017-10-24T21:33:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/339139203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1104419?v=4",
                "events_url": "https://api.github.com/users/lucc/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucc/followers",
                "following_url": "https://api.github.com/users/lucc/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucc",
                "id": 1104419,
                "login": "lucc",
                "node_id": "MDQ6VXNlcjExMDQ0MTk=",
                "organizations_url": "https://api.github.com/users/lucc/orgs",
                "received_events_url": "https://api.github.com/users/lucc/received_events",
                "repos_url": "https://api.github.com/users/lucc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do you mean one could start a headless nvim in the background (maybe even a systemd unit) and then connect a TUI to it from any xterm window?\r\n\r\nYes.  (**Update:** Proposed as a [GSoC project](https://github.com/neovim/neovim/wiki/GSoC-2018-Ideas#tui-terminal-ui-remote-attachment))",
            "created_at": "2017-10-24T23:19:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/7438#issuecomment-339165278",
            "id": 339165278,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7438",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTE2NTI3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/339165278/reactions"
            },
            "updated_at": "2018-02-11T22:33:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/339165278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The original request here is addressed by https://github.com/neovim/neovim/pull/8246.",
            "created_at": "2018-05-09T23:20:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/7438#issuecomment-387903722",
            "id": 387903722,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7438",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzkwMzcyMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/387903722/reactions"
            },
            "updated_at": "2018-05-09T23:20:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/387903722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/7438/comments",
    "created_at": "2017-10-24T07:36:11Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/7438/events",
    "html_url": "https://github.com/neovim/neovim/issues/7438",
    "id": 267927231,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol, externalized UI",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "remote UI, --remote commands, p2p / peer-to-peer",
            "id": 2269137131,
            "name": "remote",
            "node_id": "MDU6TGFiZWwyMjY5MTM3MTMx",
            "url": "https://api.github.com/repos/neovim/neovim/labels/remote"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/7438/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUyNjc5MjcyMzE=",
    "number": 7438,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/7438/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/7438/timeline",
    "title": "dynamic --headless, nvim_ui_builtin()",
    "updated_at": "2025-01-17T16:02:48Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/7438",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1104419?v=4",
        "events_url": "https://api.github.com/users/lucc/events{/privacy}",
        "followers_url": "https://api.github.com/users/lucc/followers",
        "following_url": "https://api.github.com/users/lucc/following{/other_user}",
        "gists_url": "https://api.github.com/users/lucc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lucc",
        "id": 1104419,
        "login": "lucc",
        "node_id": "MDQ6VXNlcjExMDQ0MTk=",
        "organizations_url": "https://api.github.com/users/lucc/orgs",
        "received_events_url": "https://api.github.com/users/lucc/received_events",
        "repos_url": "https://api.github.com/users/lucc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lucc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lucc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lucc",
        "user_view_type": "public"
    }
}