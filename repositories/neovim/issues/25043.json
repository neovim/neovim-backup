{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nUsing `vim.loop.walk` in any way results in nvim crashing with a segmentation fault (same for `vim.uv.walk`).\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n$ env -i nvim --clean -es +'lua vim.loop.walk(function() print(\"ohai\") end)'\r\nvim: src/loop.c:85: luv_walk_cb: Assertion `data && data->ref < 0x1000000' failed.\r\nAborted (core dumped)\r\n```\r\n\r\nI got that particular message from v0.4.4. Newer versions crash silently (seems worse, to me).\r\n\r\n### Expected behavior\r\n\r\nPrint `ohai` a bunch of times.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-1046+g3afbf4745, NVIM v0.9.1, NVIM v0.4.4\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nn/a\r\n\r\n### Operating system/version\r\n\r\n$ uname -a Linux penguin 5.15.117-19679-g172023e664f7 #1 SMP PREEMPT Fri Aug 18 18:07:47 PDT 2023 x86_64 GNU/Linux\r\n\r\n### Terminal name/version\r\n\r\nhterm\r\n\r\n### $TERM environment variable\r\n\r\nn/a\r\n\r\n### Installation\r\n\r\nsource, brew, debian (respectively)",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "All versions of neovim (that I have) have a `vim.loop.walk` but some newer versions also have a `vim.uv.walk`. The behavior is identical though regardless of which alias is used.",
            "created_at": "2023-09-07T22:03:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/25043#issuecomment-1710822295",
            "id": 1710822295,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25043",
            "node_id": "IC_kwDOAPphoM5l-ROX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1710822295/reactions"
            },
            "updated_at": "2023-09-07T22:03:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1710822295",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/640328?v=4",
                "events_url": "https://api.github.com/users/bukzor/events{/privacy}",
                "followers_url": "https://api.github.com/users/bukzor/followers",
                "following_url": "https://api.github.com/users/bukzor/following{/other_user}",
                "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bukzor",
                "id": 640328,
                "login": "bukzor",
                "node_id": "MDQ6VXNlcjY0MDMyOA==",
                "organizations_url": "https://api.github.com/users/bukzor/orgs",
                "received_events_url": "https://api.github.com/users/bukzor/received_events",
                "repos_url": "https://api.github.com/users/bukzor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bukzor",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Libluvs wrapper around uv_walk assumes that libluv (the lua bindings) make exclusive use of the uv event loop. This leads to a crash in nvim as libluv then cannot understand handles that is owned by nvim core, not libluv.\r\n\r\nThis could be fixed in libluv at the price of making the implementation more complicated. Alternatively, we could change `vim.uv.walk` to just immediately throw an error.\r\n\r\nSo I am curious what the usecase of using `uv.walk()` is here. There might be another way to solve the underlying problem. ",
            "created_at": "2023-09-07T22:30:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/25043#issuecomment-1710842449",
            "id": 1710842449,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25043",
            "node_id": "IC_kwDOAPphoM5l-WJR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1710842449/reactions"
            },
            "updated_at": "2023-09-07T22:30:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1710842449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "My intent was to iterate through the existing timers and methodically delete them, so as to find which of my plugins is periodically running `chdir($HOME)`. I already did this exercise with the `autocmd`/`augroup`s but the behavior persisted, and eventually I came to realize the behavior comes from a uv timer. This API looked ideal for that purpose.\r\n\r\nWhile tinkering with this idea I had imagined / hoped for a `:Telescope event-loop` extension which would let us browse and control timers the way it already does autocmds -- from an end-user perspective they're nearly identical things. `vim.uv.walk` would be critical for enabling such a thing.",
            "created_at": "2023-09-08T15:22:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/25043#issuecomment-1711842335",
            "id": 1711842335,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25043",
            "node_id": "IC_kwDOAPphoM5mCKQf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1711842335/reactions"
            },
            "updated_at": "2023-09-08T15:22:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1711842335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/640328?v=4",
                "events_url": "https://api.github.com/users/bukzor/events{/privacy}",
                "followers_url": "https://api.github.com/users/bukzor/followers",
                "following_url": "https://api.github.com/users/bukzor/following{/other_user}",
                "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bukzor",
                "id": 640328,
                "login": "bukzor",
                "node_id": "MDQ6VXNlcjY0MDMyOA==",
                "organizations_url": "https://api.github.com/users/bukzor/orgs",
                "received_events_url": "https://api.github.com/users/bukzor/received_events",
                "repos_url": "https://api.github.com/users/bukzor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bukzor",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Libluvs wrapper around uv_walk assumes that libluv (the lua bindings) make exclusive use of the uv event loop.\r\n\r\nWould you kindly point out the relevant code? The function I saw takes the event loop as the first argument, so I had expected a method (`vim.uv:walk(function...end)`).",
            "created_at": "2023-09-08T15:25:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/25043#issuecomment-1711845980",
            "id": 1711845980,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25043",
            "node_id": "IC_kwDOAPphoM5mCLJc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1711845980/reactions"
            },
            "updated_at": "2023-09-08T15:25:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1711845980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/640328?v=4",
                "events_url": "https://api.github.com/users/bukzor/events{/privacy}",
                "followers_url": "https://api.github.com/users/bukzor/followers",
                "following_url": "https://api.github.com/users/bukzor/following{/other_user}",
                "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bukzor",
                "id": 640328,
                "login": "bukzor",
                "node_id": "MDQ6VXNlcjY0MDMyOA==",
                "organizations_url": "https://api.github.com/users/bukzor/orgs",
                "received_events_url": "https://api.github.com/users/bukzor/received_events",
                "repos_url": "https://api.github.com/users/bukzor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bukzor",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Would you kindly point out the relevant code? The function I saw takes the event loop as the first argument, so I had expected a method (vim.uv:walk(function...end)).\r\n\r\nIt's luv_walk in src/loop.c. libluv keeps track of one uv event loop per lua thread. Indepdendent luv event loops are possible, but they must then run in a separate thread ( `vim.uv.new_thread(...)`).\r\n\r\n> While tinkering with this idea I had imagined / hoped for a :Telescope event-loop extension which would let us browse and control timers the way it already does autocmds -- from an end-user perspective they're nearly identical things. vim.uv.walk would be critical for enabling such a thing.\r\n\r\nDebugging the event loop is a relevant usecase. But it is going to require some cooperation from nvim core. Such an interface would ideally show and identify uv handles regardless if they come from libluv or nvim core (often wrappers for jobs and timers for vimscript and also RPC channels). \r\n\r\n",
            "created_at": "2023-09-08T17:11:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/25043#issuecomment-1711987073",
            "id": 1711987073,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25043",
            "node_id": "IC_kwDOAPphoM5mCtmB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1711987073/reactions"
            },
            "updated_at": "2023-09-08T17:11:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1711987073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is the nvim-core loop exposed to lua at all, currently?\r\n\r\nThe convention of one-loop-per-lua seems baked into luv pretty deep... are you picturing a major revision to luv or would you not use it for this?",
            "created_at": "2023-09-08T19:54:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/25043#issuecomment-1712155981",
            "id": 1712155981,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25043",
            "node_id": "IC_kwDOAPphoM5mDW1N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1712155981/reactions"
            },
            "updated_at": "2023-09-08T19:54:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1712155981",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/640328?v=4",
                "events_url": "https://api.github.com/users/bukzor/events{/privacy}",
                "followers_url": "https://api.github.com/users/bukzor/followers",
                "following_url": "https://api.github.com/users/bukzor/following{/other_user}",
                "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bukzor",
                "id": 640328,
                "login": "bukzor",
                "node_id": "MDQ6VXNlcjY0MDMyOA==",
                "organizations_url": "https://api.github.com/users/bukzor/orgs",
                "received_events_url": "https://api.github.com/users/bukzor/received_events",
                "repos_url": "https://api.github.com/users/bukzor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bukzor",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The convention of one-loop-per-lua seems baked into luv pretty deep... are you picturing a major revision to luv or would you not use it for this?\r\n\r\nNo not at all. I'm just saying implementing the _debugging_ functionality you want is going to be a bit more involved than just an isolated change to just `vim.uv.walk` . It is definitely something worth doing and a welcome contribution, I just want to be clear upfront with the scope of the effort needed.",
            "created_at": "2023-09-08T20:51:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/25043#issuecomment-1712209280",
            "id": 1712209280,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25043",
            "node_id": "IC_kwDOAPphoM5mDj2A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1712209280/reactions"
            },
            "updated_at": "2023-09-08T20:51:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1712209280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "On Fri, Sep 8, 2023, 3:52 PM bfredl ***@***.***> wrote:\r\n\r\n> The convention of one-loop-per-lua seems baked into luv pretty deep... are\r\n> you picturing a major revision to luv or would you not use it for this?\r\n>\r\n> No not at all. I'm just saying implementing the *debugging* functionality\r\n> you want is going to be a bit more involved than just an isolated change to\r\n> just vim.uv.walk . It is definitely something worth doing and a welcome\r\n> contribution, I just want to be clear upfront with the scope of the effort\r\n> needed.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/neovim/neovim/issues/25043#issuecomment-1712209280>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AAE4KSEQVMVPRYGCPIO5O3LXZOAPTANCNFSM6AAAAAA4POFTEI>\r\n> .\r\n> You are receiving this because you authored the thread.\r\n>\r\n\r\nThanks. My question was about the nature of such a hypothetical\r\ncontribution. Could you outline what you'd expect, in broad strokes?\r\n\r\nTo my understanding, this would need either:\r\n\r\n  A. a major revision to luv to allow it to represent/interact with more\r\nthan one loop per lua vm\r\n  B. this bit of neovim API wouldn't use luv, and reach more directly to\r\nlibuv\r\n  C. a third option that you can think of but I can't\r\n\r\nMy money is on option C :)\r\n\r\n> Message ID: ***@***.***>\r\n>\r\n",
            "created_at": "2023-09-11T14:48:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/25043#issuecomment-1714043570",
            "id": 1714043570,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25043",
            "node_id": "IC_kwDOAPphoM5mKjqy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1714043570/reactions"
            },
            "updated_at": "2023-09-11T14:48:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1714043570",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/640328?v=4",
                "events_url": "https://api.github.com/users/bukzor/events{/privacy}",
                "followers_url": "https://api.github.com/users/bukzor/followers",
                "following_url": "https://api.github.com/users/bukzor/following{/other_user}",
                "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bukzor",
                "id": 640328,
                "login": "bukzor",
                "node_id": "MDQ6VXNlcjY0MDMyOA==",
                "organizations_url": "https://api.github.com/users/bukzor/orgs",
                "received_events_url": "https://api.github.com/users/bukzor/received_events",
                "repos_url": "https://api.github.com/users/bukzor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bukzor",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25043/comments",
    "created_at": "2023-09-07T20:51:40Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25043/events",
    "html_url": "https://github.com/neovim/neovim/issues/25043",
    "id": 1886549227,
    "labels": [
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 520282574,
            "name": "event-loop",
            "node_id": "MDU6TGFiZWw1MjAyODI1NzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/event-loop"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25043/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5wcnTr",
    "number": 25043,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25043/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25043/timeline",
    "title": "Crash: vim.uv.walk",
    "updated_at": "2025-01-19T11:43:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25043",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/640328?v=4",
        "events_url": "https://api.github.com/users/bukzor/events{/privacy}",
        "followers_url": "https://api.github.com/users/bukzor/followers",
        "following_url": "https://api.github.com/users/bukzor/following{/other_user}",
        "gists_url": "https://api.github.com/users/bukzor/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bukzor",
        "id": 640328,
        "login": "bukzor",
        "node_id": "MDQ6VXNlcjY0MDMyOA==",
        "organizations_url": "https://api.github.com/users/bukzor/orgs",
        "received_events_url": "https://api.github.com/users/bukzor/received_events",
        "repos_url": "https://api.github.com/users/bukzor/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bukzor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bukzor/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bukzor",
        "user_view_type": "public"
    }
}