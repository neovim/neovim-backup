{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "\n### Requested feature\n\nTL;DR: I am looking to improve this:\n\n> Most of the time, this is a `.git` folder, but each server defines the root config in the lua file.\n\nThis is a good 80% solution.  In the current SCM monoculture, it may even be a 95% solution.  But it has several limitations:\n\n* It assumes you're using Git as your SCM.\n* It assumes you're using an SCM at all.\n* It assumes the workspace root is the same as the repository root.\n\nThe problem is that if you bump into one of these situations, you're screwed.  Since the `.git` detection is *inside* each LSP config, you need to assess each LSP you use on a case-by-case basis, and more often than not will need to yank out its internal `root_dir` and manually tweak it.\n\nMy proposed solution would be something like the following:\n\n* Add a new Boolean config key which specifies whether a generic fallback is desired.\n* Alter `launch()` to respect this config key and call `find_git_ancestor()` if no other root was found.  This could later be tweaked (e.g., to add a non-SCM based default) or made configurable by some mechanism.\n* Change all existing adapters using either `find_git_ancestor()` or `root_pattern(..., '.git')` to instead set this Boolean key.\n\nThe bulk of the work is in that last step, but that's easy enough to divide and conquer, and it can be done incrementally.  As for the first part, I could certainly take a stab at it if there's interest.  I imagine someone more familiar with the project than I could make quick work of it.\n\n### Other clients which have this feature\n\n_No response_",
    "closed_at": "2025-05-04T20:46:31Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The problem is that if you bump into one of these situations, you're screwed. Since the .git detection is inside each LSP config, you need to assess each LSP you use on a case-by-case basis, and more often than not will need to yank out its internal root_dir and manually tweak it.\r\n\r\nThat's true, you can compose root directory functions with the original default, but it's a bit verbose:\r\n```\r\nrequire('lspconfig').pyright.setup {\r\nroot_dir = function(fname) \r\n    return require('lspconfig.server_configurations.pyright').default_config.root_dir(fname) or my_fallback_func(fname)\r\nend\r\n}\r\n```\r\n\r\n```\r\nMy proposed solution would be something like the following:\r\n\r\n* Add a new Boolean config key which specifies whether a generic fallback is desired.\r\n* Alter launch() to respect this config key and call find_git_ancestor() if no other root was found. This could later be tweaked (e.g., to add a non-SCM based default) or made configurable by some mechanism.\r\n* Change all existing adapters using either find_git_ancestor() or root_pattern(..., '.git') to instead set this Boolean key.\r\n```\r\n\r\nAlternatively, we could add a generic fallback function that we manually add to the default configuration root directory in place of what is usually find_git_ancestors, which would be user overridable. That way, if users want to override the generic fallback behavior, they can, and if they want to override it for a specific server, they just override that servers root pattern as usual.\r\n\r\nI'm happy to make the change when we decide on the implementation, I'm open to your solution but I just want to brainstorm the alternatives first, as I try to keep the number of configurations we have as small as possible.",
            "created_at": "2022-04-10T00:36:13Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1827#issuecomment-1094148933",
            "id": 1094148933,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827",
            "node_id": "IC_kwDODTQC185BN2NF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1094148933/reactions"
            },
            "updated_at": "2022-04-10T00:36:13Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1094148933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > The problem is that if you bump into one of these situations, you're screwed. Since the .git detection is inside each LSP config, you need to assess each LSP you use on a case-by-case basis, and more often than not will need to yank out its internal root_dir and manually tweak it.\r\n> \r\n> That's true, you can compose root directory functions with the original default, but it's a bit verbose:\r\n> \r\n> ```\r\n> require('lspconfig').pyright.setup {\r\n> root_dir = function(fname) \r\n>     return require('lspconfig.server_configurations.pyright').default_config.root_dir(fname) or my_fallback_func(fname)\r\n> end\r\n> }\r\n> ```\r\n\r\nCovers the most common cases, but isn't a 100% solution for things like \"I don't want `.git` detection ever because it always latches onto a submodule root rather than the real project root\".\r\n\r\n> Alternatively, we could add a generic fallback function that we manually add to the default configuration root directory in place of what is usually find_git_ancestors, which would be user overridable. That way, if users want to override the generic fallback behavior, they can, and if they want to override it for a specific server, they just override that servers root pattern as usual.\r\n> \r\n> I'm happy to make the change when we decide on the implementation, I'm open to your solution but I just want to brainstorm the alternatives first, as I try to keep the number of configurations we have as small as possible.\r\n\r\nMy tastes lean declarative. In fact I almost took it a bit further and proposed `root_markers = {'package.json', 'jsconfig.json'}` which would be a big win for composability, but that's a bigger change. And on those grounds, I think yours wins because it's the smallest of all. We can shelve my idea for now and bring it back if that extra level of abstraction ends up being desirable.",
            "created_at": "2022-04-10T02:11:38Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1827#issuecomment-1094159992",
            "id": 1094159992,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827",
            "node_id": "IC_kwDODTQC185BN454",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1094159992/reactions"
            },
            "updated_at": "2022-04-10T02:11:38Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1094159992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378?v=4",
                "events_url": "https://api.github.com/users/tpope/events{/privacy}",
                "followers_url": "https://api.github.com/users/tpope/followers",
                "following_url": "https://api.github.com/users/tpope/following{/other_user}",
                "gists_url": "https://api.github.com/users/tpope/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tpope",
                "id": 378,
                "login": "tpope",
                "node_id": "MDQ6VXNlcjM3OA==",
                "organizations_url": "https://api.github.com/users/tpope/orgs",
                "received_events_url": "https://api.github.com/users/tpope/received_events",
                "repos_url": "https://api.github.com/users/tpope/repos",
                "site_admin": true,
                "starred_url": "https://api.github.com/users/tpope/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tpope/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tpope",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Covers the most common cases, but isn't a 100% solution for things like \"I don't want .git detection ever because it always latches onto a submodule root rather than the real project root\".\r\n\r\nOh yeah totally, nested submodules/crates/whatever language specific thing are a huge pain. For rust we end up having to shell out to cargo to get it to return the correct root.\r\n\r\n> My tastes lean declarative. In fact I almost took it a bit further and proposed root_markers = {'package.json', 'jsconfig.json'} which would be a big win for composability, but that's a bigger change. And on those grounds, I think yours wins because it's the smallest of all.\r\n\r\nI definitely agree when we've converged to an option that is common/requested, the functional apis accommodate a wide variety of user preferences. I think the issue historically with root directories there are some issues where the fallback needs to have additional logic for submodules/such that have made that difficult, but I'm happy to implement your suggestion and see which fits best.\r\n\r\nAlso, if you ever want to chat about any of these design things more synchronously we have less high volume matrix rooms like https://matrix.to/#/#neovim-dev:matrix.org, really glad to be getting feedback from an expert :)",
            "created_at": "2022-04-10T02:38:29Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1827#issuecomment-1094162800",
            "id": 1094162800,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827",
            "node_id": "IC_kwDODTQC185BN5lw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1094162800/reactions"
            },
            "updated_at": "2022-04-10T02:38:29Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1094162800",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I definitely agree when we've converged to an option that is common/requested, the functional apis accommodate a wide variety of user preferences. I think the issue historically with root directories there are some issues where the fallback needs to have additional logic for submodules/such that have made that difficult, but I'm happy to implement your suggestion and see which fits best.\r\n\r\nOh I have no doubt you'll always need a Turing-complete configuration option as an escape hatch. There would still be benefits to saving it for the exceptions rather than the norm. Heck, you could probably use it to generate that `docs.default_config.root_dir` declaration rather than repeating yourself; that alone would make it worth it.\r\n\r\nBut all of this is an aside. To reiterate, I think your proposed \"generic fallback function\" is a safe step in the right direction and wholeheartedly endorse it.\r\n\r\n> Also, if you ever want to chat about any of these design things more synchronously we have less high volume matrix rooms like https://matrix.to/#/#neovim-dev:matrix.org, really glad to be getting feedback from an expert :)\r\n\r\nMay take you up on that, thanks.",
            "created_at": "2022-04-10T03:09:54Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1827#issuecomment-1094165743",
            "id": 1094165743,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827",
            "node_id": "IC_kwDODTQC185BN6Tv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1094165743/reactions"
            },
            "updated_at": "2022-04-10T03:09:54Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1094165743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378?v=4",
                "events_url": "https://api.github.com/users/tpope/events{/privacy}",
                "followers_url": "https://api.github.com/users/tpope/followers",
                "following_url": "https://api.github.com/users/tpope/following{/other_user}",
                "gists_url": "https://api.github.com/users/tpope/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tpope",
                "id": 378,
                "login": "tpope",
                "node_id": "MDQ6VXNlcjM3OA==",
                "organizations_url": "https://api.github.com/users/tpope/orgs",
                "received_events_url": "https://api.github.com/users/tpope/received_events",
                "repos_url": "https://api.github.com/users/tpope/repos",
                "site_admin": true,
                "starred_url": "https://api.github.com/users/tpope/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tpope/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tpope",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> But all of this is an aside. To reiterate, I think your proposed \"generic fallback function\" is a safe step in the right direction and wholeheartedly endorse it.\r\n\r\nOk! Sounds good, we will start with that. I haven't had as much neovim time lately but I should be able to implement it this week.\r\n\r\n> Heck, you could probably use it to generate that docs.default_config.root_dir declaration rather than repeating yourself; that alone would make it worth it.\r\n\r\nHah, it's funny you say that because I did have a solution that used the lua `debug` module to pull the text and insert that in docgen, but there were some unanticipated quirks. I want to revisit out docs pipeline at some point.",
            "created_at": "2022-04-10T03:59:54Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1827#issuecomment-1094170629",
            "id": 1094170629,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827",
            "node_id": "IC_kwDODTQC185BN7gF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1094170629/reactions"
            },
            "updated_at": "2022-04-10T04:00:27Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1094170629",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "See https://github.com/neovim/neovim/pull/31031 for progress related to this.",
            "created_at": "2024-12-03T17:01:28Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1827#issuecomment-2515111921",
            "id": 2515111921,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827",
            "node_id": "IC_kwDODTQC186V6Y_x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2515111921/reactions"
            },
            "updated_at": "2024-12-03T17:01:28Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2515111921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "## Resolution\n\n> In fact I almost took it a bit further and proposed `root_markers = {'package.json', 'jsconfig.json'}` which would be a big win for composability,\n\n- `vim.lsp.config` in Nvim 0.11 supports `root_markers`, and Nvim 0.11.2 will allow control of precedence (\"breadth first\" vs \"depth first\"):\n    - https://github.com/neovim/neovim/pull/33485\n- `vim.lsp.config` in Nvim 0.11 also supports `root_dir()` as a callback when more control is needed (then `root_markers` is ignored).\n\n## Future\n\nWe are also considering introducing buffer-local CWD, would appreciate your feedback on that @tpope:\n\n- https://github.com/neovim/neovim/pull/33320",
            "created_at": "2025-05-04T20:46:31Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1827#issuecomment-2849410163",
            "id": 2849410163,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827",
            "node_id": "IC_kwDODTQC186p1oxz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2849410163/reactions"
            },
            "updated_at": "2025-05-04T20:47:21Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2849410163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827/comments",
    "created_at": "2022-04-09T21:48:57Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1827",
    "id": 1198781285,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "New feature or request",
            "id": 1674892767,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzY3",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC185Hc_Nl",
    "number": 1827,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 6,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 6,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827/timeline",
    "title": "Provide abstraction for generic default root dir",
    "type": null,
    "updated_at": "2025-05-04T20:47:21Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1827",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/378?v=4",
        "events_url": "https://api.github.com/users/tpope/events{/privacy}",
        "followers_url": "https://api.github.com/users/tpope/followers",
        "following_url": "https://api.github.com/users/tpope/following{/other_user}",
        "gists_url": "https://api.github.com/users/tpope/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tpope",
        "id": 378,
        "login": "tpope",
        "node_id": "MDQ6VXNlcjM3OA==",
        "organizations_url": "https://api.github.com/users/tpope/orgs",
        "received_events_url": "https://api.github.com/users/tpope/received_events",
        "repos_url": "https://api.github.com/users/tpope/repos",
        "site_admin": true,
        "starred_url": "https://api.github.com/users/tpope/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tpope/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tpope",
        "user_view_type": "public"
    }
}