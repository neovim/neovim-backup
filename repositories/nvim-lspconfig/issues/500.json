{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Extended infos\r\n\r\n- `nvim --version`: NVIM v0.5.0-dev+975-ga58c5509d\r\n- nvim-lsp version(commit hash): 23a944c\r\n- `:checkhealth` result:\r\n```\r\n\r\nhealth#lspconfig#check\r\n========================================================================\r\n## Checking language server protocol configuration\r\n  - INFO: pyls: configuration checked.\r\n  - INFO: rust_analyzer: configuration checked.\r\n  - INFO: texlab: configuration checked.\r\n\r\nhealth#completion_nvim#check\r\n========================================================================\r\n## general\r\n  - OK: neovim version is supported\r\n\r\n## completion source\r\n  - OK: all completion source are valid\r\n\r\n## snippet source\r\n  - INFO: You haven't setup any snippet source.\r\n\r\nhealth#vimtex#check\r\n========================================================================\r\n## vimtex\r\n  - OK: Vim version should have full support!\r\n  - OK: General viewer should work properly!\r\n  - WARNING: Compiler callbacks will not work!\r\n    - ADVICE:\r\n      - `neovim-remote` / `nvr` is required for callbacks to work with neovim\r\n      - Please also set |g:vimtex_compiler_progname| = 'nvr'\r\n      - For more info, see :help |vimtex-faq-neovim|\r\n\r\nhealth#nvim#check\r\n========================================================================\r\n## Configuration\r\n  - OK: no issues found\r\n\r\n## Performance\r\n  - OK: Build type: RelWithDebInfo\r\n\r\n## Remote Plugins\r\n  - OK: Up to date\r\n\r\n## terminal\r\n  - INFO: key_backspace (kbs) terminfo entry: key_backspace=^H\r\n  - INFO: key_dc (kdch1) terminfo entry: key_dc=\\E[3~\r\n  - INFO: $VTE_VERSION='5602'\r\n  - INFO: $COLORTERM='truecolor'\r\n\r\nhealth#provider#check\r\n========================================================================\r\n## Clipboard (optional)\r\n  - OK: Clipboard tool found: xclip\r\n\r\n## Python 2 provider (optional)\r\n  - WARNING: No Python executable found that can `import neovim`. Using the first available executable for diagnostics.\r\n  - ERROR: Python provider error:\r\n    - ADVICE:\r\n      - provider/pythonx: Could not load Python 2:\r\n          python2 not found in search path or not executable.\r\n          python2.7 not found in search path or not executable.\r\n          python2.6 not found in search path or not executable.\r\n          /home/daniel/.cache/pypoetry/virtualenvs/craes-pyclient-KENhYm7S-py3.9/bin/python is Python 3.9 and cannot provide Python 2.\r\n  - INFO: Executable: Not found\r\n\r\n## Python 3 provider (optional)\r\n  - INFO: Using: g:python3_host_prog = \"/usr/bin/python\"\r\n  - INFO: Executable: /usr/bin/python\r\n  - INFO: Python version: 3.9.1\r\n  - INFO: pynvim version: 0.4.2\r\n  - OK: Latest pynvim is installed.\r\n\r\n## Python virtualenv\r\n  - INFO: $VIRTUAL_ENV is set to: /home/daniel/.cache/pypoetry/virtualenvs/craes-pyclient-KENhYm7S-py3.9\r\n  - INFO: Python version: 3.9.1\r\n  - OK: $VIRTUAL_ENV provides :!python.\r\n\r\n## Ruby provider (optional)\r\n  - WARNING: `ruby` and `gem` must be in $PATH.\r\n    - ADVICE:\r\n      - Install Ruby and verify that `ruby` and `gem` commands work.\r\n\r\n## Node.js provider (optional)\r\n  - INFO: Node.js: v15.5.0\r\n  - WARNING: Missing \"neovim\" npm (or yarn) package.\r\n    - ADVICE:\r\n      - Run in shell: npm install -g neovim\r\n      - Run in shell (if you use yarn): yarn global add neovim\r\n\r\n## Perl provider (optional)\r\n  - ERROR: perl provider error:\r\n    - ADVICE:\r\n      - \"Neovim::Ext\" cpan module is not installed\r\n```\r\n- What language server(If the problem is related to a specific language server): `pyls`\r\n- Operating system/version: Arch Linux 5.9.14-arch1-1\r\n- Terminal name/version: termite\r\n- `$TERM`: `xterm-256color`\r\n\r\n### How to reproduce the problem from neovim startup\r\nCreate an empty `poetry` project, add one arbitrary package, start nvim with a python file and import the package.\r\n\r\n\r\n### Actual behaviour\r\n`pyls` does not recognize the package and shows error lints.\r\n\r\n### Expected behaviour\r\n`pyls` should use the venv.\r\n\r\n---------------------------------\r\n\r\nI'm using the package `'petobens/poet-v'` to automatically manage my venv. Before I used `'w0rp/ale'` to manage my lints and LSPs. However, `pyls` seems to be loaded from my 'main' environment here.\r\n\r\nAs seen above, neovim seems to correctly detect my venv and in my `init.vim` I load `'petobens/poet-v'` at the very beginning. This was the trick for me to get the `ale` LSP to source the lsp from my venv instead of my main installation.\r\n\r\nIt seems like not with the lua config, this mechanic is broken. What can I do to resolve this?",
    "closed_at": "2020-12-30T05:43:38Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
        "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
        "followers_url": "https://api.github.com/users/mjlbach/followers",
        "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
        "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mjlbach",
        "id": 13316262,
        "login": "mjlbach",
        "node_id": "MDQ6VXNlcjEzMzE2MjYy",
        "organizations_url": "https://api.github.com/users/mjlbach/orgs",
        "received_events_url": "https://api.github.com/users/mjlbach/received_events",
        "repos_url": "https://api.github.com/users/mjlbach/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mjlbach",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is pyls installed in your virtual environment? In my experience pyls only provides completions when installed into the virtualenv that contains said package. Can you reproduce with pyright?",
            "created_at": "2020-12-29T22:07:41Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-752257293",
            "id": 752257293,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjI1NzI5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752257293/reactions"
            },
            "updated_at": "2020-12-29T22:07:41Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752257293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, I can reproduce the same:\r\n\r\n1) pyls is installed in both the venv and in main. If I manually activate the shell before I launch neovim, the 'correct' pyls is called.\r\n2) I see that the same happens with pyright.\r\n\r\nIs there a way to debug to check which python venv is actuve when the lua setup function is called?",
            "created_at": "2020-12-29T23:07:20Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-752271070",
            "id": 752271070,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjI3MTA3MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752271070/reactions"
            },
            "updated_at": "2020-12-29T23:07:20Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752271070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8844723?v=4",
                "events_url": "https://api.github.com/users/dbischof90/events{/privacy}",
                "followers_url": "https://api.github.com/users/dbischof90/followers",
                "following_url": "https://api.github.com/users/dbischof90/following{/other_user}",
                "gists_url": "https://api.github.com/users/dbischof90/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dbischof90",
                "id": 8844723,
                "login": "dbischof90",
                "node_id": "MDQ6VXNlcjg4NDQ3MjM=",
                "organizations_url": "https://api.github.com/users/dbischof90/orgs",
                "received_events_url": "https://api.github.com/users/dbischof90/received_events",
                "repos_url": "https://api.github.com/users/dbischof90/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dbischof90/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dbischof90/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dbischof90",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I believe the way it's working (or failing to work) is that neovim will launch the first pyls on your path, and probably whatever mechanism poet-v is using doesn't/can't override the search path that we're using when calling cmd. I haven't used poet-v, but I would recommend looking through their implementation to see what exactly they are updating. I can take a look at this, but it's going to be on the backburner for awhile.",
            "created_at": "2020-12-29T23:09:37Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-752271485",
            "id": 752271485,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjI3MTQ4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752271485/reactions"
            },
            "updated_at": "2020-12-29T23:09:37Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752271485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "That would be nice, I'm not sure how vim packages are loaded, `poet-v` seems to detect the necessary `$VIRTUAL_ENV` variable and sets that. However, I'm not sure when neovim executes this and whether that is loaded before or after executing the lua config. I know about `nvim -V` but I think I can't see the right order in there.",
            "created_at": "2020-12-29T23:23:04Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-752273972",
            "id": 752273972,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjI3Mzk3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752273972/reactions"
            },
            "updated_at": "2020-12-29T23:23:04Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752273972",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8844723?v=4",
                "events_url": "https://api.github.com/users/dbischof90/events{/privacy}",
                "followers_url": "https://api.github.com/users/dbischof90/followers",
                "following_url": "https://api.github.com/users/dbischof90/following{/other_user}",
                "gists_url": "https://api.github.com/users/dbischof90/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dbischof90",
                "id": 8844723,
                "login": "dbischof90",
                "node_id": "MDQ6VXNlcjg4NDQ3MjM=",
                "organizations_url": "https://api.github.com/users/dbischof90/orgs",
                "received_events_url": "https://api.github.com/users/dbischof90/received_events",
                "repos_url": "https://api.github.com/users/dbischof90/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dbischof90/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dbischof90/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dbischof90",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think the primary issue is that poet-v should override the cmd we pass for the default_config to launch the language server. I don't know how willing they are to add upstream functionality specific to different language client implementations though",
            "created_at": "2020-12-29T23:24:33Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-752274259",
            "id": 752274259,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjI3NDI1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752274259/reactions"
            },
            "updated_at": "2020-12-29T23:24:33Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752274259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I see that in the `pyls` lsp one can pass an executable. That could be wrapped with a bash script. Is that possible for the other LSPs too? Or is it at least possible to control at which point bespoken lua config is called such that the $VIRTUAL_ENV variable is already set?",
            "created_at": "2020-12-29T23:39:46Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-752277011",
            "id": 752277011,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjI3NzAxMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752277011/reactions"
            },
            "updated_at": "2020-12-29T23:41:29Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752277011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8844723?v=4",
                "events_url": "https://api.github.com/users/dbischof90/events{/privacy}",
                "followers_url": "https://api.github.com/users/dbischof90/followers",
                "following_url": "https://api.github.com/users/dbischof90/following{/other_user}",
                "gists_url": "https://api.github.com/users/dbischof90/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dbischof90",
                "id": 8844723,
                "login": "dbischof90",
                "node_id": "MDQ6VXNlcjg4NDQ3MjM=",
                "organizations_url": "https://api.github.com/users/dbischof90/orgs",
                "received_events_url": "https://api.github.com/users/dbischof90/received_events",
                "repos_url": "https://api.github.com/users/dbischof90/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dbischof90/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dbischof90/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dbischof90",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think the easier solution is to just set the local variables PYTHON_PATH, PATH, etc in the cmd",
            "created_at": "2020-12-29T23:41:12Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-752277339",
            "id": 752277339,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjI3NzMzOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752277339/reactions"
            },
            "updated_at": "2020-12-29T23:41:12Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752277339",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ok. Here is the issue.\r\n\r\n1. Make two virtualenvs:\r\n```bash\r\npython3 -m venv $HOME/.virtualenvs/test1\r\npython3 -m venv $HOME/.virtualenvs/test2\r\nsource $HOME/.virtualenvs/test1/bin/activate\r\npip install pillow\r\nsource $HOME/.virtualenvs/test2/bin/activate\r\npip install requests\r\n```\r\n2. Make a file `$HOME/test.sh` with the following contents\r\n```bash\r\nVIRTUAL_ENV=$HOME/.virtualenvs/test1 $HOME/.virtualenvs/test1/bin/pyls\r\n```\r\n3. Make it executable `chmod +x $HOME/test.sh`\r\n4. Configure pyls to use the test script\r\n```lua\r\nnvim_lsp.pyls.setup {\r\n  cmd = {\"$HOME/test.sh\"};\r\n  on_attach = on_attach;\r\n}\r\n```\r\n5. Try changing between 1 and 2 for both VIRTUAL_ENV and test#/bin/pyls while doing completions on the following file\r\n```python\r\nimport requests\r\nimport PIL\r\n\r\ndef main() {\r\n    requests.get()\r\n    PIL.Image()\r\n}\r\n```\r\n\r\nThe only things that matters is the VIRTUAL_ENV prefix to launching pyls. You can set this via cmd_env. The author of poet-v can add support if they choose. ",
            "created_at": "2020-12-30T04:56:23Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-752327577",
            "id": 752327577,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjMyNzU3Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752327577/reactions"
            },
            "updated_at": "2020-12-30T05:07:43Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752327577",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here is the documentation and an example\r\nhttps://github.com/neovim/neovim/blob/69fc6c2de011e6da556fedd3a058fecf47883b8e/runtime/lua/vim/lsp.lua#L383-L389\r\n\r\n```lua\r\nnvim_lsp.pyls.setup {\r\n  cmd = {\"pyls\"};\r\n  cmd_env = {VIRTUAL_ENV = \"$HOMEl/.virtualenvs/test1\"};\r\n}\r\n```\r\n\r\nI'm going to close since this is an issue with the plugin, and not an issue in the nvim-lspconfig (we do in fact expose the necessary functionality)",
            "created_at": "2020-12-30T05:02:09Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-752328384",
            "id": 752328384,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MjMyODM4NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752328384/reactions"
            },
            "updated_at": "2020-12-30T05:43:36Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/752328384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mjlbach Is there any way to dynamically set that `cmd_env` in your example above based on the root dir resolved for the current file?  I have a monorepo with multiple python apps, each with their own virtualenv dir and often flip between them in the same nvim session.",
            "created_at": "2021-05-29T20:23:53Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-850893685",
            "id": 850893685,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDg5MzY4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/850893685/reactions"
            },
            "updated_at": "2021-05-29T20:23:53Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/850893685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/614344?v=4",
                "events_url": "https://api.github.com/users/keitwb/events{/privacy}",
                "followers_url": "https://api.github.com/users/keitwb/followers",
                "following_url": "https://api.github.com/users/keitwb/following{/other_user}",
                "gists_url": "https://api.github.com/users/keitwb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/keitwb",
                "id": 614344,
                "login": "keitwb",
                "node_id": "MDQ6VXNlcjYxNDM0NA==",
                "organizations_url": "https://api.github.com/users/keitwb/orgs",
                "received_events_url": "https://api.github.com/users/keitwb/received_events",
                "repos_url": "https://api.github.com/users/keitwb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/keitwb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keitwb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/keitwb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "@keitwb Can't speak for pyls, but for pyright you can hook into `before_init` to do something like this:\r\n\r\n```lua\r\nlocal configs = require('lspconfig/configs')\r\nlocal util = require('lspconfig/util')\r\n\r\nlocal path = util.path\r\n\r\nlocal function get_python_path(workspace)\r\n  -- Use activated virtualenv.\r\n  if vim.env.VIRTUAL_ENV then\r\n    return path.join(vim.env.VIRTUAL_ENV, 'bin', 'python')\r\n  end\r\n\r\n  -- Find and use virtualenv in workspace directory.\r\n  for _, pattern in ipairs({'*', '.*'}) do\r\n    local match = vim.fn.glob(path.join(workspace, pattern, 'pyvenv.cfg'))\r\n    if match ~= '' then\r\n      return path.join(path.dirname(match), 'bin', 'python')\r\n    end\r\n  end\r\n\r\n  -- Fallback to system Python.\r\n  return exepath('python3') or exepath('python') or 'python'\r\nend\r\n\r\nlspconfig.pyright.setup({\r\n  -- ...\r\n  before_init = function(_, config)\r\n    config.settings.python.pythonPath = get_python_path(config.root_dir)\r\n  end\r\n})\r\n```\r\n\r\nThen you can expand the `get_python_path` function with support for Poetry or Pipenv if that's you cup of tea. Or whatever style your monorepo has.",
            "created_at": "2021-05-31T07:02:44Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-851247107",
            "id": 851247107,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTI0NzEwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 59,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 59,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/851247107/reactions"
            },
            "updated_at": "2021-05-31T07:04:10Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/851247107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/177685?v=4",
                "events_url": "https://api.github.com/users/lithammer/events{/privacy}",
                "followers_url": "https://api.github.com/users/lithammer/followers",
                "following_url": "https://api.github.com/users/lithammer/following{/other_user}",
                "gists_url": "https://api.github.com/users/lithammer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lithammer",
                "id": 177685,
                "login": "lithammer",
                "node_id": "MDQ6VXNlcjE3NzY4NQ==",
                "organizations_url": "https://api.github.com/users/lithammer/orgs",
                "received_events_url": "https://api.github.com/users/lithammer/received_events",
                "repos_url": "https://api.github.com/users/lithammer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lithammer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lithammer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lithammer",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @keitwb Can't speak for pyls, but for pyright you can hook into `before_init` to do something like this:\r\n> \r\n> ```lua\r\n> local configs = require('lspconfig/configs')\r\n> local util = require('lspconfig/util')\r\n> \r\n> local path = util.path\r\n> \r\n> local function get_python_path(workspace)\r\n>   -- Use activated virtualenv.\r\n>   if vim.env.VIRTUAL_ENV then\r\n>     return path.join(vim.env.VIRTUAL_ENV, 'bin', 'python')\r\n>   end\r\n> \r\n>   -- Find and use virtualenv in workspace directory.\r\n>   for _, pattern in ipairs({'*', '.*'}) do\r\n>     local match = vim.fn.glob(path.join(workspace, pattern, 'pyvenv.cfg'))\r\n>     if match ~= '' then\r\n>       return path.join(path.dirname(match), 'bin', 'python')\r\n>     end\r\n>   end\r\n> \r\n>   -- Fallback to system Python.\r\n>   return exepath('python3') or exepath('python') or 'python'\r\n> end\r\n> \r\n> lspconfig.pyright.setup({\r\n>   -- ...\r\n>   before_init = function(_, config)\r\n>     config.settings.python.pythonPath = get_python_path(config.root_dir)\r\n>   end\r\n> })\r\n> ```\r\n> \r\n> Then you can expand the `get_python_path` function with support for Poetry or Pipenv if that's you cup of tea. Or whatever style your monorepo has.\r\n\r\nThanks for the insight, but I have tried this multiple times the `before_init` function is not being called. Tried changing it to `on_init` it seems to work that way but pyright still can't resolve most of the imports.",
            "created_at": "2021-06-24T18:28:21Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-867861560",
            "id": 867861560,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2Nzg2MTU2MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/867861560/reactions"
            },
            "updated_at": "2021-06-24T18:28:21Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/867861560",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25496917?v=4",
                "events_url": "https://api.github.com/users/sagarc03/events{/privacy}",
                "followers_url": "https://api.github.com/users/sagarc03/followers",
                "following_url": "https://api.github.com/users/sagarc03/following{/other_user}",
                "gists_url": "https://api.github.com/users/sagarc03/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sagarc03",
                "id": 25496917,
                "login": "sagarc03",
                "node_id": "MDQ6VXNlcjI1NDk2OTE3",
                "organizations_url": "https://api.github.com/users/sagarc03/orgs",
                "received_events_url": "https://api.github.com/users/sagarc03/received_events",
                "repos_url": "https://api.github.com/users/sagarc03/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sagarc03/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sagarc03/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sagarc03",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I tweaked @lithammer code to the below one. My use case is that I want to use venv created by Pipenv without explicitly jumping to it before starting neovim.\r\n\r\n```\r\nlocal util = require('lspconfig/util')\r\n\r\nlocal path = util.path\r\n\r\nlocal function get_python_path(workspace)\r\n  -- Use activated virtualenv.\r\n  if vim.env.VIRTUAL_ENV then\r\n    return path.join(vim.env.VIRTUAL_ENV, 'bin', 'python')\r\n  end\r\n\r\n  -- Find and use virtualenv from pipenv in workspace directory.\r\n  local match = vim.fn.glob(path.join(workspace, 'Pipfile'))\r\n  if match ~= '' then\r\n    local venv = vim.fn.trim(vim.fn.system('PIPENV_PIPFILE=' .. match .. ' pipenv --venv'))\r\n    return path.join(venv, 'bin', 'python')\r\n  end\r\n\r\n  -- Fallback to system Python.\r\n  return vim.fn.exepath('python3') or vim.fn.exepath('python') or 'python'\r\nend\r\n\r\nrequire'lspconfig'.pyright.setup {\r\n    on_attach = function()\r\n        require'lsp_signature'.on_attach {\r\n            hint_enable = false,\r\n        }\r\n    end,\r\n    on_init = function(client)\r\n        client.config.settings.python.pythonPath = get_python_path(client.config.root_dir)\r\n    end\r\n}\r\n```",
            "created_at": "2021-07-08T19:49:37Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-876700701",
            "id": 876700701,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjcwMDcwMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 10,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/876700701/reactions"
            },
            "updated_at": "2021-07-08T19:49:37Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/876700701",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4434640?v=4",
                "events_url": "https://api.github.com/users/gzbd/events{/privacy}",
                "followers_url": "https://api.github.com/users/gzbd/followers",
                "following_url": "https://api.github.com/users/gzbd/following{/other_user}",
                "gists_url": "https://api.github.com/users/gzbd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gzbd",
                "id": 4434640,
                "login": "gzbd",
                "node_id": "MDQ6VXNlcjQ0MzQ2NDA=",
                "organizations_url": "https://api.github.com/users/gzbd/orgs",
                "received_events_url": "https://api.github.com/users/gzbd/received_events",
                "repos_url": "https://api.github.com/users/gzbd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gzbd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gzbd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gzbd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "And tweaking @gzbd code for Poetry, substitute the Pipenv-related code in the middle section with:\r\n```lua\r\n  -- Find and use virtualenv via poetry in workspace directory.\r\n  local match = vim.fn.glob(path.join(workspace, 'poetry.lock'))\r\n  if match ~= '' then\r\n    local venv = vim.fn.trim(vim.fn.system('poetry env info -p'))\r\n    return path.join(venv, 'bin', 'python')\r\n  end\r\n```",
            "created_at": "2021-07-09T16:06:25Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-877293306",
            "id": 877293306,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzI5MzMwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 22,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 22,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877293306/reactions"
            },
            "updated_at": "2021-07-09T16:06:25Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877293306",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6050612?v=4",
                "events_url": "https://api.github.com/users/cilsat/events{/privacy}",
                "followers_url": "https://api.github.com/users/cilsat/followers",
                "following_url": "https://api.github.com/users/cilsat/following{/other_user}",
                "gists_url": "https://api.github.com/users/cilsat/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cilsat",
                "id": 6050612,
                "login": "cilsat",
                "node_id": "MDQ6VXNlcjYwNTA2MTI=",
                "organizations_url": "https://api.github.com/users/cilsat/orgs",
                "received_events_url": "https://api.github.com/users/cilsat/received_events",
                "repos_url": "https://api.github.com/users/cilsat/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cilsat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cilsat/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cilsat",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hi all,\r\n\r\nI strongly recommend the creation of a python.nvim plugin (akin to nvim-jdtls, nvim-metals, flutter-tools.nvim, etc). LspConfig is meant to be a collection of settings for the clients, but something like managing your python path/active virtual environments is out of scope (would probably benefit from a nice UI). That being said, if someone tries to write a python.nvim and runs into issues, LMK.",
            "created_at": "2021-07-09T16:24:44Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-877305226",
            "id": 877305226,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzMwNTIyNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 12,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 12,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877305226/reactions"
            },
            "updated_at": "2021-07-09T16:50:29Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877305226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Alright, I was so free and created a repo which now contains the working example of @lithammer : https://github.com/HallerPatrick/py_lsp.nvim.\r\n\r\nIt serves as a starter to make something usable and nice. Please feel free to contribute :)",
            "created_at": "2021-07-10T21:50:27Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-877708881",
            "id": 877708881,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzcwODg4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877708881/reactions"
            },
            "updated_at": "2021-07-10T21:50:27Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/877708881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22773355?v=4",
                "events_url": "https://api.github.com/users/HallerPatrick/events{/privacy}",
                "followers_url": "https://api.github.com/users/HallerPatrick/followers",
                "following_url": "https://api.github.com/users/HallerPatrick/following{/other_user}",
                "gists_url": "https://api.github.com/users/HallerPatrick/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HallerPatrick",
                "id": 22773355,
                "login": "HallerPatrick",
                "node_id": "MDQ6VXNlcjIyNzczMzU1",
                "organizations_url": "https://api.github.com/users/HallerPatrick/orgs",
                "received_events_url": "https://api.github.com/users/HallerPatrick/received_events",
                "repos_url": "https://api.github.com/users/HallerPatrick/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HallerPatrick/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HallerPatrick/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HallerPatrick",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Inelegant workaround:\r\n\r\n```bash\r\n#!/bin/bash\r\nset -uo pipefail\r\nTOPLEVEL=$(git rev-parse --show-toplevel)\r\nLOCKFILE=\"$TOPLEVEL/poetry.lock\"\r\nif [ -f \"$LOCKFILE\" ]; then\r\n  poetry run nvim \"$@\"\r\nelse\r\n  nvim \"$@\"\r\nfi\r\n```",
            "created_at": "2021-11-10T22:50:07Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-965815801",
            "id": 965815801,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "IC_kwDODTQC1845kS35",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/965815801/reactions"
            },
            "updated_at": "2021-11-10T22:50:07Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/965815801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/263494?v=4",
                "events_url": "https://api.github.com/users/ajslater/events{/privacy}",
                "followers_url": "https://api.github.com/users/ajslater/followers",
                "following_url": "https://api.github.com/users/ajslater/following{/other_user}",
                "gists_url": "https://api.github.com/users/ajslater/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ajslater",
                "id": 263494,
                "login": "ajslater",
                "node_id": "MDQ6VXNlcjI2MzQ5NA==",
                "organizations_url": "https://api.github.com/users/ajslater/orgs",
                "received_events_url": "https://api.github.com/users/ajslater/received_events",
                "repos_url": "https://api.github.com/users/ajslater/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ajslater/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ajslater/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ajslater",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just my 2 cents in here too, I'm doing this:\r\n\r\n```lua\r\nbefore_init = function(_, config)\r\n    local p\r\n    if vim.env.VIRTUAL_ENV then\r\n        p = lsp_util.path.join(vim.env.VIRTUAL_ENV, \"bin\", \"python3\")\r\n    else\r\n        p = utils.find_cmd(\"python3\", \".venv/bin\", config.root_dir)\r\n    end\r\n    config.settings.python.pythonPath = p\r\nend,\r\n```\r\n\r\nThat `func_cmd` comes from my [utils file](https://github.com/bellini666/dotfiles/blob/master/vim/lua/utils.lua#L111) and is a custom implementation of the one suggested by the null-ls developer in [this issue](https://github.com/jose-elias-alvarez/null-ls.nvim/issues/289#issuecomment-953420169).\r\n\r\nI use it for flake8/isort/black to find the correct binaries from my poetry installation (which in my case, gets installed in my `.venv` dir): https://github.com/bellini666/dotfiles/blob/master/vim/lua/config/lsp.lua#L184",
            "created_at": "2021-11-10T23:06:57Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-965824580",
            "id": 965824580,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "IC_kwDODTQC1845kVBE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/965824580/reactions"
            },
            "updated_at": "2021-11-10T23:06:57Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/965824580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/134025?v=4",
                "events_url": "https://api.github.com/users/bellini666/events{/privacy}",
                "followers_url": "https://api.github.com/users/bellini666/followers",
                "following_url": "https://api.github.com/users/bellini666/following{/other_user}",
                "gists_url": "https://api.github.com/users/bellini666/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bellini666",
                "id": 134025,
                "login": "bellini666",
                "node_id": "MDQ6VXNlcjEzNDAyNQ==",
                "organizations_url": "https://api.github.com/users/bellini666/orgs",
                "received_events_url": "https://api.github.com/users/bellini666/received_events",
                "repos_url": "https://api.github.com/users/bellini666/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bellini666/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bellini666/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bellini666",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've recently switched to null-ls from efm. It's far easier to configure and seems a little faster. Most of these python venv problems can be fixed with null-ls's `{ prefer_local = \".venv/bin\" }` configuration. \r\n\r\nBut for pyright I implemented @bellini666's solution. While it's a bit of extra code, it works well.",
            "created_at": "2021-12-04T01:01:54Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-985935025",
            "id": 985935025,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "IC_kwDODTQC1846xCyx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/985935025/reactions"
            },
            "updated_at": "2021-12-04T01:01:54Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/985935025",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/263494?v=4",
                "events_url": "https://api.github.com/users/ajslater/events{/privacy}",
                "followers_url": "https://api.github.com/users/ajslater/followers",
                "following_url": "https://api.github.com/users/ajslater/following{/other_user}",
                "gists_url": "https://api.github.com/users/ajslater/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ajslater",
                "id": 263494,
                "login": "ajslater",
                "node_id": "MDQ6VXNlcjI2MzQ5NA==",
                "organizations_url": "https://api.github.com/users/ajslater/orgs",
                "received_events_url": "https://api.github.com/users/ajslater/received_events",
                "repos_url": "https://api.github.com/users/ajslater/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ajslater/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ajslater/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ajslater",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "There's one slight issue with the poetry one that's circulating in the thread:\r\n\r\n```lua\r\n  -- Find and use virtualenv via poetry in workspace directory.\r\n  local match = vim.fn.glob(path.join(workspace, 'poetry.lock'))\r\n  if match ~= '' then\r\n    local venv = vim.fn.trim(vim.fn.system('poetry env info -p'))\r\n    return path.join(venv, 'bin', 'python')\r\n  end\r\n```\r\n\r\nAnd that it's running the `poetry` command in the CWD of where you are, if you are running multiple nested poetry enviroments like me, then you need to use the `--directory` flag from poetry `1.3.0`.\r\n\r\n```lua\r\n  -- Find and use virtualenv via poetry in workspace directory.\r\n  local match = vim.fn.glob(path.join(workspace, 'poetry.lock'))\r\n  if match ~= '' then\r\n    local venv = vim.fn.trim(vim.fn.system('poetry --directory ' .. workspace .. ' env info -p'))\r\n    return path.join(venv, 'bin', 'python')\r\n  end\r\n```\r\n\r\nNow, if you have nested poetry environments it will work just fine. Just remember to update `poetry` to `1.3.0` and higher.",
            "created_at": "2023-01-05T15:25:44Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-1372361994",
            "id": 1372361994,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "IC_kwDODTQC185RzJUK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1372361994/reactions"
            },
            "updated_at": "2023-01-05T15:25:44Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1372361994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6134511?v=4",
                "events_url": "https://api.github.com/users/Lilja/events{/privacy}",
                "followers_url": "https://api.github.com/users/Lilja/followers",
                "following_url": "https://api.github.com/users/Lilja/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilja/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Lilja",
                "id": 6134511,
                "login": "Lilja",
                "node_id": "MDQ6VXNlcjYxMzQ1MTE=",
                "organizations_url": "https://api.github.com/users/Lilja/orgs",
                "received_events_url": "https://api.github.com/users/Lilja/received_events",
                "repos_url": "https://api.github.com/users/Lilja/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Lilja/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilja/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Lilja",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "So, I'm using pyenv and pylsp\r\n\r\n1. The solution by [bellini666](https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-965824580) is only valid for pyright, as it is based on a configuration found [here](https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/server_configurations/pyright.lua#L34). The [pylsp config](https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/server_configurations/pylsp.lua) has no such equivalent.\r\n\r\n2. I *think* that pylsp abides the `VIRTUAL_ENV` environmental variables (which is automatically set by pyenv to point to the folder of the correct virtual environment, so that `$VIRTUAL_ENV/bin/python` is the python executable, if you correctly initialize pyenv in your .bashrc as described in the guide).\r\n\r\nYou can test it like that: create two virtual environments, `env1` and `env2`. Install a package, like `tqdm` for example, on `env2` only. Activate `env1`. Open nvim, type `tqdm.`. You will not get autocompletions. Issue `VIRTUAL_ENV=[PATH_TO_ENV2] nvim`, type `tqdm.`. Now you get autocompletions (even if you are technically \"inside\" `env1`).\r\n\r\nBut that is only a conjecture by trial and error. Can someone confirm this?\r\n\r\n5. The python provider for neovim does not need to correspond to the python in the virtual environment. You can create a virtual environment just for the provider, called for example `neovim`, install `pynvim` on it, and put the following in your `init.lua`: \r\n```\r\nMYHOME = os.getenv(\"HOME\")\r\nvim.g.python3_host_prog = MYHOME .. \"/.pyenv/versions/neovim/bin/python\"\r\n```\r\n\r\nOn a related  note, why everybody is using pyright? Is it not a static type checker only? How you do autocompletions?\r\n",
            "created_at": "2024-01-15T10:48:58Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-1891871440",
            "id": 1891871440,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "IC_kwDODTQC185ww6rQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1891871440/reactions"
            },
            "updated_at": "2024-01-15T10:50:42Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1891871440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54762742?v=4",
                "events_url": "https://api.github.com/users/raffaem/events{/privacy}",
                "followers_url": "https://api.github.com/users/raffaem/followers",
                "following_url": "https://api.github.com/users/raffaem/following{/other_user}",
                "gists_url": "https://api.github.com/users/raffaem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raffaem",
                "id": 54762742,
                "login": "raffaem",
                "node_id": "MDQ6VXNlcjU0NzYyNzQy",
                "organizations_url": "https://api.github.com/users/raffaem/orgs",
                "received_events_url": "https://api.github.com/users/raffaem/received_events",
                "repos_url": "https://api.github.com/users/raffaem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raffaem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raffaem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raffaem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I spent quite a bit of time trying to find a solution to use a venv specific to an open buffer. Most people seem to do what I used to do, enable the venv before starting nvim, but that doesn't work if you want to have two projects open in the same neovim instance. The fact that `cmd_env` needs to be static appeared to make it unsuitable. The solution is embarrassingly simple - use a relative path for `VIRTUAL_ENV`:\n\n```\nlocal lspconfig = require(\"lspconfig\")\nlspconfig[\"pylsp\"].setup({\n    cmd_env = {\n        VIRTUAL_ENV = \".venv\",\n    }\n})\n```\n\nThis works because pylsp is started (which isn't super obvious) in `root_dir` (the root of a python project https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/configs/pylsp.lua#L8). So all you need to do is to create your .venv folder in your python project folder.",
            "created_at": "2025-03-21T05:12:26Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500#issuecomment-2742313553",
            "id": 2742313553,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
            "node_id": "IC_kwDODTQC186jdGJR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2742313553/reactions"
            },
            "updated_at": "2025-03-21T05:12:26Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2742313553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/681955?v=4",
                "events_url": "https://api.github.com/users/sblask/events{/privacy}",
                "followers_url": "https://api.github.com/users/sblask/followers",
                "following_url": "https://api.github.com/users/sblask/following{/other_user}",
                "gists_url": "https://api.github.com/users/sblask/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sblask",
                "id": 681955,
                "login": "sblask",
                "node_id": "MDQ6VXNlcjY4MTk1NQ==",
                "organizations_url": "https://api.github.com/users/sblask/orgs",
                "received_events_url": "https://api.github.com/users/sblask/received_events",
                "repos_url": "https://api.github.com/users/sblask/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sblask/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sblask/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sblask",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 22,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500/comments",
    "created_at": "2020-12-29T22:04:20Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/500",
    "id": 776107203,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3NzYxMDcyMDM=",
    "number": 500,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500/timeline",
    "title": "How do I specify a virtualenv for launching pyls and pyright?",
    "type": null,
    "updated_at": "2025-03-21T05:12:27Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/500",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8844723?v=4",
        "events_url": "https://api.github.com/users/dbischof90/events{/privacy}",
        "followers_url": "https://api.github.com/users/dbischof90/followers",
        "following_url": "https://api.github.com/users/dbischof90/following{/other_user}",
        "gists_url": "https://api.github.com/users/dbischof90/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dbischof90",
        "id": 8844723,
        "login": "dbischof90",
        "node_id": "MDQ6VXNlcjg4NDQ3MjM=",
        "organizations_url": "https://api.github.com/users/dbischof90/orgs",
        "received_events_url": "https://api.github.com/users/dbischof90/received_events",
        "repos_url": "https://api.github.com/users/dbischof90/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dbischof90/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dbischof90/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dbischof90",
        "user_view_type": "public"
    }
}