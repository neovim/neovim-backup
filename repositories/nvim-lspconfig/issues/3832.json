{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Description\n\nI am having this weird issue where even tho lsp is attached and works correctly (autocompletion/hover/code actions work, `:LspInfo` has good output) I don't have semantic token groups in the only one `Program.cs` file.\n\nHere I inspect something(Main method parameter) in `Program.cs`, no semantic tokens, not italic:\n![Image](https://github.com/user-attachments/assets/3fc3aec7-48dd-4c6b-a065-0351d920adcd)\nHere I inspect parameter in any other file from the same c# project, semantic tokens in place, italic, highlighting is different:\n![Image](https://github.com/user-attachments/assets/5bf52a07-0404-4775-9499-b1c36e915702)\n\nI tried to reproduce this in the fresh new dotnet project but it works fine there.\nI also don't do anything fancy in my config, here is my `lspconfig.lua`:\n```lua\nlocal function lsp_border()\n\t-- Specify how the border looks like\n\tlocal border = {\n\t\t{ '┌', 'FloatBorder' },\n\t\t{ '─', 'FloatBorder' },\n\t\t{ '┐', 'FloatBorder' },\n\t\t{ '│', 'FloatBorder' },\n\t\t{ '┘', 'FloatBorder' },\n\t\t{ '─', 'FloatBorder' },\n\t\t{ '└', 'FloatBorder' },\n\t\t{ '│', 'FloatBorder' },\n\t}\n\n\t-- Add the border on hover and on signature help popup window\n\tlocal handlers = {\n\t\t['textDocument/hover'] = vim.lsp.with(vim.lsp.handlers.hover, { border = border }),\n\t\t['textDocument/signatureHelp'] = vim.lsp.with(vim.lsp.handlers.signature_help, { border = border }),\n\t}\n\n\t-- Add border to the diagnostic popup window\n\tvim.diagnostic.config({\n\t\tvirtual_text = {\n\t\t\tprefix = '■ ', -- Could be '●', '▎', 'x', '■', , \n\t\t},\n\t\tfloat = { border = border },\n\t})\n\n\treturn handlers\nend\n\nlocal on_attach = function(client, bufnr)\n\tlocal bufopts = { noremap = true, silent = true, buffer = bufnr }\n\n\tvim.keymap.set('n', 'gr', vim.lsp.buf.references, bufopts)\n\tvim.keymap.set('n', 'grn', vim.lsp.buf.rename, bufopts)\n\tvim.keymap.set('n', 'gi', vim.lsp.buf.definition, bufopts)\n\tvim.keymap.set('n', 'gd', vim.lsp.buf.declaration, bufopts)\n\tvim.keymap.set('n', '<leader>ca', vim.lsp.buf.code_action, bufopts)\n\t-- vim.keymap.set('n', '<leader>d', vim.lsp.diagnostic.get_line_diagnostics, bufopts)\n\tvim.keymap.set({ 'n' }, '<leader>e', vim.diagnostic.open_float, bufopts)\n\tvim.keymap.set({ 'n', 'v' }, '<leader>f', vim.lsp.buf.format, bufopts)\n\tvim.keymap.set({ 'n', 'i' }, '<C-k>', function() vim.lsp.buf.signature_help {border = 'single'} end, bufopts)\n\tvim.keymap.set({ 'n' }, 'K', function ()\n\t\tvim.lsp.buf.hover { border = \"single\" }\n\tend, bufopts)\nend\n\nreturn {\n\t\"neovim/nvim-lspconfig\",\n\t-- dependencies = { \"cmp-nvim-lsp\", \"nvim-cmp\" },\n\tdependencies = { \"saghen/blink.cmp\" },\n\tconfig = function()\n\t\tlocal handlers = lsp_border()\n\t\t-- local capabilities = require(\"cmp_nvim_lsp\").default_capabilities()\n\t\tlocal capabilities = require(\"blink.cmp\").get_lsp_capabilities()\n\n\t\trequire(\"lspconfig\").pyright.setup {\n\t\t\tcapabilities = capabilities,\n\t\t\ton_attach = on_attach,\n\t\t\t-- handlers = handlers\n\t\t}\n\n\t\trequire(\"lspconfig\").gdscript.setup {\n\t\t\tcapabilities = capabilities,\n\t\t\ton_attach = on_attach,\n\t\t\t-- handlers = handlers\n\t\t}\n\n\t\trequire(\"lspconfig\").omnisharp.setup {\n\t\t\tcmd = { \"dotnet\", \"/opt/omnisharp-linux-x64-net6.0/OmniSharp.dll\" },\n\t\t\tsettings = {\n\t\t\t\tFormattingOptions = {\n\t\t\t\t\tEnableEditorConfigSupport = true,\n\t\t\t\t}\n\t\t\t},\n\t\t\tcapabilities = capabilities,\n\t\t\ton_attach = on_attach,\n\t\t\t-- handlers = handlers,\n\t\t\tinit_options = {\n\t\t\t\tcompletion = { placeholders = false }\n\t\t\t}\n\t\t}\n\n\t\trequire(\"lspconfig\").clangd.setup {\n\t\t\tcapabilities = capabilities,\n\t\t\t-- handlers = handlers,\n\t\t\ton_attach = function(client, bufnr)\n\t\t\t\ton_attach(client, bufnr)\n\t\t\t\tvim.keymap.set({ 'n' }, '<leader>k', \"<Cmd>ClangdSwitchSourceHeader<CR>\",\n\t\t\t\t\t{ noremap = true, silent = true, buffer = bufnr })\n\t\t\tend,\n\t\t\tcmd = { \"clangd\", \"--function-arg-placeholders=0\", \"--header-insertion=never\" }\n\t\t}\n\n\t\trequire(\"lspconfig\").lua_ls.setup {\n\t\t\tcapabilities = capabilities,\n\t\t\ton_attach = on_attach,\n\t\t\thandlers = handlers,\n\t\t\ton_init = function(client)\n\t\t\t\tif client.workspace_folders then\n\t\t\t\t\tlocal path = client.workspace_folders[1].name\n\t\t\t\t\tif vim.loop.fs_stat(path .. '/.luarc.json') or vim.loop.fs_stat(path .. '/.luarc.jsonc') then\n\t\t\t\t\t\treturn\n\t\t\t\t\tend\n\t\t\t\tend\n\n\t\t\t\tclient.config.settings.Lua = vim.tbl_deep_extend('force', client.config.settings.Lua, {\n\t\t\t\t\truntime = {\n\t\t\t\t\t\t-- Tell the language server which version of Lua you're using\n\t\t\t\t\t\t-- (most likely LuaJIT in the case of Neovim)\n\t\t\t\t\t\tversion = 'LuaJIT'\n\t\t\t\t\t},\n\t\t\t\t\t-- Make the server aware of Neovim runtime files\n\t\t\t\t\tworkspace = {\n\t\t\t\t\t\tcheckThirdParty = false,\n\t\t\t\t\t\tlibrary = {\n\t\t\t\t\t\t\tvim.env.VIMRUNTIME\n\t\t\t\t\t\t\t-- Depending on the usage, you might want to add additional paths here.\n\t\t\t\t\t\t\t-- \"${3rd}/luv/library\"\n\t\t\t\t\t\t\t-- \"${3rd}/busted/library\",\n\t\t\t\t\t\t}\n\t\t\t\t\t\t-- or pull in all of 'runtimepath'. NOTE: this is a lot slower and will cause issues when working on your own configuration (see https://github.com/neovim/nvim-lspconfig/issues/3189)\n\t\t\t\t\t\t-- library = vim.api.nvim_get_runtime_file(\"\", true)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\tend,\n\t\t\tsettings = {\n\t\t\t\tLua = {}\n\t\t\t}\n\t\t}\n\tend\n}\n```",
    "closed_at": "2025-05-09T14:47:42Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/47914319?v=4",
        "events_url": "https://api.github.com/users/KRC2000/events{/privacy}",
        "followers_url": "https://api.github.com/users/KRC2000/followers",
        "following_url": "https://api.github.com/users/KRC2000/following{/other_user}",
        "gists_url": "https://api.github.com/users/KRC2000/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/KRC2000",
        "id": 47914319,
        "login": "KRC2000",
        "node_id": "MDQ6VXNlcjQ3OTE0MzE5",
        "organizations_url": "https://api.github.com/users/KRC2000/orgs",
        "received_events_url": "https://api.github.com/users/KRC2000/received_events",
        "repos_url": "https://api.github.com/users/KRC2000/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/KRC2000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KRC2000/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/KRC2000",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Just run `:LspLog` right after lsp attach and found this single error record there, its yapping about `Failed to handle request textDocument/semanticTokens` must be related:\n```\n[ERROR][2025-05-09 17:10:07] ...lsp/handlers.lua:562\t\"OmniSharp.Extensions.JsonRpc.DefaultRequestInvoker: Failed to handle request textDocument/semanticTokens/full 2 - System.ArgumentOutOfRangeException: Range must not span multiple lines (Parameter 'range')\\n   at OmniSharp.Extensions.LanguageServer.Protocol.Document.SemanticTokensBuilder.Push(Range range, Int32 tokenType, Int32 tokenModifiers)\\n   at OmniSharp.Extensions.LanguageServer.Protocol.Document.SemanticTokensBuilder.Push(Range range, Nullable`1 tokenType, IEnumerable`1 tokenModifiers)\\n   at OmniSharp.LanguageServerProtocol.Handlers.OmniSharpSemanticTokensHandler.Tokenize(SemanticTokensBuilder builder, ITextDocumentIdentifierParams identifier, CancellationToken cancellationToken) in /home/vsts/work/1/s/src/OmniSharp.LanguageServerProtocol/Handlers/OmniSharpSemanticTokensHandler.cs:line 97\\n   at OmniSharp.Extensions.LanguageServer.Protocol.Document.SemanticTokensHandlerBase.Handle(SemanticTokensParams request, CancellationToken cancellationToken)\\n   at OmniSharp.Extensions.LanguageServer.Server.Pipelines.SemanticTokensDeltaPipeline`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\\n   at OmniSharp.Extensions.LanguageServer.Server.Pipelines.ResolveCommandPipeline`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\\n   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\\n   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\\n   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\\n   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\\n   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\\n   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\\n   at OmniSharp.Extensions.JsonRpc.RequestRouterBase`1.<RouteRequest>g__InnerRoute|7_0(IServiceScopeFactory serviceScopeFactory, Request request, TDescriptor descriptor, Object params, CancellationToken token, ILogger logger)\\n   at OmniSharp.Extensions.JsonRpc.RequestRouterBase`1.RouteRequest(IRequestDescriptor`1 descriptors, Request request, CancellationToken token)\\n   at OmniSharp.Extensions.JsonRpc.DefaultRequestInvoker.<>c__DisplayClass10_0.<<RouteRequest>b__5>d.MoveNext() | Method='textDocument/semanticTokens/full' RequestId='2'\"\n```",
            "created_at": "2025-05-09T14:14:02Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3832#issuecomment-2866706380",
            "id": 2866706380,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3832",
            "node_id": "IC_kwDODTQC186q3nfM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2866706380/reactions"
            },
            "updated_at": "2025-05-09T14:15:41Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2866706380",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/47914319?v=4",
                "events_url": "https://api.github.com/users/KRC2000/events{/privacy}",
                "followers_url": "https://api.github.com/users/KRC2000/followers",
                "following_url": "https://api.github.com/users/KRC2000/following{/other_user}",
                "gists_url": "https://api.github.com/users/KRC2000/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KRC2000",
                "id": 47914319,
                "login": "KRC2000",
                "node_id": "MDQ6VXNlcjQ3OTE0MzE5",
                "organizations_url": "https://api.github.com/users/KRC2000/orgs",
                "received_events_url": "https://api.github.com/users/KRC2000/received_events",
                "repos_url": "https://api.github.com/users/KRC2000/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KRC2000/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KRC2000/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KRC2000",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just found an issue in the omnisharp-roslyn repo that looks like exactly this: https://github.com/OmniSharp/omnisharp-roslyn/issues/2580\nCommon omnisharp/microsoft L, issue author suggests to migrate to roslyn_ls which I will be doing, closing this.",
            "created_at": "2025-05-09T14:47:42Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3832#issuecomment-2866841180",
            "id": 2866841180,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3832",
            "node_id": "IC_kwDODTQC186q4IZc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2866841180/reactions"
            },
            "updated_at": "2025-05-09T14:48:47Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2866841180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/47914319?v=4",
                "events_url": "https://api.github.com/users/KRC2000/events{/privacy}",
                "followers_url": "https://api.github.com/users/KRC2000/followers",
                "following_url": "https://api.github.com/users/KRC2000/following{/other_user}",
                "gists_url": "https://api.github.com/users/KRC2000/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KRC2000",
                "id": 47914319,
                "login": "KRC2000",
                "node_id": "MDQ6VXNlcjQ3OTE0MzE5",
                "organizations_url": "https://api.github.com/users/KRC2000/orgs",
                "received_events_url": "https://api.github.com/users/KRC2000/received_events",
                "repos_url": "https://api.github.com/users/KRC2000/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KRC2000/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KRC2000/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KRC2000",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3832/comments",
    "created_at": "2025-05-09T14:04:31Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3832/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3832",
    "id": 3052284536,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3832/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC18617ip4",
    "number": 3832,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3832/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3832/timeline",
    "title": "[Omnisharp] No semantic tokens for a particular file in the project despite lsp attached and working",
    "type": null,
    "updated_at": "2025-05-09T14:48:48Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3832",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/47914319?v=4",
        "events_url": "https://api.github.com/users/KRC2000/events{/privacy}",
        "followers_url": "https://api.github.com/users/KRC2000/followers",
        "following_url": "https://api.github.com/users/KRC2000/following{/other_user}",
        "gists_url": "https://api.github.com/users/KRC2000/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/KRC2000",
        "id": 47914319,
        "login": "KRC2000",
        "node_id": "MDQ6VXNlcjQ3OTE0MzE5",
        "organizations_url": "https://api.github.com/users/KRC2000/orgs",
        "received_events_url": "https://api.github.com/users/KRC2000/received_events",
        "repos_url": "https://api.github.com/users/KRC2000/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/KRC2000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KRC2000/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/KRC2000",
        "user_view_type": "public"
    }
}