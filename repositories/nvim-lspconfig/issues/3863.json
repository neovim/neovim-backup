{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Description\n\nMigrating a project to a newer linter version requires fair amount of work (hours!), so many projects have to delay this task and continue using outdated linter version. Because of this it's important to support both v1 and v2 golangci_lint_ls for next couple years.\n\nOne of required for golangci_lint_ls flags was renamed in V2 from `--out-format=json` to `--output.json.path=stdout` and this broke V1 support.\n\nUsers can use this workaround to fix it, but I believe this should be implemented in default config.\n\n```lua\n        before_init = function(_, config)\n            -- Add support for golangci-lint V1 (in V2 `--out-format=json` was replaced by\n            -- `--output.json.path=stdout`).\n            local v1 = false\n            -- PERF: `golangci-lint version` is very slow (about 0.1 sec) so let's find\n            -- version using `go version -m $(which golangci-lint) | grep '^\\smod'`.\n            if vim.fn.executable 'go' == 1 then\n                local exe = vim.fn.exepath 'golangci-lint'\n                local version = vim.system({ 'go', 'version', '-m', exe }):wait()\n                v1 = string.match(version.stdout, '\\tmod\\tgithub.com/golangci/golangci%-lint\\t')\n            else\n                local version = vim.system({ 'golangci-lint', 'version' }):wait()\n                v1 = string.match(version.stdout, 'version v?1%.')\n            end\n            if v1 then\n                config.init_options.command = { 'golangci-lint', 'run', '--out-format', 'json' }\n            end\n        end,\n```",
    "closed_at": "2025-05-22T08:39:52Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "if that actually works, send a pr. else this is wontfix",
            "created_at": "2025-05-22T08:39:52Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3863#issuecomment-2900385529",
            "id": 2900385529,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863",
            "node_id": "IC_kwDODTQC186s4F75",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2900385529/reactions"
            },
            "updated_at": "2025-05-22T08:39:52Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2900385529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> if that actually works, send a pr. else this is wontfix\n\n@justinmk It works for me. I can send a PR, but I'm not sure about right way to implement this in an LSP config.\nAt a glance user has no options than `before_init`, but I'm unsure is it a good idea to use `before_init` in base config - this way user won't be able to use  `before_init` for his own tasks without breaking this functionality. Is there any other/better place for this logic in base config?",
            "created_at": "2025-05-22T09:55:13Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3863#issuecomment-2900612052",
            "id": 2900612052,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863",
            "node_id": "IC_kwDODTQC186s49PU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2900612052/reactions"
            },
            "updated_at": "2025-05-22T09:55:31Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2900612052",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1354301?v=4",
                "events_url": "https://api.github.com/users/powerman/events{/privacy}",
                "followers_url": "https://api.github.com/users/powerman/followers",
                "following_url": "https://api.github.com/users/powerman/following{/other_user}",
                "gists_url": "https://api.github.com/users/powerman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/powerman",
                "id": 1354301,
                "login": "powerman",
                "node_id": "MDQ6VXNlcjEzNTQzMDE=",
                "organizations_url": "https://api.github.com/users/powerman/orgs",
                "received_events_url": "https://api.github.com/users/powerman/received_events",
                "repos_url": "https://api.github.com/users/powerman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/powerman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/powerman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/powerman",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`before_init` is very rarely used. We are working out the \"merge\" semantics in https://github.com/neovim/neovim/issues/33577 , but meanwhile this is just a known limitation.",
            "created_at": "2025-05-22T09:59:17Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3863#issuecomment-2900623586",
            "id": 2900623586,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863",
            "node_id": "IC_kwDODTQC186s5ADi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2900623586/reactions"
            },
            "updated_at": "2025-05-22T09:59:17Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/2900623586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Noting this for anyone else using `neomake`; also using [`asdf`](https://github.com/asdf-vm/asdf) to manage their golang version; isn't intimately familiar with modifying `neovim`/`neomake` settings; and has migrated to v2 of `golangci-lint`[^1]. [PR 3685](https://github.com/neovim/nvim-lspconfig/pull/3865) from @powerman sets the default version of `golangci-lint` to v1. For performance reasons, it attempts to use `go version -m <path to golangci-lint>` to get the version of `golangci-lint`.\n\nFor me (and others using `asdf` that path is `~/.asdf/shims/golangci-lint` which is a shell script that `go` cannot grok thus defaulting the version (and arguments used) to the v1 versions.  For me, that results in `args: ['run', '--out-format=line-number', '--print-issued-lines=false']`\n\nBased on my reading[^3] of the [updated documentation](https://github.com/golangci/golangci-lint/discussions/5612) on [command line flags for `golangci-lint`](https://golangci-lint.run/product/migration-guide/#command-line-flags), the same results can be achieved by putting the following in your nvim config files: `let g:neomake_go_golangci_lint_args = ['run', '--output.text.print-issued-lines']`.\n\n\n[^1]: I imagine the number of folks in the middle of that particular Venn Diagram is small, so I'm posting this note instead of making a PR with updated logic. I imagine in the near to middle future the v1 arguments will be made optional with v2 becoming the default[^2], so providing a workaround seems a reasonable compromise given the (likely) small number of people affected by this change.\n[^2]: Perhaps @powerman can provide a PR for this when they've updated their code base?\n[^3]: My reading is naive and could be completely incorrect. Please let me know if that is the case.",
            "created_at": "2025-08-04T16:46:57Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3863#issuecomment-3151511384",
            "id": 3151511384,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863",
            "node_id": "IC_kwDODTQC18672D9Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3151511384/reactions"
            },
            "updated_at": "2025-08-04T16:46:57Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3151511384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1229014?v=4",
                "events_url": "https://api.github.com/users/dylannorthrup/events{/privacy}",
                "followers_url": "https://api.github.com/users/dylannorthrup/followers",
                "following_url": "https://api.github.com/users/dylannorthrup/following{/other_user}",
                "gists_url": "https://api.github.com/users/dylannorthrup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dylannorthrup",
                "id": 1229014,
                "login": "dylannorthrup",
                "node_id": "MDQ6VXNlcjEyMjkwMTQ=",
                "organizations_url": "https://api.github.com/users/dylannorthrup/orgs",
                "received_events_url": "https://api.github.com/users/dylannorthrup/received_events",
                "repos_url": "https://api.github.com/users/dylannorthrup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dylannorthrup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dylannorthrup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dylannorthrup",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@dylannorthrup Just throw away asdf and upgrade to [mise](https://mise.jdx.dev/)! 😄 That's a joke, of course, but… mise really much better than asdf in everything, including shims.\n\n> @powerman sets the default version of golangci-lint to v1.\n\nI don't think so. Just reviewed the PR - if v1 is not detected for sure then there is no change, so default is still v2 - as it was before my PR.\n\nCan you please provide your output from `go version -m <path to golangci-lint>` command?\n\nI suppose it's possible to check output of `go version -m` more carefully and fallback to `golangci-lint version` in case it fails because `golangci-lint` is some kind of shell script wrapper any user might have (unrelated to asdf).\n\n> `let g:…`\n\nThis workaround works fine only if **all** of your projects uses v1 (or v2). This is not the case in general. For example, at any moment you might need to fork some 3rd-party project to prepare a PR and that project may use any of v1/v2. Or you may change a company where you work and new one may use legacy v1 while all your pet projects are already on v2. So, `let g:` is not a viable solution for most users and we actually needs some kind of auto-detection.",
            "created_at": "2025-08-04T17:19:55Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3863#issuecomment-3151704395",
            "id": 3151704395,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863",
            "node_id": "IC_kwDODTQC18672zFL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3151704395/reactions"
            },
            "updated_at": "2025-08-04T17:19:55Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3151704395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1354301?v=4",
                "events_url": "https://api.github.com/users/powerman/events{/privacy}",
                "followers_url": "https://api.github.com/users/powerman/followers",
                "following_url": "https://api.github.com/users/powerman/following{/other_user}",
                "gists_url": "https://api.github.com/users/powerman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/powerman",
                "id": 1354301,
                "login": "powerman",
                "node_id": "MDQ6VXNlcjEzNTQzMDE=",
                "organizations_url": "https://api.github.com/users/powerman/orgs",
                "received_events_url": "https://api.github.com/users/powerman/received_events",
                "repos_url": "https://api.github.com/users/powerman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/powerman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/powerman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/powerman",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@dylannorthrup Please test the fix in https://github.com/neovim/nvim-lspconfig/pull/3984.",
            "created_at": "2025-08-04T18:04:42Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3863#issuecomment-3151846188",
            "id": 3151846188,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863",
            "node_id": "IC_kwDODTQC18673Vss",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3151846188/reactions"
            },
            "updated_at": "2025-08-04T18:04:42Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3151846188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1354301?v=4",
                "events_url": "https://api.github.com/users/powerman/events{/privacy}",
                "followers_url": "https://api.github.com/users/powerman/followers",
                "following_url": "https://api.github.com/users/powerman/following{/other_user}",
                "gists_url": "https://api.github.com/users/powerman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/powerman",
                "id": 1354301,
                "login": "powerman",
                "node_id": "MDQ6VXNlcjEzNTQzMDE=",
                "organizations_url": "https://api.github.com/users/powerman/orgs",
                "received_events_url": "https://api.github.com/users/powerman/received_events",
                "repos_url": "https://api.github.com/users/powerman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/powerman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/powerman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/powerman",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> [@dylannorthrup](https://github.com/dylannorthrup) Just throw away asdf and upgrade to [mise](https://mise.jdx.dev/)! 😄 That's a joke, of course, but… mise really much better than asdf in everything, including shims.\n\nI'm always up for workflow alternatives, but it'll have to be all that **and** a bag of chips **and** a tasty dessert for me to overcome the activation energy to switch.\n\n> > [@powerman](https://github.com/powerman) sets the default version of golangci-lint to v1.\n> \n> I don't think so. Just reviewed the PR - if v1 is not detected for sure then there is no change, so default is still v2 - as it was before my PR.\n> \n> Can you please provide your output from `go version -m <path to golangci-lint>` command?\n> \n> I suppose it's possible to check output of `go version -m` more carefully and fallback to `golangci-lint version` in case it fails because `golangci-lint` is some kind of shell script wrapper any user might have (unrelated to asdf).\n\n```\nhelios:> which golangci-lint\n~/.asdf/shims/golangci-lint\nhelios:> go version -m \"$(which golangci-lint)\"\n/home/dylan/.asdf/shims/golangci-lint: could not read Go build info from /home/dylan/.asdf/shims/golangci-lint: unrecognized file format\nhelios:> asdf which golangci-lint\n/home/dylan/.asdf/installs/golangci-lint/2.1.6/bin/golangci-lint\nhelios:> go version -m \"$(asdf which golangci-lint)\"\n/home/dylan/.asdf/installs/golangci-lint/2.1.6/bin/golangci-lint: go1.24.2\n        path    github.com/golangci/golangci-lint/v2/cmd/golangci-lint\n        mod     github.com/golangci/golangci-lint/v2    (devel)\n... rest of output elided for the sake of brevity ...\nhelios:> \n```\n \n> > `let g:…`\n> \n> This workaround works fine only if **all** of your projects uses v1 (or v2). This is not the case in general. For example, at any moment you might need to fork some 3rd-party project to prepare a PR and that project may use any of v1/v2. Or you may change a company where you work and new one may use legacy v1 while all your pet projects are already on v2. So, `let g:` is not a viable solution for most users and we actually needs some kind of auto-detection.\n\nThis is fair. My use cases are not complicated at the moment, so this worked for me (especially since my `lua`/`neovim` kung-fu is poor).\n\n> [@dylannorthrup](https://github.com/dylannorthrup) Please test the fix in [#3984](https://github.com/neovim/nvim-lspconfig/pull/3984).\n\nI'm pasting the output of `:NeomakeInfo` when editing `main.go` after applying those changes and removing the workaround from my nvim config files... please let me know what, if any, changes I can/should make for testing purposes:\n\n#### Neomake debug information\n\nAsync support: 1\nCurrent filetype: go\nWindows: 0\n[shell, shellcmdflag, shellslash]: ['/usr/bin/zsh', '-c', 1]\nmakeprg=go build, Last set from ~/.local/share/nvim/plugged/vim-go/compiler/go.vim line 25\n\n##### Enabled makers\n\nFor the current filetype (\"go\", used with :Neomake):\n - go\n   - append_file: 0\n   - args: ['test', '-c', '-o', '/dev/null']\n   - auto_enabled: 1\n   - cwd: '%:h'\n   - errorformat: '%W%f:%l: warning: %m,%E%f:%l:%c:%m,%E%f:%l:%m,%C%\\s%\\+%m,%-G%.%#\\\\\\[no test files],%-G#%.%#'\n   - exe: 'go'\n   - postprocess: function('neomake#postprocess#compress_whitespace')\n   - serialize: 1\n   - serialize_abort_on_error: 1\n   - version_arg: 'version'\n   - version information (/home/dylan/.asdf/shims/go version): go version go1.24.3 linux/amd64\n - golangci_lint\n   - append_file: 0\n   - args: ['run', '--out-format=line-number', '--print-issued-lines=false']\n   - auto_enabled: 1\n   - cwd: '%:h'\n   - errorformat: '%f:%l:%c: %m,%f:%l: %m'\n   - exe: 'golangci-lint'\n   - output_stream: 'stdout'\n   - version information (/home/dylan/.asdf/shims/golangci-lint --version): golangci-lint has version 2.1.6 built with go1.24.2 from eabc2638 on 2025-05-04T15:41:19Z\nNOTE: you can define g:neomake_go_enabled_makers to configure it (or b:neomake_go_enabled_makers).\n\nFor the project (used with :Neomake!):\n - makeprg\n   - append_file: 0\n   - args: ['-c', 'go build']\n   - auto_enabled: 1\n   - errorformat: '%-G# %.%#,%-G%.%#panic: %m,%Ecan''t load package: %m,%A%\\%%(%[%^:]%\\+: %\\)%\\?%f:%l:%c: %m,%A%\\%%(%[%^:]%\\+: %\\)%\\?%f:%l: %m,%C%*\\s%m,%-G%.%#'\n   - exe: '/usr/bin/zsh'\n   - version information (/usr/bin/zsh --version): zsh 5.9 (x86_64-pc-linux-gnu)\nNOTE: you can define g:neomake_enabled_makers to configure it.\n\nDefault maker settings:\n - output_stream: 'both'\n - remove_invalid_entries: 0\n - buffer_output: 1\n\n##### Settings\n\n###### New-style (dict, overrides old-style)\n\n```\ng:neomake: {\n  'automake': {\n    'ignore_filetypes': [\n      'startify',\n    ],\n    'events': {\n      'BufWritePost': {\n        'delay': 0,\n      },\n    },\n  },\n}\nb:neomake: unset\n```\n\n###### Old-style\n\n```\ng:neomake_cpp_gcc_maker = {'args': ['-fsyntax-only', '-Wall', '-Wextra', '-I./', '-L/usr/include/mariadb/', '-L/usr/lib/x86_64-linux-gnu/', '-lmariadb'], 'exe': 'gcc'}\ng:neomake_place_signs = 1\ng:neomake_rubocop_maker = {'args': ['--format', 'emacs', '--force-exclusion', '--display-cop-names', '--disable-pending-cops'], 'exe': 'rubocop'}\n\n```\n\n\n#### :version\n\n```\nNVIM v0.11.3\nBuild type: Release\nLuaJIT 2.1.1741730670\nRun \":verbose version\" for more info\n```\n\n#### :messages\n\n```\nvim-go: initializing gopls\nvim-go: initialized gopls\nvim-go: Finished loading packages.\n\"main.go\" 7L, 66B written\nNeomake: golangci_lint: unexpected output on stderr: Error: unknown flag: --out-format\nFailed executing command with error: unknown flag: --out-format\nNeomake: golangci_lint: unexpected output. See :messages for more information.\n```",
            "created_at": "2025-08-04T18:46:59Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3863#issuecomment-3151958748",
            "id": 3151958748,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863",
            "node_id": "IC_kwDODTQC18673xLc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3151958748/reactions"
            },
            "updated_at": "2025-08-04T18:46:59Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3151958748",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1229014?v=4",
                "events_url": "https://api.github.com/users/dylannorthrup/events{/privacy}",
                "followers_url": "https://api.github.com/users/dylannorthrup/followers",
                "following_url": "https://api.github.com/users/dylannorthrup/following{/other_user}",
                "gists_url": "https://api.github.com/users/dylannorthrup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dylannorthrup",
                "id": 1229014,
                "login": "dylannorthrup",
                "node_id": "MDQ6VXNlcjEyMjkwMTQ=",
                "organizations_url": "https://api.github.com/users/dylannorthrup/orgs",
                "received_events_url": "https://api.github.com/users/dylannorthrup/received_events",
                "repos_url": "https://api.github.com/users/dylannorthrup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dylannorthrup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dylannorthrup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dylannorthrup",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Well, it looks like your issue isn't related to this repo. 😄 nvim-lspconfig does not use `--out-format=line-number` at all, it uses `--out-format=json` for v1 and `--output.json.path=stdout` for v2. At a glance (I don't use neomake) it looks like your issue comes from this line: https://github.com/neomake/neomake/blob/584f882b9f991245374e7e7d7d1f78bae90b7a35/autoload/neomake/makers/ft/go.vim#L77 - which means neomake does not have support for golangci-lint v2 yet.\n\nNonetheless, your use case with wrapper shell script in place of golangci-lint binary is valid and my PR should fix this use case for nvim-lspconfig.\n\nIf you does not work on multiple projects in same Neovim session (bad idea anyway) then I recommend you to keep using `let g:neomake_go_golangci_lint_args` but wrap it with `if` using same golangci-lint auto-detection logic as in my PRs and only set it when v2 is detected.",
            "created_at": "2025-08-04T19:17:04Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3863#issuecomment-3152048961",
            "id": 3152048961,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863",
            "node_id": "IC_kwDODTQC18674HNB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3152048961/reactions"
            },
            "updated_at": "2025-08-04T19:17:04Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3152048961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1354301?v=4",
                "events_url": "https://api.github.com/users/powerman/events{/privacy}",
                "followers_url": "https://api.github.com/users/powerman/followers",
                "following_url": "https://api.github.com/users/powerman/following{/other_user}",
                "gists_url": "https://api.github.com/users/powerman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/powerman",
                "id": 1354301,
                "login": "powerman",
                "node_id": "MDQ6VXNlcjEzNTQzMDE=",
                "organizations_url": "https://api.github.com/users/powerman/orgs",
                "received_events_url": "https://api.github.com/users/powerman/received_events",
                "repos_url": "https://api.github.com/users/powerman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/powerman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/powerman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/powerman",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> If you does not work on multiple projects in same Neovim session (bad idea anyway) then I recommend you to keep using `let g:neomake_go_golangci_lint_args` but wrap it with `if` using same golangci-lint auto-detection logic as in my PRs and only set it when v2 is detected.\n\nThanks for the help and the advice. I'll update my configs appropriately.",
            "created_at": "2025-08-04T19:51:17Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3863#issuecomment-3152133461",
            "id": 3152133461,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863",
            "node_id": "IC_kwDODTQC18674b1V",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3152133461/reactions"
            },
            "updated_at": "2025-08-04T19:51:17Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/3152133461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1229014?v=4",
                "events_url": "https://api.github.com/users/dylannorthrup/events{/privacy}",
                "followers_url": "https://api.github.com/users/dylannorthrup/followers",
                "following_url": "https://api.github.com/users/dylannorthrup/following{/other_user}",
                "gists_url": "https://api.github.com/users/dylannorthrup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dylannorthrup",
                "id": 1229014,
                "login": "dylannorthrup",
                "node_id": "MDQ6VXNlcjEyMjkwMTQ=",
                "organizations_url": "https://api.github.com/users/dylannorthrup/orgs",
                "received_events_url": "https://api.github.com/users/dylannorthrup/received_events",
                "repos_url": "https://api.github.com/users/dylannorthrup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dylannorthrup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dylannorthrup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dylannorthrup",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863/comments",
    "created_at": "2025-05-22T08:29:13Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/3863",
    "id": 3082516590,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC1863u3hu",
    "number": 3863,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863/timeline",
    "title": "golangci_lint_ls: golangci-lint v1 is not supported",
    "type": null,
    "updated_at": "2025-08-04T19:51:17Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/3863",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1354301?v=4",
        "events_url": "https://api.github.com/users/powerman/events{/privacy}",
        "followers_url": "https://api.github.com/users/powerman/followers",
        "following_url": "https://api.github.com/users/powerman/following{/other_user}",
        "gists_url": "https://api.github.com/users/powerman/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/powerman",
        "id": 1354301,
        "login": "powerman",
        "node_id": "MDQ6VXNlcjEzNTQzMDE=",
        "organizations_url": "https://api.github.com/users/powerman/orgs",
        "received_events_url": "https://api.github.com/users/powerman/received_events",
        "repos_url": "https://api.github.com/users/powerman/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/powerman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/powerman/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/powerman",
        "user_view_type": "public"
    }
}