{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I have created a sample plugin that recreates my issue below.\r\n\r\n- lua in `test_plugin/lua/test_plugin/init.lua`\r\n```lua\r\nM = {}\r\n\r\nfunction M.run()\r\n    vim.fn.Start(1)\r\n    vim.fn.Start(2)\r\nend\r\n\r\nfunction M.update(data)\r\n    print(vim.fn.GetData(data))\r\nend\r\n\r\nreturn M\r\n\r\n```\r\n\r\n- python in `test_plugin/rplugin/python3/test_plugin.py`\r\n```python\r\nimport pynvim\r\nimport logging\r\n\r\n@pynvim.plugin\r\nclass TestPlugin(object):\r\n    def __init__(self, nvim : pynvim.Nvim):\r\n        logging.basicConfig(filename = 'test.log', level='DEBUG')\r\n        self.nvim = nvim\r\n\r\n    @pynvim.function('Start', sync=False)\r\n    def start(self, args):\r\n        logging.debug('start called')\r\n        d = args[0]\r\n        self.nvim.exec_lua(\"require'test_plugin'.update(...)\", d, async_ = True)\r\n\r\n    @pynvim.function('GetData', sync = True)\r\n    def getData(self, args):\r\n        logging.debug('getdata called')\r\n        d = args[0]\r\n        return d\r\n\r\n```\r\nHere, when i call `lua require'test_plugin'.run()` I could see both `start` and `getData` functions in python getting called twice but the return values of the `getData` function is never captured by the neovim \r\n\r\nAlso, if I remove one of the `vim.fn.Start` calls in `run()` function, everything works fine. \r\n\r\nAppreciate if someone can help me with this and check if I'm not using the `pynvim` apis incorrectly",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> but the return values of the `getData` function is never captured by the neovim\r\n\r\nThe code is only calling print() on the values. Maybe the printed message is not shown because of redraw? Try appending the GetData() results to a list, then check the contents of that list. \r\n\r\n",
            "created_at": "2024-04-22T19:57:26Z",
            "html_url": "https://github.com/neovim/pynvim/issues/566#issuecomment-2070847363",
            "id": 2070847363,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/566",
            "node_id": "IC_kwDOASpKTs57bp-D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/2070847363/reactions"
            },
            "updated_at": "2024-04-22T19:57:26Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/2070847363",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi @justinmk, \r\nThanks for the suggestion. I tried to add the results to the list and check the results with a new call and I could see the list is still empty.\r\n\r\nBut I was able to fix the issue in a different way, but not sure if it just hides the real issue or if that is the real \"usage\" of the API\r\n\r\nThe fix was to schedule all the work that is done in the `update` function to the next in the event loop by using `vim.schedule` like below\r\n\r\n```lua\r\nfunction M.update(data)\r\n    vim.schedule(function()\r\n        print(vim.fn.GetData(data))\r\n    end)\r\nend\r\n```\r\nI think it makes sense since we first have to give up the current call state that was initiated by rpc call to process other rpc calls?\r\n",
            "created_at": "2024-04-25T16:37:39Z",
            "html_url": "https://github.com/neovim/pynvim/issues/566#issuecomment-2077711595",
            "id": 2077711595,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/566",
            "node_id": "IC_kwDOASpKTs5711zr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/2077711595/reactions"
            },
            "updated_at": "2024-04-25T16:37:39Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/2077711595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10277051?v=4",
                "events_url": "https://api.github.com/users/Badhi/events{/privacy}",
                "followers_url": "https://api.github.com/users/Badhi/followers",
                "following_url": "https://api.github.com/users/Badhi/following{/other_user}",
                "gists_url": "https://api.github.com/users/Badhi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Badhi",
                "id": 10277051,
                "login": "Badhi",
                "node_id": "MDQ6VXNlcjEwMjc3MDUx",
                "organizations_url": "https://api.github.com/users/Badhi/orgs",
                "received_events_url": "https://api.github.com/users/Badhi/received_events",
                "repos_url": "https://api.github.com/users/Badhi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Badhi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Badhi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Badhi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I could see the list is still empty.\r\n\r\nAre you certain that `start()` is called in your example (`debug('start called')` is written to the logs)?\r\n\r\n> I think it makes sense since we first have to give up the current call state that was initiated by rpc call to process other rpc calls?\r\n\r\nIt's certainly tricky when the \"call stack\" is multiply-bidirectional. \r\n\r\nThanks for providing this test case and info. This is something we should either document, detect, or actually support.",
            "created_at": "2024-04-25T19:01:37Z",
            "html_url": "https://github.com/neovim/pynvim/issues/566#issuecomment-2077984744",
            "id": 2077984744,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/566",
            "node_id": "IC_kwDOASpKTs5724fo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/2077984744/reactions"
            },
            "updated_at": "2024-04-25T19:01:37Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/2077984744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Are you certain that start() is called in your example (debug('start called') is written to the logs)?\r\n\r\nYes, following is the log output for the failing scenario (I have enabled some debug logs in pynvim as well) \r\n```\r\nDEBUG:root:start called\r\nDEBUG:root:start called\r\nDEBUG:pynvim.plugin.host:calling request handler for \"test_plugin/rplugin/python3/test_plugin.py:function:GetData\", args: \"[[1]]\"\r\nDEBUG:root:getdata called\r\nDEBUG:pynvim.plugin.host:request handler for 'test_plugin/rplugin/python3/test_plugin.py:function:GetData [[1]]' returns: 1\r\nDEBUG:pynvim.plugin.host:calling request handler for \"test_plugin/rplugin/python3/test_plugin.py:function:GetData\", args: \"[[2]]\"\r\nDEBUG:root:getdata called\r\nDEBUG:pynvim.plugin.host:request handler for 'test_plugin/rplugin/python3/test_plugin.py:function:GetData [[2]]' returns: 2\r\n```",
            "created_at": "2024-04-26T17:47:41Z",
            "html_url": "https://github.com/neovim/pynvim/issues/566#issuecomment-2079824137",
            "id": 2079824137,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/566",
            "node_id": "IC_kwDOASpKTs5795kJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/2079824137/reactions"
            },
            "updated_at": "2024-04-26T17:47:41Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/2079824137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10277051?v=4",
                "events_url": "https://api.github.com/users/Badhi/events{/privacy}",
                "followers_url": "https://api.github.com/users/Badhi/followers",
                "following_url": "https://api.github.com/users/Badhi/following{/other_user}",
                "gists_url": "https://api.github.com/users/Badhi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Badhi",
                "id": 10277051,
                "login": "Badhi",
                "node_id": "MDQ6VXNlcjEwMjc3MDUx",
                "organizations_url": "https://api.github.com/users/Badhi/orgs",
                "received_events_url": "https://api.github.com/users/Badhi/received_events",
                "repos_url": "https://api.github.com/users/Badhi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Badhi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Badhi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Badhi",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/566/comments",
    "created_at": "2024-04-19T10:37:30Z",
    "events_url": "https://api.github.com/repos/neovim/pynvim/issues/566/events",
    "html_url": "https://github.com/neovim/pynvim/issues/566",
    "id": 2252655530,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 6369313496,
            "name": "asyncio",
            "node_id": "LA_kwDOASpKTs8AAAABe6QC2A",
            "url": "https://api.github.com/repos/neovim/pynvim/labels/asyncio"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/566/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOASpKTs6GRMuq",
    "number": 566,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/pynvim/issues/566/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/pynvim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/pynvim/issues/566/timeline",
    "title": "Synchronous call initiated through a response of an async call drops the results of the sync call.",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-22T19:33:17Z",
    "url": "https://api.github.com/repos/neovim/pynvim/issues/566",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10277051?v=4",
        "events_url": "https://api.github.com/users/Badhi/events{/privacy}",
        "followers_url": "https://api.github.com/users/Badhi/followers",
        "following_url": "https://api.github.com/users/Badhi/following{/other_user}",
        "gists_url": "https://api.github.com/users/Badhi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Badhi",
        "id": 10277051,
        "login": "Badhi",
        "node_id": "MDQ6VXNlcjEwMjc3MDUx",
        "organizations_url": "https://api.github.com/users/Badhi/orgs",
        "received_events_url": "https://api.github.com/users/Badhi/received_events",
        "repos_url": "https://api.github.com/users/Badhi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Badhi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Badhi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Badhi",
        "user_view_type": "public"
    }
}