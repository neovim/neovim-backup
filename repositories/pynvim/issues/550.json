{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "`:python3 vim.funcs.luaeval(...)` calls `vim.call(\"luaeval\", ...)`, which then calls `nvim_call_function('luaeval', [...])` **via RPC**, i.e. `vim.request('nvim_call_function', 'luaeval', [...])`.\r\n\r\nBelow tested with nvim 0.10.x nightly (as of 11/28/2023) and pynvim 0.5.0 nightly (and 0.4.3).\r\n\r\nPrimitives are OK:\r\n\r\n```vim\r\n:python3= vim.funcs.luaeval('1')\r\n:echo nvim_call_function('luaeval', ['1'])\r\n1\r\n\r\n:python3= vim.funcs.luaeval('\"foo\"')\r\n:echo nvim_call_function('luaeval', ['\"foo\"'])\r\nfoo\r\n\r\n:python3= vim.funcs.luaeval('nil')\r\nNone\r\n:echo nvim_call_function('luaeval', ['nil'])\r\nv:null\r\n\r\n:python3= vim.funcs.luaeval('{}')\r\n:echo nvim_call_function('luaeval', ['{}'])\r\n[]\r\n\r\n:python3= vim.funcs.luaeval('{ dict = true }')\r\n{'dict': True}\r\n:echo nvim_call_function('luaeval', ['{ dict = true }'])\r\n{'dict': v:true}\r\n```\r\n\r\nFunctions are not:\r\n\r\n```vim\r\n:echo nvim_call_function('luaeval', ['function() end'])\r\n<lambda>36075\r\n\r\n\" ❌ THIS IS BUGGY !!!!!!!!!\r\n:python3= vim.funcs.luaeval('function() end')\r\nNone\r\n\r\n\r\n\" the proxy function is callable!\r\n:call nvim_call_function('luaeval', ['print'])(\"foo\")\r\nfoo\r\n\r\n:lua vim.api.nvim_call_function('luaeval', { \"print\" })(\"foo\")\r\nfoo\r\n```\r\n\r\nand hence modules:\r\n\r\n```vim\r\n\" ❌ THIS IS BUGGY !!!!!!!!!\r\n:python3= vim.funcs.luaeval('require(\"vim.ui\")')\r\n{'select': None, 'open': None, 'input': None}\r\n\r\n:echo nvim_call_function('luaeval', ['vim.ui'])\r\n{'select': function('<lambda>254'), 'open': function('<lambda>255'), 'input': function('<lambda>256')}\r\n```\r\n\r\nwhich should instead throw an error if conversion is not possible. Ideally it may return some \"proxy\" callable that delegates to the target lua function via RPC.\r\n\r\n\r\nAlso, the following seems to be neovim core's bug (or a lack of feature):\r\n\r\n```vim\r\n\" ❌ should return a lambda function?\r\n:echo nvim_call_function('eval', ['{ -> 3 }'])\r\nv:null\r\n\r\n\" ❌ should return a function?\r\n:python3= vim.call('eval', '{ -> 3 }')\r\nNone\r\n\r\n:echo eval('{ -> 3 }')\r\nfunction('<lambda>49485')\r\n```",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Also for `vim.exec_lua` python API:\r\n\r\n```python\r\nvim.lua.require(\"vim.F\")\r\n```\r\nthrows `pynvim.api.common.NvimError: Cannot convert given lua type`. It calls \r\n\r\n```python\r\nvim.exec_lua(\"return require(...)\", \"vim.F\")\r\n```\r\n\r\nwhich then calls via RPC:\r\n\r\n```vim\r\nrpcrequest('nvim_execute_lua', \"return require(...)\", [\"vim.F\"])\r\n```\r\n\r\nThis RPC request cannot convert a lua function and raises errors as expected.\r\n\r\nNote -- this `nvim_execute_lua` RPC API has a different execution mechanism than `luaeval()` which uses `nvim_call_function` RPC API, but very related.",
            "created_at": "2023-11-28T05:41:09Z",
            "html_url": "https://github.com/neovim/pynvim/issues/550#issuecomment-1829140676",
            "id": 1829140676,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/550",
            "node_id": "IC_kwDOASpKTs5tBnjE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1829140676/reactions"
            },
            "updated_at": "2023-11-28T07:13:11Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1829140676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Returning functions (\"funcrefs\") over RPC is not supported. https://github.com/neovim/neovim/issues/1898",
            "created_at": "2023-11-28T10:30:27Z",
            "html_url": "https://github.com/neovim/pynvim/issues/550#issuecomment-1829534791",
            "id": 1829534791,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/550",
            "node_id": "IC_kwDOASpKTs5tDHxH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1829534791/reactions"
            },
            "updated_at": "2023-11-28T10:30:27Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1829534791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Exactly. So on the pynvim side explicit errors should be raised as in `nvim_exec_lua` case, but I guess that some fixes would need to be done on the neovim **core** side rather than pynvim, because the crux is that RPC requests that would evaluate to \"funcrefs\", e.g.,\r\n\r\n```python\r\n# python (using pynvim APIs)\r\n\r\nvim.request('nvim_call_function', 'luaeval', [ \"function() end\" ])\r\nvim.request('nvim_call_function', 'eval', [ \"function('has')\" ])\r\n\r\nvim.funcs.eval(\"function('has')\")\r\n```\r\n\r\nreturns null (`None`) instead of errors?",
            "created_at": "2023-11-28T20:59:39Z",
            "html_url": "https://github.com/neovim/pynvim/issues/550#issuecomment-1830736617",
            "id": 1830736617,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/550",
            "node_id": "IC_kwDOASpKTs5tHtLp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1830736617/reactions"
            },
            "updated_at": "2023-12-03T23:49:15Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/1830736617",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/550/comments",
    "created_at": "2023-11-28T05:32:11Z",
    "events_url": "https://api.github.com/repos/neovim/pynvim/issues/550/events",
    "html_url": "https://github.com/neovim/pynvim/issues/550",
    "id": 2013677325,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/550/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOASpKTs54BkcN",
    "number": 550,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/pynvim/issues/550/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/pynvim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/pynvim/issues/550/timeline",
    "title": "luaeval behavior: functions are serialized to `None`",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-22T19:33:16Z",
    "url": "https://api.github.com/repos/neovim/pynvim/issues/550",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
        "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
        "followers_url": "https://api.github.com/users/wookayin/followers",
        "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
        "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wookayin",
        "id": 1009873,
        "login": "wookayin",
        "node_id": "MDQ6VXNlcjEwMDk4NzM=",
        "organizations_url": "https://api.github.com/users/wookayin/orgs",
        "received_events_url": "https://api.github.com/users/wookayin/received_events",
        "repos_url": "https://api.github.com/users/wookayin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wookayin",
        "user_view_type": "public"
    }
}