{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I am trying to call `restart` from python using pynvim (0.6.0), but I am getting errors I cannot make sense of.\nUnderneath, I am using neovim commit https://github.com/neovim/neovim/commit/0275627 .\nIt is probably expected at this point, but I did not find a pynvim or neovim issue mentioning this use case. \n```\n(venvZ) : ~/.local/nvim/bin ; python3\nPython 3.13.7 (main, Aug 14 2025, 11:12:11) [Clang 17.0.0 (clang-1700.0.13.3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pynvim\n>>> n = pynvim.attach(\"child\", argv=['./nvim', '-u', 'NONE', '-i', 'NONE', '-n', '--embed', '--headless'])\n... \n>>> mydict = { 'cmd' : 'version' }\n... \n>>> print(mydict)\n{'cmd': 'version'}\n>>> n.lua.vim.api.nvim_cmd(mydict, {'output' : True})\n... \n'NVIM v0.12.0-dev-1277+gd0731ee780\\nBuild type: Debug\\nLuaJIT 2.1.1753364724\\nRun \":verbose version\" for more info'\n>>> mydict = { 'cmd' : 'restart' }\n... \n>>> print(mydict)\n{'cmd': 'restart'}\n>>> n.lua.vim.api.nvim_cmd(mydict, {'output' : True})\n... \nTraceback (most recent call last):\n  File \"<python-input-13>\", line 1, in <module>\n    n.lua.vim.api.nvim_cmd(mydict, {'output' : True})\n    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pierreganty/.local/venvZ/lib/python3.13/site-packages/pynvim/api/nvim.py\", line 609, in __call__\n    return self._nvim.exec_lua(code, *args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pierreganty/.local/venvZ/lib/python3.13/site-packages/pynvim/api/nvim.py\", line 356, in exec_lua\n    return self.request('nvim_execute_lua', code, args, **kwargs)\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pierreganty/.local/venvZ/lib/python3.13/site-packages/pynvim/api/nvim.py\", line 211, in request\n    res = self._session.request(name, *args, **kwargs)\n  File \"/Users/pierreganty/.local/venvZ/lib/python3.13/site-packages/pynvim/msgpack_rpc/session.py\", line 136, in request\n    v = self._blocking_request(method, args)\n  File \"/Users/pierreganty/.local/venvZ/lib/python3.13/site-packages/pynvim/msgpack_rpc/session.py\", line 228, in _blocking_request\n    self._async_session.run(self._enqueue_request,\n    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n                            self._enqueue_notification)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/pierreganty/.local/venvZ/lib/python3.13/site-packages/pynvim/msgpack_rpc/async_session.py\", line 73, in run\n    self._msgpack_stream.run(self._on_message)\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/Users/pierreganty/.local/venvZ/lib/python3.13/site-packages/pynvim/msgpack_rpc/msgpack_stream.py\", line 44, in run\n    self.loop.run(self._on_data)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^\n  File \"/Users/pierreganty/.local/venvZ/lib/python3.13/site-packages/pynvim/msgpack_rpc/event_loop/base.py\", line 209, in run\n    raise self._error\nEOFError: process_exited: pid = 63356, return_code = 0\n```",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> I am trying to call `restart` from python using pynvim (0.6.0)\n\n`:restart` restarts the server. That means clients such as `pynvim` will have their channels closed. The `EOFError` is a hint about that (\"eof\" means end-of-file, which is how OSes typically report a closed pipe).\n\nIt could be an interesting feature for Nvim to try to restore API client channels. I.e. the channels could reattach similar to how UIs reattach after `:restart`.  This would require API clients such as `pynvim` to handle a [\"restart\" RPC event](https://github.com/neovim/neovim/blob/0d16260b49d4bb702027c998bbcf00c4ea94089f/runtime/doc/api-ui-events.txt#L254). \n\nAnd then, even if the channel is restored (\"reattached\"), the application or plugin that is *using* the client needs to make some sense of the fact that a restart happened. It will need to clear its state, for example.\n\nWhat is your concrete use-case? Without hearing details about that, it's not clear if it makes sense for API clients to bother trying to do this.",
            "created_at": "2025-09-22T19:29:40Z",
            "html_url": "https://github.com/neovim/pynvim/issues/601#issuecomment-3321046090",
            "id": 3321046090,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/601",
            "node_id": "IC_kwDOASpKTs7F8yRK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/3321046090/reactions"
            },
            "updated_at": "2025-09-22T19:30:42Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/3321046090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/601/comments",
    "created_at": "2025-09-22T09:16:46Z",
    "events_url": "https://api.github.com/repos/neovim/pynvim/issues/601/events",
    "html_url": "https://github.com/neovim/pynvim/issues/601",
    "id": 3439932744,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 6369304262,
            "name": "documentation",
            "node_id": "LA_kwDOASpKTs8AAAABe6Pexg",
            "url": "https://api.github.com/repos/neovim/pynvim/labels/documentation"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/601/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOASpKTs7NCTVI",
    "number": 601,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/pynvim/issues/601/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/pynvim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/pynvim/issues/601/timeline",
    "title": "EOFError when calling `:restart` from pynvim",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-22T19:30:42Z",
    "url": "https://api.github.com/repos/neovim/pynvim/issues/601",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2111160?v=4",
        "events_url": "https://api.github.com/users/pierreganty/events{/privacy}",
        "followers_url": "https://api.github.com/users/pierreganty/followers",
        "following_url": "https://api.github.com/users/pierreganty/following{/other_user}",
        "gists_url": "https://api.github.com/users/pierreganty/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pierreganty",
        "id": 2111160,
        "login": "pierreganty",
        "node_id": "MDQ6VXNlcjIxMTExNjA=",
        "organizations_url": "https://api.github.com/users/pierreganty/orgs",
        "received_events_url": "https://api.github.com/users/pierreganty/received_events",
        "repos_url": "https://api.github.com/users/pierreganty/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pierreganty/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pierreganty/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pierreganty",
        "user_view_type": "public"
    }
}