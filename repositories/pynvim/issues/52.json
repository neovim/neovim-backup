{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "`vim.replace_termcodes` seems to be broken when used on a vim client with a neovim.DecodeHook installed. It seems like it might be trying to double-decode input or something.\n\nAn example from maktaba:\n\n``` python\n>>> vim.replace_termcodes(u\":let g:weirdpath = maktaba#path#Join([g:repo, 'weird¬p…l✓u↓g⏎i‽n'])<CR>\")\nb\":let g:weirdpath = maktaba#path#Join([g:repo, 'weird\\xc2\\xacp\\xe2\\x80\\xfeX\\xa6l\\xe2\\x9c\\x93u\\xe2\\x86\\x93g\\xe2\\x8f\\x8ei\\xe2\\x80\\xfeX\\xbdn'])\\r\"\n>>> vim.with_hook(neovim.DecodeHook()).replace_termcodes(u\":let g:weirdpath = maktaba#path#Join([g:repo, 'weird¬p…l✓u↓g⏎i‽n'])<CR>\")\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/dbarnett/.local/lib/python3.4/site-packages/neovim/api/nvim.py\", line 168, in replace_termcodes\n    from_part, do_lt, special)\n  File \"/home/dbarnett/.local/lib/python3.4/site-packages/neovim/api/common.py\", line 213, in request\n    'out-request')\n  File \"/home/dbarnett/.local/lib/python3.4/site-packages/neovim/api/common.py\", line 240, in walk\n    return fn(obj, *args)\n  File \"/home/dbarnett/.local/lib/python3.4/site-packages/neovim/api/common.py\", line 148, in <lambda>\n    return lambda o, s, m, k: f1(f2(o, s, m, k), s, m, k)\n  File \"/home/dbarnett/.local/lib/python3.4/site-packages/neovim/api/common.py\", line 170, in _decode_if_bytes\n    return obj.decode(self.encoding, errors=self.encoding_errors)\nUnicodeDecodeError: 'utf-8' codec can't decode bytes in position 55-56: invalid continuation byte\n```\n\nI tried some other variations of passing pre-encoded bytes and such, and couldn't find anything that wouldn't blow up.\n\nIt would also be good to get unicode strings out at least when passing unicode strings in.\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Ahhh, it actually makes some sense that replace_termcodes would return invalid strings. The returned value is the internally representation Vim uses, i.e. there may be some escaping going around.\n\nQuick fix is to call replace_termcodes from a session without DecodeHook. The \"right way(TM)\" is to have replace_termcodes return a new Binary type that is not treated as a decodable string.\n",
            "created_at": "2014-10-24T08:15:02Z",
            "html_url": "https://github.com/neovim/pynvim/issues/52#issuecomment-60357333",
            "id": 60357333,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/52",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzU3MzMz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/60357333/reactions"
            },
            "updated_at": "2014-10-24T08:15:02Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/60357333",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The \"right way(TM)\" is to have replace_termcodes return a new Binary type that is not treated as a decodable string.\n\nCan't that be done with another SessionHook? For example, [see](https://github.com/neovim/python-client/blob/master/neovim/plugins/script_host.py#L28) how the ScriptHost class uses a hook to emulate the legacy behavior of `eval`\n",
            "created_at": "2014-10-24T10:24:32Z",
            "html_url": "https://github.com/neovim/pynvim/issues/52#issuecomment-60369852",
            "id": 60369852,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/52",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzY5ODUy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/60369852/reactions"
            },
            "updated_at": "2014-10-24T10:24:32Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/60369852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tarruda Yes, I created a pull request google/vroom#78 that keeps two Nvim objects one with and one without the DecodeHook. Seems to work as intended.\n",
            "created_at": "2014-10-24T10:40:46Z",
            "html_url": "https://github.com/neovim/pynvim/issues/52#issuecomment-60371299",
            "id": 60371299,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/52",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzcxMjk5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/60371299/reactions"
            },
            "updated_at": "2014-10-24T10:40:46Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/60371299",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sounds fine as a workaround. Is it possible to make this less brittle? I don't understand where the decoding problem arises, but it seems like python should have enough context to DTRT.\n",
            "created_at": "2014-10-24T17:30:08Z",
            "html_url": "https://github.com/neovim/pynvim/issues/52#issuecomment-60421342",
            "id": 60421342,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/52",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDIxMzQy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/60421342/reactions"
            },
            "updated_at": "2014-10-24T17:30:08Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/60421342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65244?v=4",
                "events_url": "https://api.github.com/users/dbarnett/events{/privacy}",
                "followers_url": "https://api.github.com/users/dbarnett/followers",
                "following_url": "https://api.github.com/users/dbarnett/following{/other_user}",
                "gists_url": "https://api.github.com/users/dbarnett/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dbarnett",
                "id": 65244,
                "login": "dbarnett",
                "node_id": "MDQ6VXNlcjY1MjQ0",
                "organizations_url": "https://api.github.com/users/dbarnett/orgs",
                "received_events_url": "https://api.github.com/users/dbarnett/received_events",
                "repos_url": "https://api.github.com/users/dbarnett/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dbarnett/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dbarnett/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dbarnett",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Sounds fine as a workaround. Is it possible to make this less brittle? I don't understand where the decoding problem arises, but it seems like python should have enough context to DTRT.\n\nPossible yes, but not on the short run. As DTRT goes, `replace_termcodes()` definitely returns invalid strings by design - but since the DecodeHook tries to convert all binary strings into Unicode it causes the error. At this point it is not possible to enable/disable the DecodeHook for each function call.\n",
            "created_at": "2014-10-26T14:53:20Z",
            "html_url": "https://github.com/neovim/pynvim/issues/52#issuecomment-60519716",
            "id": 60519716,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/52",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTE5NzE2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/60519716/reactions"
            },
            "updated_at": "2014-10-26T14:53:20Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/60519716",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "With the latest changes we could change replace_termcodes to always return `bytes`\n",
            "created_at": "2016-04-02T18:33:41Z",
            "html_url": "https://github.com/neovim/pynvim/issues/52#issuecomment-204770755",
            "id": 204770755,
            "issue_url": "https://api.github.com/repos/neovim/pynvim/issues/52",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDc3MDc1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/204770755/reactions"
            },
            "updated_at": "2016-04-02T18:33:41Z",
            "url": "https://api.github.com/repos/neovim/pynvim/issues/comments/204770755",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/52/comments",
    "created_at": "2014-10-24T05:39:45Z",
    "events_url": "https://api.github.com/repos/neovim/pynvim/issues/52/events",
    "html_url": "https://github.com/neovim/pynvim/issues/52",
    "id": 46706255,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/52/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU0NjcwNjI1NQ==",
    "number": 52,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/pynvim/issues/52/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/pynvim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/pynvim/issues/52/timeline",
    "title": "replace_termcodes with DecodeHook fails on non-ASCII input",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-22T19:35:52Z",
    "url": "https://api.github.com/repos/neovim/pynvim/issues/52",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/65244?v=4",
        "events_url": "https://api.github.com/users/dbarnett/events{/privacy}",
        "followers_url": "https://api.github.com/users/dbarnett/followers",
        "following_url": "https://api.github.com/users/dbarnett/following{/other_user}",
        "gists_url": "https://api.github.com/users/dbarnett/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dbarnett",
        "id": 65244,
        "login": "dbarnett",
        "node_id": "MDQ6VXNlcjY1MjQ0",
        "organizations_url": "https://api.github.com/users/dbarnett/orgs",
        "received_events_url": "https://api.github.com/users/dbarnett/received_events",
        "repos_url": "https://api.github.com/users/dbarnett/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dbarnett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dbarnett/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dbarnett",
        "user_view_type": "public"
    }
}