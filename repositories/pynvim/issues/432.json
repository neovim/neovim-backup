{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "UIs and other Nvim applications often [search for Nvim](https://github.com/asvetliakov/vscode-neovim/issues/195) in the system/environment, or else they require users to specify an exact path.\r\n\r\n- similar usecase is [firenvim's get_progpath()](https://github.com/glacambre/firenvim/blob/ca11ab668792920cac8b4195fd36b19cc32af449/autoload/firenvim.vim#L247) though that obviously requires Nvim already.\r\n\r\n`pynvim` could save a lot of hassle by providing a function like:\r\n\r\n    find_nvim(min_version: string)\r\n\r\nwith this behavior:\r\n\r\n1. finds `nvim` in the current environment at a given minimum `version`\r\n2. If nvim not found at given version, return an error that mentions the version that was found\r\n3. return a usable path (like aforementioned firenvim `get_progpath` logic) \r\n   - Actually this could be in `nvim` itself. Maybe `v:progpath` should be smarter?\r\n\r\nsee also: https://github.com/neovim/node-client/issues/146",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/pynvim/issues/432/comments",
    "created_at": "2020-02-22T23:13:18Z",
    "events_url": "https://api.github.com/repos/neovim/pynvim/issues/432/events",
    "html_url": "https://github.com/neovim/pynvim/issues/432",
    "id": 569406779,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/pynvim/issues/432/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU1Njk0MDY3Nzk=",
    "number": 432,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/pynvim/issues/432/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/pynvim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/pynvim/issues/432/timeline",
    "title": "API: \"find Nvim\" function",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-09-22T19:34:12Z",
    "url": "https://api.github.com/repos/neovim/pynvim/issues/432",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}